%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Alice Peters) (A K Peters, Ltd.)
%%Title: (shearrot.ps)
%%CreationDate: 5/1/2002 4:49 PM
%%BoundingBox: 230 282 492 525
%%HiResBoundingBox: 230.4888 282.6934 491.2607 524.7231
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 20 588 776
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -13 555 1.5 1276 954 18 1 1 6 44 1 0
%AI5_OpenViewLayers: 7
%%PageOrigin:12 20
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -20 -24 12
%AI7_GridSettings: 72 32 72 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 120 8
%%BeginData: 13636 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C457DFD7EA87D7DFFFFFFA8A8FD4DFF7DFD2BFFA8A8FFFFFF7D52FD4D
%FF27FD2BFFA87DFFFFFF2727FD4CFF7DF87DFD2AFFA8A8FFFFFF7D7DFD4D
%FF52FD2BFFA87DFFFFFF7DA8FD4DFF7DFD2BFFA8A8A8FFA8A87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%FD1DFF7DA87DA87DA87DA87DA87DA87DA852A87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DFD17FF7D7DA827277D527DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD1BFFA87D7DA8
%7DA87DA87DA87DA87DA87D527DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DFD16FFA8A8FF2752A852FD23A8FD1CFF7DFD0DA852FD15A8FD16FF
%A87DA8F8A87D7D7DFD1FFFA8A87DFD1CFFA87DA8A8FFA8FFA8FFA8FFA8FF
%A852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA8FD15FFA8A8FF
%FFFFA852A8FD0DFFA87DA8A8A8FD0DFFA8A8A8FD1DFF7DA8FD0BFF52FFFF
%FFA8A87DFD0DFFA8A87DFD15FFA87DFFFFFF7D527DFD0AFF7D2727F8FD04
%27F8F87DA8FD09FF7DA87DFD1DFF7DA87DFD0AFF5227F8F8272727F82727
%7DA8FD09FF7DA87DFD14FFA8A8FFFFFFA852A8FD08FF7D27F87DA8FF27FF
%2752FFA852F852FD08FFA8A8A8FD1EFF7DA8A8FD08FF52277DA8FF52A8F8
%52A87D27F852FD08FFA8A8A8FD14FFA87DFFFFFF7D527DFD07FF272727FF
%7DA8A827525252FFFFFF5227F8A8FD06FF7DA87DFD1EFF7D7DA8FD06FFA8
%272752FF7DFF7D525227A8FFFFA852F852A8FD05FFA8A87DA8FD13FFA8A8
%FFFFFFA852A8A8FD05FF2727A8F8FF277DFFF827F852FFFF7DF8FF7DF87D
%FD05FFA87DA8FD1EFFA8A8A8FD06FF5227A8F8FF27A8FF2727F852FFFFA8
%F8FF52277DFD05FFA8A87DFD13FF7D7DFFFFFF7D527DFD05FFF852FFFFF8
%FF27A8FFA8F852A8FFFFFFF8FFFF7DF8A8FD04FFA8A87DFD1FFF7DA8A8FD
%04FFA8F8FFFF277D7D27FFA852F8A8FFFFFF527DFF7DF827FD04FFA87D7D
%FD13FFA8A8FFFFFFA852A8A8FFFFFF5227FFFFFF7DFF7DA8FFFFF852FD04
%FF52FFFFFFA8F8FD04FFA8A8A8FD1FFFA8A8A8FD04FF527DFFFF527DFF52
%FFFF7DF87DFFFFFFA87DFFFFFF5227FD04FFA8A8A8FD12FFA87DFFFFFF7D
%7D7DFFFFFF7DF87DFF7DA8FD06FFF852FD07FFA8525252FFFFFFA8A87DFD
%20FF7D7DA8FFFFFF277DFF7D52FD06FFF827FD08FF7D5227FFFFFFA8A87D
%FD12FFA8A8FFFFFFA852A8FFFFFF525227522727FD06FFF852FD07FF7D27
%5227A8FFFFA8A8A8FD20FF7DA8A8FFFFFFF8525227F87DFD05FF52F8A8FD
%07FF27F85227FFFFFFA8A8A8FD11FFA87DFFFFFF7D527DFFFFA8F8FF2752
%2727FD06FFF852FD07FFA8F8A82752FFFF7DA87DFD20FFA87DA8A8FFFFF8
%A8F82727F8FD05FFA8F827FD08FFF8A85227FFFFA87D7DFD11FFA8A8FFFF
%FFA852A8FFFF5252FF52A8527DFD06FFF852FD07FF52527DFFF8FFFFA8A8
%A8FD21FFA8A8A8FFFFF8FF277D2727FD06FF2727FD07FFA8F8F8FF277DFF
%A8A87DFD11FFA87DFFFFFF7D527DFFFF277DFD0BFFF852FD0BFF27A8FF7D
%A87DFD21FF7DA8A8FFFF27A8FFFF7DFD07FF7DF852FD0AFFA8F8A8FFA8A8
%7DFD10FFA8A8FFFFFFA852A8A8FFF8FD0CFFF852FD09FFA8A827A8FFA87D
%A8FD18FFA8FD09FF7DA8A8FF277DFFFF52FD08FF2727FD0BFF5227FFFFA8
%7DFD10FF7D7DFFFFFF7D527DFFFFF8FFF8F8FD09FFF852FD08FF7D27527D
%52FFA8A87DFD17FFA8A87DA8A8FD06FF7D7DA8FF7D27A8F827A8FD07FF52
%F87DFD08FF52F8A8F8A8A8A87DA8FD0FFFA8A8FFFFFFA852A8A8FFF8FFF8
%27A8FD06FF27FD07F8277DFFFFFF277D527DFFA8A8A8FD06FFFD17A8FD05
%FFA87DA8FFFF27A827F8A8FD06FF52FD06F827277DFFFFFF52527D52FFA8
%A87DFD0FFFA87DFFFFFF7D7D7DFFFFF8FF5227FD07FF7D7DF827527D7D7D
%FD04FF52277D5252FFA8A87DFD05FFA8A87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA8A8FD05FF7DA8A8FF2752FF27A8FD06FFA85227F87D
%527D7DA8FD04FF27F8A8F8FFFF7D7DA8FD0EFFA8A8FFFFFFA852A8FFFFF8
%FFA8FD0AFF277DFD0BFF27A8FFA8A8A8FD08FFA8FFFFFFA8A8FFFFA8FFFF
%FFA8FFFFFF7DA8A8FD08FFA87DA8FFFFF8A852FD09FFA8277DFD09FFA8FF
%27A8FFA8A8A8FD0EFFA87DFFFFFF7D527DFFFF277DFD18FF27A8FF7DA87D
%FD0BFF7D7DF87DA87DA87DA87DA8FFA8A8A8FD0AFF7D7DA8FF7D2752FD17
%FF5252FFA8A87DFD0EFFA8A8FFFFFFA852A8FFFF7D52FFFF52A8FD10FF7D
%7DFFFF27FFFFA8A8A8FD0BFF522727527D277D277D27FD0FFF7DA8A8FFFF
%2727FFA87DA8FD10FFA87DFF7D52FFFFA8A87DFD0DFFA87DFFFFFF7D527D
%FFFFA8F8FF7DF827FD0FFFA82727FF2752FFFF7DA87DFD0BFF527D527DA8
%277D527D7DFD10FF7DA8A8FFA8277DA8F827FD10FF27F8A8A827FFFFA87D
%7DFD0DFFA8A8FFFFFFA852A8A8FFFF52527D2727FD10FF52277DF8A8FFFF
%A87DA8FD25FF7D7DA8FFFF2727A827F87DFD0FFF5227527D52FFFFA8A87D
%FD0DFF7D7DFFFFFF7D527DFFFFFFA8F87D527DFD10FFA87D2752FFFFFFA8
%A87DFD25FFA87D7DFFFF527D277D527DFD10FFA8525252FFFFFFA8A87DFD
%0CFFA8A8FFFFFFA852A8A8FFFFFF5227FD04FF7D7D7DFD07FF5252A8FFFF
%7D27FD04FFA8A8A8FD26FF7DA8A8FF52FF7DF87DFFFFFFA87D52FD07FFA8
%5252FFFFFFF8A8FD04FFA87DFD0CFFA87DFFFFFF7D7D7DFD05FF2727A8FF
%FFA8F87DFFFFA87DFFFFFF2727FFFF7DF8A8FD04FFA8A87DFD26FFA87DA8
%FF52FFFFA8F827FFFFA87D27A8FFFFFF7DFFFFFFF852A8FF7D27FD04FFA8
%A87D7DFD0BFFA8A8FFFFFFA852A8FD06FF2727A8FF7D27FFFFFF5227FFFF
%FF7D27A87DF8A8FD05FFA8A8A8FD27FF7D7DFF52FD04FF52F87DFFFFF8FF
%FFFF7D27FFFFFFA8277DA8277DFD05FFA8A87DFD0BFFA87DFFFFFF7D527D
%FD07FF522752527DFFFFA8F827A8FFFFA85227F8A8FD06FF7DA87DFD27FF
%7DA87D52FD05FF7DF8277D27FFFFFF7DF827FFFFA87D7D2727FD07FF7DA8
%7DFD0AFFA8A8FFFFFFA852A8FD08FFA852F87DA8FFFF5227FFA8A8272752
%FD08FFA8A8A8FD28FF7DA852FD07FF7D27F87DA8FFFF5227FFFFFF52F852
%FD08FFA8A87DFD0AFFA87DFFFFFF7D527DFD0AFFA85227F8272727F8F827
%7DA8FD09FF7DA87DFD1CFFA87DFD0AFF7D7D52FD09FFA85227F8FD0427F8
%F852A8FD09FFA8A87DFD0AFFA8A8FFFFFFA852A8A8FD0DFFA8A87DFD0EFF
%A87DA8FD1BFFA8A8A8FD0AFFA8A852FD0DFFA8A87DA8A8FD0DFFA8A87DFD
%09FF7D7DFFFFFF7D527DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8A87DFD1AFFA87DA8A8FD0BFF7D52A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D
%FD09FFA8A8FFFFFFA852FD23A8FD19FFA8A8A8FD0DFFA852FD23A8FD08FF
%A87DFF7DA852527D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D52
%7D7D7D527D7D7D527D7D7D52A87D277DFD15FFA8A8A8FD0BFF7DA87D2752
%7D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D
%7D527D52A87D5252A8FFFFFFFD04A87D7D527D7D7D527D7D7D527D7D7D52
%7D7D7D527D7D7D527D7D7D527D7D7D527D7D7D52FD047DA8F8527DFD0DFF
%A852527DFF7DA87D7D7D52FD0AFFA87DA8527D527D7D7D527D7D7D527D7D
%7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7DA827527DFFFF
%FFA87DFFFFFF7DA8FD21FF7D277DA8FD10FF5227525252F852272727FD0E
%FF52FD21FFA82752FD07FFA8A8FFFFFFA87DFD21FF7DF8A8FD11FFA8527D
%FFFD047D2752FD0EFF52FD22FF2752FD07FFA87DFFFFFFA8A8FD21FF5252
%7DFD29FFA8FD21FF7D5252FD07FFA8A8FD3BFFA8A8A8FD40FF7D7DFD37FF
%A8FFFFA87DA8A8FD40FFA8A8FD22FF7D7DFD15FFA8A8A8FD42FFA87DFD21
%FF7DA87D7DFD11FFA87DA87DA8A8FD42FFA8A8FD1FFFA87DA8A8A87DA8FD
%10FFA8A87DA8FD44FFA87DFD1DFFA87D7DA8A8A87DA87DFD0FFFA8A87DA8
%7DA8A8FD42FFA8A8FD1CFFFD05A8FFFFA8A8A87DFD0EFFFD06A8FD43FFA8
%7DFD1BFF7D7D7DA8A8FFFFFFA8A87D7DA8FD0DFF7DA8A8FD46FFA8A8FD1A
%FF7DA8A8FD07FFA8A87DA8FD0CFFA8FD49FF7D7DFD18FFA87DA87DFD09FF
%7DA87DA8FD55FFA8A8FD16FFA8A87DA8A8FD0BFFA8A87DFD55FFA87DFD0F
%FFA8FD05FFA87D7DA8A8FD0CFFA87DA87DFD54FFA8A8FD0EFFA87DFD04FF
%7DFD04A8FD0DFFA8A87D7DFD54FFA87DFD0EFF5227FFFFA87DA87DA8FD04
%FF7D7D2727275252FD05FFA8A87D7DFD53FFA8A8FD0BFFA827275252FFA8
%7DA8A8FFFFFF5227F85252A8A8A85252F852A8FFFFFFA8A87DFD53FFA87D
%FD0CFF2727A87D7D7DA8A8FFA852F8527D527DFFFFFFA82752FF52F87DFF
%FFA87DA87DFD52FFA8A8FD0CFF27A87D7DA8A8A8FF52F852FFFFFF2727FF
%FFFF7D27277DFFA8277DFFFFA87DA8A8FD27FF7DA8FD28FF7D7DFD0DFF7D
%7D52A8A8A8F8272752FD04FFF8FD04FF2727FFA8A87DF8A8FFA8A87D7DFD
%26FF7DA87DA8FD27FFA8A8FD0CFF7DA87DA8FFA8F87D522727A8FD08FF7D
%FFA82752FF277DFFFFFD04A8FD24FF7DA8A8A87DFD27FFA87DFD0AFF7D7D
%A8A8A87D7DF852F87D2727A8FD0AFF7D52277D7D27FFFFFF7DA87DFD23FF
%7DA87DA8A8A87DA8FD25FFA8A8FD08FFA87DA8A8A8FFA87DF8A8A8275227
%7DFD0CFF7D27FFFFF8FFFFFFA87DA87DFD21FF7DA8A8FFFFFFA8A87DFD25
%FFA87DFD07FF7D7D7DA8A8FFFF7DF8A8A8FF7DA8F8F87DFD0BFFA8FFFFFF
%F8FFFFFFA8A87D7DA8FD1FFF7DA87DA8FD04FFA8A87DA8FD23FFA8A8FD06
%FF7DA8A8FD05FFF87D527DFFFFFF52F827FD06FFA852A8FFFFFFA8FFFFF8
%FD04FFA8A8A87DFD1EFF7DA8A8FD07FFA8A87DFD23FFA87DFD04FFA87DA8
%A8A8FD04FF27277D7DF8A8FFFFA827F87DFFFFFFA827277DFFFFFFA8F827
%FFF8FD05FFA8A87DA8FD1CFF7DA87DA8FD08FF7DA87DA8FD21FFA8A8FFFF
%FFA87DA8A8FD05FF7D27F852FF7DA8FFFFFF7DF827FFFFA8F8277DFD04FF
%7DF8F87D27FD06FF7DA87DFD1BFF7DA87DFD0BFFA8A87DA8FD20FF7D7DFF
%A87D7DA8A8FD06FF277D7DF8FD07FFF8F85252F827A8FD05FF7DA8525252
%FD06FFA87DA87DFD19FF7DA87DA8FD0CFF7DA87DA8FD1FFFFD06A8FD07FF
%A827FFA8A8FD07FFA8F8F8F87DFD0AFFF8A8FD06FFFD05A8FD17FF7DA8A8
%FD07FF52FD07FFA8A87DFD1FFFA87D7D7DA8A8FD07FF277DFF7D52FD07FF
%52F8F852FD0AFF7D27FD07FFA87DA87DFD17FF7DA87DA8FD04FFA8A87DF8
%52A8A8FD05FFA8A87DA8FD1DFFFD07A8FD05FFA8F8A8A827277DFD05FFA8
%F8272752FD06FFA827FFFF277DFD05FFFD04A87DFD17FF7DA8A8FD04FF7D
%27F82727F8272727F852A8FFFFFFA8A87DFD1DFFA87DFF7DA87DA8FD05FF
%7D2752522727A8FD10FFF827F87DF8FD05FFA8A87D7DA8FD17FF7DA87DA8
%FFFF5227277D52FFFF52FFA8277D522727A8FFFFA8A87DA8FD1BFFA8A8FF
%FF7DA8A8FD05FF5252F87D527DFD12FF2752F8A8FD04FFA8A87DA8FD18FF
%7DA8A8FFFFFF2727A8FFFF27277D52FF522752A8FF7DF8A8FFFFA8A87DFD
%1BFFA87DFFFFA87DA8A8FD04FF7D527D27A87DFD12FF7D2752FD04FF7DA8
%7DA8FD18FF7DA87DA8FFFF275252FFFFFF7DF82752FFFF7DF87DFFA87DF8
%7DFFFF7DA87DA8FD19FFA8A8FFFFFF7DA8A8A8FFFFFF527DFFFF7DA8FD0E
%FFA8FFFFFF5252FD04FFA8A87DFD19FF7DA87DFFFFFF275252277DA8FFA8
%F8FF52FFFFFF7DFFA8277DA8F87DFFFFA8A87DA8FD18FF7D7DFFFFFFA87D
%7DA8A8FFFF7D52FFA82752FD0DFF277DA8FF2727A8FFA8A87D7D7DFD19FF
%7DA87DA8FFFF272727A827F852FFA8A8FF52FD05FF7D27F852A8F8FFFFFF
%7DA87DA8FD17FFA8A8FD04FF7DA8A8FFFFFF7D52FF522752FD0DFFF8F87D
%2727FFFFA8A8A87DA8FD19FF7DA8A8FFFFFFA827FF7DF827F8FD05FF52FD
%07FF5252FF7D27FFFFFFA8A87DFD17FFA87DFD05FF7DA87DFFFFFFF8FF7D
%2752FFFFA8FD05FF7D52FFFFFFF827F827A8FFA8A87D7DFD1AFF7DA87DA8
%FFFFFF2752FFFF7D5227F8A8FFFFFF7DFD07FFA8A8FFA8277DFFFFFFA8A8
%7DA8FD15FFA8A8FD05FFFD04A8FFFF5227FF52A8FF52F87DFFFFFF52277D
%FFFFFF7DF87DFFFFA8A87DA8FD1AFF7DA8A8FD04FFA8F8FF52FFFFFF7D27
%F8A8FFFF52FD04FF7DFD06FF5252FD04FFA8A87DFD15FFA87DFD06FF7D7D
%A8A8FFA82727A87DFFF827F8FFFFFFA87D52FF7D27F8A8FFA87DA87DFD1B
%FF7DA87DA8FD04FF5252A85227A8FFFF7DF8F8A8FF52FFFF52F852FD04FF
%277DA8F8FD05FFA8A87DA8FD13FFA8A8FD06FFFD04A8FFFFA827277DFFA8
%27A8FD04FF7D7D27277DFFFFFD04A8FD1BFF7DA8A8FD06FF525227FF7D7D
%FFFFFF7D27F8A852FF52F827FD05FFF8F87D27A8FD05FFA8A87DFD13FFA8
%7DFD07FF7DA87DA8FFFFA852F85252A87DA87D7D27F8277DFFFFA8A87D7D
%A8FD1BFF7DA87DA8FD06FFF8A82727FD06FF7D27F85252F8F8A8FD05FF52
%5252277DFD06FF7DA87DA8FD11FFA8A8FD08FF7DA8A8FFFFFF7DA87D5227
%522727527DFD04FFA8A87DA8FD12FFA8A8A8FD07FF7DA87DFD08FFF8FFFF
%7DFD07FF7D27F8F8F8FD0AFF7D52FD07FFA8A87DA8FD10FF7D7DFD08FF7D
%7DA8A8FFFFA87DFD0AFFA87DA87DA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FF7DA87DA8A8FFFFFF7DA87DA8A8FD07FFF8FFFFFFA8FD07FF27
%27F87DFD0AFF527DFD07FFA87DA87DFD10FFA8A8FD09FF7DA8A8A8FFA8A8
%FD09FFA8A8A87DFFFFFFFD19A8FFFFFFFD04A8FD07FFF8FFFFF8277DFD06
%FFFD0427FD07FF52FFFF7D52FD07FFA8A87DFD11FFA87DFD09FF7DA87DA8
%FFA87DFD07FFA8A87D7D7DFD05FFFD12A87DA87DA8A8FD05FF7DA87DA8A8
%FD05FFF87D7DF82727FD06FF5252A8A8FD06FF7DF827A8277DFD05FFA87D
%A87DFD12FFA8A8FD0AFF7DA87DFFA8A8FD06FFA8A87D7DFD0EFF7DFD0AFF
%A8A8FD09FFA8A87DA8FD05FF5252277D277DFD07FF52FD09FF52525227A8
%FD05FF7DA87DFD13FFA87DFD0AFFA87DA87DA87DFD05FF7DA87D7DFD0DFF
%52525227A827A827A8F8A8FFFFA8FD0BFF7DA87DA8A8FFFFFF7D277D27A8
%FD08FF52FD0AFF277DF8FD04FFA87DA87DFD14FFA8A8FD0BFFA8A8A87DA8
%FD04FFA8A87DFD0FFF2752527D522752275252FD10FF7DA8A8A8FD04FFF8
%FF7DFD09FF52FD0BFF527DFD04FFA8A87DFD15FFA87DFD0BFFA8FD047DFF
%A8A87DA87DFD10FFFD04A8FF7DFF7DA8A8FD11FF7DA87DA8A8FFFF5227FF
%FF7D52FD06FF52FD06FF527DFFFFA8F8A8FFFFA87DA87DFD16FFA8A8FD0C
%FF7DA87D7DA8A87D7DA8FD2DFF7DFD04A8FFA8277DA827F8A8FD05FF52FD
%06FF7DF827A85252FFFFFFA8A87DFD17FF7D7DFD0DFF7D7D52A87D7DA8FD
%2FFF7DA87DA8A8FF7DF8A852277DFD05FF52FFFFA87DFFFFA827F852F8FF
%FFA87DA87DFD18FFA8A8FD0DFFA8527D7DA8FD32FFFD04A8FFFF5227FF7D
%A8FFFF5252FF52FFA82727FFFFFFA87DF8FFFFFFA8A87DFD19FFA87DFD0E
%FF5252A8FD24FF7DFD0FFF7DA87DA8A8FF27277DFFFFA8F8F8277DFFFFA8
%277DFFA852F8A8FFA87DA87DFD1AFFA8A8FD0CFF527D5252527D527D527D
%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D
%5227277DFD0EFFA8A87DA8FFFF7D2752FFFF7D275252FFFFFF7D7D7D2727
%FFFFFF7DA87DFD1BFFA87DFD0EFFA87DFD21FF7DA87DA87DFD11FF7DA87D
%A8A8FFA852F8527DA8FF52FFFF7D52F8277DFFFFA87DA87DFD1CFFA8A8FD
%0EFFA8A8FD21FFA8F8A8FD14FF7DA8A8A8FD04FF7D52FD05F82752A8FD04
%FFA8A87DFD1DFFA87DFD0EFFA8A8FD21FF522752FD15FF7DA87DA8A8FD06
%FF52FD07FFA87DA87DFD1EFFA8A8FD4AFF7DFD04A8FD05FF52FD07FFA8A8
%7DFD1FFF7D7DFD4BFF7DA87DA8A8FD04FF52FD05FFA87DA87DFD20FFA8A8
%FD4CFFFD04A8FD04FF52FD05FFA8A87DFD21FFA87DFD4DFF7DA87DA8A8FF
%FF7DFFFFFFA87DA87DFD22FFA8A8FD4EFFA8A87DA8FFFF52FFFFFF7DA87D
%FD23FFA87DFD4FFF7DA87DA8A852FFA87DA87DFD24FFA8A8FD50FF7DA8A8
%A852FFA8A87DFD25FFA87DFD51FF7DA87D527DA87DFD26FFA8A8FD52FF7D
%A852A87DFD27FF7D7DFD53FF7D527DFD24FFA8A8FFFFA8A8FD51FF7D527D
%277D527D527D527D527D527D527D527D527D527D527D527D527D527D527D
%527D527D527D527D27F827A8A87DFD54FF7DFD22FFA8A8A87D7DFFFFA8A8
%FD54FF52FD22FF2727FD05FFA87DFD54FF52FD22FFF827A8FD04FFA8A8FD
%7EFFA87DFD7EFFA87DA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DFD7FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7834.75 8587 m
-7834.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7834.75 8587 L
nu0 Ap
0 O
1 g
-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
F-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
F-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
F-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
F-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
F-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
F-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
F-7844.7817 8565.125 m
-7850.9009 8563.6162 -7854.7817 8565.125 V
-7858.877 8563.6484 -7864.7817 8565.125 V
-7869.7446 8563.4492 -7874.7817 8565.125 V
-7880.7969 8563.5742 -7884.7817 8565.125 V
-7884.7817 8584.8096 L
-7881.6958 8585.7842 -7878.2969 8585.9912 -7874.3799 8584.9082 C
-7868.2134 8586.4912 -7864.4634 8584.9082 V
-7859.4634 8586.4912 -7854.3799 8584.8242 V
-7850.0474 8586.4082 -7844.3799 8584.9082 V
-7838.8799 8586.3242 -7834.7817 8585.125 V
-7834.7817 8565.4404 L
-7837.5254 8564.4287 -7840.6514 8563.9287 -7844.7817 8565.125 C
f0 R
0 G
1 J 1 j 0.5 w-7864.75 8585 m
-7872.54 8586.9473 -7878.813 8583.585 -7884.75 8579.0488 C
S-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
S-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
S-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
S-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
S-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
S-7854.75 8565 m
-7846.96 8563.0527 -7840.687 8566.415 -7834.75 8570.9512 C
S-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
S-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
SUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7833.8921 8586 L
-7833.8921 8529.9756 L
-7884 8529.9756 L
-7884 8586 L
nu0 O
0.1 1 1 0 k
-7846.9014 8551.5752 m
-7848.7178 8545.0957 -7858.8247 8548.4658 Y
-7858.791 8548.5303 L
-7868.8999 8545.1611 -7870.7144 8551.6396 V
-7876.6758 8569.0068 -7871.4922 8575.7451 V
-7864.7529 8585.3369 -7860.6055 8585.3369 V
-7857.0103 8585.2705 L
-7852.8638 8585.2705 -7846.125 8575.6816 Y
-7840.9409 8568.9424 -7846.9014 8551.5752 Y
fu0 0 0 1 k
-7851.3926 8529.9756 m
-7852.1167 8531.4199 -7852.9238 8532.4756 V
-7852.4058 8532.0635 -7851.5151 8531.1924 -7851.3926 8529.9756 C
f-7865.064 8532.4854 m
-7865.8711 8531.4307 -7866.5942 8529.9863 Y
-7866.4727 8531.2021 -7865.582 8532.0732 -7865.064 8532.4854 C
fU0 0.61 0.74 0 k
-7850.5977 8554.4609 m
-7851.9038 8549.7959 -7859.1816 8552.2217 Y
-7859.1567 8552.2686 L
-7866.436 8549.8428 -7867.7417 8554.5078 V
-7872.0337 8567.0117 -7868.3018 8571.8633 V
-7863.4487 8578.7686 -7860.4634 8578.7686 V
-7857.875 8578.7227 L
-7854.8887 8578.7227 -7850.0366 8571.8174 Y
-7846.3042 8566.9639 -7850.5977 8554.4609 Y
fu1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7854.6226 8557.2754 m
-7853.813 8557.2754 -7853.1558 8556.6182 -7853.1558 8555.8096 c
-7853.1558 8555 -7853.813 8554.3428 -7854.6226 8554.3428 c
-7855.4321 8554.3428 -7856.0889 8555 -7856.0889 8555.8096 c
-7856.0889 8556.6182 -7855.4321 8557.2754 -7854.6226 8557.2754 c
b-7854.3638 8568.9971 m
-7853.0806 8568.9971 -7852.0415 8568.1201 -7852.0415 8567.042 c
-7852.0415 8565.9619 -7853.0806 8565.0869 -7854.3638 8565.0869 c
-7855.645 8565.0869 -7856.6846 8565.9619 -7856.6846 8567.042 c
-7856.6846 8568.1201 -7855.645 8568.9971 -7854.3638 8568.9971 c
b-7853.834 8580.7861 m
-7852.2817 8580.7861 -7851.0239 8580.1299 -7851.0239 8579.3213 c
-7851.0239 8578.5117 -7852.2817 8577.8545 -7853.834 8577.8545 c
-7855.3862 8577.8545 -7856.645 8578.5117 -7856.645 8579.3213 c
-7856.645 8580.1299 -7855.3862 8580.7861 -7853.834 8580.7861 c
b-7849.6104 8552.5264 m
-7848.8687 8552.5264 -7848.2671 8551.8154 -7848.2671 8550.9365 c
-7848.2671 8550.0596 -7848.8687 8549.3477 -7849.6104 8549.3477 c
-7850.353 8549.3477 -7850.9546 8550.0596 -7850.9546 8550.9365 c
-7850.9546 8551.8154 -7850.353 8552.5264 -7849.6104 8552.5264 c
b-7848.0034 8574.083 m
-7848.8818 8573.7354 -7849.1494 8572.335 -7848.603 8570.9541 c
-7848.0566 8569.5752 -7846.9014 8568.7363 -7846.0234 8569.085 c
-7845.145 8569.4326 -7844.877 8570.833 -7845.4233 8572.2139 c
-7845.9702 8573.5947 -7847.125 8574.4316 -7848.0034 8574.083 c
bu-7863.0566 8557.1592 m
-7863.8662 8557.1592 -7864.5239 8556.502 -7864.5239 8555.6934 c
-7864.5239 8554.8828 -7863.8662 8554.2266 -7863.0566 8554.2266 c
-7862.248 8554.2266 -7861.5913 8554.8828 -7861.5913 8555.6934 c
-7861.5913 8556.502 -7862.248 8557.1592 -7863.0566 8557.1592 c
b-7863.3159 8568.8799 m
-7864.5991 8568.8799 -7865.6382 8568.0049 -7865.6382 8566.9248 c
-7865.6382 8565.8447 -7864.5991 8564.9697 -7863.3159 8564.9697 c
-7862.0342 8564.9697 -7860.9951 8565.8447 -7860.9951 8566.9248 c
-7860.9951 8568.0049 -7862.0342 8568.8799 -7863.3159 8568.8799 c
b-7863.8457 8580.6709 m
-7865.3975 8580.6709 -7866.6558 8580.0146 -7866.6558 8579.2041 c
-7866.6558 8578.3936 -7865.3975 8577.7383 -7863.8457 8577.7383 c
-7862.293 8577.7383 -7861.0352 8578.3936 -7861.0352 8579.2041 c
-7861.0352 8580.0146 -7862.293 8580.6709 -7863.8457 8580.6709 c
b-7868.0679 8552.4092 m
-7868.811 8552.4092 -7869.4121 8551.6982 -7869.4121 8550.8213 c
-7869.4121 8549.9443 -7868.811 8549.2334 -7868.0679 8549.2334 c
-7867.3262 8549.2334 -7866.7241 8549.9443 -7866.7241 8550.8213 c
-7866.7241 8551.6982 -7867.3262 8552.4092 -7868.0679 8552.4092 c
b-7869.6758 8573.9678 m
-7868.7983 8573.6201 -7868.5298 8572.2188 -7869.0762 8570.8379 c
-7869.6226 8569.457 -7870.7778 8568.6201 -7871.6558 8568.9678 c
-7872.5342 8569.3164 -7872.8032 8570.7178 -7872.2568 8572.0967 c
-7871.7104 8573.4775 -7870.5552 8574.3154 -7869.6758 8573.9678 c
bUU0 Ap
0 0 0 1 k
-7859.1318 8552.6553 m
-7859.1318 8585.3145 l
Fu-7843.3906 8538.5303 m
-7844.0815 8537.8369 -7847.019 8538.7021 Y
-7848.229 8538.874 -7848.0562 8541.2939 Y
-7847.019 8543.3682 -7847.7104 8543.1943 Y
-7848.2998 8543.1943 -7849.855 8543.1143 -7850.7822 8543.0635 C
-7851.1226 8541.6689 -7852.6128 8540.4756 -7854.7217 8539.7695 C
-7852.7578 8536.4775 -7854.5176 8535.7949 -7856.2935 8535.79 C
-7856.3096 8535.7021 -7856.332 8535.6162 -7856.3599 8535.5332 C
-7854.1089 8535.5791 -7853.6392 8533.2588 Y
-7853.4048 8533.0635 -7853.1606 8532.7861 -7852.9238 8532.4756 C
-7853.1416 8532.6475 -7853.2944 8532.7393 Y
-7854.2583 8532.7393 -7855.8774 8534.4941 -7856.4966 8535.207 C
-7856.9194 8534.4434 -7857.853 8533.9111 -7858.9434 8533.9111 c
-7860.0698 8533.9111 -7861.0322 8534.4795 -7861.4312 8535.2852 C
-7861.9985 8534.624 -7863.6968 8532.751 -7864.6943 8532.751 C
-7864.8462 8532.6572 -7865.064 8532.4854 V
-7864.8281 8532.7939 -7864.583 8533.0732 -7864.3481 8533.2686 C
-7863.8638 8535.6563 -7861.5254 8535.5342 V
-7861.5449 8535.5889 -7861.5674 8535.6436 -7861.5806 8535.7021 C
-7864.9238 8535.6924 -7863.937 8538.3174 -7863.2104 8539.6602 C
-7865.5918 8540.376 -7867.2646 8541.7012 -7867.5239 8543.25 C
-7868.4473 8543.2998 -7869.6729 8543.3584 -7870.1802 8543.3584 C
-7870.8726 8543.5313 -7869.835 8541.458 V
-7869.6626 8539.0391 -7870.8726 8538.8662 V
-7873.8096 8538.002 -7874.501 8538.6934 V
-7875.1919 8539.5566 -7876.0562 8538.3467 V
-7875.1919 8540.0752 -7873.291 8539.5566 V
-7870.6982 8538.8662 -7871.3906 8540.5938 V
-7871.9087 8544.0498 -7870.1802 8544.7402 V
-7868.0342 8545.8545 -7866.2822 8546.0889 V
-7865.9087 8546.4141 -7865.4639 8546.7109 -7864.958 8546.9766 C
-7867.5562 8547.0469 -7870.2246 8547.9209 -7871.0752 8550.9561 C
-7871.5151 8552.2432 -7872.0518 8554.2432 V
-7873.1025 8554.8252 -7874.3022 8556.0078 -7875.541 8558.2627 C
-7876.394 8561.4502 -7877.167 8556.7129 V
-7878.3975 8553.6494 -7879.6504 8553.5381 V
-7878.4702 8555.2871 -7878.9038 8556.416 V
-7877.2998 8560.917 -7875.6138 8559.8994 V
-7874.0986 8559.2197 -7872.688 8556.8154 V
-7873.0698 8558.4971 -7873.4326 8560.417 -7873.6743 8562.3906 C
-7874.4888 8562.3975 L
-7876.3506 8561.4795 -7876.3262 8564.959 V
-7877.1226 8568.9453 -7876.3594 8571.6826 V
-7875.647 8574.1504 -7878.1274 8572.9307 V
-7879.2842 8573.3242 -7879.9839 8572.7881 V
-7882.3882 8571.4131 -7884 8573.124 V
-7882.147 8572.8799 -7881.4482 8573.417 V
-7879.9785 8573.5615 -7879.897 8574.1787 V
-7876.9561 8574.8555 -7876.188 8574.0771 V
-7874.417 8573.2139 -7875.1304 8570.3604 V
-7875.8799 8562.4814 -7874.3198 8564.4053 V
-7874.1182 8564.4219 -7873.8784 8564.5176 V
-7874.1519 8568.4326 -7873.8018 8572.3252 -7871.9961 8574.8516 C
-7875.4536 8567.333 -7870.2974 8552.3037 Y
-7868.9609 8547.5303 -7863.127 8548.1016 -7860.145 8548.7344 C
-7860.0718 8550.1299 -7859.8374 8551.9492 -7859.1318 8552.6553 C
-7858.2134 8550.6963 -7858.2358 8549.0732 V
-7857.0762 8548.7217 -7850.2817 8546.8447 -7847.4487 8550.3369 C
-7848.4312 8547.8135 -7850.8262 8547.0186 -7853.2007 8546.9189 C
-7852.667 8546.6318 -7852.2041 8546.3047 -7851.8257 8545.9502 C
-7850.041 8545.7861 -7847.7104 8544.5771 Y
-7845.9814 8543.8857 -7846.5015 8540.4307 Y
-7847.1919 8538.7021 -7844.5991 8539.3936 Y
-7842.7002 8539.9111 -7841.835 8538.1836 Y
-7842.7002 8539.3936 -7843.3906 8538.5303 Y
f-7837.9082 8572.9521 m
-7838.6074 8573.4893 -7839.7632 8573.0938 Y
-7842.2446 8574.3135 -7841.5327 8571.8467 Y
-7840.769 8569.1104 -7841.564 8565.1221 Y
-7841.541 8561.6445 -7843.4014 8562.5596 Y
-7844.0342 8562.5557 L
-7844.3198 8560.6123 -7844.7046 8558.7549 -7845.0898 8557.1699 C
-7843.7129 8559.4199 -7842.2778 8560.0635 Y
-7840.5913 8561.082 -7838.9878 8556.5791 Y
-7839.4214 8555.4502 -7838.2417 8553.7021 Y
-7839.4937 8553.8125 -7840.7246 8556.876 Y
-7841.4976 8561.6152 -7842.3511 8558.4268 Y
-7843.5776 8556.1904 -7844.769 8555.0098 -7845.814 8554.4229 C
-7846.2026 8553.0635 -7846.4858 8552.2393 Y
-7846.7002 8551.4727 -7847.0337 8550.8486 -7847.4487 8550.3369 C
-7847.3799 8550.5127 -7847.3174 8550.6982 -7847.2632 8550.8916 C
-7841.3022 8568.2588 -7846.4858 8574.9971 V
-7853.2246 8584.5869 -7857.3721 8584.5869 V
-7860.9663 8584.6514 L
-7865.1138 8584.6514 -7871.853 8575.0615 Y
-7871.9038 8574.9961 -7871.9463 8574.9219 -7871.9961 8574.8516 C
-7871.7378 8575.4141 -7871.437 8575.9404 -7871.0752 8576.4092 C
-7864.3359 8586 -7860.189 8586 V
-7856.5942 8585.9346 L
-7852.4482 8585.9346 -7845.709 8576.3447 Y
-7843.5801 8573.5771 -7843.3306 8569.0176 -7843.7769 8564.6055 C
-7843.6553 8564.5752 -7843.5698 8564.5684 Y
-7842.0112 8562.6475 -7842.7598 8570.5244 Y
-7843.4746 8573.3789 -7841.7026 8574.2402 Y
-7840.9351 8575.0186 -7837.9946 8574.3428 Y
-7837.9136 8573.7256 -7836.4434 8573.5811 Y
-7835.7446 8573.0449 -7833.8921 8573.2881 Y
-7835.5024 8571.5771 -7837.9082 8572.9521 Y
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7819.187 8586 L
-7819.187 8521.9023 L
-7884 8521.9023 L
-7884 8586 L
nu0 O
0 g
-7849.6978 8544.4297 m
-7851.6094 8521.9023 L
-7853.5215 8544.4297 L
-7852.9033 8544.3066 -7852.2642 8544.2402 -7851.6094 8544.2402 c
-7850.9551 8544.2402 -7850.3159 8544.3066 -7849.6978 8544.4297 C
f-7861.2402 8552.3975 m
-7884 8554.3301 L
-7861.1138 8556.2734 L
-7861.2856 8555.5469 -7861.3848 8554.793 -7861.3848 8554.0156 c
-7861.3848 8553.4629 -7861.3281 8552.9248 -7861.2402 8552.3975 C
f-7856.519 8545.5723 m
-7870.1626 8536.8047 L
-7860.2153 8549.377 L
-7859.3574 8547.791 -7858.0718 8546.4766 -7856.519 8545.5723 C
f-7853.481 8563.6074 m
-7851.5786 8586 L
-7849.6768 8563.5967 L
-7850.3018 8563.7227 -7850.9473 8563.791 -7851.6094 8563.791 c
-7852.25 8563.791 -7852.873 8563.7246 -7853.481 8563.6074 C
f-7841.9609 8555.5068 m
-7819.187 8553.5732 L
-7842.083 8551.6289 L
-7842.083 8551.8506 L
-7841.9258 8552.5488 -7841.834 8553.2695 -7841.834 8554.0156 c
-7841.834 8554.5234 -7841.8848 8555.0195 -7841.9609 8555.5068 C
f-7860.1138 8558.8262 m
-7870.1641 8571.5293 L
-7856.2778 8562.6055 L
-7857.8823 8561.7305 -7859.2114 8560.416 -7860.1138 8558.8262 C
f-7842.9961 8549.3945 m
-7832.875 8536.6055 L
-7846.7666 8545.5313 L
-7845.1768 8546.4414 -7843.8633 8547.7793 -7842.9961 8549.3945 C
f-7846.6895 8562.4512 m
-7832.873 8571.3281 L
-7842.9658 8558.5732 L
-7843.8198 8560.1895 -7845.1152 8561.5313 -7846.6895 8562.4512 C
f-7842.8887 8558.6133 m
-7842.3862 8557.6641 -7842.043 8556.6211 -7841.875 8555.5195 c
-7841.7993 8555.0293 -7841.748 8554.5273 -7841.748 8554.0156 c
-7841.748 8553.2637 -7841.8398 8552.5352 -7841.998 8551.8311 c
-7842.1958 8550.957 -7842.5049 8550.124 -7842.918 8549.3545 c
-7843.7954 8547.7246 -7845.1191 8546.374 -7846.7241 8545.4561 c
-7847.6294 8544.9375 -7848.6226 8544.5537 -7849.6802 8544.3457 c
-7850.3047 8544.2207 -7850.9497 8544.1523 -7851.6094 8544.1523 c
-7852.2695 8544.1523 -7852.915 8544.2207 -7853.5391 8544.3457 c
-7854.623 8544.5605 -7855.6382 8544.957 -7856.5625 8545.4961 c
-7858.1313 8546.4102 -7859.4282 8547.7363 -7860.291 8549.335 c
-7860.7969 8550.2695 -7861.145 8551.2969 -7861.3262 8552.3828 c
-7861.415 8552.916 -7861.4727 8553.459 -7861.4727 8554.0156 c
-7861.4727 8554.8008 -7861.3711 8555.5605 -7861.1978 8556.293 c
-7860.981 8557.207 -7860.6406 8558.0732 -7860.187 8558.8701 c
-7859.2793 8560.4727 -7857.939 8561.8008 -7856.3174 8562.6826 c
-7855.4487 8563.1553 -7854.5 8563.498 -7853.4961 8563.6934 c
-7852.8848 8563.8115 -7852.2554 8563.8779 -7851.6094 8563.8779 c
-7850.9414 8563.8779 -7850.29 8563.8086 -7849.6602 8563.6826 c
-7848.5786 8563.4668 -7847.5664 8563.0654 -7846.6455 8562.5273 c
-7845.0566 8561.5977 -7843.751 8560.2441 -7842.8887 8558.6133 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7874.75 8587 m
-7874.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7874.75 8587 L
nuu0 Ap
0 O
1 g
-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 c
-7877.897 8566.9736 -7881.0898 8565 -7884.75 8565 C
-7884.75 8585 L
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 c
-7881.9121 8584.7754 -7880.1807 8584.0645 -7878.7441 8582.9824 c
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 c
f0 R
0 G
1 J 1 j 0.5 w-7884.75 8565.3174 m
-7881.7207 8566.2744 -7878.8926 8567.9326 -7876.1543 8569.9072 C
S-7884.75 8570.9512 m
-7881.5991 8573.3564 -7878.543 8576.0869 -7875.4058 8578.5361 C
S-7878.7441 8582.9824 m
-7880.8105 8581.8916 -7882.7993 8580.5342 -7884.75 8579.043 C
S-7883.8018 8584.9521 m
-7884.1191 8584.8682 -7884.4375 8584.7852 -7884.75 8584.6865 C
S-7878.7441 8582.9824 m
-7880.1807 8584.0645 -7881.9121 8584.7744 -7883.8018 8584.9521 C
S-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 C
S-7884.75 8585 m
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 C
S-7878.7441 8582.9824 m
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 C
S-7876.1543 8569.9072 m
-7877.8975 8566.9736 -7881.0898 8565 -7884.75 8565 C
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884.0254 8586.0264 m
-7828.0542 8586.0264 L
-7828.0542 8524.5342 L
-7884.0254 8524.5342 L
-7884.0254 8586.0264 L
nuu0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7857.5991 8562.7217 m
-7857.3594 8573.5215 -7862.8794 8583.8398 v
-7862.4009 8586 -7860.959 8586 v
-7861.2002 8582.6406 -7860.2393 8582.1611 v
-7855.9199 8570.1602 -7856.6382 8562.2402 v
-7857.5991 8562.7217 l
b-7857.5991 8562.7217 m
-7859.2793 8568 -7871.0391 8569.2012 v
-7875.3594 8569.6807 -7875.5991 8571.1211 v
-7869.1206 8561.5195 -7868.1602 8561.7607 v
-7881.3594 8556.001 -7884 8550.7197 v
-7878.959 8553.6006 -7875.5991 8551.4404 v
-7867.6802 8551.2012 -7862.6406 8553.3613 v
-7858.8008 8555.2813 -7866.7202 8539.2012 v
-7862.8794 8550.9609 -7859.2793 8524.5605 v
-7858.3198 8529.8408 -7856.8799 8531.2813 v
-7850.8799 8538.9609 -7851.8398 8541.1211 v
-7852.3198 8544.9609 -7847.7598 8538.7207 v
-7848 8548.3213 -7850.4009 8551.6807 v
-7852.5591 8555.2813 -7846.5591 8553.1211 v
-7840.5591 8551.2012 -7835.2793 8552.8809 v
-7829.7598 8554.3203 -7828.0801 8551.4404 v
-7839.8398 8563.9209 -7845.5991 8563.6807 v
-7843.9194 8567.2813 l
-7841.519 8572.0811 -7842 8573.2813 v
-7857.2681 8563.8828 -7857.5991 8562.7217 v
b-7857.5991 8562.7217 m
-7854.959 8544.2402 -7857.5991 8536.5605 v
-7859.998 8526.001 -7859.2793 8524.5605 v
S-7856.1602 8551.4404 m
-7850.1602 8546.6406 -7848.959 8541.3604 v
S-7856.1602 8550.7197 m
-7865.0391 8543.041 -7866.7202 8539.2012 v
S-7828.0801 8551.4404 m
-7829.2793 8553.6006 -7857.3594 8561.7607 y
-7862.4009 8556.2422 -7873.9199 8553.8408 v
-7881.5986 8552.8809 -7884 8550.7197 v
S-7874.6382 8569.6807 m
-7863.1191 8560.5615 -7857.3594 8561.7607 y
-7843.1992 8568 -7842 8573.2813 v
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.8496 8585.9961 m
-7833.96 8585.9961 L
-7833.96 8534.9258 L
-7883.8496 8534.9258 L
-7883.8496 8585.9961 L
nu0 O
0.025 0.1 0.475 0 k
-7862.1504 8553.9043 m
-7864.4766 8552.8125 -7866.6914 8552.4434 -7868.373 8552.9238 c
-7869.0518 8553.1172 -7869.645 8553.4473 -7870.123 8553.9238 c
-7870.6006 8554.4023 -7870.9297 8554.9951 -7871.123 8555.6729 c
-7872.0088 8558.7715 -7870.0103 8563.6777 -7865.9233 8567.7666 c
-7861.834 8571.8535 -7856.9297 8573.8516 -7853.8286 8572.9668 c
-7853.1519 8572.7715 -7852.5586 8572.4424 -7852.0806 8571.9658 c
-7851.603 8571.4883 -7851.2754 8570.8955 -7851.082 8570.2168 c
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.582 8561.21 -7854.791 8559.6133 -7856.2793 8558.123 c
-7858.1504 8556.2539 -7860.1914 8554.8242 -7862.1504 8553.9043 c
fu0.0035 0.014 0.0665 0 k
-7861.2183 8552.9727 m
-7863.8306 8552.0215 -7866.3975 8551.9688 -7868.373 8552.9238 C
-7866.6914 8552.4434 -7864.4766 8552.8125 -7862.1504 8553.9043 c
-7861.6191 8554.1543 -7861.0806 8554.4434 -7860.543 8554.7676 C
-7858.8984 8554.0537 L
-7859.667 8553.6172 -7860.4434 8553.2539 -7861.2183 8552.9727 c
f0.015 0.06 0.285 0 k
-7858.8984 8554.0537 m
-7860.543 8554.7676 L
-7859.0962 8555.6348 -7857.6426 8556.7607 -7856.2793 8558.123 c
-7856.1538 8558.25 -7856.0327 8558.3779 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7856.3706 8555.7236 -7857.6191 8554.7813 -7858.8984 8554.0537 C
fUu0.039 0.156 0.741 0 k
-7849.687 8541.4043 m
-7849.9746 8541.6914 -7861.2183 8552.9727 Y
-7860.4434 8553.2539 -7859.667 8553.6172 -7858.8984 8554.0537 C
-7845.4146 8540.5703 L
-7847.061 8540.0996 -7848.6406 8540.3555 -7849.687 8541.4043 c
f0.025 0.1 0.475 0 k
-7845.4146 8540.5703 m
-7858.8984 8554.0537 L
-7857.584 8554.8027 -7856.2969 8555.7754 -7855.1143 8556.957 c
-7855.084 8556.9863 -7855.0586 8557.0156 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7841.5264 8543.1328 -7841.7202 8542.9141 -7841.9302 8542.7012 c
-7843.0103 8541.623 -7844.2305 8540.9082 -7845.4146 8540.5703 C
fUu0.0115 0.046 0.2185 0 k
-7835.9346 8550.3926 m
-7833.5337 8547.9893 -7833.335 8544.0898 -7835.1382 8540.6973 C
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f0.015 0.06 0.285 0 k
-7843.5337 8535.5957 m
-7842.582 8534.9258 L
-7845.2046 8534.3516 -7847.8306 8534.9141 -7849.6206 8536.7061 c
-7848.1719 8535.2578 -7845.9082 8534.9307 -7843.5337 8535.5957 C
f0.0295 0.118 0.5605 0 k
-7843.5337 8535.5957 m
-7845.9082 8534.9307 -7848.1719 8535.2578 -7849.6206 8536.7061 c
-7851.019 8538.1055 -7851.3706 8540.2637 -7850.7954 8542.5469 C
-7848.8672 8539.5449 -7845.4082 8540.5537 V
-7843.585 8535.6309 L
-7843.5337 8535.5957 L
f*u
1 D
0.048 0.192 0.912 0 k
-7835.9346 8550.3926 m
-7837.2817 8551.7383 -7839.332 8552.1133 -7841.5234 8551.627 C
-7851.6714 8561.7734 L
-7851.7695 8561.5684 -7851.7695 8561.5684 -7851.6714 8561.7734 c
-7850.2246 8564.8145 -7849.9702 8567.916 -7851.082 8570.2168 C
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.5054 8561.3438 -7854.5918 8559.8848 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7855.1816 8556.8945 -7855.1465 8556.9238 -7855.1143 8556.957 c
-7855.084 8556.9883 -7855.0566 8557.0176 -7855.0273 8557.0469 c
-7855.0278 8557.0469 -7855.0278 8557.0469 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f*U
0 D
0.0215 0.086 0.4085 0 k
-7842.582 8534.9258 m
-7843.5337 8535.5957 L
-7841.6846 8536.1113 -7839.7656 8537.2285 -7838.1138 8538.8828 c
-7837.4063 8539.5889 -7836.7998 8540.3418 -7836.2954 8541.1182 C
-7835.1382 8540.6973 L
-7835.6553 8539.7246 -7836.3374 8538.793 -7837.1802 8537.9512 c
-7838.7695 8536.3594 -7840.6758 8535.3428 -7842.582 8534.9258 C
f0.0205 0.082 0.3895 0 k
-7836.2954 8541.1182 m
-7836.7998 8540.3418 -7837.4063 8539.5889 -7838.1138 8538.8828 c
-7839.7656 8537.2285 -7841.6846 8536.1113 -7843.5337 8535.5957 C
-7843.585 8535.6309 L
-7845.4082 8540.5537 L
-7844.2114 8540.9219 -7842.9878 8541.6436 -7841.9302 8542.7012 c
-7841.7202 8542.9141 -7841.5264 8543.1328 -7841.3408 8543.3574 C
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
fUu0.445 0.356 0.267 0 k
-7883.8496 8585.9961 m
-7861.957 8562.9688 L
-7862.2007 8562.6494 -7862.5752 8562.6133 -7862.8887 8562.6592 C
-7867.1802 8567.2891 -7878.3145 8579.4561 -7882.7266 8584.2793 C
-7883.5649 8585.3516 -7884 8585.9932 -7883.8496 8585.9961 C
f0.15 0.12 0.09 0 k
-7883.834 8585.9961 m
-7882.6606 8585.7031 -7861.6934 8564.0029 Y
-7861.6934 8563.502 -7861.7993 8563.1758 -7861.957 8562.9688 C
-7883.8496 8585.9961 L
-7883.8442 8585.9961 -7883.8418 8586 -7883.834 8585.9961 c
f0.2 0.16 0.12 0 k
-7882.7266 8584.2793 m
-7878.3145 8579.4561 -7867.1802 8567.2891 -7862.8887 8562.6592 C
-7863.2002 8562.7041 -7863.4526 8562.8301 Y
-7864.603 8563.1328 -7878.5742 8578.9619 -7882.7266 8584.2793 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7882.9502 8585.2324 m
-7833.0391 8585.2324 L
-7833.0391 8521.1152 L
-7882.9502 8521.1152 L
-7882.9502 8585.2324 L
nu0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7833.2358 8521.1152 m
-7833.6064 8521.248 -7833.9858 8521.2832 -7834.3833 8521.2031 c
-7834.4863 8521.168 l
-7834.5254 8521.1602 -7834.5703 8521.1787 -7834.6025 8521.1992 c
-7834.9434 8521.3926 l
-7838.7129 8523.2959 -7842.0962 8525.8965 -7844.5 8529.4473 c
-7845.9634 8531.5918 -7847.123 8533.8789 -7848.7993 8535.8564 c
-7849.1729 8536.209 -7849.1758 8536.7725 -7848.834 8537.1309 c
-7848.4951 8537.501 -7847.918 8537.5078 -7847.561 8537.165 c
-7847.4038 8537.21 l
-7847.2642 8537.1289 -7847.0742 8537.0703 -7847.0234 8536.957 c
-7845.853 8534.2031 -7845.1895 8531.5137 -7843.4336 8529.1387 c
-7841.1719 8526.0947 -7838.1777 8523.9941 -7835.0298 8522.0234 c
-7834.3672 8521.6055 L
-7834.4966 8521.6348 L
-7833.7695 8521.6426 l
-7833.791 8521.6113 -7833.8008 8521.5957 -7833.8223 8521.5645 C
-7833.6064 8521.5234 -7833.377 8521.4746 -7833.1626 8521.4336 c
-7833.0762 8521.4238 -7833.0186 8521.3389 -7833.0391 8521.2383 c
-7833.0503 8521.1523 -7833.1382 8521.1084 -7833.2358 8521.1152 c
-7833.2358 8521.1152 l
b-7849.2222 8534.9951 m
-7849.5742 8534.8066 -7849.9658 8534.6719 -7850.248 8534.3887 c
-7856.4521 8528.1719 -7866.6802 8527.2734 -7874.0488 8533.6855 C
-7874.1582 8533.7813 -7874.1582 8533.957 -7874.063 8534.0645 C
-7871.0527 8532.9434 -7862.8838 8534.375 -7859.3223 8537.4121 C
-7859.2534 8537.4668 -7859.1465 8537.4531 -7859.1055 8537.3711 C
-7859.0503 8537.3047 -7859.0664 8537.1953 -7859.1328 8537.1563 C
-7862.5625 8534.0859 -7867.0674 8532.29 -7871.6729 8532.748 C
-7868.8535 8531.1855 -7865.6313 8530.4941 -7862.3984 8530.6885 c
-7857.7144 8530.9717 -7853.4634 8533.1191 -7849.3711 8535.2793 c
-7849.291 8535.3193 -7849.1978 8535.293 -7849.1553 8535.2109 C
-7849.1016 8535.1309 -7849.1426 8535.0352 -7849.2222 8534.9951 c
b-7858.647 8536.3359 m
-7860.2266 8540.3613 -7862.3911 8544.3203 -7865.8018 8547.0762 c
-7865.9648 8547.2119 -7865.9946 8547.4492 -7865.8711 8547.6055 c
-7865.7344 8547.7676 -7865.5049 8547.7793 -7865.3481 8547.6563 c
-7861.123 8545.5967 -7858.1904 8541.1309 -7858.1626 8536.4014 c
-7858.1626 8536.4014 l
-7858.1328 8536.2676 -7858.2354 8536.1348 -7858.3633 8536.1221 c
-7858.5039 8536.1055 -7858.6318 8536.1973 -7858.647 8536.3359 c
-7858.647 8536.3359 l
b-7852.9414 8541.0176 m
-7853.042 8541.1816 -7853.1152 8541.3838 -7853.2617 8541.4824 c
-7856.0806 8543.3906 -7858.9785 8544.6309 -7861.8848 8546.1328 c
-7862.0503 8546.209 -7862.1118 8546.418 -7862.0313 8546.5703 c
-7861.9512 8546.7227 -7861.7559 8546.7793 -7861.5898 8546.7041 c
-7858.439 8545.3232 -7854.313 8544.5 -7852.6729 8541.1797 c
-7852.6289 8541.1113 -7852.6455 8541.0146 -7852.7266 8540.9648 c
-7852.7959 8540.9199 -7852.897 8540.9492 -7852.9414 8541.0176 c
-7852.9414 8541.0176 l
b-7852.6602 8541.918 m
-7852.4438 8542.4297 -7852.1431 8542.8896 -7852.0503 8543.4355 c
-7851.2183 8548.2773 -7851.1152 8553.042 -7852.248 8557.6875 c
-7852.248 8557.6875 l
-7852.3418 8557.9531 -7852.2114 8558.2441 -7851.9438 8558.3389 c
-7851.6777 8558.4336 -7851.3882 8558.3125 -7851.2935 8558.0479 c
-7849.293 8552.8115 -7849.897 8546.7373 -7852.3711 8541.7832 c
-7852.4063 8541.7002 -7852.498 8541.6689 -7852.582 8541.6914 c
-7852.6641 8541.7275 -7852.6978 8541.835 -7852.6602 8541.918 c
-7852.6602 8541.918 l
b-7851.5352 8557.5938 m
-7848.8984 8555.2275 -7846.6816 8552.252 -7845.853 8548.7363 c
-7845.853 8548.7363 l
-7845.7246 8548.1816 -7846.0742 8547.623 -7846.6416 8547.4902 c
-7847.1992 8547.375 -7847.7578 8547.7246 -7847.8862 8548.2793 c
-7848.5649 8551.5313 -7849.8711 8554.6729 -7851.7954 8557.3867 c
-7851.7954 8557.3867 l
-7851.8462 8557.4551 -7851.834 8557.5576 -7851.7695 8557.6201 c
-7851.6992 8557.6699 -7851.5977 8557.6582 -7851.5352 8557.5938 c
-7851.5352 8557.5938 l
b-7836.3711 8550.1826 m
-7837.7114 8545.8301 -7840.2598 8542.0693 -7843.689 8539.1533 C
-7843.729 8539.0723 -7843.8242 8539.0322 -7843.9038 8539.0859 C
-7843.9863 8539.127 -7844.0122 8539.2207 -7843.9722 8539.3018 C
-7843.957 8539.7891 -7843.7144 8540.2334 -7843.4458 8540.5313 c
-7838.4063 8546.1621 -7834.9902 8554.7197 -7837.3433 8561.9551 C
-7837.0762 8556.4512 -7838.7241 8550.3008 -7842.1362 8545.6738 c
-7843.1606 8544.2695 -7844.7422 8544.1211 -7846.3081 8544.2031 C
-7846.4023 8544.1895 -7846.4834 8544.2432 -7846.4961 8544.3369 c
-7846.5098 8544.4189 -7846.4551 8544.5137 -7846.3623 8544.5254 C
-7843.1479 8545.7695 -7841.4878 8549.2246 -7840.084 8552.1943 c
-7838.415 8555.7441 -7837.7017 8559.6387 -7838.0054 8563.5 C
-7838.0454 8563.6777 -7838.1138 8565.3975 -7837.9775 8565.4102 C
-7837.8306 8565.4395 -7837.709 8565.3438 -7837.6802 8565.1943 C
-7837.645 8565.0449 -7834.6426 8555.7988 -7836.3711 8550.1826 c
b-7844.4863 8537.4912 m
-7843.3945 8533.6211 -7841.1094 8530.251 -7838.4824 8527.2383 c
-7838.3306 8527.1045 -7838.3145 8526.8867 -7838.4502 8526.7354 c
-7838.5752 8526.6006 -7838.8047 8526.582 -7838.957 8526.7178 c
-7842.3306 8529.332 -7843.4487 8533.541 -7844.7954 8537.375 c
-7844.7954 8537.375 l
-7844.8262 8537.4648 -7844.7754 8537.5586 -7844.6982 8537.5869 c
-7844.6094 8537.6191 -7844.5166 8537.5684 -7844.4863 8537.4912 c
-7844.4863 8537.4912 l
b-7838.5313 8562.1094 m
-7838.5991 8562.0566 -7838.707 8562.083 -7838.748 8562.1504 C
-7838.9634 8562.4746 -7840.6914 8564.5195 -7841.3926 8565.1406 c
-7846.1719 8569.3945 -7849.5137 8573.9609 -7857.5391 8577.7227 c
-7864.4512 8580.9639 -7867.1113 8583.5957 -7874.3862 8581.8262 c
-7877.687 8581.0293 -7879.0313 8580.5313 -7880.4351 8575.4551 C
-7881.9473 8569.2988 -7880.8672 8571.7832 -7881.084 8564.4385 c
-7881.2222 8559.6973 -7884 8548.4551 -7871.5254 8534.2598 C
-7871.4199 8534.1484 -7871.4336 8533.9961 -7871.5337 8533.9072 C
-7871.6328 8533.8027 -7871.7959 8533.8164 -7871.8862 8533.916 C
-7877.5786 8538.7168 -7881.0234 8545.6582 -7882.3145 8552.9424 c
-7883.2871 8558.4668 -7882.9199 8563.25 -7882.666 8569.6367 c
-7882.5688 8572.0938 -7883.6855 8579.0723 -7878.9102 8583.0625 c
-7875.3926 8586 -7870.3911 8585.5469 -7866.3545 8584.1563 c
-7860.6992 8582.2119 -7855.9727 8579.1465 -7850.8711 8575.6094 c
-7847.2656 8573.125 -7839.2881 8563.2852 -7838.4785 8562.3262 C
-7838.4351 8562.2588 -7838.4502 8562.1504 -7838.5313 8562.1094 C
b-7873.0503 8549.3057 m
-7872.168 8548.5029 -7871.7017 8549.8457 -7871.4297 8550.6016 c
-7871.1626 8551.3574 -7870.189 8551.25 -7870.5127 8551.5732 c
-7870.8369 8551.8975 -7870.8369 8551.9521 -7871.3232 8551.5195 c
-7871.8086 8551.0879 -7871.8086 8551.7363 -7872.5649 8551.25 c
-7873.3198 8550.7627 -7873.645 8549.8457 -7873.0503 8549.3057 c
b-7865.6519 8553.9492 m
-7865.3657 8553.5918 -7864.6802 8553.5723 -7864.4648 8553.8945 c
-7864.25 8554.2197 -7863.3306 8554.2734 -7863.4937 8554.5967 c
-7863.6543 8554.9219 -7863.6016 8555.1387 -7864.0874 8554.9219 c
-7864.5737 8554.7051 -7864.4121 8555.2998 -7864.897 8555.084 c
-7865.3833 8554.8672 -7865.8687 8554.2197 -7865.6519 8553.9492 c
b-7857.6074 8559.0791 m
-7857.1206 8558.7559 -7855.8794 8559.5117 -7856.4727 8559.5117 c
-7857.0674 8559.5117 -7856.311 8560.2676 -7856.8521 8560.4834 c
-7857.3906 8560.6992 -7857.2832 8560.4297 -7857.6074 8560.6445 c
-7857.9297 8560.8613 -7858.3633 8561.2393 -7858.5239 8560.4297 c
-7858.6855 8559.6191 -7858.3633 8559.6191 -7857.9849 8559.3496 c
-7857.6074 8559.0791 -7857.6074 8559.0791 y
b-7872.2402 8559.3496 m
-7871.1074 8559.2422 -7871.8633 8559.998 -7871.269 8560.4834 c
-7870.6738 8560.9697 -7869.918 8561.6172 -7870.729 8561.4004 c
-7871.5391 8561.1855 -7872.9961 8561.6719 -7872.9434 8560.5381 c
-7872.8887 8559.4033 -7872.6328 8559.3867 -7872.2402 8559.3496 c
b-7866.5703 8567.6113 m
-7866.1016 8567.3438 -7866.6802 8567.7197 -7866.0303 8567.6113 c
-7865.3833 8567.5039 -7864.7886 8567.6113 -7865.2207 8567.8281 c
-7865.6519 8568.0439 -7866.3008 8568.1523 -7866.4634 8567.9893 c
-7866.625 8567.8281 -7866.9473 8567.8281 -7866.5703 8567.6113 c
b-7857.0674 8567.1797 m
-7857.4785 8566.1797 -7856.0962 8566.4238 -7855.4473 8566.7461 c
-7854.7998 8567.0723 -7853.8262 8566.4775 -7854.4209 8566.9102 c
-7855.0137 8567.3418 -7854.7998 8566.9102 -7855.3926 8567.2334 c
-7855.9873 8567.5566 -7856.6895 8568.0977 -7857.0674 8567.1797 c
b-7872.6738 8573.0664 m
-7872.7222 8572.0752 -7871.8086 8572.957 -7871.269 8573.0117 c
-7870.729 8573.0664 -7870.0801 8573.0664 -7870.2432 8573.2813 c
-7870.4038 8573.498 -7870.459 8573.498 -7871.1626 8573.7129 c
-7871.8633 8573.9297 -7872.6191 8574.1445 -7872.6738 8573.0664 c
b-7873.1582 8567.6113 m
-7874.0664 8567.9746 -7874.293 8567.8809 -7874.5625 8568.2051 c
-7874.834 8568.5293 -7875.1558 8569.2314 -7875.5352 8568.0977 c
-7875.9121 8566.9629 -7875.4282 8565.7764 -7875.0479 8565.9375 c
-7874.6714 8566.0996 -7874.293 8566.7461 -7873.8618 8566.9629 c
-7873.4297 8567.1797 -7872.6191 8567.3945 -7873.1582 8567.6113 c
bUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7803 8586 L
-7803 8481 L
-7884 8481 L
-7884 8586 L
nuuu0 O
0 0 0 1 k
-7865.8057 8498.4258 m
-7866.0742 8496.6621 -7867.1602 8495.291 -7868.5239 8495.3965 c
-7869.8862 8495.502 -7870.707 8497.0234 -7870.7432 8498.8066 c
-7870.748 8499.0693 -7870.6743 8500.2441 -7870.6304 8500.4775 C
-7870.6382 8500.582 -7870.6191 8500.6738 -7870.6104 8500.7803 c
-7870.5142 8502.0254 -7869.3574 8503.3604 -7867.9414 8503.25 c
-7866.5249 8503.1406 -7865.4897 8501.8613 -7865.6367 8500.4727 c
-7865.644 8500.4072 -7865.6958 8499.626 -7865.707 8499.5625 C
-7865.6816 8499.2852 -7865.7598 8498.7256 -7865.8057 8498.4258 c
f-7876.2646 8507.7334 m
-7876.9946 8515.916 -7871.5015 8515.1191 v
-7868.3682 8514.0186 -7869.4414 8511.1211 v
-7869.6426 8509.752 -7871.7847 8508.498 v
-7872.146 8508.25 -7872.7632 8507.1016 v
-7873.1294 8505.5977 -7874.5186 8505.2979 v
-7876.0762 8505.251 -7876.2646 8507.7334 v
f-7850.7646 8516.4971 m
F-7850.0762 8514.3408 m
-7850.7847 8513.1934 -7853.8848 8513.6279 Y
-7854.811 8513.6885 -7855.3799 8513.1113 Y
-7857.8394 8509.0918 -7861.0386 8509.8857 -7861.4082 8509.9932 C
-7861.4097 8509.9863 L
-7864.999 8510.6045 -7865.2666 8515.6035 V
-7865.4912 8516.3828 -7866.335 8516.7695 V
-7869.2695 8517.8613 -7869.3481 8519.208 V
-7869.8999 8521.1152 -7867.6006 8521.7422 V
-7865.6792 8522.2568 -7863.7886 8519.8945 V
-7862.6113 8518.6797 -7859.5762 8517.9395 V
-7859.5728 8517.9531 L
-7856.3594 8517.0459 -7854.6392 8517.5889 Y
-7851.8521 8518.7676 -7850.4063 8517.4014 Y
-7848.6826 8515.7559 -7850.0762 8514.3408 Y
f-7863.9834 8497.8789 m
-7864.5854 8496.2002 -7864.2822 8494.4775 -7863.0327 8493.9229 c
-7861.7842 8493.3672 -7860.3384 8494.3164 -7859.4585 8495.8672 c
-7859.3286 8496.0957 -7858.8359 8497.165 -7858.7632 8497.3906 C
-7858.7065 8497.4785 -7858.6792 8497.5684 -7858.6362 8497.667 c
-7858.1289 8498.8086 -7858.5122 8500.5303 -7859.8105 8501.1074 c
-7861.1089 8501.6855 -7862.6279 8501.0527 -7863.1582 8499.7617 c
-7863.1831 8499.7002 -7863.5078 8498.9883 -7863.5298 8498.9268 C
-7863.6831 8498.6963 -7863.8809 8498.166 -7863.9834 8497.8789 c
f-7849.7129 8500.9316 m
-7845.1802 8507.7822 -7850.3911 8509.6943 v
-7853.6714 8510.2168 -7854.103 8507.1572 v
-7854.5786 8505.8564 -7853.29 8503.7354 v
-7853.0903 8503.3447 -7853.0938 8502.04 v
-7853.4858 8500.5449 -7852.4082 8499.6182 v
-7851.0591 8498.8359 -7849.7129 8500.9316 v
fUu-7824.7358 8550.1074 m
-7824.3687 8548.3623 -7824.9048 8546.6963 -7826.2183 8546.3164 c
-7827.5322 8545.9375 -7828.8345 8547.0752 -7829.4937 8548.7324 c
-7829.5903 8548.9775 -7829.9326 8550.1025 -7829.9746 8550.3369 C
-7830.0176 8550.4326 -7830.0322 8550.5244 -7830.0625 8550.6279 c
-7830.4087 8551.8271 -7829.7935 8553.4805 -7828.4282 8553.875 c
-7827.063 8554.2695 -7825.645 8553.4365 -7825.2969 8552.085 c
-7825.2793 8552.0205 -7825.0552 8551.2705 -7825.0425 8551.207 C
-7824.9214 8550.9551 -7824.7983 8550.4053 -7824.7358 8550.1074 c
f-7838.2705 8554.6172 m
-7841.8242 8562.0244 -7836.3999 8563.2061 v
-7833.0801 8563.2754 -7833.0688 8560.1846 v
-7832.7778 8558.8311 -7834.3433 8556.9072 v
-7834.5942 8556.5459 -7834.7695 8555.2539 v
-7834.5854 8553.7188 -7835.7793 8552.9492 v
-7837.2222 8552.3594 -7838.2705 8554.6172 v
f-7817.4648 8571.7695 m
F-7816.063 8569.9912 m
-7816.3247 8568.6689 -7819.3799 8567.9883 Y
-7820.27 8567.7197 -7820.5986 8566.9795 Y
-7821.4922 8562.3535 -7824.7666 8561.9746 -7825.1494 8561.9453 C
-7825.1494 8561.9395 L
-7828.7271 8561.2588 -7830.731 8565.8467 V
-7831.2153 8566.4961 -7832.1416 8566.5625 V
-7835.272 8566.5557 -7835.8169 8567.7891 V
-7837.0039 8569.3809 -7835.0713 8570.7764 V
-7833.4526 8571.9316 -7830.853 8570.3818 V
-7829.3242 8569.6582 -7826.2222 8570.0293 V
-7826.2231 8570.042 L
-7822.896 8570.3213 -7821.4766 8571.4326 Y
-7819.2793 8573.5146 -7817.4463 8572.7432 Y
-7815.2554 8571.8057 -7816.063 8569.9912 Y
f-7822.8374 8550.2354 m
-7822.813 8548.4512 -7821.9258 8546.9453 -7820.5601 8546.8633 c
-7819.1943 8546.7803 -7818.1743 8548.1768 -7817.895 8549.9385 c
-7817.854 8550.1973 -7817.7666 8551.3711 -7817.7778 8551.6094 C
-7817.7559 8551.7109 -7817.7617 8551.8037 -7817.7559 8551.9121 c
-7817.6807 8553.1592 -7818.644 8554.6367 -7820.0625 8554.7217 c
-7821.4814 8554.8066 -7822.6826 8553.6826 -7822.7246 8552.2871 c
-7822.7271 8552.2217 -7822.7822 8551.4404 -7822.7798 8551.375 C
-7822.8433 8551.1045 -7822.8423 8550.54 -7822.8374 8550.2354 c
f-7811.0186 8557.5625 m
-7809.1777 8565.5684 -7814.7271 8565.5303 v
-7817.9834 8564.8691 -7817.3154 8561.8516 v
-7817.3032 8560.4668 -7815.353 8558.9326 v
-7815.0278 8558.6377 -7814.5742 8557.415 v
-7814.417 8555.876 -7813.083 8555.3877 v
-7811.5454 8555.1279 -7811.0186 8557.5625 v
fUU1 Ap
-7884 8586 m
-7884 8481 L
-7803 8481 L
-7803 8586 L
-7884 8586 L
nUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8543.918 m
-7885 8587 L
-7798.2217 8587 L
-7798.2217 8543.918 L
-7885 8543.918 L
nuu0 O
0 0 0 1 k
-7825.2217 8573.2363 m
-7825.2217 8581.0742 L
-7813.2217 8574.1445 L
-7801.2217 8567.2168 L
-7813.2217 8560.2891 L
-7825.2217 8553.3613 L
-7825.2217 8561.4824 L
-7883.9351 8547.7168 L
-7870.9878 8566.8027 L
-7885 8587 L
-7825.2217 8573.2363 L
f0 1 1 0.1 k
0 R
0 0 0 1 K
-7823.2217 8570.2363 m
-7823.2217 8578.0742 L
-7811.2217 8571.1445 L
-7799.2217 8564.2168 L
-7811.2217 8557.2891 L
-7823.2217 8550.3613 L
-7823.2217 8558.4824 L
-7881.9351 8544.7168 L
-7867.2754 8564.3594 L
-7881.9351 8584 L
-7823.2217 8570.2363 L
bUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7726.3994 8587 m
-7726.3994 8573.4199 L
-7885 8573.4199 L
-7885 8587 L
-7726.3994 8587 L
nuu0 O
0.285 0.228 0.171 0 k
-7741.0786 8585.4844 m
-7741.043 8586.6895 L
-7727.5103 8587.5176 -7726.8418 8586.2822 v
-7726.7441 8586.1016 -7726.647 8585.7148 -7726.561 8585.1934 C
-7728.584 8585.8242 -7738.291 8585.5713 -7741.0786 8585.4844 C
f0.44 0.352 0.264 0 k
-7741.4063 8574.0234 m
-7741.3711 8575.2676 L
-7738.4912 8575.0488 -7728.1914 8574.3164 -7726.543 8574.8652 C
-7726.7031 8574.2188 -7726.9199 8573.7646 -7727.2046 8573.6152 c
-7728.8306 8572.7656 -7741.4063 8574.0234 Y
f0.145 0.116 0.087 0 k
-7741.3711 8575.2676 m
-7741.0786 8585.4844 L
-7738.291 8585.5713 -7728.584 8585.8242 -7726.561 8585.1934 C
-7726.1519 8582.7773 -7725.9258 8577.3604 -7726.543 8574.8652 C
-7728.1914 8574.3164 -7738.4912 8575.0488 -7741.3711 8575.2676 C
fUu0.155 0.124 0.093 0 k
-7766.9375 8579.2734 m
-7765.897 8579.6563 L
-7747.0728 8575.1465 L
-7747.481 8574.3145 L
-7766.3633 8576.7246 L
-7767.252 8577.0059 L
-7767.6504 8576.8936 -7768.1934 8576.8242 V
-7767.6094 8577.2373 -7767.1426 8578.1406 -7766.9375 8579.2734 C
fu0.085 0.068 0.051 0 k
-7771.7993 8583.666 m
-7772.5977 8583.7217 -7769.749 8583.6641 Y
-7770.3481 8583.0176 -7770.771 8581.8203 -7770.8105 8580.4375 c
-7770.8169 8580.2246 -7770.8105 8580.0176 -7770.7993 8579.8135 C
-7771.041 8579.707 -7771.0918 8579.7734 -7771.6289 8579.5645 C
-7771 8583.6113 -7771.7993 8583.666 v
f0.305 0.244 0.183 0 k
-7770.3442 8576.8672 m
-7770.5527 8576.8105 -7770.4937 8578.9307 Y
-7769.4785 8579.7588 L
-7767.8359 8578.9434 L
-7766.9375 8579.2734 L
-7767.1426 8578.1406 -7767.6094 8577.2373 -7768.1934 8576.8242 C
-7768.6094 8576.7715 -7769.874 8576.7998 -7770.3442 8576.8672 C
fU0.115 0.092 0.069 0 k
-7766.9375 8579.2734 m
-7767.8359 8578.9434 L
-7769.4785 8579.7588 L
-7770.4937 8578.9307 L
-7770.793 8579.708 -7770.7993 8579.8135 V
-7769.5137 8580.3789 -7768.1831 8580.7402 -7766.8398 8580.9258 C
-7766.79 8580.7275 -7766.7842 8580.543 -7766.79 8580.3369 c
-7766.7998 8579.9717 -7766.8218 8579.6182 -7766.9375 8579.2734 C
f0.41 0.328 0.246 0 k
-7747.4512 8575.3965 m
-7749.377 8576.6426 -7758.3862 8582.0986 -7766.8398 8580.9258 C
-7766.9038 8582.0928 -7767.248 8583.0908 -7767.75 8583.6631 C
-7767.1895 8583.6621 L
-7746.7402 8586.7559 L
-7747.0366 8576.4258 L
-7747.0728 8575.1465 L
-7747.2046 8575.2373 -7747.4512 8575.3965 v
f0.395 0.316 0.237 0 k
-7770.8105 8580.4375 m
-7770.771 8581.8203 -7770.3481 8583.0176 -7769.749 8583.6641 C
-7767.6807 8583.6631 L
-7767.1782 8583.0908 -7766.8218 8582.0713 -7766.8398 8580.9258 C
-7768.1831 8580.7402 -7769.5137 8580.3789 -7770.7993 8579.8135 C
-7770.8105 8580.0176 -7770.8169 8580.2246 -7770.8105 8580.4375 c
fUu0 0 0 0.11 k
-7741.2642 8574.2012 m
-7740.2407 8574.0352 L
-7741.2642 8574.2012 L
-7741.2642 8574.2012 L
f0 0 0 0.34 k
-7747.481 8574.3145 m
-7747.0728 8575.1465 L
-7745.6714 8574.918 L
-7744.5234 8574.7314 L
-7742.6758 8574.4307 L
-7741.2642 8574.2012 L
-7740.2407 8574.0352 L
-7740.2954 8573.7168 -7740.3672 8573.498 -7740.4648 8573.4199 C
-7747.481 8574.3145 L
f0 0 0 0.32 k
-7745.8042 8579.207 m
-7746.041 8586.8613 L
-7740.7144 8587 L
-7739.7266 8583.5146 -7740.1816 8579.1543 V
-7745.8042 8579.207 L
fU0.025 0.02 0.015 0 k
-7739.3223 8576.3848 m
-7736.373 8576.9199 -7733.2402 8577.1602 -7730.3159 8576.3613 c
-7730.2856 8576.3496 -7730.2754 8576.3184 -7730.2871 8576.2969 c
-7730.2881 8576.2656 -7730.3198 8576.2559 -7730.3418 8576.2559 c
-7733.2422 8577.0645 -7736.375 8576.8242 -7739.3042 8576.2783 c
-7739.3262 8576.2793 -7739.3574 8576.291 -7739.3672 8576.3223 c
-7739.3662 8576.3438 -7739.355 8576.375 -7739.3223 8576.3848 c
-7739.3223 8576.3848 l
f-7737.8374 8575.3076 m
-7737.7295 8575.3789 -7737.6313 8575.4941 -7737.5234 8575.502 c
-7733.7886 8575.832 -7730.1631 8575.7813 -7726.4746 8575.6641 c
-7726.4526 8575.6641 -7726.4209 8575.6426 -7726.4214 8575.6211 c
-7726.4214 8575.5879 -7726.4551 8575.5684 -7726.4766 8575.5684 c
-7729.3223 8575.6816 -7732.1401 8575.6992 -7735.0039 8575.5352 c
-7735.9336 8575.4766 -7736.9082 8575.7402 -7737.7778 8575.2207 c
-7737.7993 8575.2109 -7737.8306 8575.2109 -7737.8506 8575.2334 c
-7737.8618 8575.2559 -7737.8594 8575.2871 -7737.8374 8575.3076 c
-7737.8374 8575.3076 l
f-7733.373 8577.3672 m
-7731.5098 8578.6797 -7729.3022 8579.374 -7727.1001 8579.8867 c
-7727.0679 8579.8965 -7727.0474 8579.8848 -7727.0366 8579.8535 c
-7727.0273 8579.8203 -7727.0488 8579.8008 -7727.0703 8579.79 c
-7729.2617 8579.2656 -7731.459 8578.6035 -7733.3105 8577.2803 c
-7733.3433 8577.2598 -7733.375 8577.2715 -7733.3848 8577.293 c
-7733.4058 8577.3145 -7733.3945 8577.3457 -7733.373 8577.3672 c
-7733.373 8577.3672 l
f-7738.9321 8584.0566 m
-7736.7295 8584.5703 -7734.5298 8585.0303 -7732.2798 8585.2754 c
-7732.2598 8585.2852 -7732.229 8585.2637 -7732.229 8585.2422 c
-7732.2183 8585.209 -7732.2407 8585.1777 -7732.2729 8585.1787 c
-7734.5122 8584.8809 -7736.7305 8584.5176 -7738.9126 8583.9502 c
-7738.9351 8583.9512 -7738.9673 8583.9629 -7738.9766 8583.9941 c
-7738.9751 8584.0156 -7738.9648 8584.0479 -7738.9321 8584.0566 c
-7738.9321 8584.0566 l
f-7738.439 8583.3604 m
-7736.3457 8584.1973 -7734.1016 8583.9297 -7731.9023 8583.9629 c
-7731.8706 8583.9609 -7731.8496 8583.9395 -7731.8506 8583.9082 c
-7731.8521 8583.875 -7731.873 8583.8555 -7731.8945 8583.8555 c
-7734.0928 8583.8438 -7736.3374 8584.0996 -7738.4209 8583.2529 c
-7738.4434 8583.2539 -7738.4746 8583.2656 -7738.4834 8583.2969 c
-7738.4834 8583.3184 -7738.4722 8583.3506 -7738.439 8583.3604 c
-7738.439 8583.3604 l
f-7737.707 8584.7051 m
-7736.3833 8584.752 -7735.1504 8584.5469 -7733.8271 8584.209 c
-7733.3594 8584.0996 -7732.9199 8584.2266 -7732.4609 8584.2129 c
-7731.897 8584.1973 l
-7731.874 8584.1963 -7731.8633 8584.1855 -7731.8535 8584.1738 c
-7731.834 8584.1523 -7731.8442 8584.1211 -7731.8662 8584.0996 c
-7732.0625 8583.9453 l
-7732.0742 8583.9453 -7732.085 8583.9355 -7732.0962 8583.9355 c
-7732.5 8583.9473 l
-7733.9551 8584.1914 -7735.457 8584.6719 -7736.8926 8584.0742 c
-7736.9258 8584.0645 -7736.957 8584.0859 -7736.9673 8584.1074 c
-7736.9673 8584.1396 -7736.9551 8584.1602 -7736.9336 8584.1709 c
-7735.647 8584.6992 -7734.1714 8584.4756 -7732.8818 8584.0547 c
-7732.0918 8584.043 L
-7732.124 8584.0332 L
-7731.9282 8584.1875 L
-7731.8984 8584.0898 L
-7732.4639 8584.1064 l
-7732.9321 8584.1406 -7733.3848 8583.9834 -7733.8398 8584.1035 c
-7735.1543 8584.4609 -7736.3975 8584.625 -7737.71 8584.5986 c
-7737.7422 8584.5996 -7737.7642 8584.6211 -7737.7617 8584.6533 c
-7737.7617 8584.6855 -7737.7402 8584.7061 -7737.707 8584.7051 c
-7737.707 8584.7051 l
f-7738.5718 8585.0605 m
-7735.8711 8586.2207 -7732.9023 8585.5703 -7730.1279 8585.1816 c
-7729.7832 8585.2891 l
-7729.7617 8585.2988 -7729.7417 8585.2871 -7729.7207 8585.2656 c
-7729.71 8585.2441 -7729.7217 8585.2129 -7729.7422 8585.2021 c
-7730.0801 8585.0098 l
-7732.7754 8584.3926 -7735.5391 8584.7813 -7738.271 8584.7852 c
-7738.3022 8584.7871 -7738.3232 8584.8086 -7738.3223 8584.8398 c
-7738.3198 8584.8721 -7738.2983 8584.8926 -7738.2681 8584.8926 c
-7735.6738 8584.9355 -7733.0303 8584.4434 -7730.4727 8585.0742 c
-7729.7954 8585.2891 L
-7729.7534 8585.1914 L
-7730.1406 8585.0859 l
-7732.9058 8585.4424 -7735.8418 8586.1348 -7738.5313 8584.9746 c
-7738.5537 8584.9648 -7738.585 8584.9648 -7738.5962 8584.998 c
-7738.6055 8585.0195 -7738.605 8585.0508 -7738.5718 8585.0605 c
-7738.5718 8585.0605 l
f-7735.6895 8578.3945 m
-7734.3945 8578.9004 -7732.9834 8578.6465 -7731.6802 8578.3438 c
-7731.647 8578.3418 -7731.6367 8578.3203 -7731.6382 8578.2891 c
-7731.6504 8578.2568 -7731.6714 8578.2461 -7731.7031 8578.248 c
-7732.998 8578.5303 -7734.377 8578.8154 -7735.6504 8578.2969 c
-7735.6826 8578.2871 -7735.7144 8578.2988 -7735.7246 8578.3311 c
-7735.7222 8578.3525 -7735.7114 8578.3848 -7735.6895 8578.3945 c
-7735.6895 8578.3945 l
f-7736.1401 8580.2207 m
-7734.2266 8580.6895 -7732.3145 8581.1035 -7730.355 8581.3242 c
-7730.3242 8581.334 -7730.3022 8581.3125 -7730.293 8581.2803 c
-7730.2954 8581.2598 -7730.3159 8581.2285 -7730.3374 8581.2285 c
-7732.2959 8581.0078 -7734.209 8580.582 -7736.1206 8580.1133 c
-7736.1426 8580.1152 -7736.1738 8580.126 -7736.1831 8580.1582 c
-7736.1831 8580.1797 -7736.1719 8580.2109 -7736.1401 8580.2207 c
-7736.1401 8580.2207 l
f-7736.9336 8582.6348 m
-7734.499 8583.4609 -7731.8647 8583.0547 -7729.3457 8583.0879 c
-7729.313 8583.0879 -7729.293 8583.0664 -7729.293 8583.0332 c
-7729.2954 8583.0117 -7729.3159 8582.9922 -7729.3481 8582.9922 c
-7731.8574 8582.916 -7734.481 8583.3848 -7736.8945 8582.5264 c
-7736.9282 8582.5273 -7736.959 8582.5391 -7736.9688 8582.5605 c
-7736.9678 8582.5918 -7736.9561 8582.624 -7736.9336 8582.6348 c
-7736.9336 8582.6348 l
f-7732.0542 8583.8496 m
-7730.6582 8584.5449 -7729.0503 8584.4033 -7727.5342 8584.4668 c
-7727.502 8584.4648 -7727.4824 8584.4434 -7727.4824 8584.4121 c
-7727.4834 8584.3906 -7727.5054 8584.3594 -7727.5366 8584.3594 c
-7729.0137 8584.2207 -7730.6489 8584.5234 -7732.0039 8583.7617 c
-7732.0366 8583.7529 -7732.0679 8583.7637 -7732.0786 8583.7861 c
-7732.0879 8583.8076 -7732.0767 8583.8398 -7732.0542 8583.8496 c
-7732.0542 8583.8496 l
f-7731.3418 8580.4248 m
-7730.3926 8580.3975 -7729.4336 8580.3701 -7728.4839 8580.3428 c
-7728.4526 8580.3418 -7728.4312 8580.3203 -7728.4336 8580.2881 c
-7728.4336 8580.2559 -7728.4551 8580.2354 -7728.4878 8580.2363 c
-7729.437 8580.2637 -7730.397 8580.291 -7731.3457 8580.3184 c
-7731.377 8580.3184 -7731.3975 8580.3418 -7731.3975 8580.373 c
-7731.397 8580.4043 -7731.374 8580.4258 -7731.3418 8580.4248 c
-7731.3418 8580.4248 l
f-7729.1592 8578.0361 m
-7728.6895 8578.0645 -7728.209 8578.0723 -7727.7383 8578.0918 c
-7727.7168 8578.0908 -7727.6855 8578.0684 -7727.6865 8578.0371 c
-7727.687 8578.0039 -7727.71 8577.9844 -7727.7417 8577.9844 c
-7728.2114 8577.9873 -7728.6816 8577.9375 -7729.1514 8577.9395 c
-7729.1831 8577.9297 -7729.2031 8577.9512 -7729.2134 8577.9844 c
-7729.2129 8578.0156 -7729.1914 8578.0371 -7729.1592 8578.0361 c
-7729.1592 8578.0361 l
f-7736.9702 8580.2344 m
-7736.5688 8580.5107 -7736.125 8580.6797 -7735.645 8580.751 c
-7735.6113 8580.7607 -7735.5918 8580.7383 -7735.5806 8580.7168 c
-7735.5703 8580.6855 -7735.5928 8580.6543 -7735.6152 8580.6543 c
-7736.0854 8580.5723 -7736.5176 8580.4023 -7736.9209 8580.1475 c
-7736.9521 8580.1377 -7736.9849 8580.1387 -7736.9946 8580.1709 c
-7737.0039 8580.1934 -7736.9922 8580.2246 -7736.9702 8580.2344 c
-7736.9702 8580.2344 l
f-7738.1904 8586.085 m
-7735.7344 8586.5273 -7733.2983 8587.001 -7730.7993 8586.7266 c
-7730.7778 8586.7266 -7730.7568 8586.7041 -7730.7578 8586.6719 c
-7730.7578 8586.6406 -7730.7798 8586.6191 -7730.8022 8586.6191 c
-7733.291 8586.873 -7735.7344 8586.4844 -7738.1719 8585.9775 c
-7738.1934 8585.9785 -7738.2256 8585.9902 -7738.2344 8586.0215 c
-7738.2344 8586.043 -7738.2222 8586.0752 -7738.1904 8586.085 c
-7738.1904 8586.085 l
f0.195 0.156 0.117 0 k
-7738.166 8574.6445 m
-7735.7969 8574.2676 -7733.4058 8574.3477 -7731.0298 8574.5898 c
-7730.998 8574.5879 -7730.9766 8574.5664 -7730.9766 8574.5352 c
-7730.9785 8574.5137 -7731 8574.4824 -7731.0215 8574.4824 c
-7733.4082 8574.2422 -7735.791 8574.1602 -7738.1694 8574.5391 c
-7738.2026 8574.5391 -7738.2222 8574.5605 -7738.2217 8574.5938 c
-7738.2207 8574.625 -7738.1992 8574.6465 -7738.166 8574.6445 c
-7738.166 8574.6445 l
f0.335 0.268 0.201 0 k
-7737.4351 8574.1113 m
-7734.9282 8574.1152 -7732.4146 8574.2773 -7729.918 8573.8965 c
-7729.8862 8573.8945 -7729.8647 8573.873 -7729.8662 8573.8418 c
-7729.8672 8573.8086 -7729.8896 8573.7891 -7729.9209 8573.7891 c
-7732.418 8574.1699 -7734.9297 8574.0293 -7737.4375 8574.0059 c
-7737.46 8574.0059 -7737.481 8574.0273 -7737.4785 8574.0596 c
-7737.4785 8574.0918 -7737.457 8574.1123 -7737.4351 8574.1113 c
-7737.4351 8574.1113 l
f0.205 0.164 0.123 0 k
-7738.9766 8574.3262 m
-7737.5039 8574.668 -7736.0078 8574.4023 -7734.5391 8574.2207 c
-7734.5078 8574.2207 -7734.4873 8574.1973 -7734.499 8574.166 c
-7734.5 8574.1348 -7734.5215 8574.1133 -7734.5537 8574.125 c
-7736.0103 8574.2842 -7737.4961 8574.583 -7738.9473 8574.2188 c
-7738.9785 8574.2207 -7739.0103 8574.2324 -7739.0098 8574.2637 c
-7739.019 8574.2852 -7738.998 8574.3164 -7738.9766 8574.3262 c
-7738.9766 8574.3262 l
f-7732.3535 8573.7949 m
-7731.1978 8573.9219 -7730.0273 8573.8145 -7728.8926 8573.5898 c
-7728.8711 8573.5781 -7728.8506 8573.5566 -7728.8618 8573.5244 c
-7728.8623 8573.5029 -7728.8945 8573.4824 -7728.916 8573.4941 c
-7730.0503 8573.7402 -7731.1914 8573.7939 -7732.3462 8573.6885 c
-7732.3794 8573.6895 -7732.3984 8573.7109 -7732.4087 8573.7324 c
-7732.4082 8573.7646 -7732.3862 8573.7852 -7732.3535 8573.7949 c
-7732.3535 8573.7949 l
f0.335 0.268 0.201 0 k
-7739.2681 8576.4473 m
-7737.9214 8577.1885 -7736.3066 8576.5977 -7734.855 8576.6416 c
-7734.8223 8576.6406 -7734.8022 8576.6191 -7734.8022 8576.5859 c
-7734.8042 8576.5654 -7734.8262 8576.5449 -7734.8574 8576.5449 c
-7736.2886 8576.4902 -7737.8823 8577.0801 -7739.2168 8576.3506 c
-7739.2383 8576.3398 -7739.2695 8576.3516 -7739.291 8576.374 c
-7739.3008 8576.3955 -7739.2886 8576.4277 -7739.2681 8576.4473 c
-7739.2681 8576.4473 l
f-7737.8945 8578.5645 m
-7735.6719 8579.0449 -7733.3896 8578.6162 -7731.1504 8578.5625 c
-7731.1177 8578.5615 -7731.0977 8578.5391 -7731.0977 8578.5078 c
-7731.1001 8578.4863 -7731.1318 8578.4668 -7731.1519 8578.4668 c
-7733.3833 8578.4775 -7735.6519 8578.9805 -7737.875 8578.457 c
-7737.8975 8578.457 -7737.9287 8578.4688 -7737.9375 8578.502 c
-7737.9375 8578.5225 -7737.9258 8578.5547 -7737.8945 8578.5645 c
-7737.8945 8578.5645 l
f-7732.0273 8575.1406 m
-7730.3496 8575.9688 -7728.499 8576.502 -7726.603 8576.3613 c
-7726.5718 8576.3613 -7726.5513 8576.3389 -7726.5527 8576.3066 c
-7726.5527 8576.2754 -7726.5742 8576.2539 -7726.6074 8576.2559 c
-7728.481 8576.416 -7730.3198 8575.8604 -7731.9873 8575.0547 c
-7732.0078 8575.0449 -7732.041 8575.0449 -7732.0503 8575.0781 c
-7732.061 8575.0996 -7732.061 8575.1309 -7732.0273 8575.1406 c
-7732.0273 8575.1406 l
fu0.5 0.85 1 0.45 k
-7885 8581.9082 m
-7885.0254 8582.4883 -7884.5664 8583.1875 -7883.167 8583.9902 C
-7882.8521 8584.0029 -7881.3945 8584.0234 -7879.0889 8584.0488 C
-7879.0889 8581.8223 L
-7881.1382 8581.8457 -7883.1177 8581.8867 -7885 8581.9082 C
f-7884.5088 8580.9688 m
-7879.0889 8580.8447 L
-7879.0889 8579.8145 L
-7882.644 8579.959 L
-7883.8145 8580.3301 -7884.5088 8580.9688 V
f0.5 0.85 1 0.32 k
-7879.0889 8580.8252 m
-7884.4746 8580.9434 L
-7884.7695 8581.2148 -7884.9849 8581.5566 -7885 8581.9277 C
-7883.1177 8581.9063 -7881.1382 8581.8848 -7879.0889 8581.8613 C
-7879.0889 8580.8252 L
f0.5 0.85 1 0.45 k
-7774.1504 8580.6172 m
-7852.3584 8581.541 -7879.1079 8581.8418 V
-7879.1079 8584.0488 L
-7862.8145 8584.2324 -7803.9902 8584.707 Y
-7769.749 8583.6641 L
-7770.457 8580.5684 L
-7774.1504 8580.6172 L
f0.5 0.85 1 0.12 k
-7879.1079 8579.8145 m
-7879.1079 8580.8447 L
-7770.4258 8579 L
-7770.3833 8576.8633 L
-7803.6553 8576.7129 L
-7879.1079 8579.8145 L
fu0.065 0.052 0.039 0 k
-7747.0728 8575.1465 m
-7747.0366 8576.4258 L
-7747.2954 8575.1172 L
-7765.897 8579.6563 L
-7766.9375 8579.2734 L
-7766.8794 8579.6055 -7766.8398 8579.957 -7766.8306 8580.3223 c
-7766.8242 8580.5283 -7766.8281 8580.7285 -7766.8398 8580.9258 C
-7758.3862 8582.0986 -7748.9634 8577.6719 -7747.0366 8576.4258 C
-7746.7402 8586.7559 L
-7746.041 8586.8613 L
-7745.8042 8579.207 L
-7740.1816 8579.1543 L
-7740.0898 8577.0137 -7740.0718 8575.0215 -7740.2407 8574.0352 C
-7747.0728 8575.1465 L
f0.4 0.7 1 0 k
-7770.457 8580.5879 m
-7770.4258 8578.9805 L
-7879.1079 8580.8252 L
-7879.1079 8581.8613 L
-7852.3584 8581.5605 -7770.457 8580.5879 Y
fUU0.025 0.02 0.015 0 k
-7734.7344 8583.0293 m
-7734.7344 8583.0625 -7734.7129 8583.082 -7734.6802 8583.082 c
-7731.6714 8583.1133 -7729.4214 8582.9453 -7726.415 8582.8594 C
-7726.4087 8582.7656 L
-7729.3262 8582.8701 -7731.7607 8583.0078 -7734.6841 8582.9746 C
-7734.7168 8582.9766 -7734.7358 8582.998 -7734.7344 8583.0293 C
f-7726.3994 8582.7656 m
-7726.4082 8582.7441 L
-7726.4087 8582.7656 L
-7726.4063 8582.7656 -7726.4033 8582.7656 -7726.3994 8582.7656 C
f-7730.4487 8581.4238 m
-7731.4458 8581.292 -7732.3394 8581.7656 -7733.2114 8582.1973 C
-7733.2441 8582.208 -7733.2534 8582.2402 -7733.2422 8582.2715 C
-7733.2305 8582.293 -7733.1982 8582.3027 -7733.1777 8582.291 c
-7732.3262 8581.8301 -7731.4312 8581.4199 -7730.4678 8581.5195 c
-7729.1079 8581.6621 -7727.9038 8582.375 -7726.5254 8582.4531 C
-7726.4463 8582.3594 L
-7728.04 8582.2656 -7728.8647 8581.623 -7730.4487 8581.4238 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7756.877 8586 L
-7756.877 8538.415 L
-7884 8538.415 L
-7884 8586 L
nu*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7857.793 8570.417 m
-7857.8232 8570.2676 L
-7859.9849 8564.3643 -7860.9438 8561.6377 -7861.2754 8560.2891 c
-7861.3657 8560.2891 L
-7861.6953 8561.6074 -7862.7754 8564.335 -7864.9673 8570.2676 c
-7864.9966 8570.417 L
-7857.793 8570.417 l
f1 D
-7868.1182 8578.9678 m
-7869.6191 8582.5371 -7870.3994 8584.709 -7868.1182 8584.917 c
-7868.1182 8585.9678 L
-7870.6992 8585.9375 -7873.5806 8585.917 -7876.3418 8585.917 c
-7880.0649 8585.917 -7882.5273 8585.9375 -7884 8585.9678 c
-7884 8584.917 L
-7882.1064 8584.709 -7881.0542 8582.5674 -7873.5513 8565.5029 c
-7861.6953 8538.415 L
-7859.8638 8538.415 L
-7848.1582 8565.5029 L
-7840.8047 8582.5078 -7839.7246 8584.709 -7837.8887 8584.917 c
-7837.8887 8585.9678 L
-7839.5142 8585.9375 -7841.916 8585.917 -7845.5767 8585.917 c
-7848.5488 8585.917 -7851.6694 8585.9375 -7854.7026 8585.9678 c
-7854.7026 8584.917 L
-7852.481 8584.709 -7853.3218 8582.5078 -7854.7617 8578.9678 C
-7868.1182 8578.9678 l
f*U
*u
0 D
-7813.0762 8554.0811 m
-7813.0762 8550.4717 -7815.3535 8548.0947 -7819.1294 8548.0947 c
-7820.2383 8548.0947 -7821.0767 8548.2158 -7821.5273 8548.2451 c
-7821.5273 8560.5479 L
-7820.8672 8560.6084 -7820.208 8560.6084 -7819.729 8560.6084 c
-7818.2002 8560.6084 -7816.7026 8560.127 -7815.6841 8559.4053 c
-7814.3945 8558.5332 -7813.0762 8556.7881 -7813.0762 8554.1416 C
-7813.0762 8554.0811 l
f1 D
-7832.0806 8558.3926 m
-7832.0806 8542.6445 -7832.0806 8540.4287 -7834.542 8540.2783 c
-7834.542 8539.3184 L
-7833.042 8539.2588 -7830.3174 8539.1992 -7827.5664 8539.1689 c
-7825.6538 8539.1084 -7822.3945 8539.0186 -7820.1479 8538.9775 c
-7816.582 8538.9775 -7813.585 8539.4258 -7811.0049 8540.2627 c
-7806.353 8541.8477 -7801.9702 8545.8525 -7801.9702 8553.6602 c
-7801.9702 8558.7432 -7804.4014 8562.3193 -7806.5034 8564.0605 c
-7807.583 8565.0215 -7808.8135 8565.832 -7809.7744 8566.3125 c
-7809.7744 8566.4629 L
-7807.5234 8569.4912 -7805.6025 8572.0625 -7799.3906 8580.6426 c
-7797.5 8583.0645 -7795.9102 8584.7383 -7794.7402 8584.9775 c
-7794.7402 8586 L
-7796.6602 8586 -7799 8585.8848 -7801.1294 8585.8848 c
-7803.3511 8585.8848 -7804.8521 8586 -7806.4424 8586 c
-7807.6729 8586 -7808.7241 8585.9404 -7809.5039 8585.2725 c
-7813.0151 8579.8477 -7816.9121 8573.7559 -7820.1182 8568.7139 c
-7820.5078 8568.7139 -7820.957 8568.7139 -7821.5273 8568.7139 c
-7821.5273 8571.2852 L
-7821.5273 8582.5264 -7821.437 8584.7686 -7819.1895 8584.9775 c
-7819.1895 8585.9697 L
-7820.6279 8585.9404 -7823.9194 8585.915 -7826.6992 8585.915 c
-7829.9287 8585.915 -7832.8921 8585.9404 -7834.5122 8585.9697 c
-7834.5122 8584.9775 L
-7832.0518 8584.7686 -7832.0806 8582.5264 -7832.0806 8565.5918 C
-7832.0806 8558.3926 l
f*U
*u
0 D
-7781.4561 8565.5928 m
-7781.4561 8582.4941 -7781.4561 8584.6484 -7784.2832 8584.9775 C
-7784.2832 8585.9697 l
-7782.3887 8585.9404 -7779.0542 8585.915 -7775.7822 8585.915 c
-7772.6294 8585.915 -7769.5688 8585.9404 -7767.2881 8585.9697 C
-7767.2881 8584.9775 l
-7770.2578 8584.9775 -7770.2881 8582.5244 -7770.2881 8565.5928 C
-7770.2881 8548.1514 L
-7762.8193 8548.1514 l
-7759.999 8548.1514 -7758.5298 8548.96 -7757.8994 8551.2627 C
-7756.9072 8551.2627 l
-7756.9072 8546.4697 -7756.877 8542.415 -7756.877 8539.1709 c
-7761.3486 8539.2012 -7766.748 8539.2314 -7772.0601 8539.2314 C
-7779.7446 8539.2314 l
-7784.5537 8539.2314 -7789.9966 8539.2012 -7794.9614 8539.1709 c
-7794.9614 8542.3848 -7794.9326 8546.4697 -7794.9326 8551.2627 C
-7793.9072 8551.2627 l
-7793.3657 8549.1094 -7791.771 8548.1514 -7788.9438 8548.1514 C
-7781.4561 8548.1514 l
-7781.4561 8565.5928 L
f*U
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7884.75 8563 m
-7884.75 8587 L
-7874.75 8587 L
-7874.75 8563 L
-7884.75 8563 L
n0 Ap
0 O
1 g
-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 c
-7877.5879 8565.2256 -7879.3198 8565.9346 -7880.7559 8567.0176 c
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 c
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.2319 8578.5996 -7883.3457 8580.0918 c
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
-7874.75 8565 L
f0 R
0 G
1 J 1 j 0.5 w-7874.75 8584.6816 m
-7877.7793 8583.7256 -7880.6074 8582.0674 -7883.3457 8580.0918 C
S-7874.75 8579.0488 m
-7877.8999 8576.6436 -7880.957 8573.9131 -7884.0942 8571.4639 C
S-7880.7559 8567.0176 m
-7878.6904 8568.1084 -7876.7017 8569.4668 -7874.75 8570.957 C
S-7875.6982 8565.0479 m
-7875.3809 8565.1309 -7875.063 8565.2148 -7874.75 8565.3145 C
S-7880.7559 8567.0176 m
-7879.3193 8565.9355 -7877.5879 8565.2256 -7875.6982 8565.0479 C
S-7884.0942 8571.4639 m
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.231 8578.5996 -7883.3457 8580.0918 C
S-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 C
S-7880.7559 8567.0176 m
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 C
S-7883.3457 8580.0918 m
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
SU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8569.9043 m
-7846.7305 8561.3408 L
-7885 8561.3408 L
-7885 8569.9043 L
-7846.7305 8569.9043 L
f-7846.7305 8573.0967 m
-7846.7305 8572.4229 L
-7885 8572.4229 L
-7885 8573.0967 L
-7846.7305 8573.0967 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8565.8262 m
-7846.7305 8574.3896 L
-7859.3408 8574.3896 L
-7859.3408 8587 L
-7867.9038 8587 L
-7867.9063 8565.8262 L
-7867.9038 8565.8262 L
-7867.9038 8565.8252 L
-7846.7305 8565.8262 L
f-7846.7305 8563.3076 m
-7870.4233 8563.3076 L
-7870.4233 8587 L
-7871.0967 8587 L
-7871.0977 8562.6328 L
-7846.7305 8562.6328 L
-7846.7305 8563.3076 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8586.999 m
-7885 8548.7285 L
-7846.7305 8548.7285 L
-7846.7305 8586.999 L
-7885 8586.999 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8561.3389 m
-7872.3896 8561.3389 L
-7872.3896 8586.999 L
-7863.8262 8587 L
-7863.8262 8569.9033 L
-7846.7305 8569.9033 L
-7846.7305 8561.3389 L
f-7846.7305 8572.4219 m
-7861.3081 8572.4219 L
-7861.3081 8587 L
-7860.6338 8587 L
-7860.6338 8573.0957 L
-7846.7305 8573.0957 L
-7846.7305 8572.4219 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.0625 8559.4609 m
-7884.6025 8559.4609 L
-7884.6025 8587 L
-7857.0625 8587 L
-7857.0625 8559.4609 L
n0 O
0 0.55 1 0.12 k
-7856.8418 8572.7002 m
-7885 8572.7002 L
-7885 8573.8252 L
-7856.8418 8573.8252 L
-7856.8418 8572.7002 L
fu0 0.55 1 0.3 k
-7883.9814 8560.5215 m
-7884.4102 8562.5254 -7883.1865 8566.1514 -7880.0874 8569.251 c
-7876.9878 8572.3496 -7873.3457 8573.6602 -7871.3594 8573.1455 C
-7871.3594 8573.1455 L
-7870.875 8571.1895 -7872.1519 8567.5117 -7875.25 8564.4141 c
-7878.3457 8561.3184 -7882.0122 8560.1064 -7883.9814 8560.5215 C
f0 0.39 0.7 0.12 k
-7883.9814 8585.9912 m
-7884.4102 8583.9883 -7883.1865 8580.3613 -7880.0874 8577.2617 c
-7876.9878 8574.1641 -7873.3457 8572.8535 -7871.3594 8573.3672 C
-7871.3594 8573.3672 L
-7870.875 8575.3242 -7872.1519 8579.001 -7875.25 8582.0996 c
-7878.3457 8585.1953 -7882.0122 8586.4063 -7883.9814 8585.9912 C
fUu0 0.55 1 0.3 k
-7870.1782 8585.9912 m
-7870.6074 8583.9883 -7869.3838 8580.3613 -7866.2842 8577.2617 c
-7863.1855 8574.1641 -7859.543 8572.8535 -7857.5576 8573.3672 C
-7857.5566 8573.3672 L
-7857.0718 8575.3242 -7858.3496 8579.001 -7861.4473 8582.0996 c
-7864.543 8585.1953 -7868.209 8586.4063 -7870.1782 8585.9912 C
f0 0.39 0.7 0.12 k
-7870.1782 8560.5215 m
-7870.6074 8562.5254 -7869.3838 8566.1514 -7866.2842 8569.251 c
-7863.1855 8572.3496 -7859.543 8573.6602 -7857.5576 8573.1455 C
-7857.5566 8573.1455 L
-7857.0718 8571.1895 -7858.3496 8567.5117 -7861.4473 8564.4141 c
-7864.543 8561.3184 -7868.209 8560.1064 -7870.1782 8560.5215 C
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.4609 m
-7885 8559.4609 L
-7885 8587 L
-7857.4609 8587 L
-7857.4609 8559.4609 L
n0 O
0 0.55 1 0.3 k
-7875.4233 8573.252 m
-7874.3096 8571.5313 -7870.8809 8569.833 -7866.4966 8569.833 c
-7862.1152 8569.833 -7858.6138 8571.4824 -7857.5718 8573.25 C
-7857.5718 8573.25 L
-7858.6138 8574.9766 -7862.1152 8576.6738 -7866.4966 8576.6738 c
-7870.875 8576.6738 -7874.3242 8574.9375 -7875.4233 8573.252 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.9521 8584.3125 m
-7776.7954 8584.3125 L
-7776.7954 8570.1855 L
-7883.9521 8570.1855 L
-7883.9521 8584.3125 L
nu0 O
0 0 0 1 k
-7882.2832 8583.623 m
-7882.8535 8586 -7882.8184 8582.0039 V
-7883.0479 8578.8027 L
-7883.6167 8576.4551 L
-7883.4502 8574.123 L
-7881.9502 8573.4551 -7865.2832 8572.123 V
-7858.6167 8570.7891 -7849.6167 8570.7891 V
-7784.3936 8571.4766 -7779.4912 8572.8848 v
-7820.3882 8570.875 -7822.9688 8571.5117 v
-7783.8569 8573.1602 -7780.8545 8574.4316 v
-7818.79 8572.5469 -7822.167 8574.1777 v
-7787.249 8575.9102 -7783.021 8577.5313 v
-7789.7217 8576.8828 -7791.5127 8577.082 v
-7788.3896 8577.5703 l
-7793.4194 8577.502 l
-7796.3218 8577.1289 l
-7788.4521 8578.2422 -7787.9033 8578.8086 v
-7784.3154 8578.1309 -7798.5186 8578.3848 v
-7832.1177 8574.4551 -7882.2832 8583.623 V
f/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7883.9502 8573.123 m
-7863.667 8571.2949 -7843.9727 8570.2207 v
-7801.1514 8570.502 -7796.5737 8570.9004 v
-7784.1631 8571.0313 -7776.7959 8572.0273 v
S/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7821.8369 8570.4082 m
-7825.2959 8570.0273 -7851.2607 8570.2793 Y
-7861.627 8570.1602 -7883.9502 8573.123 Y
S/BBAccumRotation (5.805971) XT
-7820.9873 8573.6641 m
-7790.3608 8574.582 -7783.6606 8575.2324 v
S/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7829.6201 8578.2051 m
-7794.3706 8579.6172 -7791.4058 8580.1406 v
S/BBAccumRotation (5.805971) XT
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8585.9355 m
-7670.4009 8585.9355 L
-7670.4009 8578.1348 L
-7884 8578.1348 L
-7884 8585.9355 L
n0 O
0 0 0 1 k
-7884 8582.0352 m
-7873.9858 8584.5273 -7867.187 8585.875 -7855.2007 8585.9355 c
-7842.2183 8586 -7777.2002 8585.9355 y
-7712.1816 8586 -7699.2002 8585.9355 v
-7687.2129 8585.875 -7680.415 8584.5273 -7670.4009 8582.0352 C
-7680.415 8579.543 -7687.2129 8578.1953 -7699.2002 8578.1348 c
-7712.1816 8578.0693 -7777.2002 8578.1348 y
-7842.2183 8578.0693 -7855.2007 8578.1348 v
-7867.187 8578.1953 -7873.9858 8579.543 -7884 8582.0352 C
fU%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -
(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -
(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -
( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -
(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -
( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -
(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -
(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -
(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -
(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -
(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -
(tternOnPath Brush Tool/ Rope /) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Dog Tracks)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Fall Leaf)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -
(1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Ladybug)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -
(1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Push Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -
( 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Strawberry)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -
(-75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Twinkle Star )
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Arrow)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Paintbrush)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -
( 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Double Lines)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -
(0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Laurel)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -
(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rope )
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -
(0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u1 Ap
0 O
0.75 g
0 R
0 G
0 J 0 j 0.5 w 4 M []0 d0 XR
334.8242 375.9111 m
262.8242 325 L
233 375.9111 L
305 426.8223 L
334.8242 375.9111 L
b1 g
0.67 G
0.25 w328.459 375.9111 m
265.46 331.3633 L
239.3643 375.9111 L
302.3643 420.459 L
328.459 375.9111 L
b0 G
2 w310.9121 395.0029 m
317.0879 384.458 310.0078 367.3633 295.0957 356.8193 c
280.1846 346.2754 263.0889 346.2744 256.9121 356.8193 c
250.7354 367.3643 257.8164 384.459 272.7285 395.0029 c
287.6396 405.5469 304.7344 405.5479 310.9121 395.0029 c
b*u
0 Ap
0 g
1 w272.5332 388.1719 m
271.3086 390.2627 L
270.3896 389.6055 L
270.3828 389.6162 L
271.9004 392.6113 L
273.9238 389.1553 L
274.041 388.9561 274.1543 388.8008 274.2676 388.6875 c
274.3809 388.5752 274.5166 388.4795 274.6748 388.4014 c
273.7627 387.7559 L
272.8467 387.1084 L
272.8477 387.2998 272.8252 387.4746 272.7803 387.6357 c
272.7314 387.7939 272.6504 387.9736 272.5332 388.1719 c
f*U
*u
278.3145 395.5361 m
278.4092 395.374 278.4424 395.1436 278.416 394.8447 c
278.3906 394.5488 278.2939 394.0703 278.126 393.4092 c
277.6787 391.6494 L
278.3076 392.0947 L
278.8105 392.4502 279.1816 392.7305 279.4209 392.9346 c
279.6602 393.1387 279.8213 393.3135 279.9063 393.46 c
280.0166 392.8604 L
280.125 392.2549 L
275.8125 389.2051 L
275.8105 389.208 L
276.7607 393.1924 L
276.875 393.6699 276.9434 394 276.9668 394.1855 c
276.9873 394.3701 276.9756 394.501 276.9307 394.5781 c
276.875 394.6719 276.7813 394.7139 276.6484 394.7021 c
276.5146 394.6924 276.3711 394.6318 276.2158 394.5215 c
275.9482 394.333 275.7969 394.1045 275.7617 393.8369 c
275.7266 393.5684 275.8154 393.3174 276.0293 393.085 c
274.6094 392.542 L
274.2871 392.8984 274.2295 393.333 274.4355 393.8486 c
274.6416 394.3643 275.0684 394.8506 275.7168 395.3096 c
276.2949 395.7178 276.8223 395.9424 277.3008 395.9844 c
277.7764 396.0254 278.1143 395.877 278.3145 395.5361 c
f*U
*u
287.7207 395.8896 m
286.4961 397.9805 L
285.5771 397.3232 L
285.5713 397.335 L
287.0879 400.3291 L
289.1113 396.873 L
289.2285 396.6748 289.3428 396.5186 289.4561 396.4053 c
289.5684 396.292 289.7041 396.1973 289.8623 396.1182 c
288.9502 395.4736 L
288.0342 394.8262 L
288.0352 395.0166 288.0137 395.1934 287.9678 395.3535 c
287.9199 395.5127 287.8379 395.6904 287.7207 395.8896 c
f*U
*u
300.6719 400.0029 m
300.7666 399.8408 300.8008 399.6113 300.7734 399.3125 c
300.748 399.0166 300.6514 398.5381 300.4834 397.877 c
300.0371 396.1182 L
300.666 396.5625 L
301.168 396.918 301.5391 397.1973 301.7783 397.4014 c
302.0176 397.6064 302.1797 397.7813 302.2637 397.9268 c
302.375 397.3271 L
302.4824 396.7217 L
298.1699 393.6729 L
298.1689 393.6758 L
299.1191 397.6602 L
299.2324 398.1367 299.3008 398.4678 299.3242 398.6533 c
299.3447 398.8369 299.334 398.9688 299.2881 399.0459 c
299.2334 399.1396 299.1387 399.1807 299.0059 399.1699 c
298.873 399.1602 298.7285 399.0986 298.5732 398.9893 c
298.3066 398.8008 298.1553 398.5723 298.1191 398.3037 c
298.084 398.0361 298.1729 397.7852 298.3867 397.5527 c
296.9668 397.0098 L
296.6445 397.3652 296.5869 397.7998 296.793 398.3164 c
296.999 398.832 297.4268 399.3193 298.0752 399.7773 c
298.6533 400.1865 299.1807 400.4111 299.6582 400.4521 c
300.1338 400.4932 300.4717 400.3447 300.6719 400.0029 c
f*U
*u
304.5488 392.457 m
304.2061 392.2139 303.9336 392.001 303.7314 391.8184 c
303.5293 391.6338 303.3535 391.4414 303.2031 391.2393 c
303.0781 391.8447 L
302.9551 392.4551 L
306.8457 395.2061 L
306.8477 395.2031 L
306.5664 392.5264 L
306.7676 392.5869 306.9648 392.6211 307.1582 392.6289 c
307.7051 392.6543 308.0879 392.4824 308.3027 392.1123 c
308.5605 391.6748 308.5625 391.1855 308.3086 390.6445 c
308.0566 390.1025 307.5879 389.5898 306.8984 389.1035 c
306.5273 388.8398 306.1875 388.6406 305.8789 388.5049 c
305.5684 388.3682 305.1973 388.252 304.7656 388.1572 c
304.8594 389.2119 L
305.1211 389.2432 305.3398 389.2881 305.5117 389.3447 c
305.6855 389.4023 305.8457 389.4834 305.9902 389.5859 c
306.3203 389.8184 306.5469 390.0596 306.6738 390.3096 c
306.8008 390.5605 306.8066 390.7822 306.6934 390.9775 c
306.5781 391.1719 306.3906 391.2578 306.1289 391.2373 c
305.8691 391.2148 305.5723 391.0869 305.2422 390.8535 c
305.1152 390.7646 L
305.3398 393.0166 l
304.5488 392.457 L
f*U
*u
306.3066 380.5635 m
306.3242 380.6299 L
306.7227 382.4824 L
307.3965 381.333 L
307.3945 381.332 L
306.3066 380.5635 l
f1 D
307.7402 380.4521 m
308.1387 379.7695 l
308.2207 379.6299 308.291 379.4854 308.3496 379.3369 c
308.4063 379.1865 308.4375 379.0713 308.4395 378.9932 C
310.1152 380.1787 l
310.0723 380.2275 310.0078 380.3184 309.9219 380.4482 c
309.8359 380.5791 309.752 380.7129 309.6719 380.8525 C
309.2715 381.5342 L
309.3691 381.6035 l
309.5059 381.7002 309.6465 381.791 309.7891 381.876 c
309.9336 381.96 310.041 382.0166 310.1133 382.0439 C
309.5762 382.9609 l
309.5215 382.8994 309.4277 382.8125 309.2949 382.7021 c
309.1621 382.5898 309.0254 382.4854 308.8848 382.3857 C
308.7852 382.3154 L
307.4883 384.3984 L
306.7383 383.8682 L
305.9922 383.3408 l
305.8477 382.6406 305.7031 382.0342 305.5605 381.5215 c
305.416 381.0068 305.2207 380.3926 304.9727 379.6787 C
305.2188 379.2588 L
305.4629 378.8408 L
307.7402 380.4521 l
f*U
*u
0 D
305.3945 371.0615 m
305.6523 370.6221 305.6523 370.1299 305.3965 369.585 c
305.1387 369.04 304.6621 368.5215 303.9658 368.0283 c
303.6455 367.8018 303.3447 367.623 303.0635 367.4902 c
302.7832 367.3584 302.4248 367.2285 301.9922 367.1025 c
302.0078 368.1465 L
302.249 368.1689 302.4551 368.21 302.626 368.2676 c
302.7969 368.3271 302.9668 368.416 303.1328 368.5332 c
303.4502 368.7578 303.668 368.9941 303.7881 369.2422 c
303.9072 369.4902 303.9092 369.7139 303.793 369.9121 c
303.6836 370.0977 303.4766 370.1699 303.1719 370.1279 c
302.8672 370.0869 302.5381 369.9414 302.1865 369.6924 c
302.0566 369.6006 301.9316 369.4971 301.8105 369.3809 c
301.6904 369.2656 301.5928 369.1543 301.5156 369.0459 c
301.2988 369.5537 301.083 369.9668 300.8662 370.2861 c
300.6484 370.6064 300.3447 370.9561 299.9551 371.333 c
303.6895 373.9736 L
303.8291 373.4189 L
303.9668 372.8574 L
303.8848 372.8486 303.7725 372.8135 303.6299 372.75 c
303.4883 372.6875 303.3652 372.6201 303.2607 372.5459 c
302.085 371.7139 L
302.543 370.9131 L
302.7578 371.0654 L
303.2803 371.4346 303.7969 371.6191 304.3076 371.6201 c
304.8164 371.6182 305.1777 371.4316 305.3945 371.0615 c
f*U
*u
293.3652 359.9951 m
293.4609 360.2129 293.623 360.4033 293.8516 360.5645 c
294.0898 360.7334 294.3145 360.8193 294.5264 360.8232 c
294.7383 360.8281 294.8916 360.751 294.9863 360.5898 c
295.0771 360.4326 295.0762 360.25 294.9824 360.0371 c
294.8887 359.8242 294.7246 359.6348 294.4922 359.4707 c
294.2695 359.3135 294.0469 359.2314 293.8242 359.2256 c
293.6025 359.2207 293.4482 359.292 293.3613 359.4404 c
293.2705 359.5938 293.2725 359.7793 293.3652 359.9951 c
f1 D
292.2969 362.5313 m
292.3125 362.415 292.3145 362.3281 292.3008 362.2695 C
291.8867 360.2559 l
291.8018 359.8428 291.7656 359.4932 291.7793 359.2119 c
291.791 358.9297 291.8555 358.6924 291.9688 358.4971 c
292.2119 358.083 292.6074 357.8906 293.1563 357.9209 c
293.7051 357.9521 294.3086 358.2002 294.9648 358.6641 c
295.6523 359.1504 296.1143 359.6572 296.3496 360.1865 c
296.585 360.7139 296.5703 361.2041 296.3047 361.6563 c
296.0957 362.0156 295.748 362.1992 295.2656 362.209 c
294.7813 362.2178 294.2949 362.0498 293.8066 361.7041 c
293.7129 361.6396 293.6221 361.5723 293.5352 361.501 C
293.8301 362.9463 l
293.9043 363.3096 293.9717 363.5928 294.0303 363.792 c
294.0879 363.9922 294.1514 364.1543 294.2178 364.2764 C
292.21 362.8564 l
292.25 362.752 292.2783 362.6436 292.2969 362.5313 c
f*U
*u
0 D
282.4697 352.2256 m
282.501 352.3037 282.5332 352.4463 282.5645 352.6514 c
282.5957 352.8555 282.6172 353.0654 282.627 353.2783 c
282.8203 357.4268 L
281.4707 356.4717 L
281.1865 356.2705 280.9512 356.0869 280.7627 355.9189 c
280.5752 355.751 280.3965 355.5635 280.2266 355.3584 c
280.1211 355.9609 L
280.0156 356.5684 L
284.3389 359.625 L
284.1191 353.7773 L
284.1162 353.7314 284.125 353.6768 284.1426 353.6143 c
284.1602 353.5518 284.1846 353.5 284.2158 353.46 c
282.4697 352.2256 L
f*U
*u
269.2842 355.1816 m
269.082 355.1621 268.9453 355.2148 268.873 355.3389 c
268.7988 355.4639 268.8115 355.623 268.9102 355.8154 c
269.0078 356.0088 269.165 356.1816 269.3809 356.334 c
269.5986 356.4883 269.8086 356.5752 270.0088 356.5928 c
270.209 356.6113 270.3457 356.5576 270.4199 356.4326 c
270.4922 356.3086 270.4785 356.1504 270.3809 355.958 c
270.2813 355.7666 270.123 355.5938 269.9053 355.4395 c
269.6895 355.2871 269.4824 355.2012 269.2842 355.1816 c
f1 D
271.6025 356.0908 m
271.8496 356.5859 271.8701 357.0117 271.6621 357.3662 c
271.4531 357.7236 271.0918 357.8809 270.5791 357.8398 c
270.0664 357.7988 269.5117 357.5674 268.916 357.1465 c
268.3203 356.7256 267.8994 356.2666 267.6543 355.7715 c
267.4082 355.2764 267.3906 354.8506 267.5996 354.4932 c
267.8076 354.1387 268.166 353.9814 268.6768 354.0225 C
268.7451 354.0273 L
268.6885 353.917 l
268.4248 353.3867 268.4043 352.9297 268.6289 352.5479 c
268.8516 352.166 269.2344 351.9951 269.7773 352.0361 c
270.3184 352.0752 270.9033 352.3174 271.5313 352.7607 c
272.1582 353.2041 272.6016 353.6895 272.8594 354.2148 c
273.1162 354.7402 273.1328 355.1934 272.9102 355.5752 c
272.6855 355.957 272.3047 356.1299 271.7666 356.0938 C
271.5918 356.0713 L
271.6025 356.0908 l
f0 D
271.0713 354.8779 m
271.2744 354.876 271.4229 354.7939 271.5176 354.6318 c
271.6113 354.4727 271.6172 354.292 271.5342 354.0889 c
271.4512 353.8857 271.2969 353.7051 271.0713 353.5449 c
270.8457 353.3857 270.6318 353.3066 270.4297 353.3076 c
270.2275 353.3086 270.0801 353.3896 269.9863 353.5498 c
269.8916 353.7109 269.8848 353.8926 269.9678 354.0957 c
270.0508 354.2979 270.2051 354.4795 270.4307 354.6396 c
270.6563 354.7988 270.8691 354.8779 271.0713 354.8779 c
f*U
*u
262.6699 361.2393 m
262.5762 361.0205 262.4141 360.8301 262.1875 360.6699 c
261.9492 360.501 261.7236 360.415 261.5098 360.4111 c
261.2959 360.4072 261.1406 360.4883 261.0449 360.6533 c
260.9521 360.8115 260.9521 360.999 261.0449 361.2158 c
261.1377 361.4307 261.3008 361.6211 261.5332 361.7852 c
261.7559 361.9424 261.9785 362.0225 262.2012 362.0254 c
262.4248 362.0283 262.5811 361.9531 262.6699 361.8018 c
262.7617 361.6436 262.7617 361.4561 262.6699 361.2393 c
f1 D
263.7432 358.7188 m
263.7266 358.8477 263.7266 358.9482 263.7441 359.0205 C
264.1475 360.9814 l
264.2314 361.3955 264.2646 361.748 264.2461 362.0391 c
264.2275 362.3311 264.1553 362.585 264.0273 362.8027 c
263.7939 363.2031 263.4043 363.3828 262.8604 363.3447 c
262.3164 363.3066 261.7168 363.0557 261.0605 362.5918 c
260.374 362.1064 259.9121 361.5986 259.6758 361.0703 c
259.4395 360.541 259.4531 360.0498 259.7188 359.5977 c
259.9287 359.2393 260.2871 359.0635 260.7969 359.0723 c
261.3047 359.0811 261.8232 359.2715 262.3496 359.6436 C
262.4971 359.748 L
262.251 358.5254 l
262.1523 358.0713 262.0693 357.7266 262.0049 357.4932 c
261.9404 357.2578 261.8779 357.0791 261.8184 356.9561 C
263.8242 358.374 l
263.7871 358.4756 263.7607 358.5908 263.7432 358.7188 c
f*U
*u
0 D
258.5059 366.8975 m
257.2813 368.9883 L
256.3623 368.3311 L
256.3564 368.3428 L
257.873 371.3369 L
259.8965 367.8809 L
260.0137 367.6826 260.1279 367.5264 260.2412 367.4131 c
260.3535 367.3008 260.4893 367.2051 260.6484 367.127 c
259.7363 366.4824 L
258.8203 365.835 L
258.8203 366.0254 258.7988 366.2012 258.7529 366.3613 c
258.7051 366.5205 258.623 366.6992 258.5059 366.8975 c
f*U
*u
263.793 370.46 m
263.5273 370.2725 263.2578 370.248 262.9834 370.3838 c
262.709 370.5205 262.4395 370.8135 262.1768 371.2627 c
261.918 371.7041 261.7891 372.0928 261.79 372.4307 c
261.791 372.7676 261.9219 373.0283 262.1816 373.2119 c
262.4404 373.3945 262.7109 373.418 262.9912 373.2803 c
263.2725 373.1416 263.543 372.8525 263.8018 372.4111 c
264.0586 371.9717 264.1865 371.582 264.1846 371.2432 c
264.1826 370.9043 264.0518 370.6436 263.793 370.46 c
f1 D
264.2783 369.6318 m
264.9902 370.1348 265.4512 370.752 265.6621 371.4834 c
265.873 372.2139 265.7891 372.9033 265.4111 373.5498 c
265.0313 374.1973 264.4961 374.5664 263.8027 374.6582 c
263.1094 374.749 262.4072 374.543 261.6953 374.0391 c
260.9863 373.5381 260.5264 372.9229 260.3145 372.1924 c
260.1035 371.4609 260.1875 370.7725 260.5674 370.125 c
260.9541 369.4639 261.4883 369.0889 262.1699 368.998 c
262.8506 368.9082 263.5537 369.1191 264.2783 369.6318 c
f*U
*u
0 D
263.25 378.9199 m
262.0244 381.0107 L
261.1055 380.3525 L
261.0996 380.3643 L
262.6162 383.3584 L
264.6406 379.9033 L
264.7568 379.7041 264.8711 379.5479 264.9844 379.4355 c
265.0967 379.3213 265.2324 379.2256 265.3906 379.1484 c
264.4785 378.5029 L
263.5625 377.8555 L
263.5645 378.0469 263.541 378.2217 263.4961 378.3828 c
263.4482 378.542 263.3662 378.7207 263.25 378.9199 c
f*U
*u
267.7617 382.1104 m
266.5371 384.2012 L
265.6191 383.5439 L
265.6123 383.5557 L
267.1289 386.5498 L
269.1523 383.0938 L
269.2695 382.8955 269.3838 382.7393 269.4961 382.626 c
269.6094 382.5127 269.7461 382.418 269.9043 382.3398 c
268.9922 381.6953 L
268.0762 381.0479 L
268.0762 381.2373 268.0537 381.4121 268.0088 381.5742 c
267.9609 381.7324 267.8789 381.9121 267.7617 382.1104 c
f*U
0 R
0 G
0.25 w283.8672 372.9326 m
285.2041 372.1982 l
286.4863 373.1045 l
286.4316 374.7451 l
278.7764 387.8145 l
274.71 391.6611 l
276.2119 386.001 l
283.8672 372.9326 l
b281.0938 372.4531 m
279.7119 372.0508 l
279.2363 372.8623 l
280.1426 374.0752 l
292.7207 382.9697 l
297.7695 385.3936 l
293.6709 381.3467 l
281.0938 372.4531 l
b/BBAccumRotation (1.570796) XT
Uu1 Ap
0.75 g
0.5 w472.5361 438.75 m
400.5361 438.75 L
370.7119 510.75 L
442.7119 510.75 L
472.5361 438.75 L
b1 g
0.67 G
0.25 w466.1719 443.25 m
403.1719 443.25 L
377.0762 506.25 L
440.0762 506.25 L
466.1719 443.25 L
b0 G
2 w448.624 474.75 m
454.8008 459.8379 447.7197 447.75 432.8076 447.75 c
417.8965 447.75 400.8008 459.8379 394.624 474.75 c
388.4473 489.6621 395.5283 501.75 410.4404 501.75 c
425.3516 501.75 442.4473 489.6621 448.624 474.75 c
b*u
0 Ap
0 g
1 w410.2451 495.0566 m
409.0205 498.0137 L
408.1016 498.0059 L
408.0947 498.0215 L
409.6123 499.9434 L
411.6357 495.0566 L
411.7529 494.7754 411.8662 494.5391 411.9795 494.3457 c
412.0928 494.1533 412.2285 493.9619 412.3867 493.7715 c
411.4746 493.7715 L
410.5586 493.7715 L
410.5596 493.9619 410.5371 494.1533 410.4922 494.3457 c
410.4434 494.5391 410.3623 494.7754 410.2451 495.0566 c
f*U
*u
416.0264 498.333 m
416.1211 498.1035 416.1543 497.8496 416.1279 497.5703 c
416.1025 497.292 416.0059 496.8818 415.8379 496.3398 c
415.3906 494.8965 L
416.0195 494.8965 L
416.5225 494.8965 416.8936 494.9141 417.1328 494.9492 c
417.3721 494.9844 417.5332 495.0449 417.6182 495.1309 c
417.7285 494.4531 L
417.8369 493.7715 L
413.5244 493.7715 L
413.5225 493.7754 L
414.4727 497.0879 L
414.5869 497.4844 414.6553 497.7666 414.6787 497.9355 c
414.6992 498.1055 414.6875 498.2441 414.6426 498.3535 c
414.5869 498.4863 414.4932 498.5947 414.3604 498.6777 c
414.2266 498.7617 414.083 498.8027 413.9277 498.8027 c
413.6602 498.8027 413.5088 498.6816 413.4736 498.4385 c
413.4385 498.1953 413.5273 497.8818 413.7412 497.498 c
412.3213 497.959 L
411.999 498.543 411.9414 499.0186 412.1475 499.3887 c
412.3535 499.7588 412.7803 499.9434 413.4287 499.9434 c
414.0068 499.9434 414.5342 499.7949 415.0127 499.498 c
415.4883 499.2031 415.8262 498.8154 416.0264 498.333 c
f*U
*u
425.4326 492.0352 m
424.208 494.9922 L
423.2891 494.9844 L
423.2832 495 L
424.7998 496.9219 L
426.8232 492.0352 L
426.9404 491.7539 427.0547 491.5176 427.168 491.3242 c
427.2803 491.1318 427.416 490.9404 427.5742 490.75 c
426.6621 490.75 L
425.7461 490.75 L
425.7471 490.9404 425.7256 491.1318 425.6797 491.3242 c
425.6318 491.5176 425.5498 491.7539 425.4326 492.0352 c
f*U
*u
438.3838 486.9912 m
438.4785 486.7617 438.5127 486.5078 438.4854 486.2285 c
438.46 485.9502 438.3633 485.54 438.1953 484.998 c
437.749 483.5547 L
438.3779 483.5547 L
438.8799 483.5547 439.251 483.5723 439.4902 483.6074 c
439.7295 483.6426 439.8916 483.7031 439.9756 483.7891 c
440.0869 483.1113 L
440.1943 482.4297 L
435.8818 482.4297 L
435.8809 482.4336 L
436.8311 485.7461 L
436.9443 486.1426 437.0127 486.4248 437.0361 486.5938 c
437.0566 486.7637 437.0459 486.9023 437 487.0117 c
436.9453 487.1445 436.8506 487.2529 436.7178 487.3359 c
436.585 487.4199 436.4404 487.4609 436.2852 487.4609 c
436.0186 487.4609 435.8672 487.3398 435.8311 487.0967 c
435.7959 486.8535 435.8848 486.54 436.0986 486.1563 c
434.6787 486.6172 L
434.3564 487.2012 434.2988 487.6768 434.5049 488.0469 c
434.7109 488.417 435.1387 488.6016 435.7871 488.6016 c
436.3652 488.6016 436.8926 488.4531 437.3701 488.1563 c
437.8457 487.8613 438.1836 487.4736 438.3838 486.9912 c
f*U
*u
442.2617 476.7031 m
441.918 476.7031 441.6455 476.6826 441.4434 476.6426 c
441.2412 476.6016 441.0654 476.5332 440.915 476.4375 c
440.79 477.1309 L
440.667 477.8281 L
444.5576 477.8281 L
444.5596 477.8242 L
444.2783 475.3467 L
444.4805 475.2637 444.6777 475.1582 444.8701 475.0303 c
445.417 474.6689 445.7998 474.2266 446.0156 473.7041 c
446.2725 473.085 446.2744 472.5938 446.0215 472.2314 c
445.7695 471.8682 445.2998 471.6875 444.6113 471.6875 c
444.2393 471.6875 443.8994 471.7285 443.5908 471.8105 c
443.2813 471.8926 442.9102 472.0391 442.4775 472.25 c
442.5723 473.2383 L
442.834 473.084 443.0518 472.9746 443.2246 472.9102 c
443.3975 472.8447 443.5576 472.8125 443.7031 472.8125 c
444.0322 472.8125 444.2598 472.8926 444.3857 473.0537 c
444.5127 473.2148 444.5186 473.4326 444.4053 473.707 c
444.291 473.9824 444.1025 474.2021 443.8418 474.3652 c
443.5811 474.5273 443.2842 474.6094 442.9541 474.6094 c
442.8281 474.6094 L
443.0518 476.7031 l
442.2617 476.7031 L
f*U
*u
444.0186 463.5664 m
444.0361 463.6211 L
444.4355 465.1914 L
445.1084 463.5664 L
445.1064 463.5664 L
444.0186 463.5664 l
f1 D
445.4521 462.4414 m
445.8516 461.4766 l
445.9336 461.2793 446.0029 461.0859 446.0615 460.8955 c
446.1191 460.7051 446.1494 460.5684 446.1514 460.4883 C
447.8281 460.4883 l
447.7842 460.5684 447.7197 460.7051 447.6338 460.8955 c
447.5488 461.0859 447.4648 461.2793 447.3838 461.4766 C
446.9834 462.4414 L
447.0811 462.4414 l
447.2178 462.4414 447.3584 462.4326 447.502 462.416 c
447.6455 462.3984 447.7539 462.3789 447.8262 462.3555 C
447.2881 463.6523 l
447.2344 463.6289 447.1406 463.6084 447.0078 463.5918 c
446.874 463.5742 446.7373 463.5664 446.5967 463.5664 C
446.4971 463.5664 L
445.2002 466.5664 L
444.4502 466.5664 L
443.7041 466.5664 l
443.5596 465.9688 443.415 465.4648 443.2725 465.0527 c
443.1289 464.6396 442.9326 464.1641 442.6846 463.625 C
442.9307 463.0313 L
443.1748 462.4414 L
445.4521 462.4414 l
f*U
*u
0 D
443.1074 454.709 m
443.3643 454.0879 443.3652 453.5957 443.1084 453.2324 c
442.8516 452.8691 442.375 452.6875 441.6777 452.6875 c
441.3574 452.6875 441.0566 452.7207 440.7754 452.7871 c
440.4951 452.8535 440.1367 452.9766 439.7041 453.1563 c
439.7197 454.1895 L
439.9609 454.041 440.167 453.9365 440.3379 453.874 c
440.5088 453.8125 440.6787 453.7813 440.8447 453.7813 c
441.1621 453.7813 441.3799 453.8633 441.5 454.0264 c
441.6191 454.1904 441.6211 454.4121 441.5049 454.6934 c
441.3955 454.9561 441.1885 455.1748 440.8838 455.3486 c
440.5791 455.5225 440.25 455.6094 439.8984 455.6094 c
439.7686 455.6094 439.6436 455.5938 439.5225 455.5635 c
439.4023 455.5332 439.3047 455.4912 439.2275 455.4375 c
439.0107 456.0977 438.7949 456.6641 438.5781 457.1367 c
438.3604 457.6113 438.0566 458.1758 437.667 458.8281 c
441.4014 458.8281 L
441.541 458.1738 L
441.6787 457.5156 L
441.5967 457.5645 441.4844 457.6084 441.3418 457.6465 c
441.2002 457.6836 441.0771 457.7031 440.9727 457.7031 c
439.7969 457.7031 L
440.2549 456.5781 L
440.4697 456.5781 L
440.9922 456.5781 441.5088 456.3975 442.0195 456.0371 c
442.5283 455.6758 442.8896 455.2334 443.1074 454.709 c
f*U
*u
431.0771 452.1494 m
431.1729 452.2998 431.335 452.375 431.5635 452.375 c
431.8018 452.375 432.0264 452.3027 432.2383 452.1572 c
432.4502 452.0117 432.6035 451.8262 432.6982 451.5977 c
432.7891 451.377 432.7881 451.1943 432.6943 451.0479 c
432.6006 450.9014 432.4365 450.8281 432.2041 450.8281 c
431.9814 450.8281 431.7588 450.9043 431.5361 451.0557 c
431.3145 451.207 431.1602 451.3877 431.0732 451.5977 c
430.9824 451.8154 430.9844 451.999 431.0771 452.1494 c
f1 D
430.0088 455.4414 m
430.0244 455.3145 430.0264 455.2256 430.0127 455.1768 C
429.5986 453.4561 l
429.5137 453.1025 429.4775 452.7793 429.4912 452.4883 c
429.5029 452.1973 429.5674 451.9141 429.6807 451.6387 c
429.9238 451.0527 430.3193 450.5811 430.8682 450.2236 c
431.417 449.8662 432.0205 449.6875 432.6768 449.6875 c
433.3643 449.6875 433.8262 449.8682 434.0615 450.2305 c
434.2969 450.5918 434.2822 451.0918 434.0166 451.7324 c
433.8076 452.2393 433.46 452.6689 432.9775 453.0195 c
432.4932 453.3711 432.0068 453.5469 431.5186 453.5469 c
431.4248 453.5488 431.334 453.5449 431.2471 453.5352 C
431.542 454.7715 l
431.6162 455.083 431.6836 455.3184 431.7422 455.4766 c
431.7998 455.6357 431.8633 455.7529 431.9297 455.8281 C
429.9219 455.8281 l
429.9619 455.6953 429.9902 455.5664 430.0088 455.4414 c
f*U
*u
0 D
420.1816 452.084 m
420.2129 452.1406 420.2451 452.2607 420.2764 452.4434 c
420.3076 452.625 420.3291 452.8193 420.3389 453.0254 c
420.5322 457.0371 L
419.1826 457.0371 L
418.8984 457.0371 418.6631 457.0195 418.4746 456.9844 c
418.2871 456.9492 418.1084 456.8887 417.9385 456.8027 c
417.833 457.4805 L
417.7275 458.1621 L
422.0508 458.1621 L
421.8311 452.4697 L
421.8281 452.4258 421.8369 452.3652 421.8545 452.29 c
421.8721 452.2148 421.8965 452.1465 421.9277 452.084 c
420.1816 452.084 L
f*U
*u
406.9961 464.3643 m
406.7939 464.4873 406.6572 464.6367 406.585 464.8115 c
406.5107 464.9893 406.5234 465.1396 406.6221 465.2627 c
406.7197 465.3867 406.877 465.4482 407.0928 465.4482 c
407.3105 465.4482 407.5205 465.3867 407.7207 465.2627 c
407.9209 465.1396 408.0576 464.9893 408.1318 464.8115 c
408.2041 464.6367 408.1904 464.4883 408.0928 464.3652 c
407.9932 464.2441 407.835 464.1826 407.6172 464.1826 c
407.4014 464.1826 407.1943 464.2432 406.9961 464.3643 c
f1 D
409.3145 463.6338 m
409.5615 463.9541 409.582 464.3652 409.374 464.8672 c
409.165 465.3721 408.8037 465.7852 408.291 466.1064 c
407.7783 466.4277 407.2236 466.5889 406.6279 466.5889 c
406.0322 466.5889 405.6113 466.4277 405.3662 466.1064 c
405.1201 465.7852 405.1025 465.3721 405.3115 464.8672 c
405.5195 464.3652 405.8779 463.9541 406.3887 463.6338 C
406.457 463.5908 L
406.4004 463.5205 l
406.1367 463.1768 406.1162 462.7344 406.3408 462.1934 c
406.5635 461.6543 406.9463 461.2129 407.4893 460.8691 c
408.0303 460.5264 408.6152 460.3545 409.2432 460.3545 c
409.8701 460.3545 410.3135 460.5264 410.5713 460.8691 c
410.8281 461.2129 410.8447 461.6543 410.6221 462.1934 c
410.3975 462.7344 410.0166 463.1768 409.4785 463.5205 C
409.3037 463.6221 L
409.3145 463.6338 l
f0 D
408.7832 462.7969 m
408.9863 462.6504 409.1348 462.4639 409.2295 462.2354 c
409.3232 462.0098 409.3291 461.8242 409.2461 461.6797 c
409.1631 461.5361 409.0088 461.4639 408.7832 461.4639 c
408.5576 461.4639 408.3438 461.5361 408.1416 461.6797 c
407.9395 461.8242 407.792 462.0098 407.6982 462.2354 c
407.6035 462.4639 407.5967 462.6504 407.6797 462.7949 c
407.7627 462.9385 407.917 463.0107 408.1426 463.0107 c
408.3682 463.0107 408.5811 462.9395 408.7832 462.7969 c
f*U
*u
400.3818 475.0986 m
400.2881 474.9463 400.126 474.8701 399.8994 474.8701 c
399.6611 474.8701 399.4355 474.9434 399.2217 475.0908 c
399.0078 475.2383 398.8525 475.4287 398.7568 475.6611 c
398.6641 475.8857 398.6641 476.0732 398.7568 476.2236 c
398.8496 476.373 399.0127 476.4482 399.2451 476.4482 c
399.4678 476.4482 399.6904 476.3711 399.9131 476.2158 c
400.1367 476.0605 400.293 475.875 400.3818 475.6611 c
400.4736 475.4385 400.4736 475.251 400.3818 475.0986 c
f1 D
401.4551 471.8193 m
401.4385 471.96 401.4385 472.0605 401.4561 472.1201 C
401.8594 473.7959 l
401.9434 474.1504 401.9766 474.4795 401.958 474.7842 c
401.9395 475.0889 401.8672 475.3945 401.7393 475.7021 c
401.5059 476.2676 401.1162 476.7227 400.5723 477.0693 c
400.0283 477.416 399.4287 477.5889 398.7725 477.5889 c
398.0859 477.5889 397.624 477.4082 397.3877 477.0469 c
397.1514 476.6846 397.165 476.1836 397.4307 475.5439 c
397.6406 475.0371 397.999 474.6074 398.5088 474.2559 c
399.0166 473.9053 399.5352 473.7295 400.0615 473.7295 C
400.209 473.7295 L
399.9629 472.6807 l
399.8643 472.2969 399.7813 472.0107 399.7168 471.8223 c
399.6523 471.6328 399.5898 471.498 399.5303 471.417 C
401.5361 471.417 l
401.499 471.5449 401.4727 471.6787 401.4551 471.8193 c
f*U
*u
0 D
396.2178 483.7012 m
394.9932 486.6582 L
394.0742 486.6504 L
394.0684 486.666 L
395.585 488.5879 L
397.6084 483.7012 L
397.7256 483.4199 397.8398 483.1836 397.9531 482.9902 c
398.0654 482.7979 398.2012 482.6064 398.3604 482.416 c
397.4482 482.416 L
396.5322 482.416 L
396.5322 482.6064 396.5107 482.7979 396.4648 482.9902 c
396.417 483.1836 396.335 483.4199 396.2178 483.7012 c
f*U
*u
401.5049 483.5254 m
401.2393 483.5254 400.9697 483.6914 400.6953 484.0215 c
400.4209 484.3525 400.1514 484.8359 399.8887 485.4707 c
399.6299 486.0947 399.501 486.5752 399.502 486.9121 c
399.5029 487.248 399.6338 487.416 399.8936 487.416 c
400.1523 487.416 400.4229 487.248 400.7031 486.9121 c
400.9844 486.5752 401.2549 486.0947 401.5137 485.4707 c
401.7705 484.8486 401.8984 484.3691 401.8965 484.0313 c
401.8945 483.6943 401.7637 483.5254 401.5049 483.5254 c
f1 D
401.9902 482.3535 m
402.7021 482.3535 403.1631 482.6445 403.374 483.2266 c
403.585 483.8086 403.501 484.5566 403.123 485.4707 c
402.7432 486.3867 402.208 487.1348 401.5146 487.7168 c
400.8213 488.2979 400.1191 488.5879 399.4072 488.5879 c
398.6982 488.5879 398.2383 488.2979 398.0264 487.7168 c
397.8154 487.1348 397.8994 486.3867 398.2793 485.4707 c
398.666 484.5361 399.2002 483.7832 399.8818 483.2109 c
400.5625 482.6396 401.2656 482.3535 401.9902 482.3535 c
f*U
*u
0 D
400.9619 492.3691 m
399.7363 495.3262 L
398.8174 495.3184 L
398.8115 495.334 L
400.3281 497.2559 L
402.3525 492.3691 L
402.4688 492.0879 402.583 491.8506 402.6963 491.6582 c
402.8086 491.4648 402.9443 491.2734 403.1025 491.084 c
402.1904 491.084 L
401.2744 491.084 L
401.2764 491.2734 401.2529 491.4648 401.208 491.6582 c
401.1602 491.8506 401.0781 492.0879 400.9619 492.3691 c
f*U
*u
405.4736 492.3691 m
404.249 495.3262 L
403.3311 495.3184 L
403.3242 495.334 L
404.8408 497.2559 L
406.8643 492.3691 L
406.9814 492.0879 407.0957 491.8506 407.208 491.6582 c
407.3213 491.4648 407.458 491.2734 407.6162 491.084 c
406.7041 491.084 L
405.7881 491.084 L
405.7881 491.2734 405.7656 491.4648 405.7207 491.6582 c
405.6729 491.8506 405.5908 492.0879 405.4736 492.3691 c
f*U
0 R
0 G
0.25 w421.5791 471.8027 m
422.916 470.123 l
424.1982 470.123 l
424.1436 471.8027 l
416.4883 490.2852 l
412.4219 497.0068 l
413.9238 490.2852 l
421.5791 471.8027 l
b418.8057 473.2852 m
417.4238 473.8594 l
416.9482 475.0068 l
417.8545 475.5801 l
430.4326 475.5801 l
435.4814 474.4336 l
431.3828 473.2852 l
418.8057 473.2852 l
b/BBAccumRotation (1.570796) XT
Uu1 Ap
0.75 g
0.5 w456.0742 346.7959 m
405.1631 295.8848 L
354.25 346.7959 L
405.1621 397.707 L
456.0742 346.7959 L
b1 g
0.67 G
0.25 w449.709 346.7959 m
405.1631 302.248 L
360.6152 346.7959 L
405.1621 391.3438 L
449.709 346.7959 L
b0 G
2 w424.2549 365.8877 m
434.7979 355.3428 434.7988 338.248 424.2539 327.7041 c
413.7109 317.1602 396.6152 317.1592 386.0703 327.7041 c
375.5264 338.249 375.5264 355.3438 386.0713 365.8877 c
396.6152 376.4316 413.709 376.4326 424.2549 365.8877 c
b*u
0 Ap
0 g
1 w388.7051 359.0566 m
386.6143 361.1475 L
385.9678 360.4902 L
385.957 360.501 L
386.2334 363.4961 L
389.6885 360.04 L
389.8887 359.8408 390.0654 359.6855 390.2256 359.5723 c
390.3857 359.46 390.5605 359.3643 390.752 359.2861 c
390.1074 358.6406 L
389.459 357.9932 L
389.3809 358.1846 389.2861 358.3594 389.1738 358.5205 c
389.0596 358.6787 388.9043 358.8584 388.7051 359.0566 c
f*U
*u
391.4355 366.4209 m
391.5977 366.2588 391.7266 366.0283 391.8242 365.7295 c
391.9209 365.4336 392.0225 364.9551 392.1289 364.2939 c
392.4102 362.5342 L
392.8545 362.9795 L
393.2109 363.335 393.4648 363.6152 393.6201 363.8193 c
393.7744 364.0234 393.8633 364.1982 393.8877 364.3447 c
394.2461 363.7451 L
394.6055 363.1396 L
391.5566 360.0898 L
391.5527 360.0928 L
390.8535 364.0771 L
390.7695 364.5547 390.7012 364.8848 390.6475 365.0703 c
390.5918 365.2549 390.5254 365.3857 390.4492 365.4629 c
390.3545 365.5566 390.2432 365.5986 390.1152 365.5869 c
389.9854 365.5771 389.8672 365.5166 389.7578 365.4063 c
389.5684 365.2178 389.5117 364.9893 389.5869 364.7217 c
389.6631 364.4531 389.8555 364.2021 390.166 363.9697 c
388.9707 363.4268 L
388.501 363.7832 388.2637 364.2178 388.2559 364.7334 c
388.248 365.249 388.4736 365.7354 388.9316 366.1943 c
389.3418 366.6025 389.7754 366.8271 390.2363 366.8691 c
390.6953 366.9102 391.0947 366.7617 391.4355 366.4209 c
f*U
*u
400.6953 366.7744 m
398.6055 368.8652 L
397.959 368.208 L
397.9473 368.2197 L
398.2246 371.2139 L
401.6797 367.7578 L
401.8789 367.5596 402.0576 367.4033 402.2178 367.29 c
402.377 367.1768 402.5518 367.082 402.7422 367.0029 c
402.0977 366.3584 L
401.4492 365.7109 L
401.3721 365.9014 401.2773 366.0781 401.165 366.2383 c
401.0508 366.3975 400.8955 366.5752 400.6953 366.7744 c
f*U
*u
411.9434 370.8877 m
412.1055 370.7256 412.2344 370.4961 412.3311 370.1973 c
412.4277 369.9014 412.5293 369.4229 412.6348 368.7617 c
412.918 367.0029 L
413.3623 367.4473 L
413.7168 367.8027 413.9727 368.082 414.127 368.2861 c
414.2813 368.4912 414.3711 368.666 414.3945 368.8115 c
414.7549 368.2119 L
415.1133 367.6064 L
412.0635 364.5576 L
412.0605 364.5605 L
411.3613 368.5449 L
411.2773 369.0215 411.208 369.3525 411.1543 369.5381 c
411.0996 369.7217 411.0332 369.8535 410.9561 369.9307 c
410.8623 370.0244 410.751 370.0654 410.6221 370.0547 c
410.4932 370.0449 410.375 369.9834 410.2646 369.874 c
410.0762 369.6855 410.0195 369.457 410.0938 369.1885 c
410.1699 368.9209 410.3633 368.6699 410.6729 368.4375 c
409.4785 367.8945 L
409.0088 368.25 408.7705 368.6846 408.7627 369.2012 c
408.7559 369.7168 408.9814 370.2041 409.4395 370.6621 c
409.8486 371.0713 410.2832 371.2959 410.7432 371.3369 c
411.2021 371.3779 411.6016 371.2295 411.9434 370.8877 c
f*U
*u
418.9453 363.3418 m
418.7041 363.0986 418.5195 362.8857 418.3926 362.7031 c
418.2676 362.5186 418.1709 362.3262 418.1045 362.124 c
417.7285 362.7295 L
417.3525 363.3398 L
420.1035 366.0908 L
420.1074 366.0879 L
420.9346 363.4111 L
421.1113 363.4717 421.2939 363.5059 421.4844 363.5137 c
422.0205 363.5391 422.4746 363.3672 422.8428 362.9971 c
423.2813 362.5596 423.4863 362.0703 423.4561 361.5293 c
423.4287 360.9873 423.1729 360.4746 422.6846 359.9883 c
422.4229 359.7246 422.165 359.5254 421.9131 359.3896 c
421.6592 359.2529 421.3359 359.1367 420.9434 359.042 c
420.6006 360.0967 L
420.8496 360.1279 421.0488 360.1729 421.1973 360.2295 c
421.3477 360.2871 421.4746 360.3682 421.5762 360.4707 c
421.8105 360.7031 421.9375 360.9443 421.96 361.1943 c
421.9834 361.4453 421.8975 361.667 421.7031 361.8623 c
421.5078 362.0566 421.2842 362.1426 421.0313 362.1221 c
420.7803 362.0996 420.5371 361.9717 420.3037 361.7383 c
420.2129 361.6494 L
419.5049 363.9014 l
418.9453 363.3418 L
f*U
*u
425.6299 351.4482 m
425.6201 351.5146 L
425.251 353.3672 L
426.4014 352.2178 L
426.3994 352.2168 L
425.6299 351.4482 l
f1 D
427.1094 351.3369 m
427.791 350.6543 l
427.9307 350.5146 428.0605 350.3701 428.1816 350.2217 c
428.2998 350.0713 428.3789 349.9561 428.4131 349.8779 C
429.5977 351.0635 l
429.5352 351.1123 429.4326 351.2031 429.293 351.333 c
429.1523 351.4639 429.0137 351.5977 428.875 351.7373 C
428.1934 352.4189 L
428.2617 352.4883 l
428.3584 352.585 428.4609 352.6758 428.5684 352.7607 c
428.6787 352.8447 428.7627 352.9014 428.8232 352.9287 C
427.9063 353.8457 l
427.877 353.7842 427.8193 353.6973 427.7324 353.5869 c
427.6465 353.4746 427.5527 353.3701 427.4531 353.2705 C
427.3828 353.2002 L
425.2227 355.2832 L
424.6934 354.7529 L
424.165 354.2256 l
424.3105 353.5254 424.418 352.9189 424.4873 352.4063 c
424.5557 351.8916 424.6152 351.2773 424.6621 350.5635 C
425.082 350.1436 L
425.5 349.7256 L
427.1094 351.3369 l
f*U
*u
0 D
428.6543 341.9463 m
429.0938 341.5068 429.2979 341.0146 429.2676 340.4697 c
429.2354 339.9248 428.9736 339.4063 428.4814 338.9131 c
428.2549 338.6865 428.0283 338.5078 427.8018 338.375 c
427.5762 338.2432 427.2715 338.1133 426.8916 337.9873 c
426.4746 339.0313 L
426.707 339.0537 426.8955 339.0947 427.043 339.1523 c
427.1885 339.2119 427.3223 339.3008 427.4395 339.418 c
427.6641 339.6426 427.7832 339.8789 427.8008 340.127 c
427.8174 340.375 427.7266 340.5986 427.5283 340.7969 c
427.3418 340.9824 427.1055 341.0547 426.8184 341.0127 c
426.5303 340.9717 426.2617 340.8262 426.0127 340.5771 c
425.9209 340.4854 425.8389 340.3818 425.7656 340.2656 c
425.6934 340.1504 425.6426 340.0391 425.6094 339.9307 c
425.1826 340.4385 424.7959 340.8516 424.4473 341.1709 c
424.0957 341.4912 423.6475 341.8408 423.1016 342.2178 c
425.7422 344.8584 L
426.1113 344.3037 L
426.4824 343.7422 L
426.4043 343.7334 426.3066 343.6982 426.1895 343.6348 c
426.0742 343.5723 425.9785 343.5049 425.9053 343.4307 c
425.0742 342.5986 L
425.8633 341.7979 L
426.0156 341.9502 L
426.3848 342.3193 426.8252 342.5039 427.3359 342.5049 c
427.8457 342.5029 428.2832 342.3164 428.6543 341.9463 c
f*U
*u
421.208 330.8799 m
421.2139 331.0977 421.2969 331.2881 421.459 331.4492 c
421.627 331.6182 421.8164 331.7041 422.0264 331.708 c
422.2363 331.7129 422.4219 331.6357 422.583 331.4746 c
422.7393 331.3174 422.8135 331.1348 422.8086 330.9219 c
422.8027 330.709 422.7168 330.5195 422.5527 330.3555 c
422.3945 330.1982 422.2061 330.1162 421.9863 330.1104 c
421.7666 330.1055 421.582 330.1768 421.4346 330.3252 c
421.2793 330.4785 421.2051 330.6641 421.208 330.8799 c
f1 D
419.0898 333.416 m
419.1533 333.2998 419.1914 333.2129 419.2021 333.1543 C
419.6221 331.1406 l
419.708 330.7275 419.8164 330.3779 419.9473 330.0967 c
420.0752 329.8145 420.2383 329.5771 420.4326 329.3818 c
420.8477 328.9678 421.3223 328.7754 421.8584 328.8057 c
422.3945 328.8369 422.8955 329.085 423.3594 329.5488 c
423.8457 330.0352 424.0977 330.542 424.1133 331.0713 c
424.1309 331.5986 423.9121 332.0889 423.46 332.541 c
423.1016 332.9004 422.6777 333.084 422.1914 333.0938 c
421.7031 333.1025 421.2871 332.9346 420.9414 332.5889 c
420.875 332.5244 420.8125 332.457 420.7549 332.3857 C
420.4512 333.8311 l
420.375 334.1943 420.3242 334.4775 420.3008 334.6768 c
420.2754 334.877 420.2715 335.0391 420.2871 335.1611 C
418.8682 333.7412 l
418.9512 333.6367 419.0244 333.5283 419.0898 333.416 c
f*U
*u
0 D
413.5313 323.1104 m
413.5303 323.1885 413.5029 323.3311 413.4492 323.5361 c
413.3965 323.7402 413.3311 323.9502 413.252 324.1631 c
411.7275 328.3115 L
410.7734 327.3564 L
410.5723 327.1553 410.4131 326.9717 410.2939 326.8037 c
410.1758 326.6357 410.0752 326.4482 409.9902 326.2432 c
409.6348 326.8457 L
409.2783 327.4531 L
412.335 330.5098 L
414.5381 324.6621 L
414.5537 324.6162 414.585 324.5615 414.6289 324.499 c
414.6719 324.4365 414.7178 324.3848 414.7656 324.3447 c
413.5313 323.1104 L
f*U
*u
399.1211 326.0664 m
398.9268 326.0469 398.7686 326.0996 398.6445 326.2236 c
398.5186 326.3486 398.4658 326.5078 398.4844 326.7002 c
398.502 326.8936 398.5879 327.0664 398.7402 327.2188 c
398.8945 327.373 399.0684 327.46 399.2617 327.4775 c
399.4531 327.4961 399.6133 327.4424 399.7383 327.3174 c
399.8623 327.1934 399.9141 327.0352 399.8965 326.8428 c
399.876 326.6514 399.7891 326.4785 399.6357 326.3242 c
399.4824 326.1719 399.3115 326.0859 399.1211 326.0664 c
f1 D
401.0625 326.9756 m
401.1055 327.4707 400.9492 327.8965 400.5938 328.251 c
400.2373 328.6084 399.8105 328.7656 399.3145 328.7246 c
398.8193 328.6836 398.3604 328.4521 397.9395 328.0313 c
397.5176 327.6104 397.2871 327.1514 397.2471 326.6563 c
397.2061 326.1611 397.3652 325.7354 397.7217 325.3779 c
398.0762 325.0234 398.5 324.8662 398.9941 324.9072 C
399.0605 324.9121 L
399.0488 324.8018 l
399.0049 324.2715 399.1738 323.8145 399.5566 323.4326 c
399.9375 323.0508 400.3906 322.8799 400.917 322.9209 c
401.4424 322.96 401.9268 323.2021 402.3711 323.6455 c
402.8145 324.0889 403.0566 324.5742 403.0967 325.0996 c
403.1357 325.625 402.9648 326.0781 402.584 326.46 c
402.2012 326.8418 401.749 327.0146 401.2256 326.9785 C
401.0605 326.9561 L
401.0625 326.9756 l
f0 D
401.0342 325.7627 m
401.2383 325.7607 401.4199 325.6787 401.582 325.5166 c
401.7422 325.3574 401.8223 325.1768 401.8242 324.9736 c
401.8252 324.7705 401.7451 324.5898 401.5859 324.4297 c
401.4268 324.2705 401.2451 324.1914 401.043 324.1924 c
400.8398 324.1934 400.6592 324.2744 400.499 324.4346 c
400.3379 324.5957 400.2559 324.7773 400.2549 324.9805 c
400.2539 325.1826 400.333 325.3643 400.4922 325.5244 c
400.6523 325.6836 400.832 325.7627 401.0342 325.7627 c
f*U
*u
389.998 332.124 m
389.9941 331.9053 389.9111 331.7148 389.751 331.5547 c
389.583 331.3857 389.3926 331.2998 389.1807 331.2959 c
388.9688 331.292 388.7793 331.373 388.6152 331.5381 c
388.457 331.6963 388.3789 331.8838 388.3828 332.1006 c
388.3867 332.3154 388.4707 332.5059 388.6348 332.6699 c
388.793 332.8271 388.9824 332.9072 389.2031 332.9102 c
389.4258 332.9131 389.6133 332.8379 389.7646 332.6865 c
389.9219 332.5283 390 332.3408 389.998 332.124 c
f1 D
392.1152 329.6035 m
392.0449 329.7324 392.0039 329.833 391.9912 329.9053 C
391.582 331.8662 l
391.4941 332.2803 391.3818 332.6328 391.2422 332.9238 c
391.1035 333.2158 390.9258 333.4697 390.707 333.6875 c
390.3086 334.0879 389.8438 334.2676 389.3164 334.2295 c
388.7881 334.1914 388.292 333.9404 387.8281 333.4766 c
387.3428 332.9912 387.0908 332.4834 387.0732 331.9551 c
387.0566 331.4258 387.2734 330.9346 387.7266 330.4824 c
388.085 330.124 388.5156 329.9482 389.0225 329.957 c
389.5264 329.9658 389.9658 330.1563 390.3379 330.5283 C
390.4424 330.6328 L
390.7031 329.4102 l
390.792 328.9561 390.8516 328.6113 390.8848 328.3779 c
390.918 328.1426 390.9287 327.9639 390.9199 327.8408 C
392.3389 329.2588 l
392.2598 329.3604 392.1855 329.4756 392.1152 329.6035 c
f*U
*u
0 D
383.4902 337.7822 m
381.3994 339.873 L
380.7529 339.2158 L
380.7422 339.2275 L
381.0186 342.2217 L
384.4727 338.7656 L
384.6729 338.5674 384.8516 338.4111 385.0117 338.2979 c
385.1709 338.1855 385.3457 338.0898 385.5371 338.0117 c
384.8926 337.3672 L
384.2441 336.7197 L
384.166 336.9102 384.0713 337.0859 383.959 337.2461 c
383.8457 337.4053 383.6895 337.584 383.4902 337.7822 c
f*U
*u
387.3018 341.3447 m
387.1133 341.1572 386.8535 341.1328 386.5234 341.2686 c
386.1924 341.4053 385.8018 341.6982 385.3525 342.1475 c
384.9111 342.5889 384.6211 342.9775 384.4824 343.3154 c
384.3438 343.6523 384.3662 343.9131 384.5508 344.0967 c
384.7334 344.2793 384.9941 344.3027 385.332 344.165 c
385.6699 344.0264 386.0605 343.7373 386.502 343.2959 c
386.9414 342.8564 387.2305 342.4668 387.3691 342.1279 c
387.5068 341.7891 387.4844 341.5283 387.3018 341.3447 c
f1 D
388.1299 340.5166 m
388.6328 341.0195 388.8389 341.6367 388.7461 342.3682 c
388.6553 343.0986 388.2852 343.7881 387.6396 344.4346 c
386.9922 345.082 386.3037 345.4512 385.5723 345.543 c
384.8418 345.6338 384.2246 345.4277 383.7207 344.9238 c
383.2197 344.4229 383.0146 343.8076 383.1055 343.0771 c
383.1973 342.3457 383.5664 341.6572 384.2148 341.0098 c
384.875 340.3486 385.5645 339.9736 386.2842 339.8828 c
387.002 339.793 387.6172 340.0039 388.1299 340.5166 c
f*U
*u
0 D
383.2539 349.8047 m
381.1621 351.8955 L
380.5166 351.2373 L
380.5059 351.249 L
380.7822 354.2432 L
384.2373 350.7881 L
384.4365 350.5889 384.6152 350.4326 384.7754 350.3203 c
384.9346 350.2061 385.1104 350.1104 385.3008 350.0332 c
384.6553 349.3877 L
384.0078 348.7402 L
383.9307 348.9316 383.834 349.1064 383.7227 349.2676 c
383.6094 349.4268 383.4531 349.6055 383.2539 349.8047 c
f*U
*u
386.4443 352.9951 m
384.3535 355.0859 L
383.708 354.4287 L
383.6963 354.4404 L
383.9727 357.4346 L
387.4277 353.9785 L
387.627 353.7803 387.8057 353.624 387.9648 353.5107 c
388.125 353.3975 388.3008 353.3027 388.4922 353.2246 c
387.8467 352.5801 L
387.1992 351.9326 L
387.1211 352.1221 387.0254 352.2969 386.9141 352.459 c
386.8008 352.6172 386.6436 352.7969 386.4443 352.9951 c
f*U
0 R
0 G
0.25 w406.3516 343.8174 m
407.9922 343.083 l
408.8994 343.9893 l
408.165 345.6299 l
395.0967 358.6992 l
389.4365 362.5459 l
393.2832 356.8857 l
406.3516 343.8174 l
b403.7764 343.3379 m
402.5615 342.9355 l
401.75 343.7471 l
402.1533 344.96 l
411.0469 353.8545 l
415.0918 356.2783 l
412.6699 352.2314 l
403.7764 343.3379 l
b/BBAccumRotation (1.570796) XT
U1 Ap
0.75 g
0.5 w312.75 438.916 m
240.75 438.916 L
240.75 510.916 L
312.75 510.916 L
312.75 438.916 L
b1 g
0.67 G
0.25 w308.25 443.416 m
245.25 443.416 L
245.25 506.416 L
308.25 506.416 L
308.25 443.416 L
b0 G
2 w303.75 474.916 m
303.75 460.0044 291.6621 447.916 276.75 447.916 c
261.8384 447.916 249.75 460.0044 249.75 474.916 c
249.75 489.8276 261.8384 501.916 276.75 501.916 c
291.6621 501.916 303.75 489.8276 303.75 474.916 c
b*u
0 Ap
0 g
1 w273.7832 495.2231 m
273.7832 498.1802 L
272.8613 498.1724 L
272.8613 498.188 L
275.1738 500.1099 L
275.1738 495.2231 L
275.1738 494.9419 275.1895 494.7051 275.2227 494.5122 c
275.2559 494.3193 275.3125 494.1279 275.3926 493.938 c
274.4805 493.938 L
273.5645 493.938 L
273.6436 494.1279 273.7002 494.3193 273.7354 494.5122 c
273.7666 494.7051 273.7832 494.9419 273.7832 495.2231 c
f*U
*u
280.9199 498.499 m
280.9199 498.2695 280.8486 498.0156 280.7061 497.7368 c
280.5654 497.458 280.2988 497.0479 279.9063 496.5059 c
278.8613 495.063 L
279.4902 495.063 L
279.9932 495.063 280.3711 495.0806 280.625 495.1157 c
280.8789 495.1509 281.0664 495.2114 281.1855 495.2974 c
281.0156 494.6196 L
280.8418 493.938 L
276.5293 493.938 L
276.5293 493.9419 L
278.8516 497.2544 L
279.1289 497.6504 279.3154 497.9326 279.4082 498.1021 c
279.5 498.2715 279.5449 498.4106 279.5449 498.52 c
279.5449 498.6528 279.4961 498.7607 279.3975 498.8442 c
279.2988 498.9277 279.1719 498.9692 279.0166 498.9692 c
278.75 498.9692 278.5479 498.8477 278.4121 498.6045 c
278.2754 498.3613 278.2344 498.0479 278.2891 497.6641 c
277.0605 498.1255 L
276.9805 498.7085 277.1191 499.1846 277.4785 499.5547 c
277.8379 499.9248 278.3418 500.1099 278.9902 500.1099 c
279.5684 500.1099 280.0352 499.9609 280.3887 499.6641 c
280.7432 499.3696 280.9199 498.9814 280.9199 498.499 c
f*U
*u
287.7188 492.2017 m
287.7188 495.1587 L
286.7969 495.1509 L
286.7969 495.1665 L
289.1094 497.0884 L
289.1094 492.2017 L
289.1094 491.9204 289.126 491.6836 289.1592 491.4907 c
289.1924 491.2979 289.248 491.1064 289.3281 490.9165 c
288.416 490.9165 L
287.5 490.9165 L
287.5801 491.1064 287.6367 491.2979 287.6709 491.4907 c
287.7031 491.6836 287.7188 491.9204 287.7188 492.2017 c
f*U
*u
298.5801 487.1572 m
298.5801 486.9277 298.5088 486.6738 298.3652 486.395 c
298.2246 486.1162 297.959 485.7061 297.5664 485.1641 c
296.5215 483.7212 L
297.1504 483.7212 L
297.6523 483.7212 298.0313 483.7388 298.2852 483.7739 c
298.5391 483.8091 298.7256 483.8696 298.8457 483.9556 c
298.6758 483.2778 L
298.502 482.5962 L
294.1895 482.5962 L
294.1895 482.6001 L
296.5117 485.9126 L
296.7891 486.3086 296.9746 486.5908 297.0684 486.7603 c
297.1592 486.9297 297.2051 487.0688 297.2051 487.1782 c
297.2051 487.311 297.1563 487.4189 297.0576 487.5024 c
296.959 487.5859 296.832 487.6274 296.6758 487.6274 c
296.4092 487.6274 296.208 487.5059 296.0713 487.2627 c
295.9355 487.0195 295.8945 486.7061 295.9492 486.3223 c
294.7207 486.7837 L
294.6396 487.3667 294.7793 487.8428 295.1387 488.2129 c
295.498 488.583 296.002 488.7681 296.6504 488.7681 c
297.2285 488.7681 297.6943 488.6191 298.0488 488.3223 c
298.4023 488.0278 298.5801 487.6396 298.5801 487.1572 c
f*U
*u
298.1973 476.8687 m
297.8535 476.8687 297.5723 476.8486 297.3535 476.8081 c
297.1348 476.7676 296.9297 476.6992 296.7402 476.603 c
296.9023 477.2964 L
297.0684 477.9937 L
300.959 477.9937 L
300.959 477.9897 L
299.6514 475.5127 L
299.8193 475.4292 299.9727 475.3242 300.1123 475.1963 c
300.5098 474.835 300.709 474.3926 300.709 473.8701 c
300.709 473.251 300.5068 472.7598 300.1045 472.3975 c
299.7021 472.0342 299.1563 471.853 298.4688 471.853 c
298.0977 471.853 297.7734 471.894 297.499 471.9761 c
297.2236 472.0581 296.9131 472.2046 296.5684 472.4155 c
297.0723 473.4038 L
297.2695 473.25 297.4424 473.1406 297.5879 473.0757 c
297.7344 473.0107 297.8809 472.978 298.0273 472.978 c
298.3555 472.978 298.6162 473.0586 298.8096 473.2197 c
299.002 473.3813 299.0996 473.5986 299.0996 473.8726 c
299.0996 474.1484 299.002 474.3682 298.8086 474.5308 c
298.6143 474.6934 298.3516 474.7749 298.0215 474.7749 c
297.8965 474.7749 L
298.9873 476.8687 l
298.1973 476.8687 L
f*U
*u
294.5127 463.7319 m
294.5527 463.7871 L
295.6016 465.3569 L
295.6016 463.7319 L
295.5996 463.7319 L
294.5127 463.7319 l
f1 D
295.4795 462.6069 m
295.4795 461.6421 l
295.4795 461.4458 295.4688 461.2524 295.4482 461.0615 c
295.4277 460.8706 295.4014 460.7349 295.3701 460.6538 C
297.0469 460.6538 l
297.0361 460.7349 297.0273 460.8706 297.0215 461.0615 c
297.0146 461.2524 297.0117 461.4458 297.0117 461.6421 C
297.0117 462.6069 L
297.1084 462.6069 l
297.2451 462.6069 297.3818 462.5986 297.5195 462.5815 c
297.6563 462.5645 297.7559 462.5444 297.8184 462.521 C
297.8184 463.8179 l
297.7539 463.7944 297.6514 463.7744 297.5117 463.7573 c
297.3711 463.7402 297.2305 463.7319 297.0908 463.7319 C
296.9912 463.7319 L
296.9375 466.7319 L
296.1875 466.7319 L
295.4414 466.7319 l
295.0479 466.1353 294.6953 465.6309 294.3828 465.2188 c
294.0674 464.8057 293.6738 464.3301 293.2031 463.7905 C
293.2031 463.1968 L
293.2031 462.6069 L
295.4795 462.6069 l
f*U
*u
0 D
289.9316 454.875 m
289.9316 454.2539 289.7285 453.7622 289.3213 453.3984 c
288.9141 453.0352 288.3623 452.8535 287.665 452.8535 c
287.3447 452.8535 287.0576 452.8867 286.8047 452.9531 c
286.5508 453.019 286.2441 453.1421 285.8848 453.3223 c
286.3291 454.356 L
286.5088 454.2075 286.6719 454.1025 286.8164 454.04 c
286.9629 453.9785 287.1191 453.9473 287.2852 453.9473 c
287.6025 453.9473 287.8545 454.0293 288.042 454.1924 c
288.2285 454.3564 288.3223 454.5786 288.3223 454.8594 c
288.3223 455.1221 288.2061 455.3408 287.9727 455.5146 c
287.7402 455.6885 287.4473 455.7754 287.0957 455.7754 c
286.9658 455.7754 286.834 455.7598 286.7012 455.7295 c
286.5684 455.6992 286.4531 455.6572 286.3535 455.6035 c
286.4111 456.2637 286.4297 456.8301 286.4082 457.3027 c
286.3877 457.7778 286.3174 458.3418 286.1973 458.9941 c
289.9316 458.9941 L
289.8008 458.3398 L
289.666 457.6816 L
289.6035 457.731 289.5098 457.7744 289.3828 457.8125 c
289.2568 457.8501 289.1416 457.8691 289.0371 457.8691 c
287.8613 457.8691 L
287.8535 456.7441 L
288.0684 456.7441 L
288.5908 456.7441 289.0332 456.5635 289.3945 456.2031 c
289.7529 455.8418 289.9316 455.3994 289.9316 454.875 c
f*U
*u
276.8418 452.3154 m
277 452.4658 277.1934 452.541 277.4219 452.541 c
277.6602 452.541 277.8545 452.4683 278.0059 452.3232 c
278.1582 452.1782 278.2344 451.9917 278.2344 451.7637 c
278.2344 451.5435 278.1563 451.3604 278.002 451.2139 c
277.8477 451.0674 277.6543 450.9941 277.4219 450.9941 c
277.1982 450.9941 277.0078 451.0698 276.8477 451.2217 c
276.6885 451.373 276.6094 451.5537 276.6094 451.7637 c
276.6094 451.9814 276.6865 452.165 276.8418 452.3154 c
f1 D
277.1367 455.6079 m
277.0996 455.4805 277.0645 455.3916 277.0313 455.3428 C
275.9043 453.6221 l
275.6729 453.2686 275.5039 452.9458 275.3955 452.6543 c
275.2871 452.3633 275.2344 452.0801 275.2344 451.8042 c
275.2344 451.2188 275.4346 450.7471 275.8359 450.3896 c
276.2363 450.0322 276.7656 449.8535 277.4219 449.8535 c
278.1094 449.8535 278.6455 450.0342 279.0313 450.396 c
279.416 450.7578 279.6094 451.2583 279.6094 451.8984 c
279.6094 452.4053 279.4395 452.835 279.1016 453.186 c
278.7637 453.5371 278.3506 453.7129 277.8623 453.7129 c
277.7686 453.7153 277.6758 453.7114 277.5859 453.7012 C
278.3926 454.9375 l
278.5957 455.249 278.7607 455.4844 278.8848 455.6431 c
279.0088 455.8018 279.1201 455.9189 279.2188 455.9941 C
277.2109 455.9941 l
277.1953 455.8613 277.1699 455.7324 277.1367 455.6079 c
f*U
*u
0 D
265.9199 452.2495 m
265.9746 452.3066 266.0547 452.4268 266.1621 452.6089 c
266.2695 452.791 266.3711 452.9854 266.4668 453.1909 c
268.3213 457.2026 L
266.9717 457.2026 L
266.6875 457.2026 266.4443 457.1851 266.2422 457.1499 c
266.04 457.1147 265.8359 457.0542 265.6309 456.9683 c
265.8066 457.6465 L
265.9824 458.3276 L
270.3066 458.3276 L
267.7285 452.6357 L
267.707 452.5918 267.6904 452.5317 267.6777 452.4561 c
267.6641 452.3809 267.6602 452.312 267.666 452.2495 c
265.9199 452.2495 L
f*U
*u
257.8203 464.5303 m
257.6694 464.6533 257.5942 464.8027 257.5942 464.9775 c
257.5942 465.1553 257.6689 465.3057 257.8184 465.4287 c
257.9678 465.5527 258.1499 465.6143 258.3657 465.6143 c
258.584 465.6143 258.7676 465.5527 258.917 465.4287 c
259.0664 465.3057 259.1411 465.1553 259.1411 464.9775 c
259.1411 464.8027 259.0664 464.6538 258.917 464.5317 c
258.7676 464.4097 258.584 464.3486 258.3657 464.3486 c
258.1499 464.3486 257.9683 464.4092 257.8203 464.5303 c
f1 D
259.8359 463.7998 m
260.2158 464.1201 260.4063 464.5313 260.4063 465.0332 c
260.4063 465.5381 260.2163 465.9512 259.8364 466.2725 c
259.4565 466.5938 258.9688 466.7549 258.373 466.7549 c
257.7773 466.7549 257.29 466.5938 256.9116 466.2725 c
256.5332 465.9512 256.3438 465.5381 256.3438 465.0332 c
256.3438 464.5313 256.5322 464.1201 256.9102 463.7998 C
256.9609 463.7568 L
256.875 463.6865 l
256.4688 463.3428 256.2656 462.9004 256.2656 462.3594 c
256.2656 461.8203 256.4653 461.3789 256.8652 461.0356 c
257.2646 460.6924 257.7783 460.5205 258.4063 460.5205 c
259.0337 460.5205 259.5474 460.6924 259.9473 461.0356 c
260.3467 461.3789 260.5469 461.8203 260.5469 462.3594 c
260.5469 462.9004 260.3486 463.3428 259.9531 463.6865 C
259.8203 463.7881 L
259.8359 463.7998 l
f0 D
258.958 462.9624 m
259.1006 462.8169 259.1719 462.6299 259.1719 462.4014 c
259.1719 462.1753 259.1006 461.9902 258.958 461.8462 c
258.8154 461.7021 258.6313 461.6299 258.4063 461.6299 c
258.1807 461.6299 257.9966 461.7021 257.854 461.8462 c
257.7114 461.9902 257.6406 462.1753 257.6406 462.4014 c
257.6406 462.6299 257.7114 462.8164 257.854 462.9604 c
257.9966 463.1045 258.1807 463.1768 258.4063 463.1768 c
258.6313 463.1768 258.8154 463.1055 258.958 462.9624 c
f*U
*u
255.6523 475.2646 m
255.4951 475.1123 255.3022 475.0361 255.0747 475.0361 c
254.8369 475.0361 254.6416 475.1094 254.4893 475.2568 c
254.3364 475.4043 254.2603 475.5947 254.2603 475.8271 c
254.2603 476.0518 254.3379 476.2393 254.4932 476.3896 c
254.6479 476.5391 254.8418 476.6143 255.0747 476.6143 c
255.2969 476.6143 255.4873 476.5366 255.6465 476.3818 c
255.8057 476.2266 255.8853 476.0415 255.8853 475.8271 c
255.8853 475.6045 255.8076 475.417 255.6523 475.2646 c
f1 D
255.3672 471.9854 m
255.4092 472.126 255.4502 472.2261 255.4922 472.2861 C
256.5903 473.9619 l
256.8213 474.3159 256.9907 474.6455 257.0986 474.9502 c
257.2061 475.2549 257.2603 475.5605 257.2603 475.8682 c
257.2603 476.4331 257.0596 476.8887 256.6592 477.2354 c
256.2583 477.5815 255.7305 477.7549 255.0747 477.7549 c
254.3877 477.7549 253.8511 477.5742 253.4648 477.2124 c
253.0781 476.8506 252.8853 476.3496 252.8853 475.71 c
252.8853 475.2026 253.0664 474.7734 253.4297 474.4224 c
253.793 474.0713 254.2383 473.8955 254.7646 473.8955 C
254.9126 473.8955 L
254.2314 472.8467 l
253.9736 472.4634 253.7729 472.1768 253.6299 471.9883 c
253.4868 471.7988 253.3687 471.6641 253.2759 471.583 C
255.2817 471.583 l
255.2974 471.7104 255.3262 471.8447 255.3672 471.9854 c
f*U
*u
0 D
255.0518 483.8677 m
255.0518 486.8247 L
254.1299 486.8169 L
254.1299 486.8325 L
256.4424 488.7544 L
256.4424 483.8677 L
256.4424 483.5864 256.459 483.3496 256.4922 483.1567 c
256.5254 482.9639 256.5815 482.7725 256.6611 482.5825 c
255.749 482.5825 L
254.833 482.5825 L
254.9126 482.7725 254.9697 482.9639 255.0039 483.1567 c
255.0361 483.3496 255.0518 483.5864 255.0518 483.8677 c
f*U
*u
260.2656 483.6919 m
260.0005 483.6919 259.7993 483.8574 259.6616 484.188 c
259.5239 484.5186 259.4551 485.002 259.4551 485.6372 c
259.4551 486.2607 259.5249 486.7412 259.6655 487.0776 c
259.8057 487.4141 260.0059 487.5825 260.2656 487.5825 c
260.5249 487.5825 260.7256 487.4141 260.8672 487.0776 c
261.0088 486.7412 261.0801 486.2607 261.0801 485.6372 c
261.0801 485.0146 261.0088 484.5352 260.8672 484.1978 c
260.7256 483.8604 260.5249 483.6919 260.2656 483.6919 c
f1 D
260.2656 482.52 m
260.9771 482.52 261.5591 482.811 262.0112 483.3931 c
262.4634 483.9751 262.6895 484.7231 262.6895 485.6372 c
262.6895 486.5527 262.4634 487.3008 262.0112 487.8823 c
261.5591 488.4639 260.9771 488.7544 260.2656 488.7544 c
259.5566 488.7544 258.9761 488.4639 258.5239 487.8823 c
258.0718 487.3008 257.8457 486.5527 257.8457 485.6372 c
257.8457 484.7021 258.0679 483.9492 258.5122 483.3774 c
258.9565 482.8057 259.541 482.52 260.2656 482.52 c
f*U
*u
0 D
263.3853 492.5347 m
263.3853 495.4917 L
262.4634 495.4839 L
262.4634 495.4995 L
264.7754 497.4214 L
264.7754 492.5347 L
264.7754 492.2534 264.792 492.0166 264.8252 491.8237 c
264.8584 491.6309 264.915 491.4395 264.9941 491.2495 c
264.082 491.2495 L
263.1665 491.2495 L
263.2461 491.4395 263.3027 491.6309 263.3379 491.8237 c
263.3691 492.0166 263.3853 492.2534 263.3853 492.5347 c
f*U
*u
267.8984 492.5347 m
267.8984 495.4917 L
266.9766 495.4839 L
266.9766 495.4995 L
269.2891 497.4214 L
269.2891 492.5347 L
269.2891 492.2534 269.3047 492.0166 269.3379 491.8237 c
269.3711 491.6309 269.4277 491.4395 269.5078 491.2495 c
268.5957 491.2495 L
267.6797 491.2495 L
267.7588 491.4395 267.8154 491.6309 267.8496 491.8237 c
267.8818 492.0166 267.8984 492.2534 267.8984 492.5347 c
f*U
0 R
0 G
0.25 w275.4844 471.9688 m
276.125 470.2886 l
277.4082 470.2886 l
278.0488 471.9688 l
278.0488 490.4517 l
276.7666 497.1729 l
275.4844 490.4517 l
275.4844 471.9688 l
b273.3242 473.4517 m
272.1816 474.0254 l
272.1816 475.1729 l
273.3242 475.7461 l
285.9023 475.7461 l
290.4766 474.5991 l
285.9023 473.4517 l
273.3242 473.4517 l
b/BBAccumRotation (1.570796) XT
u0.75 g
1 w240.7861 432.166 m
240.7861 517.666 l
B0 g
240.7861 517.1563 m
238.9844 516.0605 l
238.9438 516.1221 l
240.1104 519.0596 l
240.3359 520.083 240.5605 521.1064 240.7861 522.1299 c
241.0112 521.1064 241.2363 520.083 241.4619 519.0596 c
242.6284 516.1221 l
242.5977 516.0605 l
240.7861 517.1563 l
fUu0.75 g
0 R
0 G
234.0361 438.916 m
319.5361 438.916 l
B0 g
319.0264 438.916 m
317.9307 440.7178 l
317.9922 440.7588 l
320.9297 439.5918 l
321.9531 439.3662 322.9766 439.1416 324 438.916 c
322.9766 438.6904 321.9531 438.4658 320.9297 438.2402 c
317.9922 437.0732 l
317.9307 437.1045 l
319.0264 438.916 l
fUu0.75 g
0 R
0 G
400.5361 432.2021 m
400.5361 517.7021 l
B0 g
400.5361 517.1924 m
398.7344 516.0967 l
398.6943 516.1582 l
399.8604 519.0957 l
400.0859 520.1191 400.3105 521.1426 400.5361 522.166 c
400.7607 521.1426 400.9863 520.1191 401.2119 519.0957 c
402.3779 516.1582 l
402.3477 516.0967 l
400.5361 517.1924 l
fUu0.75 g
0 R
0 G
393.7861 438.9521 m
479.2861 438.9521 l
B0 g
478.7764 438.9521 m
477.6807 440.7539 l
477.7422 440.7949 l
480.6797 439.6279 l
481.7031 439.4023 482.7266 439.1777 483.75 438.9521 c
482.7266 438.7266 481.7031 438.502 480.6797 438.2764 c
477.7422 437.1094 l
477.6807 437.1406 l
478.7764 438.9521 l
fU0 R
0.74 G
4 w325.6992 473.4893 m
366.1992 473.4893 l
B/BBAccumRotation (1.570796) XT
0.74 g
1 w361.7051 467.5645 m
364.2217 473.4893 l
361.7051 479.416 l
375.75 473.4893 l
361.7051 467.5645 l
f/BBAccumRotation (1.570796) XT
u0.75 g
0 R
0 G
263.25 317.4521 m
263.25 402.9521 l
B0 g
263.25 402.4424 m
261.4482 401.3467 l
261.4077 401.4082 l
262.5742 404.3457 l
262.7998 405.3691 263.0244 406.3926 263.25 407.416 c
263.4751 406.3926 263.7002 405.3691 263.9258 404.3457 c
265.0923 401.4082 l
265.0615 401.3467 l
263.25 402.4424 l
fUu0.75 g
0 R
0 G
256.5 324.2021 m
342 324.2021 l
B0 g
341.4902 324.2021 m
340.3945 326.0039 l
340.4561 326.0449 l
343.3936 324.8779 l
344.417 324.6523 345.4404 324.4277 346.4639 324.2021 c
345.4404 323.9766 344.417 323.752 343.3936 323.5264 c
340.4561 322.3594 l
340.3945 322.3906 l
341.4902 324.2021 l
fU0 R
0.74 G
4 w374.6406 448.4756 m
346.0029 419.8379 l
B0.74 g
1 w344.9912 427.3711 m
347.4014 421.4023 l
353.3711 418.9902 l
339.25 413.25 l
344.9912 427.3711 l
fu0.75 g
0 R
0 G
405 288.5 m
405 374 l
B0 g
405 373.4902 m
403.1982 372.3945 l
403.1582 372.4561 l
404.3242 375.3936 l
404.5498 376.417 404.7744 377.4404 405 378.4639 c
405.2246 377.4404 405.4502 376.417 405.6758 375.3936 c
406.8418 372.4561 l
406.8115 372.3945 l
405 373.4902 l
fUu0.75 g
0 R
0 G
398.25 295.25 m
483.75 295.25 l
B0 g
483.2402 295.25 m
482.1445 297.0518 l
482.2061 297.0928 l
485.1436 295.9258 l
486.167 295.7002 487.1904 295.4756 488.2139 295.25 c
487.1904 295.0244 486.167 294.7998 485.1436 294.5742 c
482.2061 293.4072 l
482.1445 293.4385 l
483.2402 295.25 l
fUu*u
339.2686 467.4082 m
339.2607 467.6719 339.1602 468.1118 338.2344 468.1118 c
338.0098 468.1118 337.3672 468.04 337.3672 467.52 c
337.3672 467.1758 337.5928 467.0962 338.1602 466.96 c
338.8936 466.7842 L
339.8027 466.5679 340.1191 466.248 340.1191 465.6802 c
340.1191 464.8159 339.377 464.2959 338.3936 464.2959 c
336.667 464.2959 336.542 465.2559 336.5166 465.7598 c
337.2256 465.7598 L
337.251 465.4321 337.3506 464.9038 338.3848 464.9038 c
338.9102 464.9038 339.3857 465.104 339.3857 465.5679 c
339.3857 465.9038 339.1436 466.0161 338.5186 466.168 c
337.668 466.3682 L
337.0586 466.5122 336.6582 466.8081 336.6582 467.3838 c
336.6582 468.3042 337.4512 468.7197 338.3096 468.7197 c
339.8691 468.7197 339.9775 467.6162 339.9775 467.4082 C
339.2686 467.4082 l
f*U
*u
344.5146 464.416 m
343.7803 464.416 L
343.7803 467.1519 L
343.7803 467.7202 343.6133 468.0879 342.9131 468.0879 c
342.3125 468.0879 341.6953 467.752 341.6953 466.6958 c
341.6953 464.416 L
340.9619 464.416 L
340.9619 470.1602 L
341.6953 470.1602 L
341.6953 468.04 L
341.7119 468.04 L
341.9209 468.3042 342.2881 468.7197 342.9883 468.7197 c
343.6641 468.7197 344.5146 468.4561 344.5146 467.2642 C
344.5146 464.416 l
f*U
*u
349.3008 465.728 m
349.2764 465.5278 349.0762 464.936 348.5254 464.584 c
348.3252 464.4561 348.042 464.2959 347.3418 464.2959 c
346.1152 464.2959 345.3896 465.1841 345.3896 466.3921 c
345.3896 467.688 346.04 468.7197 347.4834 468.7197 c
348.7422 468.7197 349.3594 467.7598 349.3594 466.2798 c
346.1738 466.2798 L
346.1738 465.4082 346.5996 464.9038 347.4414 464.9038 c
348.1338 464.9038 348.542 465.416 348.5674 465.728 C
349.3008 465.728 l
f1 D
348.6006 466.8398 m
348.5586 467.4878 348.2754 468.0879 347.3828 468.0879 c
346.708 468.0879 346.1738 467.4878 346.1738 466.8398 C
348.6006 466.8398 l
f*U
*u
0 D
350.21 467.3281 m
350.2432 468.3281 350.9355 468.7197 352.0117 468.7197 c
352.3613 468.7197 353.6289 468.624 353.6289 467.5518 c
353.6289 465.144 L
353.6289 464.9678 353.7207 464.896 353.8711 464.896 c
353.9375 464.896 354.0293 464.9121 354.1133 464.9282 c
354.1133 464.416 L
353.9883 464.3838 353.8799 464.3359 353.7129 464.3359 c
353.0625 464.3359 352.9619 464.6563 352.9375 464.9761 c
352.6533 464.6802 352.2119 464.2959 351.3613 464.2959 c
350.5605 464.2959 349.9932 464.7842 349.9932 465.5039 c
349.9932 465.856 350.1016 466.6719 351.3193 466.8159 c
352.5283 466.96 L
352.7041 466.9761 352.9121 467.04 352.9121 467.4561 c
352.9121 467.896 352.5781 468.1357 351.8867 468.1357 c
351.0527 468.1357 350.9355 467.6479 350.8857 467.3281 C
350.21 467.3281 l
f1 D
352.8955 466.5518 m
352.7783 466.4639 352.5957 466.3999 351.6865 466.2881 c
351.3281 466.2402 350.752 466.1362 350.752 465.6079 c
350.752 465.1519 350.9941 464.8799 351.5449 464.8799 c
352.2285 464.8799 352.8955 465.3042 352.8955 465.8638 C
352.8955 466.5518 l
f*U
*u
0 D
355.7061 464.416 m
354.9717 464.416 L
354.9717 468.6001 L
355.6641 468.6001 L
355.6641 467.9038 L
355.6807 467.9038 L
355.9727 468.3921 356.3564 468.7197 356.9063 468.7197 c
356.998 468.7197 357.04 468.7119 357.0986 468.6958 c
357.0986 467.9678 L
356.8232 467.9678 L
356.1396 467.9678 355.7061 467.4561 355.7061 466.8481 C
355.7061 464.416 l
f*U
U1 Ap
1 g
372.2627 431.125 m
349.7627 431.125 L
349.7627 440.125 L
372.2627 440.125 L
372.2627 431.125 L
f*u
0 Ap
0 g
310.5469 432 m
312.1025 434.1973 L
310.6094 436.2656 L
312.001 436.2656 L
312.7686 435.0928 L
313.5703 436.2656 L
314.9063 436.2656 L
313.4512 434.2451 L
315.0469 432 L
313.6553 432 L
312.7686 433.3213 L
311.8828 432 l
310.5469 432 L
f*U
*u
234.0469 510.6816 m
235.25 510.6816 L
236.2891 507.6504 L
237.2813 510.6816 L
238.4844 510.6816 L
236.9648 506.5811 L
236.6841 505.8242 L
236.584 505.5762 236.4883 505.3877 236.3975 505.2568 c
236.3066 505.1265 236.2026 505.0205 236.085 504.9395 c
235.9673 504.8584 235.8223 504.7949 235.6504 504.7495 c
235.4785 504.7041 235.2842 504.6816 235.0674 504.6816 c
234.8486 504.6816 234.6328 504.7041 234.4219 504.749 c
234.3438 505.625 L
234.5195 505.5898 234.6777 505.5723 234.8184 505.5723 c
235.0791 505.5723 235.2725 505.6504 235.3975 505.8057 c
235.5225 505.9614 235.6182 506.1597 235.6846 506.4004 c
234.0469 510.6816 L
f*U
*u
474.8145 288.5 m
476.3701 290.6973 L
474.877 292.7656 L
476.2686 292.7656 L
477.0361 291.5928 L
477.8379 292.7656 L
479.1738 292.7656 L
477.7188 290.7451 L
479.3145 288.5 L
477.9229 288.5 L
477.0361 289.8213 L
476.1504 288.5 l
474.8145 288.5 L
f*U
*u
398.3145 369.2656 m
399.5176 369.2656 L
400.5566 366.2344 L
401.5488 369.2656 L
402.752 369.2656 L
401.2324 365.165 L
400.9512 364.4082 L
400.8516 364.1602 400.7559 363.9717 400.665 363.8408 c
400.5742 363.7109 400.4707 363.6045 400.3525 363.5234 c
400.2344 363.4424 400.0898 363.3789 399.918 363.334 c
399.7461 363.2881 399.5518 363.2656 399.335 363.2656 c
399.1162 363.2656 398.9004 363.2881 398.6895 363.333 c
398.6113 364.209 L
398.7871 364.1738 398.9453 364.1563 399.0859 364.1563 c
399.3467 364.1563 399.54 364.2344 399.665 364.3896 c
399.79 364.5449 399.8857 364.7441 399.9521 364.9844 c
398.3145 369.2656 L
f*U
*u
256.5469 402.4316 m
257.75 402.4316 L
258.7891 399.4004 L
259.7813 402.4316 L
260.9844 402.4316 L
259.4648 398.3311 L
259.1841 397.5742 L
259.084 397.3262 258.9883 397.1377 258.8975 397.0068 c
258.8066 396.8765 258.7026 396.7705 258.585 396.6895 c
258.4673 396.6084 258.3223 396.5449 258.1504 396.4995 c
257.9785 396.4541 257.7842 396.4316 257.5674 396.4316 c
257.3486 396.4316 257.1328 396.4541 256.9219 396.499 c
256.8438 397.375 L
257.0195 397.3398 257.1777 397.3223 257.3184 397.3223 c
257.5791 397.3223 257.7725 397.4004 257.8975 397.5557 c
258.0225 397.7114 258.1182 397.9097 258.1846 398.1504 c
256.5469 402.4316 L
f*U
1 Ap
0 R
0 G
0.5 w491.0107 282.9434 m
230.7388 282.9434 L
230.7388 524.4731 L
491.0107 524.4731 L
491.0107 282.9434 L
s*u
0 Ap
0 O
0 g
1 w470.2969 432 m
471.8525 434.1973 L
470.3594 436.2656 L
471.751 436.2656 L
472.5186 435.0928 L
473.3203 436.2656 L
474.6563 436.2656 L
473.2012 434.2451 L
474.7969 432 L
473.4053 432 L
472.5186 433.3213 L
471.6328 432 l
470.2969 432 L
f*U
*u
333.0469 317.25 m
334.6025 319.4473 L
333.1094 321.5156 L
334.501 321.5156 L
335.2686 320.3428 L
336.0703 321.5156 L
337.4063 321.5156 L
335.9512 319.4951 L
337.5469 317.25 L
336.1553 317.25 L
335.2686 318.5713 L
334.3828 317.25 l
333.0469 317.25 L
f*U
u*u
354.2686 436.9023 m
354.2607 437.166 354.1602 437.606 353.2344 437.606 c
353.0098 437.606 352.3672 437.5342 352.3672 437.0142 c
352.3672 436.6699 352.5928 436.5903 353.1602 436.4541 c
353.8936 436.2783 L
354.8027 436.062 355.1191 435.7422 355.1191 435.1743 c
355.1191 434.3101 354.377 433.79 353.3936 433.79 c
351.667 433.79 351.542 434.75 351.5166 435.2539 c
352.2256 435.2539 L
352.251 434.9263 352.3506 434.3979 353.3848 434.3979 c
353.9102 434.3979 354.3857 434.5981 354.3857 435.062 c
354.3857 435.3979 354.1436 435.5103 353.5186 435.6621 c
352.668 435.8623 L
352.0586 436.0063 351.6582 436.3022 351.6582 436.8779 c
351.6582 437.7983 352.4512 438.2139 353.3096 438.2139 c
354.8691 438.2139 354.9775 437.1104 354.9775 436.9023 C
354.2686 436.9023 l
f*U
*u
359.5146 433.9102 m
358.7803 433.9102 L
358.7803 436.646 L
358.7803 437.2144 358.6133 437.582 357.9131 437.582 c
357.3125 437.582 356.6953 437.2461 356.6953 436.1899 c
356.6953 433.9102 L
355.9619 433.9102 L
355.9619 439.6543 L
356.6953 439.6543 L
356.6953 437.5342 L
356.7119 437.5342 L
356.9209 437.7983 357.2881 438.2139 357.9883 438.2139 c
358.6641 438.2139 359.5146 437.9502 359.5146 436.7583 C
359.5146 433.9102 l
f*U
*u
364.3008 435.2222 m
364.2764 435.022 364.0762 434.4302 363.5254 434.0781 c
363.3252 433.9502 363.042 433.79 362.3418 433.79 c
361.1152 433.79 360.3896 434.6782 360.3896 435.8862 c
360.3896 437.1821 361.04 438.2139 362.4834 438.2139 c
363.7422 438.2139 364.3594 437.2539 364.3594 435.7739 c
361.1738 435.7739 L
361.1738 434.9023 361.5996 434.3979 362.4414 434.3979 c
363.1338 434.3979 363.542 434.9102 363.5674 435.2222 C
364.3008 435.2222 l
f1 D
363.6006 436.334 m
363.5586 436.9819 363.2754 437.582 362.3828 437.582 c
361.708 437.582 361.1738 436.9819 361.1738 436.334 C
363.6006 436.334 l
f*U
*u
0 D
365.21 436.8223 m
365.2432 437.8223 365.9355 438.2139 367.0117 438.2139 c
367.3613 438.2139 368.6289 438.1182 368.6289 437.0459 c
368.6289 434.6382 L
368.6289 434.4619 368.7207 434.3901 368.8711 434.3901 c
368.9375 434.3901 369.0293 434.4063 369.1133 434.4224 c
369.1133 433.9102 L
368.9883 433.8779 368.8799 433.8301 368.7129 433.8301 c
368.0625 433.8301 367.9619 434.1504 367.9375 434.4702 c
367.6533 434.1743 367.2119 433.79 366.3613 433.79 c
365.5605 433.79 364.9932 434.2783 364.9932 434.998 c
364.9932 435.3501 365.1016 436.166 366.3193 436.3101 c
367.5283 436.4541 L
367.7041 436.4702 367.9121 436.5342 367.9121 436.9502 c
367.9121 437.3901 367.5781 437.6299 366.8867 437.6299 c
366.0527 437.6299 365.9355 437.1421 365.8857 436.8223 C
365.21 436.8223 l
f1 D
367.8955 436.0459 m
367.7783 435.958 367.5957 435.894 366.6865 435.7822 c
366.3281 435.7344 365.752 435.6304 365.752 435.1021 c
365.752 434.646 365.9941 434.374 366.5449 434.374 c
367.2285 434.374 367.8955 434.7983 367.8955 435.3579 C
367.8955 436.0459 l
f*U
*u
0 D
370.7061 433.9102 m
369.9717 433.9102 L
369.9717 438.0942 L
370.6641 438.0942 L
370.6641 437.3979 L
370.6807 437.3979 L
370.9727 437.8862 371.3564 438.2139 371.9063 438.2139 c
371.998 438.2139 372.04 438.2061 372.0986 438.1899 c
372.0986 437.4619 L
371.8232 437.4619 L
371.1396 437.4619 370.7061 436.9502 370.7061 436.3423 C
370.7061 433.9102 l
f*U
U0 R
0.74 G
4 w299.3086 343.8223 m
339.8086 343.8223 l
B/BBAccumRotation (1.570796) XT
0.74 g
1 w335.3145 337.8965 m
337.8311 343.8223 l
335.3145 349.748 l
349.3594 343.8223 l
335.3145 337.8965 l
f/BBAccumRotation (1.570796) XT
u*u
0 g
312.8779 337.7402 m
312.8701 338.0039 312.7695 338.4443 311.8438 338.4443 c
311.6191 338.4443 310.9766 338.3721 310.9766 337.8516 c
310.9766 337.5078 311.2021 337.4277 311.7695 337.292 c
312.5029 337.1162 L
313.4121 336.9004 313.7285 336.5801 313.7285 336.0117 c
313.7285 335.1484 312.9863 334.6279 312.0029 334.6279 c
310.2764 334.6279 310.1514 335.5879 310.126 336.0918 c
310.835 336.0918 L
310.8604 335.7637 310.96 335.2363 311.9941 335.2363 c
312.5195 335.2363 312.9951 335.4365 312.9951 335.9004 c
312.9951 336.2363 312.7529 336.3477 312.1279 336.5 c
311.2773 336.7002 L
310.668 336.8438 310.2676 337.1396 310.2676 337.7158 c
310.2676 338.6357 311.0605 339.0518 311.9189 339.0518 c
313.4785 339.0518 313.5869 337.9482 313.5869 337.7402 C
312.8779 337.7402 l
f*U
*u
318.124 334.748 m
317.3896 334.748 L
317.3896 337.4844 L
317.3896 338.0518 317.2227 338.4199 316.5225 338.4199 c
315.9219 338.4199 315.3047 338.084 315.3047 337.0283 c
315.3047 334.748 L
314.5713 334.748 L
314.5713 340.4922 L
315.3047 340.4922 L
315.3047 338.3721 L
315.3213 338.3721 L
315.5303 338.6357 315.8975 339.0518 316.5977 339.0518 c
317.2734 339.0518 318.124 338.7881 318.124 337.5957 C
318.124 334.748 l
f*U
*u
322.9102 336.0596 m
322.8857 335.8604 322.6855 335.2676 322.1348 334.916 c
321.9346 334.7881 321.6514 334.6279 320.9512 334.6279 c
319.7246 334.6279 318.999 335.5156 318.999 336.7236 c
318.999 338.0195 319.6494 339.0518 321.0928 339.0518 c
322.3516 339.0518 322.9688 338.0918 322.9688 336.6123 c
319.7832 336.6123 L
319.7832 335.7402 320.209 335.2363 321.0508 335.2363 c
321.7432 335.2363 322.1514 335.748 322.1768 336.0596 C
322.9102 336.0596 l
f1 D
322.21 337.1719 m
322.168 337.8203 321.8848 338.4199 320.9922 338.4199 c
320.3174 338.4199 319.7832 337.8203 319.7832 337.1719 C
322.21 337.1719 l
f*U
*u
0 D
323.8193 337.6602 m
323.8525 338.6602 324.5449 339.0518 325.6211 339.0518 c
325.9707 339.0518 327.2383 338.9561 327.2383 337.8838 c
327.2383 335.4756 L
327.2383 335.2998 327.3301 335.2285 327.4805 335.2285 c
327.5469 335.2285 327.6387 335.2441 327.7227 335.2598 c
327.7227 334.748 L
327.5977 334.7158 327.4893 334.668 327.3223 334.668 c
326.6719 334.668 326.5713 334.9883 326.5469 335.3076 c
326.2627 335.0117 325.8213 334.6279 324.9707 334.6279 c
324.1699 334.6279 323.6025 335.1162 323.6025 335.8359 c
323.6025 336.1885 323.7109 337.0039 324.9287 337.1484 c
326.1377 337.292 L
326.3135 337.3076 326.5215 337.3721 326.5215 337.7881 c
326.5215 338.2275 326.1875 338.4678 325.4961 338.4678 c
324.6621 338.4678 324.5449 337.9805 324.4951 337.6602 C
323.8193 337.6602 l
f1 D
326.5049 336.8838 m
326.3877 336.7959 326.2051 336.7324 325.2959 336.6201 c
324.9375 336.5723 324.3613 336.4678 324.3613 335.9404 c
324.3613 335.4844 324.6035 335.2119 325.1543 335.2119 c
325.8379 335.2119 326.5049 335.6357 326.5049 336.1963 C
326.5049 336.8838 l
f*U
*u
0 D
329.3154 334.748 m
328.5811 334.748 L
328.5811 338.9316 L
329.2734 338.9316 L
329.2734 338.2363 L
329.29 338.2363 L
329.582 338.7236 329.9658 339.0518 330.5156 339.0518 c
330.6074 339.0518 330.6494 339.0439 330.708 339.0283 c
330.708 338.2998 L
330.4326 338.2998 L
329.749 338.2998 329.3154 337.7881 329.3154 337.1797 C
329.3154 334.748 l
f*U
ULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
