%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Alice Peters) (A K Peters, Ltd.)
%%Title: (svd.ps)
%%CreationDate: 5/1/2002 4:50 PM
%%BoundingBox: 134 204 408 518
%%HiResBoundingBox: 134.75 204.5 407.5 517.75
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 20 588 776
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 83 555 1.5 1276 954 18 1 1 6 44 1 1
%AI5_OpenViewLayers: 7
%%PageOrigin:12 20
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -20 -24 12
%AI7_GridSettings: 72 32 72 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 112 128 8
%%BeginData: 11566 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C457DFD6EA87D7DFFFF7DA8FD39FF52FD30FFA8A8FFFF277DFD39FF27
%A8FD2FFFA87DFFFF277DFD38FFA827A8FD2FFFA8A8FFFF52FD3AFF7DFD30
%FFA87D7D7D52FD1D7DA8FD1AFF7D7D52FD30FFA8A8275252A8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87DFD19FFA82752
%7DFD30FF7D7D527D527DFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A87DA8FD1AFFF8A852FD30FFA8A8A8FF52A8A8FD19FFA8A87D
%FD1AFFA8FF7DFD30FFA87DFFFF527DA8FD08FF7D52FD0527527DFD08FFA8
%7DA8FD1CFF52FD30FFA8A8FFFF52A8A8FD06FF7DF87DA8FF277DF8A8A87D
%277DFD06FFA8A87DFD1CFF7DFD30FFA87DFFFF527DA8FD04FFA82727277D
%7DFF272727A8FFA8525227A8FD04FFA87DA8FD1CFF52FD30FFA8A8FFFF52
%A8A8FD04FF277DFF27A852FF272727A8FFA827FF7D27FD04FFA8A87DFD1C
%FF7DFD30FFA87DFFFF527DA8FFFFFF527DFFA852A87DFFA8F8FFFFFF7D27
%FFFF7D52FFFFFFA87DA8FD1CFF52FD30FFA8A8FFFF52A8A8FFFF7D27FF7D
%FD05FF7DF87DFD06FF7D27A8FFFFA8A87DFD1CFF7DFD30FF7D7DFFFF527D
%A8FFFFF852522727FD04FF7DF87DFD05FFA8F87DF8FFFFA87DA8FD1CFF52
%FD30FFA8A8FFFF52A8A8FF7D52527D2752FD04FF7DF87DFD05FFA8277D52
%7DFFA8A87DFD1CFF7DFD30FFA87DFFFF527DA8FF527DFFA8A8A8FD04FF7D
%F87DFD06FF7DA87D52FFA87DA8FD1CFF52FD30FFA8A8FFFF52A8A8FF27FD
%09FF7DF87DFD09FF27FFA8A87DFD13FFA8FD08FF7DFD30FFA87DFFFF527D
%A8FF277D2752FD06FF52F852527D7DFFFFFF7D277D27FFA87DA8FD13FFA8
%7DA8A8FD05FF52FD17FFA87DA8FD16FFA8A8FFFF52A8A8FF27A8F87DFD05
%FF52FD06F827FFFFFF277D27FFA8A87DFD04FFFD14A8FD04FF7DFD16FF7D
%A8A8A8FD16FFA87DFFFF527DA8FF27A827A8FD06FF7DF8A8FD06FF7D52A8
%27FFA87DA8FD04FFFD10A87DA87DA8A8FFFFFF52FD14FFA87DA87DA87DA8
%FD15FFA8A8FFFF52A8A8FF27FD0AFF7DFD0AFF27FFA8A87DFD13FFA8A8A8
%FD06FF7DFD13FF7D7DA8A8FFA8A87DFD15FF7D7DFFFF527DA8FF7D7DFF7D
%A8FD0EFF7DFF7D7DFFA87DA8FD08FF7DFFA8FFFFFFA87DA87D7D7DA8FF52
%7D52A8FFFF52FD11FF7D7D7DA8A8FFFFFF7DA87DFD14FFA8A8FFFF52A8A8
%FFA852FF27F8FD0DFF2727FF52A8FFA8A87DFD04FFA827527D52F87D5227
%A8A87DA8277DF8A8A827527D52FFFF7DFD10FF7DA8A8A8FD06FFA87DA8FD
%13FFA87DFFFF527DA8FFFF27A8F8F8FD0DFF7DF87D27FFFFA87DA8FD04FF
%7D52277D27F8527DF87D7DA8A8525227525227FFA852FFFF52FD0DFFA87D
%7DA8A8FD08FFA87D7DFD13FFA8A8FFFF52A8A8FFFFA827A8A8FD0AFFA8A8
%FFFFA827FFFFFFA8A87DFD0FFF7DFD08FFA8A8FFFF7DFD0CFFA87D7DA8A8
%FD09FFA8A87DA8FD12FFA87DFFFF527DA8FFFFFF7D27FFFFA8F827FD06FF
%2727FFFF277DFFFFFFA87DA8FD1CFF52FD0AFFA87DA87DA8A8FD0BFFA8A8
%7DFD12FFA8A8FFFF52A8A8FD04FF5227FFFF527DFFFF527DFFFF7DF8FF27
%7DFD04FFA8A87DFD1CFF7DFD09FFA87DA8A8FFFFFF7D7D2752275252FD05
%FFA8A87DFD11FFA87DFFFF527DA8FD05FF7D27A827FFFFA8F852FFFF527D
%277DFD05FFA87DA8FD1CFF52FD07FF7D7D7DA8A8FFA87DF8527DA827A8A8
%7D27277DFFFFFF7D7DA8FD10FFA8A8FFFF52A8A8FD07FF52277DA8FF527D
%A87D2752FD07FFA8A87DFD1CFF7DFD06FF7DA87DA8A8FFA82752FFFFFF27
%7D52FFFFA8275227FFFFFFA87DFD10FF7D7DFFFF527DA8FD08FFA87D5227
%2727527DA8FD08FFA87DA8FD1CFF52FD04FF7D7DA87DA8A8FFA827A87DF8
%A8FFA8F8277DA827A8A87D27FFA8A87DA8FD0FFFA8A8FFFF52A8A8FD19FF
%A8A87DFD1CFF7DFFFFA87DA8A8A8FFFFFFA827FFA8F8F87DFFA85252FFFF
%A82752A87D27FFA8A87DFD0FFFA87DFFFF527DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8FD1CFF52FF7D7D7DA8A8FD04
%FF27A8FD0BFF7D7DFFFF275252FFA8A87DFD0EFFA8A87DA827FD1D7D52A8
%527DA8FD16FFA87D52527D7DA8A8A87DA8A87D27A852A87DA8A8A87DA8A8
%A87DA8A87DF85252277D52527DA8FD0DFFA87DA87D52527D527D527D527D
%527D527D527D527D527D527D527D527D527D527D527D7D5252A8FD16FF7D
%A8277D527D7DA87DA87DA8277DF82752A87DA87DA87DA87DA87D7DFD0427
%5252277D7D7DFD0DFFA8A8FFFF52FD1CFFA8A8FD1CFF7D7DA8A8FD05FFA8
%52A8277DFD0AFF7DF8277D27A8FFF8FFFFA8A8A8FD0CFFA87DFFFF7DFD1C
%FF5227A8FD1BFF52FF7DA8A8FD04FF7D7DFD08FFA8FFFF7D27F852A8FD04
%FF27A8FFA8A87DFD0CFFA8A8FD1FFF7D27FD1EFFA87DA8FD04FF52A8FD08
%FF272727F8277DFD05FFA852A8FFFFA8A87DFD0BFF7D7DFD40FF7D7DA8FF
%FFFF7D7DFF52FD06FF52F8F852FD05FFA852F8527DFFFFFF7DA87DFD0AFF
%A8A8FFFFA8FD3DFFA8A8A8FFFFFF527D525252FD05FFF827F8FD07FF7DFF
%52A8FD04FFA87DFD0AFFA87DFFFF52A8FD3DFF7DA8A8FFFF7D527D7DA8FD
%06FFA82727FD08FF52A8FD04FFA87D7DFD09FFA8A8FFFFF87DFD3EFF7DA8
%A8FFA852FD0AFF7DF87DFD07FFF8FD05FFA8A87DFD09FFA87D525252A8FD
%31FFA8FD0CFFA87DA8A8FFF8FFA8A8A8FD07FF2752FD04FFA8277D52FD06
%FFA8A87DFD08FFA8A8275252FD31FFA8A8A8FD0CFF7DA8FFFF7D7D27F852
%FD08FF52FFFFFF52272727A8FD05FFA8A8A87DFD08FFA87D277D7DFD30FF
%A8A87DFD0DFFA87D7DFFA8275252FD0EFF52A827FD05FFA8A87D7DA8FD08
%FFA8A8FFFF52FD2FFFA8A8A8FD0FFF7DA8A8FF7D27FFFFFFA852FD07FF7D
%52FFA8F8FD05FFA8A87DA8FD0AFF7D7DFFFF52FD2EFFA8A87DFD11FF7DA8
%A8FF7D52A852F827A8FF7DA8A8FF272752A8F8A8FFFFA8A87D7D7DFD0CFF
%A8A8FFFF52FD25FFA8FD09FFA8FD09FFA8FD09FF7DA8FFFF7D275252FFFF
%FF27F8A8FFA87D7D27A8FFFFA8A87D7DA8FD0DFFA87DFFFF52FD1BFFA87D
%A8A87D7DA87DFF7D7D27FF7D277D7D2752FFFF27A8A8277D277D27A87DA8
%FD08FF7D7DA8FFFFA827527DFFFF277DFFFF7D2727FFFFA87DA87DA8FD0F
%FFA8A8FFFF52FD1BFF5227277D27525227A852FF7DA82727FF522727A8A8
%5252A8F87D277D27A87DA8FD09FF7D7DFD04FFA8522727522727277DA8FF
%FD04A87DFD11FFA87DFFFF52FD1CFF7DA8A87D7DA852FF7D7D7DA8A87DFF
%A87DA827FF7DFF7D7DA87DA87DFF52FD0AFF7DA87DFD0DFFA8A87D7DA8FD
%12FFA8A8FFFF52FD25FFA8FD05FFA8FD0DFFA8FD0BFF7DA8A8FD0BFFA8A8
%7DA8FD14FFA87DFFFF7DFD26FFA8FFA8A87DFD1AFFA87DA8A8FD07FFA8A8
%7DA87DFD16FFA8A8FFFF52FD26FFA87DA8A8FD1CFFA87DA8FD06FFA8A8A8
%7DA8FD17FF7D7DFFFF52FD26FF7DA87DA8FD1DFF7D7DA8FD04FFA8A87D7D
%FD19FFA8A8FFFF52FD25FFFD05A8FD1DFFA8A8A8FFA8FFA8A87DFD1BFFA8
%7DFFFF52FD25FFA87DA8A8FD1FFF7DA8A8A87D7D7DFD1CFFA8A8FFFF52FD
%25FFA8FD23FF7DA87D7DA8FD1DFFA87DFFFF52FD49FF7D7DA8FD1FFFA8A8
%FFFF52FD6BFFA87DFFFF7DFD6BFFA8A8FFFF52FD6BFF7D7DFFFF52FD6BFF
%A8A8FFFF52FD6BFFA87DFFFF52FD24FFA8A87D7D7DA8FD41FFA8A8FFFF52
%FD20FFA87DA87DA87DA8A8A87DA8FD40FFA87DFFFF52FD1CFFFD057DA87D
%A8A8FFFFFFA8A87D7D7DFD3EFFA8A8FFFF52FD18FFA87D7D7DFD04A8FD09
%FFFD04A87DFD3DFFA87DFFFF7DFD13FFA8FD057DA8A8FFA8FD0FFFA8A87D
%A8FD3BFFA8A8FFFF52FD0FFFA8A87D7D7DFD04A8FFFFFF7DA8527D527D52
%7D7DA8A8FD07FFA8A87D7DA8FD39FF7D7DFFFF52FD0BFFA87D7D7DA87DFD
%04A8FF7D52F827277D527D522727A87D7D52522727277D7DFFFFFFA8A87D
%7D7DFD38FFA8A8FFFF52FD07FF7DA87D7DA8A8A8FFA8FFFFFF7D27277D7D
%5227A8FFFF7D7DF827F87DFFFF5252527D7D7D27527DFFFFFFA8A87DA8FD
%36FFA87DFFFF52FFFFA8A87D7D7DA87DA8A8FFA8FFFFFFA852F87DA8FF7D
%5227527DFFFFFFA852527DA8FFFFFF7D52277DA8FF7D52277DFFFFA8A87D
%7DA8FD34FFA8A8527D275227FD06527D527D527D527D522727522752527D
%527D527D527D527D27277DFD07FFA8522752527D2752A8FFA8A87DA87DFD
%33FFA87DFFFF527D7D7DA8A8FD09FFA827A87DF8F8277DFD09FFA8A8FD04
%FFA8525227F8F827F82727A87D27FFFFA8A87DA87DA8FD31FFA8A8FFFF52
%FFA87DA8A8A8FD08FF7DA8FD0EFF7D52FFA87D5227F827527DA8FFFFA8FD
%04FF52A8FD04FFA8A87DA8FD30FFA87DFFFFA8FFFFFFA87DA87DFD07FF7D
%FFFFFF7D7DFD09FFA8FD04F827527DFD08FF7D522752A87DFD05FFA8A87D
%7D7DFD2EFFA8A8FD08FF7DA87DA8FD05FF27A87D5252277DFD08FF525227
%27F852A8FD09FF7DA8FFFF7DFD08FFA87DA87DFD2DFF7D7DFD09FF7D7D7D
%A8A8FFFFFF5252FD11FF52F8277DFD08FFA8A8FFA827FD09FFA87DA87D7D
%FD2BFFA8A8FD0BFFA87DA8A8FFFFFF5252FF522752527DFD0CFF5252FD05
%FFA82752F8F87D27A8FD09FFFD04A87D52FD2AFFA87DFD0CFFA87DA87DA8
%A8FF5227525252FD05FF7DFD0DFF52A8FFA852A85227A8FD05FFFD04A8FD
%057DA8FD2BFFA8A8FD0EFFA87D7DA8A8FFA87D27527DFF7D7DF85227FFFF
%FF7DA87DFFFFFFA8525227277D7D2727A8FD04FFFD04A87D7D7DA8A8FD2F
%FFA87DFD0FFFA87D7DA8A8FFFFFF7D52F82727527DFFFFFFA827F8527DFF
%FFA87D522727277DA8FFFD04A8FD057DFD34FFA8A8FD11FFA87DA8A8FD06
%FFA87D7D27522727275227272752527D7DA8FFFFFD04A87D7D7DA8FD38FF
%A87DFD13FF7D7D7DA8A8FD11FFFD04A8FD057DFD3CFFA8A8FD14FFA87D7D
%A8A8FD0BFFA8FFA8A8A87D7DA87DFD41FF7D7DFD16FFA87DA87DA8A8FFFF
%FFA8FFA8A87DA8527D7DA8A8FD44FFA8A8FD18FF7DFD04A8FFA8A87D7D7D
%A87DFD49FFA87DFD19FFA87D7DA87D7D7DA8FD11FF7DFD3BFFA8A8FD1BFF
%A8A8FD15FF27FD3BFFA87DFD31FFA8277DFD3AFFA8A8FD32FF52FD3BFFA8
%7DFD2FFFA827277DFD1CFFA8A87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DFD04A8FD1DFFA8A8FD11FF27A852FD1BFFFD04A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87DA87D7D
%FD1DFF7DA8A8FD0FFFA852FF52FD1AFFA87D7DFD1BA87DA8FFA8A8FD1EFF
%A8A8A8FD11FF52FD1AFFA8A8FD1AFFA87DFFFFFFA87DFD1FFF7DA8A8FD10
%FF52FD18FFA87DA8FD08FFA87D52FD04277DFD09FFA8A87DA8FFFFFFA8A8
%FD20FFA8FFFFFFA8FFA8FFFD05A8FD05FF52FD18FF7DA8FD06FFA8522727
%7D527D527DA87D27A8FD07FFA87DFD05FFA87DFD19FF527D7D5252A8277D
%A8FF52277D27FFA8F852527DFD05FF52FD16FFA87DA8FD05FF7D27277D52
%FF52272727A8FF7DA827FD05FFA8A87DA8FD05FFA8A8FD19FF7D275252F8
%5252F87D7DA827A827FFA87DFFFF27FD05FF52FD15FFA8A8A8FD04FF7D27
%7D277DF8A87D27F827FFFF27A8FF52FD05FFA87DFD07FFA87DFD19FFFD04
%A87DA87DA8A8FF527DFFFD04A8FFA87DFD05FF7DFD14FFA87D7DFFFFFF7D
%2752FF277D277DFF5227FFFFFF527DFFFF27FFFFFFA8A87DA8FD07FFA8A8
%FD24FFA8A8A8FD0BFF52FD13FFA8A8A8FFFFFF2752A8FD06FF52F8FFFFFF
%A8A8FFFFA852FFFFA8A87DA8FD08FF7D7DFD25FF7DA8A8FFA8FD08FF52FD
%12FFA87D7DFFFF7DF82727F87DFD04FF52F8A8FD05FF52F8527DFFA8A87D
%A8FD09FFA8A8FD26FFFD04A8FD08FF52FD12FFA8A8FFFF52522727F852FD
%04FF5227FD06FF7D27A827FFFFA87DFD0BFFA87DFD27FF7DA87DA8FD07FF
%52FD10FFA87DA8FF7D277D7DA87D7DFD04FF27F8FD06FF7D52A827A8A8A8
%7DA8FD0BFFA8A8FD26FFA8A87DA8A8FD07FF52FD10FF7DA8FF7D27A8FD08
%FF5227FD09FF527DFFA87DFD0DFFA87DFD27FFA8A87DA8A8FD06FF52FD0E
%FFA87DA8FF5252527DFD07FF27F8FD07FF27525252A8A87DA8FD0DFFA8A8
%FD2AFFA8A8FD06FF52FD0DFFA8A8A8FF525227277DFD04FFA82727F82727
%27F87DFFFF7D277D52FFA87DFD0FFFA87DFD2BFFA8FD06FF7DFD0CFFA87D
%7DFF7D525252A8FD05FFA827F87D527D7DA8FFFF27522752A8A87DA8FD0F
%FFA8A8FD32FF52FD0BFFA8A8A8FF7D27FD0AFF52FD09FF5252A8A87DA8FD
%10FF7D7DFD32FF52FD0AFFA87D7DFFA827A8FFA8FD0EFFA8FFA8F87DA8A8
%7DA8FD11FFA8A8FD32FF52FD0AFFA8A8FFFF52A8A8F87DFD0CFFA85252A8
%F8A8FFA87DFD13FFA87DFD32FF52FD08FFA87DA8FFFFA8277DF852FD0CFF
%A8F8275227FFA8A87DA8FD13FFA8A8FD32FF52FD08FF7DA8FFFFFF52A852
%7DFD0EFF27277DFFFFA87DFD15FFA87DFD32FF52FD06FFA87DA8FD04FF27
%FFFFFF52277DFD05FFA8F852FF7DF87DA8FFA8A87DA8FD15FFA8A8FD32FF
%52FD05FFA8A8A8FD05FF27FFFFA827A8FFA852FFFFFF277D7D2752FD04FF
%A87DFD17FFA87DFD32FF7DFD04FFA87D7DFD06FF27A87D27FFA852F8A8FF
%FF27272752A8FFFFFFA8A87DA8FD17FFA8A8FD32FF52FFFFFFA8A8A8FD07
%FF7D27A8FFFF7DF87DA87D27527DFD05FFA8A87DA8FD18FF7D7DFD32FF52
%FFFFA87D7DFD09FF7D52F8FD0427527DFD07FFA8A87DA8FD19FFA8A8FD32
%FF52FFFFA8A8FD1AFFA87DFD1BFFA87DFD32FF52A87D7DFD1BA87DA8FD1B
%FFA8A8FD32FF527D7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DFF7DFD1BFFA87DFD2FFFA8525227275227522752275227
%5227522752275227522752275227522752275227525227277DFD19FFA8A8
%FD32FF52FD1CFF5227FFA8FD1BFFA87DFD32FF7DFD1CFF2727FD1DFFA8A8
%FD32FFA8FD1CFFA8A8FD1DFF7D52A87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87D7D
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7834.75 8587 m
-7834.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7834.75 8587 L
nu0 Ap
0 O
1 g
-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
F-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
F-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
F-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
F-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
F-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
F-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
F-7844.7817 8565.125 m
-7850.9009 8563.6162 -7854.7817 8565.125 V
-7858.877 8563.6484 -7864.7817 8565.125 V
-7869.7446 8563.4492 -7874.7817 8565.125 V
-7880.7969 8563.5742 -7884.7817 8565.125 V
-7884.7817 8584.8096 L
-7881.6958 8585.7842 -7878.2969 8585.9912 -7874.3799 8584.9082 C
-7868.2134 8586.4912 -7864.4634 8584.9082 V
-7859.4634 8586.4912 -7854.3799 8584.8242 V
-7850.0474 8586.4082 -7844.3799 8584.9082 V
-7838.8799 8586.3242 -7834.7817 8585.125 V
-7834.7817 8565.4404 L
-7837.5254 8564.4287 -7840.6514 8563.9287 -7844.7817 8565.125 C
f0 R
0 G
1 J 1 j 0.5 w-7864.75 8585 m
-7872.54 8586.9473 -7878.813 8583.585 -7884.75 8579.0488 C
S-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
S-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
S-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
S-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
S-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
S-7854.75 8565 m
-7846.96 8563.0527 -7840.687 8566.415 -7834.75 8570.9512 C
S-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
S-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
SUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7833.8921 8586 L
-7833.8921 8529.9756 L
-7884 8529.9756 L
-7884 8586 L
nu0 O
0.1 1 1 0 k
-7846.9014 8551.5752 m
-7848.7178 8545.0957 -7858.8247 8548.4658 Y
-7858.791 8548.5303 L
-7868.8999 8545.1611 -7870.7144 8551.6396 V
-7876.6758 8569.0068 -7871.4922 8575.7451 V
-7864.7529 8585.3369 -7860.6055 8585.3369 V
-7857.0103 8585.2705 L
-7852.8638 8585.2705 -7846.125 8575.6816 Y
-7840.9409 8568.9424 -7846.9014 8551.5752 Y
fu0 0 0 1 k
-7851.3926 8529.9756 m
-7852.1167 8531.4199 -7852.9238 8532.4756 V
-7852.4058 8532.0635 -7851.5151 8531.1924 -7851.3926 8529.9756 C
f-7865.064 8532.4854 m
-7865.8711 8531.4307 -7866.5942 8529.9863 Y
-7866.4727 8531.2021 -7865.582 8532.0732 -7865.064 8532.4854 C
fU0 0.61 0.74 0 k
-7850.5977 8554.4609 m
-7851.9038 8549.7959 -7859.1816 8552.2217 Y
-7859.1567 8552.2686 L
-7866.436 8549.8428 -7867.7417 8554.5078 V
-7872.0337 8567.0117 -7868.3018 8571.8633 V
-7863.4487 8578.7686 -7860.4634 8578.7686 V
-7857.875 8578.7227 L
-7854.8887 8578.7227 -7850.0366 8571.8174 Y
-7846.3042 8566.9639 -7850.5977 8554.4609 Y
fu1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7854.6226 8557.2754 m
-7853.813 8557.2754 -7853.1558 8556.6182 -7853.1558 8555.8096 c
-7853.1558 8555 -7853.813 8554.3428 -7854.6226 8554.3428 c
-7855.4321 8554.3428 -7856.0889 8555 -7856.0889 8555.8096 c
-7856.0889 8556.6182 -7855.4321 8557.2754 -7854.6226 8557.2754 c
b-7854.3638 8568.9971 m
-7853.0806 8568.9971 -7852.0415 8568.1201 -7852.0415 8567.042 c
-7852.0415 8565.9619 -7853.0806 8565.0869 -7854.3638 8565.0869 c
-7855.645 8565.0869 -7856.6846 8565.9619 -7856.6846 8567.042 c
-7856.6846 8568.1201 -7855.645 8568.9971 -7854.3638 8568.9971 c
b-7853.834 8580.7861 m
-7852.2817 8580.7861 -7851.0239 8580.1299 -7851.0239 8579.3213 c
-7851.0239 8578.5117 -7852.2817 8577.8545 -7853.834 8577.8545 c
-7855.3862 8577.8545 -7856.645 8578.5117 -7856.645 8579.3213 c
-7856.645 8580.1299 -7855.3862 8580.7861 -7853.834 8580.7861 c
b-7849.6104 8552.5264 m
-7848.8687 8552.5264 -7848.2671 8551.8154 -7848.2671 8550.9365 c
-7848.2671 8550.0596 -7848.8687 8549.3477 -7849.6104 8549.3477 c
-7850.353 8549.3477 -7850.9546 8550.0596 -7850.9546 8550.9365 c
-7850.9546 8551.8154 -7850.353 8552.5264 -7849.6104 8552.5264 c
b-7848.0034 8574.083 m
-7848.8818 8573.7354 -7849.1494 8572.335 -7848.603 8570.9541 c
-7848.0566 8569.5752 -7846.9014 8568.7363 -7846.0234 8569.085 c
-7845.145 8569.4326 -7844.877 8570.833 -7845.4233 8572.2139 c
-7845.9702 8573.5947 -7847.125 8574.4316 -7848.0034 8574.083 c
bu-7863.0566 8557.1592 m
-7863.8662 8557.1592 -7864.5239 8556.502 -7864.5239 8555.6934 c
-7864.5239 8554.8828 -7863.8662 8554.2266 -7863.0566 8554.2266 c
-7862.248 8554.2266 -7861.5913 8554.8828 -7861.5913 8555.6934 c
-7861.5913 8556.502 -7862.248 8557.1592 -7863.0566 8557.1592 c
b-7863.3159 8568.8799 m
-7864.5991 8568.8799 -7865.6382 8568.0049 -7865.6382 8566.9248 c
-7865.6382 8565.8447 -7864.5991 8564.9697 -7863.3159 8564.9697 c
-7862.0342 8564.9697 -7860.9951 8565.8447 -7860.9951 8566.9248 c
-7860.9951 8568.0049 -7862.0342 8568.8799 -7863.3159 8568.8799 c
b-7863.8457 8580.6709 m
-7865.3975 8580.6709 -7866.6558 8580.0146 -7866.6558 8579.2041 c
-7866.6558 8578.3936 -7865.3975 8577.7383 -7863.8457 8577.7383 c
-7862.293 8577.7383 -7861.0352 8578.3936 -7861.0352 8579.2041 c
-7861.0352 8580.0146 -7862.293 8580.6709 -7863.8457 8580.6709 c
b-7868.0679 8552.4092 m
-7868.811 8552.4092 -7869.4121 8551.6982 -7869.4121 8550.8213 c
-7869.4121 8549.9443 -7868.811 8549.2334 -7868.0679 8549.2334 c
-7867.3262 8549.2334 -7866.7241 8549.9443 -7866.7241 8550.8213 c
-7866.7241 8551.6982 -7867.3262 8552.4092 -7868.0679 8552.4092 c
b-7869.6758 8573.9678 m
-7868.7983 8573.6201 -7868.5298 8572.2188 -7869.0762 8570.8379 c
-7869.6226 8569.457 -7870.7778 8568.6201 -7871.6558 8568.9678 c
-7872.5342 8569.3164 -7872.8032 8570.7178 -7872.2568 8572.0967 c
-7871.7104 8573.4775 -7870.5552 8574.3154 -7869.6758 8573.9678 c
bUU0 Ap
0 0 0 1 k
-7859.1318 8552.6553 m
-7859.1318 8585.3145 l
Fu-7843.3906 8538.5303 m
-7844.0815 8537.8369 -7847.019 8538.7021 Y
-7848.229 8538.874 -7848.0562 8541.2939 Y
-7847.019 8543.3682 -7847.7104 8543.1943 Y
-7848.2998 8543.1943 -7849.855 8543.1143 -7850.7822 8543.0635 C
-7851.1226 8541.6689 -7852.6128 8540.4756 -7854.7217 8539.7695 C
-7852.7578 8536.4775 -7854.5176 8535.7949 -7856.2935 8535.79 C
-7856.3096 8535.7021 -7856.332 8535.6162 -7856.3599 8535.5332 C
-7854.1089 8535.5791 -7853.6392 8533.2588 Y
-7853.4048 8533.0635 -7853.1606 8532.7861 -7852.9238 8532.4756 C
-7853.1416 8532.6475 -7853.2944 8532.7393 Y
-7854.2583 8532.7393 -7855.8774 8534.4941 -7856.4966 8535.207 C
-7856.9194 8534.4434 -7857.853 8533.9111 -7858.9434 8533.9111 c
-7860.0698 8533.9111 -7861.0322 8534.4795 -7861.4312 8535.2852 C
-7861.9985 8534.624 -7863.6968 8532.751 -7864.6943 8532.751 C
-7864.8462 8532.6572 -7865.064 8532.4854 V
-7864.8281 8532.7939 -7864.583 8533.0732 -7864.3481 8533.2686 C
-7863.8638 8535.6563 -7861.5254 8535.5342 V
-7861.5449 8535.5889 -7861.5674 8535.6436 -7861.5806 8535.7021 C
-7864.9238 8535.6924 -7863.937 8538.3174 -7863.2104 8539.6602 C
-7865.5918 8540.376 -7867.2646 8541.7012 -7867.5239 8543.25 C
-7868.4473 8543.2998 -7869.6729 8543.3584 -7870.1802 8543.3584 C
-7870.8726 8543.5313 -7869.835 8541.458 V
-7869.6626 8539.0391 -7870.8726 8538.8662 V
-7873.8096 8538.002 -7874.501 8538.6934 V
-7875.1919 8539.5566 -7876.0562 8538.3467 V
-7875.1919 8540.0752 -7873.291 8539.5566 V
-7870.6982 8538.8662 -7871.3906 8540.5938 V
-7871.9087 8544.0498 -7870.1802 8544.7402 V
-7868.0342 8545.8545 -7866.2822 8546.0889 V
-7865.9087 8546.4141 -7865.4639 8546.7109 -7864.958 8546.9766 C
-7867.5562 8547.0469 -7870.2246 8547.9209 -7871.0752 8550.9561 C
-7871.5151 8552.2432 -7872.0518 8554.2432 V
-7873.1025 8554.8252 -7874.3022 8556.0078 -7875.541 8558.2627 C
-7876.394 8561.4502 -7877.167 8556.7129 V
-7878.3975 8553.6494 -7879.6504 8553.5381 V
-7878.4702 8555.2871 -7878.9038 8556.416 V
-7877.2998 8560.917 -7875.6138 8559.8994 V
-7874.0986 8559.2197 -7872.688 8556.8154 V
-7873.0698 8558.4971 -7873.4326 8560.417 -7873.6743 8562.3906 C
-7874.4888 8562.3975 L
-7876.3506 8561.4795 -7876.3262 8564.959 V
-7877.1226 8568.9453 -7876.3594 8571.6826 V
-7875.647 8574.1504 -7878.1274 8572.9307 V
-7879.2842 8573.3242 -7879.9839 8572.7881 V
-7882.3882 8571.4131 -7884 8573.124 V
-7882.147 8572.8799 -7881.4482 8573.417 V
-7879.9785 8573.5615 -7879.897 8574.1787 V
-7876.9561 8574.8555 -7876.188 8574.0771 V
-7874.417 8573.2139 -7875.1304 8570.3604 V
-7875.8799 8562.4814 -7874.3198 8564.4053 V
-7874.1182 8564.4219 -7873.8784 8564.5176 V
-7874.1519 8568.4326 -7873.8018 8572.3252 -7871.9961 8574.8516 C
-7875.4536 8567.333 -7870.2974 8552.3037 Y
-7868.9609 8547.5303 -7863.127 8548.1016 -7860.145 8548.7344 C
-7860.0718 8550.1299 -7859.8374 8551.9492 -7859.1318 8552.6553 C
-7858.2134 8550.6963 -7858.2358 8549.0732 V
-7857.0762 8548.7217 -7850.2817 8546.8447 -7847.4487 8550.3369 C
-7848.4312 8547.8135 -7850.8262 8547.0186 -7853.2007 8546.9189 C
-7852.667 8546.6318 -7852.2041 8546.3047 -7851.8257 8545.9502 C
-7850.041 8545.7861 -7847.7104 8544.5771 Y
-7845.9814 8543.8857 -7846.5015 8540.4307 Y
-7847.1919 8538.7021 -7844.5991 8539.3936 Y
-7842.7002 8539.9111 -7841.835 8538.1836 Y
-7842.7002 8539.3936 -7843.3906 8538.5303 Y
f-7837.9082 8572.9521 m
-7838.6074 8573.4893 -7839.7632 8573.0938 Y
-7842.2446 8574.3135 -7841.5327 8571.8467 Y
-7840.769 8569.1104 -7841.564 8565.1221 Y
-7841.541 8561.6445 -7843.4014 8562.5596 Y
-7844.0342 8562.5557 L
-7844.3198 8560.6123 -7844.7046 8558.7549 -7845.0898 8557.1699 C
-7843.7129 8559.4199 -7842.2778 8560.0635 Y
-7840.5913 8561.082 -7838.9878 8556.5791 Y
-7839.4214 8555.4502 -7838.2417 8553.7021 Y
-7839.4937 8553.8125 -7840.7246 8556.876 Y
-7841.4976 8561.6152 -7842.3511 8558.4268 Y
-7843.5776 8556.1904 -7844.769 8555.0098 -7845.814 8554.4229 C
-7846.2026 8553.0635 -7846.4858 8552.2393 Y
-7846.7002 8551.4727 -7847.0337 8550.8486 -7847.4487 8550.3369 C
-7847.3799 8550.5127 -7847.3174 8550.6982 -7847.2632 8550.8916 C
-7841.3022 8568.2588 -7846.4858 8574.9971 V
-7853.2246 8584.5869 -7857.3721 8584.5869 V
-7860.9663 8584.6514 L
-7865.1138 8584.6514 -7871.853 8575.0615 Y
-7871.9038 8574.9961 -7871.9463 8574.9219 -7871.9961 8574.8516 C
-7871.7378 8575.4141 -7871.437 8575.9404 -7871.0752 8576.4092 C
-7864.3359 8586 -7860.189 8586 V
-7856.5942 8585.9346 L
-7852.4482 8585.9346 -7845.709 8576.3447 Y
-7843.5801 8573.5771 -7843.3306 8569.0176 -7843.7769 8564.6055 C
-7843.6553 8564.5752 -7843.5698 8564.5684 Y
-7842.0112 8562.6475 -7842.7598 8570.5244 Y
-7843.4746 8573.3789 -7841.7026 8574.2402 Y
-7840.9351 8575.0186 -7837.9946 8574.3428 Y
-7837.9136 8573.7256 -7836.4434 8573.5811 Y
-7835.7446 8573.0449 -7833.8921 8573.2881 Y
-7835.5024 8571.5771 -7837.9082 8572.9521 Y
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7819.187 8586 L
-7819.187 8521.9023 L
-7884 8521.9023 L
-7884 8586 L
nu0 O
0 g
-7849.6978 8544.4297 m
-7851.6094 8521.9023 L
-7853.5215 8544.4297 L
-7852.9033 8544.3066 -7852.2642 8544.2402 -7851.6094 8544.2402 c
-7850.9551 8544.2402 -7850.3159 8544.3066 -7849.6978 8544.4297 C
f-7861.2402 8552.3975 m
-7884 8554.3301 L
-7861.1138 8556.2734 L
-7861.2856 8555.5469 -7861.3848 8554.793 -7861.3848 8554.0156 c
-7861.3848 8553.4629 -7861.3281 8552.9248 -7861.2402 8552.3975 C
f-7856.519 8545.5723 m
-7870.1626 8536.8047 L
-7860.2153 8549.377 L
-7859.3574 8547.791 -7858.0718 8546.4766 -7856.519 8545.5723 C
f-7853.481 8563.6074 m
-7851.5786 8586 L
-7849.6768 8563.5967 L
-7850.3018 8563.7227 -7850.9473 8563.791 -7851.6094 8563.791 c
-7852.25 8563.791 -7852.873 8563.7246 -7853.481 8563.6074 C
f-7841.9609 8555.5068 m
-7819.187 8553.5732 L
-7842.083 8551.6289 L
-7842.083 8551.8506 L
-7841.9258 8552.5488 -7841.834 8553.2695 -7841.834 8554.0156 c
-7841.834 8554.5234 -7841.8848 8555.0195 -7841.9609 8555.5068 C
f-7860.1138 8558.8262 m
-7870.1641 8571.5293 L
-7856.2778 8562.6055 L
-7857.8823 8561.7305 -7859.2114 8560.416 -7860.1138 8558.8262 C
f-7842.9961 8549.3945 m
-7832.875 8536.6055 L
-7846.7666 8545.5313 L
-7845.1768 8546.4414 -7843.8633 8547.7793 -7842.9961 8549.3945 C
f-7846.6895 8562.4512 m
-7832.873 8571.3281 L
-7842.9658 8558.5732 L
-7843.8198 8560.1895 -7845.1152 8561.5313 -7846.6895 8562.4512 C
f-7842.8887 8558.6133 m
-7842.3862 8557.6641 -7842.043 8556.6211 -7841.875 8555.5195 c
-7841.7993 8555.0293 -7841.748 8554.5273 -7841.748 8554.0156 c
-7841.748 8553.2637 -7841.8398 8552.5352 -7841.998 8551.8311 c
-7842.1958 8550.957 -7842.5049 8550.124 -7842.918 8549.3545 c
-7843.7954 8547.7246 -7845.1191 8546.374 -7846.7241 8545.4561 c
-7847.6294 8544.9375 -7848.6226 8544.5537 -7849.6802 8544.3457 c
-7850.3047 8544.2207 -7850.9497 8544.1523 -7851.6094 8544.1523 c
-7852.2695 8544.1523 -7852.915 8544.2207 -7853.5391 8544.3457 c
-7854.623 8544.5605 -7855.6382 8544.957 -7856.5625 8545.4961 c
-7858.1313 8546.4102 -7859.4282 8547.7363 -7860.291 8549.335 c
-7860.7969 8550.2695 -7861.145 8551.2969 -7861.3262 8552.3828 c
-7861.415 8552.916 -7861.4727 8553.459 -7861.4727 8554.0156 c
-7861.4727 8554.8008 -7861.3711 8555.5605 -7861.1978 8556.293 c
-7860.981 8557.207 -7860.6406 8558.0732 -7860.187 8558.8701 c
-7859.2793 8560.4727 -7857.939 8561.8008 -7856.3174 8562.6826 c
-7855.4487 8563.1553 -7854.5 8563.498 -7853.4961 8563.6934 c
-7852.8848 8563.8115 -7852.2554 8563.8779 -7851.6094 8563.8779 c
-7850.9414 8563.8779 -7850.29 8563.8086 -7849.6602 8563.6826 c
-7848.5786 8563.4668 -7847.5664 8563.0654 -7846.6455 8562.5273 c
-7845.0566 8561.5977 -7843.751 8560.2441 -7842.8887 8558.6133 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7874.75 8587 m
-7874.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7874.75 8587 L
nuu0 Ap
0 O
1 g
-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 c
-7877.897 8566.9736 -7881.0898 8565 -7884.75 8565 C
-7884.75 8585 L
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 c
-7881.9121 8584.7754 -7880.1807 8584.0645 -7878.7441 8582.9824 c
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 c
f0 R
0 G
1 J 1 j 0.5 w-7884.75 8565.3174 m
-7881.7207 8566.2744 -7878.8926 8567.9326 -7876.1543 8569.9072 C
S-7884.75 8570.9512 m
-7881.5991 8573.3564 -7878.543 8576.0869 -7875.4058 8578.5361 C
S-7878.7441 8582.9824 m
-7880.8105 8581.8916 -7882.7993 8580.5342 -7884.75 8579.043 C
S-7883.8018 8584.9521 m
-7884.1191 8584.8682 -7884.4375 8584.7852 -7884.75 8584.6865 C
S-7878.7441 8582.9824 m
-7880.1807 8584.0645 -7881.9121 8584.7744 -7883.8018 8584.9521 C
S-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 C
S-7884.75 8585 m
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 C
S-7878.7441 8582.9824 m
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 C
S-7876.1543 8569.9072 m
-7877.8975 8566.9736 -7881.0898 8565 -7884.75 8565 C
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884.0254 8586.0264 m
-7828.0542 8586.0264 L
-7828.0542 8524.5342 L
-7884.0254 8524.5342 L
-7884.0254 8586.0264 L
nuu0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7857.5991 8562.7217 m
-7857.3594 8573.5215 -7862.8794 8583.8398 v
-7862.4009 8586 -7860.959 8586 v
-7861.2002 8582.6406 -7860.2393 8582.1611 v
-7855.9199 8570.1602 -7856.6382 8562.2402 v
-7857.5991 8562.7217 l
b-7857.5991 8562.7217 m
-7859.2793 8568 -7871.0391 8569.2012 v
-7875.3594 8569.6807 -7875.5991 8571.1211 v
-7869.1206 8561.5195 -7868.1602 8561.7607 v
-7881.3594 8556.001 -7884 8550.7197 v
-7878.959 8553.6006 -7875.5991 8551.4404 v
-7867.6802 8551.2012 -7862.6406 8553.3613 v
-7858.8008 8555.2813 -7866.7202 8539.2012 v
-7862.8794 8550.9609 -7859.2793 8524.5605 v
-7858.3198 8529.8408 -7856.8799 8531.2813 v
-7850.8799 8538.9609 -7851.8398 8541.1211 v
-7852.3198 8544.9609 -7847.7598 8538.7207 v
-7848 8548.3213 -7850.4009 8551.6807 v
-7852.5591 8555.2813 -7846.5591 8553.1211 v
-7840.5591 8551.2012 -7835.2793 8552.8809 v
-7829.7598 8554.3203 -7828.0801 8551.4404 v
-7839.8398 8563.9209 -7845.5991 8563.6807 v
-7843.9194 8567.2813 l
-7841.519 8572.0811 -7842 8573.2813 v
-7857.2681 8563.8828 -7857.5991 8562.7217 v
b-7857.5991 8562.7217 m
-7854.959 8544.2402 -7857.5991 8536.5605 v
-7859.998 8526.001 -7859.2793 8524.5605 v
S-7856.1602 8551.4404 m
-7850.1602 8546.6406 -7848.959 8541.3604 v
S-7856.1602 8550.7197 m
-7865.0391 8543.041 -7866.7202 8539.2012 v
S-7828.0801 8551.4404 m
-7829.2793 8553.6006 -7857.3594 8561.7607 y
-7862.4009 8556.2422 -7873.9199 8553.8408 v
-7881.5986 8552.8809 -7884 8550.7197 v
S-7874.6382 8569.6807 m
-7863.1191 8560.5615 -7857.3594 8561.7607 y
-7843.1992 8568 -7842 8573.2813 v
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.8496 8585.9961 m
-7833.96 8585.9961 L
-7833.96 8534.9258 L
-7883.8496 8534.9258 L
-7883.8496 8585.9961 L
nu0 O
0.025 0.1 0.475 0 k
-7862.1504 8553.9043 m
-7864.4766 8552.8125 -7866.6914 8552.4434 -7868.373 8552.9238 c
-7869.0518 8553.1172 -7869.645 8553.4473 -7870.123 8553.9238 c
-7870.6006 8554.4023 -7870.9297 8554.9951 -7871.123 8555.6729 c
-7872.0088 8558.7715 -7870.0103 8563.6777 -7865.9233 8567.7666 c
-7861.834 8571.8535 -7856.9297 8573.8516 -7853.8286 8572.9668 c
-7853.1519 8572.7715 -7852.5586 8572.4424 -7852.0806 8571.9658 c
-7851.603 8571.4883 -7851.2754 8570.8955 -7851.082 8570.2168 c
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.582 8561.21 -7854.791 8559.6133 -7856.2793 8558.123 c
-7858.1504 8556.2539 -7860.1914 8554.8242 -7862.1504 8553.9043 c
fu0.0035 0.014 0.0665 0 k
-7861.2183 8552.9727 m
-7863.8306 8552.0215 -7866.3975 8551.9688 -7868.373 8552.9238 C
-7866.6914 8552.4434 -7864.4766 8552.8125 -7862.1504 8553.9043 c
-7861.6191 8554.1543 -7861.0806 8554.4434 -7860.543 8554.7676 C
-7858.8984 8554.0537 L
-7859.667 8553.6172 -7860.4434 8553.2539 -7861.2183 8552.9727 c
f0.015 0.06 0.285 0 k
-7858.8984 8554.0537 m
-7860.543 8554.7676 L
-7859.0962 8555.6348 -7857.6426 8556.7607 -7856.2793 8558.123 c
-7856.1538 8558.25 -7856.0327 8558.3779 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7856.3706 8555.7236 -7857.6191 8554.7813 -7858.8984 8554.0537 C
fUu0.039 0.156 0.741 0 k
-7849.687 8541.4043 m
-7849.9746 8541.6914 -7861.2183 8552.9727 Y
-7860.4434 8553.2539 -7859.667 8553.6172 -7858.8984 8554.0537 C
-7845.4146 8540.5703 L
-7847.061 8540.0996 -7848.6406 8540.3555 -7849.687 8541.4043 c
f0.025 0.1 0.475 0 k
-7845.4146 8540.5703 m
-7858.8984 8554.0537 L
-7857.584 8554.8027 -7856.2969 8555.7754 -7855.1143 8556.957 c
-7855.084 8556.9863 -7855.0586 8557.0156 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7841.5264 8543.1328 -7841.7202 8542.9141 -7841.9302 8542.7012 c
-7843.0103 8541.623 -7844.2305 8540.9082 -7845.4146 8540.5703 C
fUu0.0115 0.046 0.2185 0 k
-7835.9346 8550.3926 m
-7833.5337 8547.9893 -7833.335 8544.0898 -7835.1382 8540.6973 C
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f0.015 0.06 0.285 0 k
-7843.5337 8535.5957 m
-7842.582 8534.9258 L
-7845.2046 8534.3516 -7847.8306 8534.9141 -7849.6206 8536.7061 c
-7848.1719 8535.2578 -7845.9082 8534.9307 -7843.5337 8535.5957 C
f0.0295 0.118 0.5605 0 k
-7843.5337 8535.5957 m
-7845.9082 8534.9307 -7848.1719 8535.2578 -7849.6206 8536.7061 c
-7851.019 8538.1055 -7851.3706 8540.2637 -7850.7954 8542.5469 C
-7848.8672 8539.5449 -7845.4082 8540.5537 V
-7843.585 8535.6309 L
-7843.5337 8535.5957 L
f*u
1 D
0.048 0.192 0.912 0 k
-7835.9346 8550.3926 m
-7837.2817 8551.7383 -7839.332 8552.1133 -7841.5234 8551.627 C
-7851.6714 8561.7734 L
-7851.7695 8561.5684 -7851.7695 8561.5684 -7851.6714 8561.7734 c
-7850.2246 8564.8145 -7849.9702 8567.916 -7851.082 8570.2168 C
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.5054 8561.3438 -7854.5918 8559.8848 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7855.1816 8556.8945 -7855.1465 8556.9238 -7855.1143 8556.957 c
-7855.084 8556.9883 -7855.0566 8557.0176 -7855.0273 8557.0469 c
-7855.0278 8557.0469 -7855.0278 8557.0469 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f*U
0 D
0.0215 0.086 0.4085 0 k
-7842.582 8534.9258 m
-7843.5337 8535.5957 L
-7841.6846 8536.1113 -7839.7656 8537.2285 -7838.1138 8538.8828 c
-7837.4063 8539.5889 -7836.7998 8540.3418 -7836.2954 8541.1182 C
-7835.1382 8540.6973 L
-7835.6553 8539.7246 -7836.3374 8538.793 -7837.1802 8537.9512 c
-7838.7695 8536.3594 -7840.6758 8535.3428 -7842.582 8534.9258 C
f0.0205 0.082 0.3895 0 k
-7836.2954 8541.1182 m
-7836.7998 8540.3418 -7837.4063 8539.5889 -7838.1138 8538.8828 c
-7839.7656 8537.2285 -7841.6846 8536.1113 -7843.5337 8535.5957 C
-7843.585 8535.6309 L
-7845.4082 8540.5537 L
-7844.2114 8540.9219 -7842.9878 8541.6436 -7841.9302 8542.7012 c
-7841.7202 8542.9141 -7841.5264 8543.1328 -7841.3408 8543.3574 C
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
fUu0.445 0.356 0.267 0 k
-7883.8496 8585.9961 m
-7861.957 8562.9688 L
-7862.2007 8562.6494 -7862.5752 8562.6133 -7862.8887 8562.6592 C
-7867.1802 8567.2891 -7878.3145 8579.4561 -7882.7266 8584.2793 C
-7883.5649 8585.3516 -7884 8585.9932 -7883.8496 8585.9961 C
f0.15 0.12 0.09 0 k
-7883.834 8585.9961 m
-7882.6606 8585.7031 -7861.6934 8564.0029 Y
-7861.6934 8563.502 -7861.7993 8563.1758 -7861.957 8562.9688 C
-7883.8496 8585.9961 L
-7883.8442 8585.9961 -7883.8418 8586 -7883.834 8585.9961 c
f0.2 0.16 0.12 0 k
-7882.7266 8584.2793 m
-7878.3145 8579.4561 -7867.1802 8567.2891 -7862.8887 8562.6592 C
-7863.2002 8562.7041 -7863.4526 8562.8301 Y
-7864.603 8563.1328 -7878.5742 8578.9619 -7882.7266 8584.2793 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7882.9502 8585.2324 m
-7833.0391 8585.2324 L
-7833.0391 8521.1152 L
-7882.9502 8521.1152 L
-7882.9502 8585.2324 L
nu0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7833.2358 8521.1152 m
-7833.6064 8521.248 -7833.9858 8521.2832 -7834.3833 8521.2031 c
-7834.4863 8521.168 l
-7834.5254 8521.1602 -7834.5703 8521.1787 -7834.6025 8521.1992 c
-7834.9434 8521.3926 l
-7838.7129 8523.2959 -7842.0962 8525.8965 -7844.5 8529.4473 c
-7845.9634 8531.5918 -7847.123 8533.8789 -7848.7993 8535.8564 c
-7849.1729 8536.209 -7849.1758 8536.7725 -7848.834 8537.1309 c
-7848.4951 8537.501 -7847.918 8537.5078 -7847.561 8537.165 c
-7847.4038 8537.21 l
-7847.2642 8537.1289 -7847.0742 8537.0703 -7847.0234 8536.957 c
-7845.853 8534.2031 -7845.1895 8531.5137 -7843.4336 8529.1387 c
-7841.1719 8526.0947 -7838.1777 8523.9941 -7835.0298 8522.0234 c
-7834.3672 8521.6055 L
-7834.4966 8521.6348 L
-7833.7695 8521.6426 l
-7833.791 8521.6113 -7833.8008 8521.5957 -7833.8223 8521.5645 C
-7833.6064 8521.5234 -7833.377 8521.4746 -7833.1626 8521.4336 c
-7833.0762 8521.4238 -7833.0186 8521.3389 -7833.0391 8521.2383 c
-7833.0503 8521.1523 -7833.1382 8521.1084 -7833.2358 8521.1152 c
-7833.2358 8521.1152 l
b-7849.2222 8534.9951 m
-7849.5742 8534.8066 -7849.9658 8534.6719 -7850.248 8534.3887 c
-7856.4521 8528.1719 -7866.6802 8527.2734 -7874.0488 8533.6855 C
-7874.1582 8533.7813 -7874.1582 8533.957 -7874.063 8534.0645 C
-7871.0527 8532.9434 -7862.8838 8534.375 -7859.3223 8537.4121 C
-7859.2534 8537.4668 -7859.1465 8537.4531 -7859.1055 8537.3711 C
-7859.0503 8537.3047 -7859.0664 8537.1953 -7859.1328 8537.1563 C
-7862.5625 8534.0859 -7867.0674 8532.29 -7871.6729 8532.748 C
-7868.8535 8531.1855 -7865.6313 8530.4941 -7862.3984 8530.6885 c
-7857.7144 8530.9717 -7853.4634 8533.1191 -7849.3711 8535.2793 c
-7849.291 8535.3193 -7849.1978 8535.293 -7849.1553 8535.2109 C
-7849.1016 8535.1309 -7849.1426 8535.0352 -7849.2222 8534.9951 c
b-7858.647 8536.3359 m
-7860.2266 8540.3613 -7862.3911 8544.3203 -7865.8018 8547.0762 c
-7865.9648 8547.2119 -7865.9946 8547.4492 -7865.8711 8547.6055 c
-7865.7344 8547.7676 -7865.5049 8547.7793 -7865.3481 8547.6563 c
-7861.123 8545.5967 -7858.1904 8541.1309 -7858.1626 8536.4014 c
-7858.1626 8536.4014 l
-7858.1328 8536.2676 -7858.2354 8536.1348 -7858.3633 8536.1221 c
-7858.5039 8536.1055 -7858.6318 8536.1973 -7858.647 8536.3359 c
-7858.647 8536.3359 l
b-7852.9414 8541.0176 m
-7853.042 8541.1816 -7853.1152 8541.3838 -7853.2617 8541.4824 c
-7856.0806 8543.3906 -7858.9785 8544.6309 -7861.8848 8546.1328 c
-7862.0503 8546.209 -7862.1118 8546.418 -7862.0313 8546.5703 c
-7861.9512 8546.7227 -7861.7559 8546.7793 -7861.5898 8546.7041 c
-7858.439 8545.3232 -7854.313 8544.5 -7852.6729 8541.1797 c
-7852.6289 8541.1113 -7852.6455 8541.0146 -7852.7266 8540.9648 c
-7852.7959 8540.9199 -7852.897 8540.9492 -7852.9414 8541.0176 c
-7852.9414 8541.0176 l
b-7852.6602 8541.918 m
-7852.4438 8542.4297 -7852.1431 8542.8896 -7852.0503 8543.4355 c
-7851.2183 8548.2773 -7851.1152 8553.042 -7852.248 8557.6875 c
-7852.248 8557.6875 l
-7852.3418 8557.9531 -7852.2114 8558.2441 -7851.9438 8558.3389 c
-7851.6777 8558.4336 -7851.3882 8558.3125 -7851.2935 8558.0479 c
-7849.293 8552.8115 -7849.897 8546.7373 -7852.3711 8541.7832 c
-7852.4063 8541.7002 -7852.498 8541.6689 -7852.582 8541.6914 c
-7852.6641 8541.7275 -7852.6978 8541.835 -7852.6602 8541.918 c
-7852.6602 8541.918 l
b-7851.5352 8557.5938 m
-7848.8984 8555.2275 -7846.6816 8552.252 -7845.853 8548.7363 c
-7845.853 8548.7363 l
-7845.7246 8548.1816 -7846.0742 8547.623 -7846.6416 8547.4902 c
-7847.1992 8547.375 -7847.7578 8547.7246 -7847.8862 8548.2793 c
-7848.5649 8551.5313 -7849.8711 8554.6729 -7851.7954 8557.3867 c
-7851.7954 8557.3867 l
-7851.8462 8557.4551 -7851.834 8557.5576 -7851.7695 8557.6201 c
-7851.6992 8557.6699 -7851.5977 8557.6582 -7851.5352 8557.5938 c
-7851.5352 8557.5938 l
b-7836.3711 8550.1826 m
-7837.7114 8545.8301 -7840.2598 8542.0693 -7843.689 8539.1533 C
-7843.729 8539.0723 -7843.8242 8539.0322 -7843.9038 8539.0859 C
-7843.9863 8539.127 -7844.0122 8539.2207 -7843.9722 8539.3018 C
-7843.957 8539.7891 -7843.7144 8540.2334 -7843.4458 8540.5313 c
-7838.4063 8546.1621 -7834.9902 8554.7197 -7837.3433 8561.9551 C
-7837.0762 8556.4512 -7838.7241 8550.3008 -7842.1362 8545.6738 c
-7843.1606 8544.2695 -7844.7422 8544.1211 -7846.3081 8544.2031 C
-7846.4023 8544.1895 -7846.4834 8544.2432 -7846.4961 8544.3369 c
-7846.5098 8544.4189 -7846.4551 8544.5137 -7846.3623 8544.5254 C
-7843.1479 8545.7695 -7841.4878 8549.2246 -7840.084 8552.1943 c
-7838.415 8555.7441 -7837.7017 8559.6387 -7838.0054 8563.5 C
-7838.0454 8563.6777 -7838.1138 8565.3975 -7837.9775 8565.4102 C
-7837.8306 8565.4395 -7837.709 8565.3438 -7837.6802 8565.1943 C
-7837.645 8565.0449 -7834.6426 8555.7988 -7836.3711 8550.1826 c
b-7844.4863 8537.4912 m
-7843.3945 8533.6211 -7841.1094 8530.251 -7838.4824 8527.2383 c
-7838.3306 8527.1045 -7838.3145 8526.8867 -7838.4502 8526.7354 c
-7838.5752 8526.6006 -7838.8047 8526.582 -7838.957 8526.7178 c
-7842.3306 8529.332 -7843.4487 8533.541 -7844.7954 8537.375 c
-7844.7954 8537.375 l
-7844.8262 8537.4648 -7844.7754 8537.5586 -7844.6982 8537.5869 c
-7844.6094 8537.6191 -7844.5166 8537.5684 -7844.4863 8537.4912 c
-7844.4863 8537.4912 l
b-7838.5313 8562.1094 m
-7838.5991 8562.0566 -7838.707 8562.083 -7838.748 8562.1504 C
-7838.9634 8562.4746 -7840.6914 8564.5195 -7841.3926 8565.1406 c
-7846.1719 8569.3945 -7849.5137 8573.9609 -7857.5391 8577.7227 c
-7864.4512 8580.9639 -7867.1113 8583.5957 -7874.3862 8581.8262 c
-7877.687 8581.0293 -7879.0313 8580.5313 -7880.4351 8575.4551 C
-7881.9473 8569.2988 -7880.8672 8571.7832 -7881.084 8564.4385 c
-7881.2222 8559.6973 -7884 8548.4551 -7871.5254 8534.2598 C
-7871.4199 8534.1484 -7871.4336 8533.9961 -7871.5337 8533.9072 C
-7871.6328 8533.8027 -7871.7959 8533.8164 -7871.8862 8533.916 C
-7877.5786 8538.7168 -7881.0234 8545.6582 -7882.3145 8552.9424 c
-7883.2871 8558.4668 -7882.9199 8563.25 -7882.666 8569.6367 c
-7882.5688 8572.0938 -7883.6855 8579.0723 -7878.9102 8583.0625 c
-7875.3926 8586 -7870.3911 8585.5469 -7866.3545 8584.1563 c
-7860.6992 8582.2119 -7855.9727 8579.1465 -7850.8711 8575.6094 c
-7847.2656 8573.125 -7839.2881 8563.2852 -7838.4785 8562.3262 C
-7838.4351 8562.2588 -7838.4502 8562.1504 -7838.5313 8562.1094 C
b-7873.0503 8549.3057 m
-7872.168 8548.5029 -7871.7017 8549.8457 -7871.4297 8550.6016 c
-7871.1626 8551.3574 -7870.189 8551.25 -7870.5127 8551.5732 c
-7870.8369 8551.8975 -7870.8369 8551.9521 -7871.3232 8551.5195 c
-7871.8086 8551.0879 -7871.8086 8551.7363 -7872.5649 8551.25 c
-7873.3198 8550.7627 -7873.645 8549.8457 -7873.0503 8549.3057 c
b-7865.6519 8553.9492 m
-7865.3657 8553.5918 -7864.6802 8553.5723 -7864.4648 8553.8945 c
-7864.25 8554.2197 -7863.3306 8554.2734 -7863.4937 8554.5967 c
-7863.6543 8554.9219 -7863.6016 8555.1387 -7864.0874 8554.9219 c
-7864.5737 8554.7051 -7864.4121 8555.2998 -7864.897 8555.084 c
-7865.3833 8554.8672 -7865.8687 8554.2197 -7865.6519 8553.9492 c
b-7857.6074 8559.0791 m
-7857.1206 8558.7559 -7855.8794 8559.5117 -7856.4727 8559.5117 c
-7857.0674 8559.5117 -7856.311 8560.2676 -7856.8521 8560.4834 c
-7857.3906 8560.6992 -7857.2832 8560.4297 -7857.6074 8560.6445 c
-7857.9297 8560.8613 -7858.3633 8561.2393 -7858.5239 8560.4297 c
-7858.6855 8559.6191 -7858.3633 8559.6191 -7857.9849 8559.3496 c
-7857.6074 8559.0791 -7857.6074 8559.0791 y
b-7872.2402 8559.3496 m
-7871.1074 8559.2422 -7871.8633 8559.998 -7871.269 8560.4834 c
-7870.6738 8560.9697 -7869.918 8561.6172 -7870.729 8561.4004 c
-7871.5391 8561.1855 -7872.9961 8561.6719 -7872.9434 8560.5381 c
-7872.8887 8559.4033 -7872.6328 8559.3867 -7872.2402 8559.3496 c
b-7866.5703 8567.6113 m
-7866.1016 8567.3438 -7866.6802 8567.7197 -7866.0303 8567.6113 c
-7865.3833 8567.5039 -7864.7886 8567.6113 -7865.2207 8567.8281 c
-7865.6519 8568.0439 -7866.3008 8568.1523 -7866.4634 8567.9893 c
-7866.625 8567.8281 -7866.9473 8567.8281 -7866.5703 8567.6113 c
b-7857.0674 8567.1797 m
-7857.4785 8566.1797 -7856.0962 8566.4238 -7855.4473 8566.7461 c
-7854.7998 8567.0723 -7853.8262 8566.4775 -7854.4209 8566.9102 c
-7855.0137 8567.3418 -7854.7998 8566.9102 -7855.3926 8567.2334 c
-7855.9873 8567.5566 -7856.6895 8568.0977 -7857.0674 8567.1797 c
b-7872.6738 8573.0664 m
-7872.7222 8572.0752 -7871.8086 8572.957 -7871.269 8573.0117 c
-7870.729 8573.0664 -7870.0801 8573.0664 -7870.2432 8573.2813 c
-7870.4038 8573.498 -7870.459 8573.498 -7871.1626 8573.7129 c
-7871.8633 8573.9297 -7872.6191 8574.1445 -7872.6738 8573.0664 c
b-7873.1582 8567.6113 m
-7874.0664 8567.9746 -7874.293 8567.8809 -7874.5625 8568.2051 c
-7874.834 8568.5293 -7875.1558 8569.2314 -7875.5352 8568.0977 c
-7875.9121 8566.9629 -7875.4282 8565.7764 -7875.0479 8565.9375 c
-7874.6714 8566.0996 -7874.293 8566.7461 -7873.8618 8566.9629 c
-7873.4297 8567.1797 -7872.6191 8567.3945 -7873.1582 8567.6113 c
bUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7803 8586 L
-7803 8481 L
-7884 8481 L
-7884 8586 L
nuuu0 O
0 0 0 1 k
-7865.8057 8498.4258 m
-7866.0742 8496.6621 -7867.1602 8495.291 -7868.5239 8495.3965 c
-7869.8862 8495.502 -7870.707 8497.0234 -7870.7432 8498.8066 c
-7870.748 8499.0693 -7870.6743 8500.2441 -7870.6304 8500.4775 C
-7870.6382 8500.582 -7870.6191 8500.6738 -7870.6104 8500.7803 c
-7870.5142 8502.0254 -7869.3574 8503.3604 -7867.9414 8503.25 c
-7866.5249 8503.1406 -7865.4897 8501.8613 -7865.6367 8500.4727 c
-7865.644 8500.4072 -7865.6958 8499.626 -7865.707 8499.5625 C
-7865.6816 8499.2852 -7865.7598 8498.7256 -7865.8057 8498.4258 c
f-7876.2646 8507.7334 m
-7876.9946 8515.916 -7871.5015 8515.1191 v
-7868.3682 8514.0186 -7869.4414 8511.1211 v
-7869.6426 8509.752 -7871.7847 8508.498 v
-7872.146 8508.25 -7872.7632 8507.1016 v
-7873.1294 8505.5977 -7874.5186 8505.2979 v
-7876.0762 8505.251 -7876.2646 8507.7334 v
f-7850.7646 8516.4971 m
F-7850.0762 8514.3408 m
-7850.7847 8513.1934 -7853.8848 8513.6279 Y
-7854.811 8513.6885 -7855.3799 8513.1113 Y
-7857.8394 8509.0918 -7861.0386 8509.8857 -7861.4082 8509.9932 C
-7861.4097 8509.9863 L
-7864.999 8510.6045 -7865.2666 8515.6035 V
-7865.4912 8516.3828 -7866.335 8516.7695 V
-7869.2695 8517.8613 -7869.3481 8519.208 V
-7869.8999 8521.1152 -7867.6006 8521.7422 V
-7865.6792 8522.2568 -7863.7886 8519.8945 V
-7862.6113 8518.6797 -7859.5762 8517.9395 V
-7859.5728 8517.9531 L
-7856.3594 8517.0459 -7854.6392 8517.5889 Y
-7851.8521 8518.7676 -7850.4063 8517.4014 Y
-7848.6826 8515.7559 -7850.0762 8514.3408 Y
f-7863.9834 8497.8789 m
-7864.5854 8496.2002 -7864.2822 8494.4775 -7863.0327 8493.9229 c
-7861.7842 8493.3672 -7860.3384 8494.3164 -7859.4585 8495.8672 c
-7859.3286 8496.0957 -7858.8359 8497.165 -7858.7632 8497.3906 C
-7858.7065 8497.4785 -7858.6792 8497.5684 -7858.6362 8497.667 c
-7858.1289 8498.8086 -7858.5122 8500.5303 -7859.8105 8501.1074 c
-7861.1089 8501.6855 -7862.6279 8501.0527 -7863.1582 8499.7617 c
-7863.1831 8499.7002 -7863.5078 8498.9883 -7863.5298 8498.9268 C
-7863.6831 8498.6963 -7863.8809 8498.166 -7863.9834 8497.8789 c
f-7849.7129 8500.9316 m
-7845.1802 8507.7822 -7850.3911 8509.6943 v
-7853.6714 8510.2168 -7854.103 8507.1572 v
-7854.5786 8505.8564 -7853.29 8503.7354 v
-7853.0903 8503.3447 -7853.0938 8502.04 v
-7853.4858 8500.5449 -7852.4082 8499.6182 v
-7851.0591 8498.8359 -7849.7129 8500.9316 v
fUu-7824.7358 8550.1074 m
-7824.3687 8548.3623 -7824.9048 8546.6963 -7826.2183 8546.3164 c
-7827.5322 8545.9375 -7828.8345 8547.0752 -7829.4937 8548.7324 c
-7829.5903 8548.9775 -7829.9326 8550.1025 -7829.9746 8550.3369 C
-7830.0176 8550.4326 -7830.0322 8550.5244 -7830.0625 8550.6279 c
-7830.4087 8551.8271 -7829.7935 8553.4805 -7828.4282 8553.875 c
-7827.063 8554.2695 -7825.645 8553.4365 -7825.2969 8552.085 c
-7825.2793 8552.0205 -7825.0552 8551.2705 -7825.0425 8551.207 C
-7824.9214 8550.9551 -7824.7983 8550.4053 -7824.7358 8550.1074 c
f-7838.2705 8554.6172 m
-7841.8242 8562.0244 -7836.3999 8563.2061 v
-7833.0801 8563.2754 -7833.0688 8560.1846 v
-7832.7778 8558.8311 -7834.3433 8556.9072 v
-7834.5942 8556.5459 -7834.7695 8555.2539 v
-7834.5854 8553.7188 -7835.7793 8552.9492 v
-7837.2222 8552.3594 -7838.2705 8554.6172 v
f-7817.4648 8571.7695 m
F-7816.063 8569.9912 m
-7816.3247 8568.6689 -7819.3799 8567.9883 Y
-7820.27 8567.7197 -7820.5986 8566.9795 Y
-7821.4922 8562.3535 -7824.7666 8561.9746 -7825.1494 8561.9453 C
-7825.1494 8561.9395 L
-7828.7271 8561.2588 -7830.731 8565.8467 V
-7831.2153 8566.4961 -7832.1416 8566.5625 V
-7835.272 8566.5557 -7835.8169 8567.7891 V
-7837.0039 8569.3809 -7835.0713 8570.7764 V
-7833.4526 8571.9316 -7830.853 8570.3818 V
-7829.3242 8569.6582 -7826.2222 8570.0293 V
-7826.2231 8570.042 L
-7822.896 8570.3213 -7821.4766 8571.4326 Y
-7819.2793 8573.5146 -7817.4463 8572.7432 Y
-7815.2554 8571.8057 -7816.063 8569.9912 Y
f-7822.8374 8550.2354 m
-7822.813 8548.4512 -7821.9258 8546.9453 -7820.5601 8546.8633 c
-7819.1943 8546.7803 -7818.1743 8548.1768 -7817.895 8549.9385 c
-7817.854 8550.1973 -7817.7666 8551.3711 -7817.7778 8551.6094 C
-7817.7559 8551.7109 -7817.7617 8551.8037 -7817.7559 8551.9121 c
-7817.6807 8553.1592 -7818.644 8554.6367 -7820.0625 8554.7217 c
-7821.4814 8554.8066 -7822.6826 8553.6826 -7822.7246 8552.2871 c
-7822.7271 8552.2217 -7822.7822 8551.4404 -7822.7798 8551.375 C
-7822.8433 8551.1045 -7822.8423 8550.54 -7822.8374 8550.2354 c
f-7811.0186 8557.5625 m
-7809.1777 8565.5684 -7814.7271 8565.5303 v
-7817.9834 8564.8691 -7817.3154 8561.8516 v
-7817.3032 8560.4668 -7815.353 8558.9326 v
-7815.0278 8558.6377 -7814.5742 8557.415 v
-7814.417 8555.876 -7813.083 8555.3877 v
-7811.5454 8555.1279 -7811.0186 8557.5625 v
fUU1 Ap
-7884 8586 m
-7884 8481 L
-7803 8481 L
-7803 8586 L
-7884 8586 L
nUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8543.918 m
-7885 8587 L
-7798.2217 8587 L
-7798.2217 8543.918 L
-7885 8543.918 L
nuu0 O
0 0 0 1 k
-7825.2217 8573.2363 m
-7825.2217 8581.0742 L
-7813.2217 8574.1445 L
-7801.2217 8567.2168 L
-7813.2217 8560.2891 L
-7825.2217 8553.3613 L
-7825.2217 8561.4824 L
-7883.9351 8547.7168 L
-7870.9878 8566.8027 L
-7885 8587 L
-7825.2217 8573.2363 L
f0 1 1 0.1 k
0 R
0 0 0 1 K
-7823.2217 8570.2363 m
-7823.2217 8578.0742 L
-7811.2217 8571.1445 L
-7799.2217 8564.2168 L
-7811.2217 8557.2891 L
-7823.2217 8550.3613 L
-7823.2217 8558.4824 L
-7881.9351 8544.7168 L
-7867.2754 8564.3594 L
-7881.9351 8584 L
-7823.2217 8570.2363 L
bUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7726.3994 8587 m
-7726.3994 8573.4199 L
-7885 8573.4199 L
-7885 8587 L
-7726.3994 8587 L
nuu0 O
0.285 0.228 0.171 0 k
-7741.0786 8585.4844 m
-7741.043 8586.6895 L
-7727.5103 8587.5176 -7726.8418 8586.2822 v
-7726.7441 8586.1016 -7726.647 8585.7148 -7726.561 8585.1934 C
-7728.584 8585.8242 -7738.291 8585.5713 -7741.0786 8585.4844 C
f0.44 0.352 0.264 0 k
-7741.4063 8574.0234 m
-7741.3711 8575.2676 L
-7738.4912 8575.0488 -7728.1914 8574.3164 -7726.543 8574.8652 C
-7726.7031 8574.2188 -7726.9199 8573.7646 -7727.2046 8573.6152 c
-7728.8306 8572.7656 -7741.4063 8574.0234 Y
f0.145 0.116 0.087 0 k
-7741.3711 8575.2676 m
-7741.0786 8585.4844 L
-7738.291 8585.5713 -7728.584 8585.8242 -7726.561 8585.1934 C
-7726.1519 8582.7773 -7725.9258 8577.3604 -7726.543 8574.8652 C
-7728.1914 8574.3164 -7738.4912 8575.0488 -7741.3711 8575.2676 C
fUu0.155 0.124 0.093 0 k
-7766.9375 8579.2734 m
-7765.897 8579.6563 L
-7747.0728 8575.1465 L
-7747.481 8574.3145 L
-7766.3633 8576.7246 L
-7767.252 8577.0059 L
-7767.6504 8576.8936 -7768.1934 8576.8242 V
-7767.6094 8577.2373 -7767.1426 8578.1406 -7766.9375 8579.2734 C
fu0.085 0.068 0.051 0 k
-7771.7993 8583.666 m
-7772.5977 8583.7217 -7769.749 8583.6641 Y
-7770.3481 8583.0176 -7770.771 8581.8203 -7770.8105 8580.4375 c
-7770.8169 8580.2246 -7770.8105 8580.0176 -7770.7993 8579.8135 C
-7771.041 8579.707 -7771.0918 8579.7734 -7771.6289 8579.5645 C
-7771 8583.6113 -7771.7993 8583.666 v
f0.305 0.244 0.183 0 k
-7770.3442 8576.8672 m
-7770.5527 8576.8105 -7770.4937 8578.9307 Y
-7769.4785 8579.7588 L
-7767.8359 8578.9434 L
-7766.9375 8579.2734 L
-7767.1426 8578.1406 -7767.6094 8577.2373 -7768.1934 8576.8242 C
-7768.6094 8576.7715 -7769.874 8576.7998 -7770.3442 8576.8672 C
fU0.115 0.092 0.069 0 k
-7766.9375 8579.2734 m
-7767.8359 8578.9434 L
-7769.4785 8579.7588 L
-7770.4937 8578.9307 L
-7770.793 8579.708 -7770.7993 8579.8135 V
-7769.5137 8580.3789 -7768.1831 8580.7402 -7766.8398 8580.9258 C
-7766.79 8580.7275 -7766.7842 8580.543 -7766.79 8580.3369 c
-7766.7998 8579.9717 -7766.8218 8579.6182 -7766.9375 8579.2734 C
f0.41 0.328 0.246 0 k
-7747.4512 8575.3965 m
-7749.377 8576.6426 -7758.3862 8582.0986 -7766.8398 8580.9258 C
-7766.9038 8582.0928 -7767.248 8583.0908 -7767.75 8583.6631 C
-7767.1895 8583.6621 L
-7746.7402 8586.7559 L
-7747.0366 8576.4258 L
-7747.0728 8575.1465 L
-7747.2046 8575.2373 -7747.4512 8575.3965 v
f0.395 0.316 0.237 0 k
-7770.8105 8580.4375 m
-7770.771 8581.8203 -7770.3481 8583.0176 -7769.749 8583.6641 C
-7767.6807 8583.6631 L
-7767.1782 8583.0908 -7766.8218 8582.0713 -7766.8398 8580.9258 C
-7768.1831 8580.7402 -7769.5137 8580.3789 -7770.7993 8579.8135 C
-7770.8105 8580.0176 -7770.8169 8580.2246 -7770.8105 8580.4375 c
fUu0 0 0 0.11 k
-7741.2642 8574.2012 m
-7740.2407 8574.0352 L
-7741.2642 8574.2012 L
-7741.2642 8574.2012 L
f0 0 0 0.34 k
-7747.481 8574.3145 m
-7747.0728 8575.1465 L
-7745.6714 8574.918 L
-7744.5234 8574.7314 L
-7742.6758 8574.4307 L
-7741.2642 8574.2012 L
-7740.2407 8574.0352 L
-7740.2954 8573.7168 -7740.3672 8573.498 -7740.4648 8573.4199 C
-7747.481 8574.3145 L
f0 0 0 0.32 k
-7745.8042 8579.207 m
-7746.041 8586.8613 L
-7740.7144 8587 L
-7739.7266 8583.5146 -7740.1816 8579.1543 V
-7745.8042 8579.207 L
fU0.025 0.02 0.015 0 k
-7739.3223 8576.3848 m
-7736.373 8576.9199 -7733.2402 8577.1602 -7730.3159 8576.3613 c
-7730.2856 8576.3496 -7730.2754 8576.3184 -7730.2871 8576.2969 c
-7730.2881 8576.2656 -7730.3198 8576.2559 -7730.3418 8576.2559 c
-7733.2422 8577.0645 -7736.375 8576.8242 -7739.3042 8576.2783 c
-7739.3262 8576.2793 -7739.3574 8576.291 -7739.3672 8576.3223 c
-7739.3662 8576.3438 -7739.355 8576.375 -7739.3223 8576.3848 c
-7739.3223 8576.3848 l
f-7737.8374 8575.3076 m
-7737.7295 8575.3789 -7737.6313 8575.4941 -7737.5234 8575.502 c
-7733.7886 8575.832 -7730.1631 8575.7813 -7726.4746 8575.6641 c
-7726.4526 8575.6641 -7726.4209 8575.6426 -7726.4214 8575.6211 c
-7726.4214 8575.5879 -7726.4551 8575.5684 -7726.4766 8575.5684 c
-7729.3223 8575.6816 -7732.1401 8575.6992 -7735.0039 8575.5352 c
-7735.9336 8575.4766 -7736.9082 8575.7402 -7737.7778 8575.2207 c
-7737.7993 8575.2109 -7737.8306 8575.2109 -7737.8506 8575.2334 c
-7737.8618 8575.2559 -7737.8594 8575.2871 -7737.8374 8575.3076 c
-7737.8374 8575.3076 l
f-7733.373 8577.3672 m
-7731.5098 8578.6797 -7729.3022 8579.374 -7727.1001 8579.8867 c
-7727.0679 8579.8965 -7727.0474 8579.8848 -7727.0366 8579.8535 c
-7727.0273 8579.8203 -7727.0488 8579.8008 -7727.0703 8579.79 c
-7729.2617 8579.2656 -7731.459 8578.6035 -7733.3105 8577.2803 c
-7733.3433 8577.2598 -7733.375 8577.2715 -7733.3848 8577.293 c
-7733.4058 8577.3145 -7733.3945 8577.3457 -7733.373 8577.3672 c
-7733.373 8577.3672 l
f-7738.9321 8584.0566 m
-7736.7295 8584.5703 -7734.5298 8585.0303 -7732.2798 8585.2754 c
-7732.2598 8585.2852 -7732.229 8585.2637 -7732.229 8585.2422 c
-7732.2183 8585.209 -7732.2407 8585.1777 -7732.2729 8585.1787 c
-7734.5122 8584.8809 -7736.7305 8584.5176 -7738.9126 8583.9502 c
-7738.9351 8583.9512 -7738.9673 8583.9629 -7738.9766 8583.9941 c
-7738.9751 8584.0156 -7738.9648 8584.0479 -7738.9321 8584.0566 c
-7738.9321 8584.0566 l
f-7738.439 8583.3604 m
-7736.3457 8584.1973 -7734.1016 8583.9297 -7731.9023 8583.9629 c
-7731.8706 8583.9609 -7731.8496 8583.9395 -7731.8506 8583.9082 c
-7731.8521 8583.875 -7731.873 8583.8555 -7731.8945 8583.8555 c
-7734.0928 8583.8438 -7736.3374 8584.0996 -7738.4209 8583.2529 c
-7738.4434 8583.2539 -7738.4746 8583.2656 -7738.4834 8583.2969 c
-7738.4834 8583.3184 -7738.4722 8583.3506 -7738.439 8583.3604 c
-7738.439 8583.3604 l
f-7737.707 8584.7051 m
-7736.3833 8584.752 -7735.1504 8584.5469 -7733.8271 8584.209 c
-7733.3594 8584.0996 -7732.9199 8584.2266 -7732.4609 8584.2129 c
-7731.897 8584.1973 l
-7731.874 8584.1963 -7731.8633 8584.1855 -7731.8535 8584.1738 c
-7731.834 8584.1523 -7731.8442 8584.1211 -7731.8662 8584.0996 c
-7732.0625 8583.9453 l
-7732.0742 8583.9453 -7732.085 8583.9355 -7732.0962 8583.9355 c
-7732.5 8583.9473 l
-7733.9551 8584.1914 -7735.457 8584.6719 -7736.8926 8584.0742 c
-7736.9258 8584.0645 -7736.957 8584.0859 -7736.9673 8584.1074 c
-7736.9673 8584.1396 -7736.9551 8584.1602 -7736.9336 8584.1709 c
-7735.647 8584.6992 -7734.1714 8584.4756 -7732.8818 8584.0547 c
-7732.0918 8584.043 L
-7732.124 8584.0332 L
-7731.9282 8584.1875 L
-7731.8984 8584.0898 L
-7732.4639 8584.1064 l
-7732.9321 8584.1406 -7733.3848 8583.9834 -7733.8398 8584.1035 c
-7735.1543 8584.4609 -7736.3975 8584.625 -7737.71 8584.5986 c
-7737.7422 8584.5996 -7737.7642 8584.6211 -7737.7617 8584.6533 c
-7737.7617 8584.6855 -7737.7402 8584.7061 -7737.707 8584.7051 c
-7737.707 8584.7051 l
f-7738.5718 8585.0605 m
-7735.8711 8586.2207 -7732.9023 8585.5703 -7730.1279 8585.1816 c
-7729.7832 8585.2891 l
-7729.7617 8585.2988 -7729.7417 8585.2871 -7729.7207 8585.2656 c
-7729.71 8585.2441 -7729.7217 8585.2129 -7729.7422 8585.2021 c
-7730.0801 8585.0098 l
-7732.7754 8584.3926 -7735.5391 8584.7813 -7738.271 8584.7852 c
-7738.3022 8584.7871 -7738.3232 8584.8086 -7738.3223 8584.8398 c
-7738.3198 8584.8721 -7738.2983 8584.8926 -7738.2681 8584.8926 c
-7735.6738 8584.9355 -7733.0303 8584.4434 -7730.4727 8585.0742 c
-7729.7954 8585.2891 L
-7729.7534 8585.1914 L
-7730.1406 8585.0859 l
-7732.9058 8585.4424 -7735.8418 8586.1348 -7738.5313 8584.9746 c
-7738.5537 8584.9648 -7738.585 8584.9648 -7738.5962 8584.998 c
-7738.6055 8585.0195 -7738.605 8585.0508 -7738.5718 8585.0605 c
-7738.5718 8585.0605 l
f-7735.6895 8578.3945 m
-7734.3945 8578.9004 -7732.9834 8578.6465 -7731.6802 8578.3438 c
-7731.647 8578.3418 -7731.6367 8578.3203 -7731.6382 8578.2891 c
-7731.6504 8578.2568 -7731.6714 8578.2461 -7731.7031 8578.248 c
-7732.998 8578.5303 -7734.377 8578.8154 -7735.6504 8578.2969 c
-7735.6826 8578.2871 -7735.7144 8578.2988 -7735.7246 8578.3311 c
-7735.7222 8578.3525 -7735.7114 8578.3848 -7735.6895 8578.3945 c
-7735.6895 8578.3945 l
f-7736.1401 8580.2207 m
-7734.2266 8580.6895 -7732.3145 8581.1035 -7730.355 8581.3242 c
-7730.3242 8581.334 -7730.3022 8581.3125 -7730.293 8581.2803 c
-7730.2954 8581.2598 -7730.3159 8581.2285 -7730.3374 8581.2285 c
-7732.2959 8581.0078 -7734.209 8580.582 -7736.1206 8580.1133 c
-7736.1426 8580.1152 -7736.1738 8580.126 -7736.1831 8580.1582 c
-7736.1831 8580.1797 -7736.1719 8580.2109 -7736.1401 8580.2207 c
-7736.1401 8580.2207 l
f-7736.9336 8582.6348 m
-7734.499 8583.4609 -7731.8647 8583.0547 -7729.3457 8583.0879 c
-7729.313 8583.0879 -7729.293 8583.0664 -7729.293 8583.0332 c
-7729.2954 8583.0117 -7729.3159 8582.9922 -7729.3481 8582.9922 c
-7731.8574 8582.916 -7734.481 8583.3848 -7736.8945 8582.5264 c
-7736.9282 8582.5273 -7736.959 8582.5391 -7736.9688 8582.5605 c
-7736.9678 8582.5918 -7736.9561 8582.624 -7736.9336 8582.6348 c
-7736.9336 8582.6348 l
f-7732.0542 8583.8496 m
-7730.6582 8584.5449 -7729.0503 8584.4033 -7727.5342 8584.4668 c
-7727.502 8584.4648 -7727.4824 8584.4434 -7727.4824 8584.4121 c
-7727.4834 8584.3906 -7727.5054 8584.3594 -7727.5366 8584.3594 c
-7729.0137 8584.2207 -7730.6489 8584.5234 -7732.0039 8583.7617 c
-7732.0366 8583.7529 -7732.0679 8583.7637 -7732.0786 8583.7861 c
-7732.0879 8583.8076 -7732.0767 8583.8398 -7732.0542 8583.8496 c
-7732.0542 8583.8496 l
f-7731.3418 8580.4248 m
-7730.3926 8580.3975 -7729.4336 8580.3701 -7728.4839 8580.3428 c
-7728.4526 8580.3418 -7728.4312 8580.3203 -7728.4336 8580.2881 c
-7728.4336 8580.2559 -7728.4551 8580.2354 -7728.4878 8580.2363 c
-7729.437 8580.2637 -7730.397 8580.291 -7731.3457 8580.3184 c
-7731.377 8580.3184 -7731.3975 8580.3418 -7731.3975 8580.373 c
-7731.397 8580.4043 -7731.374 8580.4258 -7731.3418 8580.4248 c
-7731.3418 8580.4248 l
f-7729.1592 8578.0361 m
-7728.6895 8578.0645 -7728.209 8578.0723 -7727.7383 8578.0918 c
-7727.7168 8578.0908 -7727.6855 8578.0684 -7727.6865 8578.0371 c
-7727.687 8578.0039 -7727.71 8577.9844 -7727.7417 8577.9844 c
-7728.2114 8577.9873 -7728.6816 8577.9375 -7729.1514 8577.9395 c
-7729.1831 8577.9297 -7729.2031 8577.9512 -7729.2134 8577.9844 c
-7729.2129 8578.0156 -7729.1914 8578.0371 -7729.1592 8578.0361 c
-7729.1592 8578.0361 l
f-7736.9702 8580.2344 m
-7736.5688 8580.5107 -7736.125 8580.6797 -7735.645 8580.751 c
-7735.6113 8580.7607 -7735.5918 8580.7383 -7735.5806 8580.7168 c
-7735.5703 8580.6855 -7735.5928 8580.6543 -7735.6152 8580.6543 c
-7736.0854 8580.5723 -7736.5176 8580.4023 -7736.9209 8580.1475 c
-7736.9521 8580.1377 -7736.9849 8580.1387 -7736.9946 8580.1709 c
-7737.0039 8580.1934 -7736.9922 8580.2246 -7736.9702 8580.2344 c
-7736.9702 8580.2344 l
f-7738.1904 8586.085 m
-7735.7344 8586.5273 -7733.2983 8587.001 -7730.7993 8586.7266 c
-7730.7778 8586.7266 -7730.7568 8586.7041 -7730.7578 8586.6719 c
-7730.7578 8586.6406 -7730.7798 8586.6191 -7730.8022 8586.6191 c
-7733.291 8586.873 -7735.7344 8586.4844 -7738.1719 8585.9775 c
-7738.1934 8585.9785 -7738.2256 8585.9902 -7738.2344 8586.0215 c
-7738.2344 8586.043 -7738.2222 8586.0752 -7738.1904 8586.085 c
-7738.1904 8586.085 l
f0.195 0.156 0.117 0 k
-7738.166 8574.6445 m
-7735.7969 8574.2676 -7733.4058 8574.3477 -7731.0298 8574.5898 c
-7730.998 8574.5879 -7730.9766 8574.5664 -7730.9766 8574.5352 c
-7730.9785 8574.5137 -7731 8574.4824 -7731.0215 8574.4824 c
-7733.4082 8574.2422 -7735.791 8574.1602 -7738.1694 8574.5391 c
-7738.2026 8574.5391 -7738.2222 8574.5605 -7738.2217 8574.5938 c
-7738.2207 8574.625 -7738.1992 8574.6465 -7738.166 8574.6445 c
-7738.166 8574.6445 l
f0.335 0.268 0.201 0 k
-7737.4351 8574.1113 m
-7734.9282 8574.1152 -7732.4146 8574.2773 -7729.918 8573.8965 c
-7729.8862 8573.8945 -7729.8647 8573.873 -7729.8662 8573.8418 c
-7729.8672 8573.8086 -7729.8896 8573.7891 -7729.9209 8573.7891 c
-7732.418 8574.1699 -7734.9297 8574.0293 -7737.4375 8574.0059 c
-7737.46 8574.0059 -7737.481 8574.0273 -7737.4785 8574.0596 c
-7737.4785 8574.0918 -7737.457 8574.1123 -7737.4351 8574.1113 c
-7737.4351 8574.1113 l
f0.205 0.164 0.123 0 k
-7738.9766 8574.3262 m
-7737.5039 8574.668 -7736.0078 8574.4023 -7734.5391 8574.2207 c
-7734.5078 8574.2207 -7734.4873 8574.1973 -7734.499 8574.166 c
-7734.5 8574.1348 -7734.5215 8574.1133 -7734.5537 8574.125 c
-7736.0103 8574.2842 -7737.4961 8574.583 -7738.9473 8574.2188 c
-7738.9785 8574.2207 -7739.0103 8574.2324 -7739.0098 8574.2637 c
-7739.019 8574.2852 -7738.998 8574.3164 -7738.9766 8574.3262 c
-7738.9766 8574.3262 l
f-7732.3535 8573.7949 m
-7731.1978 8573.9219 -7730.0273 8573.8145 -7728.8926 8573.5898 c
-7728.8711 8573.5781 -7728.8506 8573.5566 -7728.8618 8573.5244 c
-7728.8623 8573.5029 -7728.8945 8573.4824 -7728.916 8573.4941 c
-7730.0503 8573.7402 -7731.1914 8573.7939 -7732.3462 8573.6885 c
-7732.3794 8573.6895 -7732.3984 8573.7109 -7732.4087 8573.7324 c
-7732.4082 8573.7646 -7732.3862 8573.7852 -7732.3535 8573.7949 c
-7732.3535 8573.7949 l
f0.335 0.268 0.201 0 k
-7739.2681 8576.4473 m
-7737.9214 8577.1885 -7736.3066 8576.5977 -7734.855 8576.6416 c
-7734.8223 8576.6406 -7734.8022 8576.6191 -7734.8022 8576.5859 c
-7734.8042 8576.5654 -7734.8262 8576.5449 -7734.8574 8576.5449 c
-7736.2886 8576.4902 -7737.8823 8577.0801 -7739.2168 8576.3506 c
-7739.2383 8576.3398 -7739.2695 8576.3516 -7739.291 8576.374 c
-7739.3008 8576.3955 -7739.2886 8576.4277 -7739.2681 8576.4473 c
-7739.2681 8576.4473 l
f-7737.8945 8578.5645 m
-7735.6719 8579.0449 -7733.3896 8578.6162 -7731.1504 8578.5625 c
-7731.1177 8578.5615 -7731.0977 8578.5391 -7731.0977 8578.5078 c
-7731.1001 8578.4863 -7731.1318 8578.4668 -7731.1519 8578.4668 c
-7733.3833 8578.4775 -7735.6519 8578.9805 -7737.875 8578.457 c
-7737.8975 8578.457 -7737.9287 8578.4688 -7737.9375 8578.502 c
-7737.9375 8578.5225 -7737.9258 8578.5547 -7737.8945 8578.5645 c
-7737.8945 8578.5645 l
f-7732.0273 8575.1406 m
-7730.3496 8575.9688 -7728.499 8576.502 -7726.603 8576.3613 c
-7726.5718 8576.3613 -7726.5513 8576.3389 -7726.5527 8576.3066 c
-7726.5527 8576.2754 -7726.5742 8576.2539 -7726.6074 8576.2559 c
-7728.481 8576.416 -7730.3198 8575.8604 -7731.9873 8575.0547 c
-7732.0078 8575.0449 -7732.041 8575.0449 -7732.0503 8575.0781 c
-7732.061 8575.0996 -7732.061 8575.1309 -7732.0273 8575.1406 c
-7732.0273 8575.1406 l
fu0.5 0.85 1 0.45 k
-7885 8581.9082 m
-7885.0254 8582.4883 -7884.5664 8583.1875 -7883.167 8583.9902 C
-7882.8521 8584.0029 -7881.3945 8584.0234 -7879.0889 8584.0488 C
-7879.0889 8581.8223 L
-7881.1382 8581.8457 -7883.1177 8581.8867 -7885 8581.9082 C
f-7884.5088 8580.9688 m
-7879.0889 8580.8447 L
-7879.0889 8579.8145 L
-7882.644 8579.959 L
-7883.8145 8580.3301 -7884.5088 8580.9688 V
f0.5 0.85 1 0.32 k
-7879.0889 8580.8252 m
-7884.4746 8580.9434 L
-7884.7695 8581.2148 -7884.9849 8581.5566 -7885 8581.9277 C
-7883.1177 8581.9063 -7881.1382 8581.8848 -7879.0889 8581.8613 C
-7879.0889 8580.8252 L
f0.5 0.85 1 0.45 k
-7774.1504 8580.6172 m
-7852.3584 8581.541 -7879.1079 8581.8418 V
-7879.1079 8584.0488 L
-7862.8145 8584.2324 -7803.9902 8584.707 Y
-7769.749 8583.6641 L
-7770.457 8580.5684 L
-7774.1504 8580.6172 L
f0.5 0.85 1 0.12 k
-7879.1079 8579.8145 m
-7879.1079 8580.8447 L
-7770.4258 8579 L
-7770.3833 8576.8633 L
-7803.6553 8576.7129 L
-7879.1079 8579.8145 L
fu0.065 0.052 0.039 0 k
-7747.0728 8575.1465 m
-7747.0366 8576.4258 L
-7747.2954 8575.1172 L
-7765.897 8579.6563 L
-7766.9375 8579.2734 L
-7766.8794 8579.6055 -7766.8398 8579.957 -7766.8306 8580.3223 c
-7766.8242 8580.5283 -7766.8281 8580.7285 -7766.8398 8580.9258 C
-7758.3862 8582.0986 -7748.9634 8577.6719 -7747.0366 8576.4258 C
-7746.7402 8586.7559 L
-7746.041 8586.8613 L
-7745.8042 8579.207 L
-7740.1816 8579.1543 L
-7740.0898 8577.0137 -7740.0718 8575.0215 -7740.2407 8574.0352 C
-7747.0728 8575.1465 L
f0.4 0.7 1 0 k
-7770.457 8580.5879 m
-7770.4258 8578.9805 L
-7879.1079 8580.8252 L
-7879.1079 8581.8613 L
-7852.3584 8581.5605 -7770.457 8580.5879 Y
fUU0.025 0.02 0.015 0 k
-7734.7344 8583.0293 m
-7734.7344 8583.0625 -7734.7129 8583.082 -7734.6802 8583.082 c
-7731.6714 8583.1133 -7729.4214 8582.9453 -7726.415 8582.8594 C
-7726.4087 8582.7656 L
-7729.3262 8582.8701 -7731.7607 8583.0078 -7734.6841 8582.9746 C
-7734.7168 8582.9766 -7734.7358 8582.998 -7734.7344 8583.0293 C
f-7726.3994 8582.7656 m
-7726.4082 8582.7441 L
-7726.4087 8582.7656 L
-7726.4063 8582.7656 -7726.4033 8582.7656 -7726.3994 8582.7656 C
f-7730.4487 8581.4238 m
-7731.4458 8581.292 -7732.3394 8581.7656 -7733.2114 8582.1973 C
-7733.2441 8582.208 -7733.2534 8582.2402 -7733.2422 8582.2715 C
-7733.2305 8582.293 -7733.1982 8582.3027 -7733.1777 8582.291 c
-7732.3262 8581.8301 -7731.4312 8581.4199 -7730.4678 8581.5195 c
-7729.1079 8581.6621 -7727.9038 8582.375 -7726.5254 8582.4531 C
-7726.4463 8582.3594 L
-7728.04 8582.2656 -7728.8647 8581.623 -7730.4487 8581.4238 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7756.877 8586 L
-7756.877 8538.415 L
-7884 8538.415 L
-7884 8586 L
nu*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7857.793 8570.417 m
-7857.8232 8570.2676 L
-7859.9849 8564.3643 -7860.9438 8561.6377 -7861.2754 8560.2891 c
-7861.3657 8560.2891 L
-7861.6953 8561.6074 -7862.7754 8564.335 -7864.9673 8570.2676 c
-7864.9966 8570.417 L
-7857.793 8570.417 l
f1 D
-7868.1182 8578.9678 m
-7869.6191 8582.5371 -7870.3994 8584.709 -7868.1182 8584.917 c
-7868.1182 8585.9678 L
-7870.6992 8585.9375 -7873.5806 8585.917 -7876.3418 8585.917 c
-7880.0649 8585.917 -7882.5273 8585.9375 -7884 8585.9678 c
-7884 8584.917 L
-7882.1064 8584.709 -7881.0542 8582.5674 -7873.5513 8565.5029 c
-7861.6953 8538.415 L
-7859.8638 8538.415 L
-7848.1582 8565.5029 L
-7840.8047 8582.5078 -7839.7246 8584.709 -7837.8887 8584.917 c
-7837.8887 8585.9678 L
-7839.5142 8585.9375 -7841.916 8585.917 -7845.5767 8585.917 c
-7848.5488 8585.917 -7851.6694 8585.9375 -7854.7026 8585.9678 c
-7854.7026 8584.917 L
-7852.481 8584.709 -7853.3218 8582.5078 -7854.7617 8578.9678 C
-7868.1182 8578.9678 l
f*U
*u
0 D
-7813.0762 8554.0811 m
-7813.0762 8550.4717 -7815.3535 8548.0947 -7819.1294 8548.0947 c
-7820.2383 8548.0947 -7821.0767 8548.2158 -7821.5273 8548.2451 c
-7821.5273 8560.5479 L
-7820.8672 8560.6084 -7820.208 8560.6084 -7819.729 8560.6084 c
-7818.2002 8560.6084 -7816.7026 8560.127 -7815.6841 8559.4053 c
-7814.3945 8558.5332 -7813.0762 8556.7881 -7813.0762 8554.1416 C
-7813.0762 8554.0811 l
f1 D
-7832.0806 8558.3926 m
-7832.0806 8542.6445 -7832.0806 8540.4287 -7834.542 8540.2783 c
-7834.542 8539.3184 L
-7833.042 8539.2588 -7830.3174 8539.1992 -7827.5664 8539.1689 c
-7825.6538 8539.1084 -7822.3945 8539.0186 -7820.1479 8538.9775 c
-7816.582 8538.9775 -7813.585 8539.4258 -7811.0049 8540.2627 c
-7806.353 8541.8477 -7801.9702 8545.8525 -7801.9702 8553.6602 c
-7801.9702 8558.7432 -7804.4014 8562.3193 -7806.5034 8564.0605 c
-7807.583 8565.0215 -7808.8135 8565.832 -7809.7744 8566.3125 c
-7809.7744 8566.4629 L
-7807.5234 8569.4912 -7805.6025 8572.0625 -7799.3906 8580.6426 c
-7797.5 8583.0645 -7795.9102 8584.7383 -7794.7402 8584.9775 c
-7794.7402 8586 L
-7796.6602 8586 -7799 8585.8848 -7801.1294 8585.8848 c
-7803.3511 8585.8848 -7804.8521 8586 -7806.4424 8586 c
-7807.6729 8586 -7808.7241 8585.9404 -7809.5039 8585.2725 c
-7813.0151 8579.8477 -7816.9121 8573.7559 -7820.1182 8568.7139 c
-7820.5078 8568.7139 -7820.957 8568.7139 -7821.5273 8568.7139 c
-7821.5273 8571.2852 L
-7821.5273 8582.5264 -7821.437 8584.7686 -7819.1895 8584.9775 c
-7819.1895 8585.9697 L
-7820.6279 8585.9404 -7823.9194 8585.915 -7826.6992 8585.915 c
-7829.9287 8585.915 -7832.8921 8585.9404 -7834.5122 8585.9697 c
-7834.5122 8584.9775 L
-7832.0518 8584.7686 -7832.0806 8582.5264 -7832.0806 8565.5918 C
-7832.0806 8558.3926 l
f*U
*u
0 D
-7781.4561 8565.5928 m
-7781.4561 8582.4941 -7781.4561 8584.6484 -7784.2832 8584.9775 C
-7784.2832 8585.9697 l
-7782.3887 8585.9404 -7779.0542 8585.915 -7775.7822 8585.915 c
-7772.6294 8585.915 -7769.5688 8585.9404 -7767.2881 8585.9697 C
-7767.2881 8584.9775 l
-7770.2578 8584.9775 -7770.2881 8582.5244 -7770.2881 8565.5928 C
-7770.2881 8548.1514 L
-7762.8193 8548.1514 l
-7759.999 8548.1514 -7758.5298 8548.96 -7757.8994 8551.2627 C
-7756.9072 8551.2627 l
-7756.9072 8546.4697 -7756.877 8542.415 -7756.877 8539.1709 c
-7761.3486 8539.2012 -7766.748 8539.2314 -7772.0601 8539.2314 C
-7779.7446 8539.2314 l
-7784.5537 8539.2314 -7789.9966 8539.2012 -7794.9614 8539.1709 c
-7794.9614 8542.3848 -7794.9326 8546.4697 -7794.9326 8551.2627 C
-7793.9072 8551.2627 l
-7793.3657 8549.1094 -7791.771 8548.1514 -7788.9438 8548.1514 C
-7781.4561 8548.1514 l
-7781.4561 8565.5928 L
f*U
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7884.75 8563 m
-7884.75 8587 L
-7874.75 8587 L
-7874.75 8563 L
-7884.75 8563 L
n0 Ap
0 O
1 g
-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 c
-7877.5879 8565.2256 -7879.3198 8565.9346 -7880.7559 8567.0176 c
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 c
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.2319 8578.5996 -7883.3457 8580.0918 c
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
-7874.75 8565 L
f0 R
0 G
1 J 1 j 0.5 w-7874.75 8584.6816 m
-7877.7793 8583.7256 -7880.6074 8582.0674 -7883.3457 8580.0918 C
S-7874.75 8579.0488 m
-7877.8999 8576.6436 -7880.957 8573.9131 -7884.0942 8571.4639 C
S-7880.7559 8567.0176 m
-7878.6904 8568.1084 -7876.7017 8569.4668 -7874.75 8570.957 C
S-7875.6982 8565.0479 m
-7875.3809 8565.1309 -7875.063 8565.2148 -7874.75 8565.3145 C
S-7880.7559 8567.0176 m
-7879.3193 8565.9355 -7877.5879 8565.2256 -7875.6982 8565.0479 C
S-7884.0942 8571.4639 m
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.231 8578.5996 -7883.3457 8580.0918 C
S-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 C
S-7880.7559 8567.0176 m
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 C
S-7883.3457 8580.0918 m
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
SU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8569.9043 m
-7846.7305 8561.3408 L
-7885 8561.3408 L
-7885 8569.9043 L
-7846.7305 8569.9043 L
f-7846.7305 8573.0967 m
-7846.7305 8572.4229 L
-7885 8572.4229 L
-7885 8573.0967 L
-7846.7305 8573.0967 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8565.8262 m
-7846.7305 8574.3896 L
-7859.3408 8574.3896 L
-7859.3408 8587 L
-7867.9038 8587 L
-7867.9063 8565.8262 L
-7867.9038 8565.8262 L
-7867.9038 8565.8252 L
-7846.7305 8565.8262 L
f-7846.7305 8563.3076 m
-7870.4233 8563.3076 L
-7870.4233 8587 L
-7871.0967 8587 L
-7871.0977 8562.6328 L
-7846.7305 8562.6328 L
-7846.7305 8563.3076 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8586.999 m
-7885 8548.7285 L
-7846.7305 8548.7285 L
-7846.7305 8586.999 L
-7885 8586.999 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8561.3389 m
-7872.3896 8561.3389 L
-7872.3896 8586.999 L
-7863.8262 8587 L
-7863.8262 8569.9033 L
-7846.7305 8569.9033 L
-7846.7305 8561.3389 L
f-7846.7305 8572.4219 m
-7861.3081 8572.4219 L
-7861.3081 8587 L
-7860.6338 8587 L
-7860.6338 8573.0957 L
-7846.7305 8573.0957 L
-7846.7305 8572.4219 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.0625 8559.4609 m
-7884.6025 8559.4609 L
-7884.6025 8587 L
-7857.0625 8587 L
-7857.0625 8559.4609 L
n0 O
0 0.55 1 0.12 k
-7856.8418 8572.7002 m
-7885 8572.7002 L
-7885 8573.8252 L
-7856.8418 8573.8252 L
-7856.8418 8572.7002 L
fu0 0.55 1 0.3 k
-7883.9814 8560.5215 m
-7884.4102 8562.5254 -7883.1865 8566.1514 -7880.0874 8569.251 c
-7876.9878 8572.3496 -7873.3457 8573.6602 -7871.3594 8573.1455 C
-7871.3594 8573.1455 L
-7870.875 8571.1895 -7872.1519 8567.5117 -7875.25 8564.4141 c
-7878.3457 8561.3184 -7882.0122 8560.1064 -7883.9814 8560.5215 C
f0 0.39 0.7 0.12 k
-7883.9814 8585.9912 m
-7884.4102 8583.9883 -7883.1865 8580.3613 -7880.0874 8577.2617 c
-7876.9878 8574.1641 -7873.3457 8572.8535 -7871.3594 8573.3672 C
-7871.3594 8573.3672 L
-7870.875 8575.3242 -7872.1519 8579.001 -7875.25 8582.0996 c
-7878.3457 8585.1953 -7882.0122 8586.4063 -7883.9814 8585.9912 C
fUu0 0.55 1 0.3 k
-7870.1782 8585.9912 m
-7870.6074 8583.9883 -7869.3838 8580.3613 -7866.2842 8577.2617 c
-7863.1855 8574.1641 -7859.543 8572.8535 -7857.5576 8573.3672 C
-7857.5566 8573.3672 L
-7857.0718 8575.3242 -7858.3496 8579.001 -7861.4473 8582.0996 c
-7864.543 8585.1953 -7868.209 8586.4063 -7870.1782 8585.9912 C
f0 0.39 0.7 0.12 k
-7870.1782 8560.5215 m
-7870.6074 8562.5254 -7869.3838 8566.1514 -7866.2842 8569.251 c
-7863.1855 8572.3496 -7859.543 8573.6602 -7857.5576 8573.1455 C
-7857.5566 8573.1455 L
-7857.0718 8571.1895 -7858.3496 8567.5117 -7861.4473 8564.4141 c
-7864.543 8561.3184 -7868.209 8560.1064 -7870.1782 8560.5215 C
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.4609 m
-7885 8559.4609 L
-7885 8587 L
-7857.4609 8587 L
-7857.4609 8559.4609 L
n0 O
0 0.55 1 0.3 k
-7875.4233 8573.252 m
-7874.3096 8571.5313 -7870.8809 8569.833 -7866.4966 8569.833 c
-7862.1152 8569.833 -7858.6138 8571.4824 -7857.5718 8573.25 C
-7857.5718 8573.25 L
-7858.6138 8574.9766 -7862.1152 8576.6738 -7866.4966 8576.6738 c
-7870.875 8576.6738 -7874.3242 8574.9375 -7875.4233 8573.252 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.9521 8584.3125 m
-7776.7954 8584.3125 L
-7776.7954 8570.1855 L
-7883.9521 8570.1855 L
-7883.9521 8584.3125 L
nu0 O
0 0 0 1 k
-7882.2832 8583.623 m
-7882.8535 8586 -7882.8184 8582.0039 V
-7883.0479 8578.8027 L
-7883.6167 8576.4551 L
-7883.4502 8574.123 L
-7881.9502 8573.4551 -7865.2832 8572.123 V
-7858.6167 8570.7891 -7849.6167 8570.7891 V
-7784.3936 8571.4766 -7779.4912 8572.8848 v
-7820.3882 8570.875 -7822.9688 8571.5117 v
-7783.8569 8573.1602 -7780.8545 8574.4316 v
-7818.79 8572.5469 -7822.167 8574.1777 v
-7787.249 8575.9102 -7783.021 8577.5313 v
-7789.7217 8576.8828 -7791.5127 8577.082 v
-7788.3896 8577.5703 l
-7793.4194 8577.502 l
-7796.3218 8577.1289 l
-7788.4521 8578.2422 -7787.9033 8578.8086 v
-7784.3154 8578.1309 -7798.5186 8578.3848 v
-7832.1177 8574.4551 -7882.2832 8583.623 V
f/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7883.9502 8573.123 m
-7863.667 8571.2949 -7843.9727 8570.2207 v
-7801.1514 8570.502 -7796.5737 8570.9004 v
-7784.1631 8571.0313 -7776.7959 8572.0273 v
S/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7821.8369 8570.4082 m
-7825.2959 8570.0273 -7851.2607 8570.2793 Y
-7861.627 8570.1602 -7883.9502 8573.123 Y
S/BBAccumRotation (5.805971) XT
-7820.9873 8573.6641 m
-7790.3608 8574.582 -7783.6606 8575.2324 v
S/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7829.6201 8578.2051 m
-7794.3706 8579.6172 -7791.4058 8580.1406 v
S/BBAccumRotation (5.805971) XT
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8585.9355 m
-7670.4009 8585.9355 L
-7670.4009 8578.1348 L
-7884 8578.1348 L
-7884 8585.9355 L
n0 O
0 0 0 1 k
-7884 8582.0352 m
-7873.9858 8584.5273 -7867.187 8585.875 -7855.2007 8585.9355 c
-7842.2183 8586 -7777.2002 8585.9355 y
-7712.1816 8586 -7699.2002 8585.9355 v
-7687.2129 8585.875 -7680.415 8584.5273 -7670.4009 8582.0352 C
-7680.415 8579.543 -7687.2129 8578.1953 -7699.2002 8578.1348 c
-7712.1816 8578.0693 -7777.2002 8578.1348 y
-7842.2183 8578.0693 -7855.2007 8578.1348 v
-7867.187 8578.1953 -7873.9858 8579.543 -7884 8582.0352 C
fU%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -
(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -
(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -
( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -
(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -
( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -
(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -
(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -
(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -
(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -
(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -
(tternOnPath Brush Tool/ Rope /) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Dog Tracks)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Fall Leaf)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -
(1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Ladybug)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -
(1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Push Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -
( 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Strawberry)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -
(-75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Twinkle Star )
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Arrow)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Paintbrush)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -
( 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Double Lines)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -
(0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Laurel)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -
(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rope )
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -
(0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0.75 g
0 R
0 G
0 J 0 j 0.5 w 4 M []0 d0 XR
325.7979 371.1943 m
287.9639 432.4521 L
349.2227 470.2861 L
387.0566 409.0283 L
325.7979 371.1943 L
b1 g
0.67 G
0.25 w327.2617 377.3877 m
294.1567 430.9883 L
347.7578 464.0938 L
380.8633 410.4922 L
327.2617 377.3877 L
b0 G
2 w351.6973 397.7686 m
339.0098 389.9326 322.373 393.8662 314.5381 406.5527 c
306.7026 419.2402 310.6348 435.876 323.3223 443.7119 c
336.0098 451.5479 352.6465 447.6152 360.4824 434.9287 c
368.3174 422.2412 364.3848 405.6045 351.6973 397.7686 c
b*u
0 Ap
0 g
1 w353.2285 433.9355 m
355.7441 435.4893 L
355.2539 436.2705 L
355.2656 436.2783 L
358.1172 435.3203 L
353.959 432.7529 L
353.7197 432.6055 353.5273 432.4668 353.3799 432.3369 c
353.2334 432.208 353.0996 432.0596 352.9805 431.8916 c
352.501 432.667 L
352.0195 433.4463 L
352.2227 433.4795 352.416 433.5313 352.5977 433.6025 c
352.7793 433.6777 352.9883 433.7881 353.2285 433.9355 c
f*U
*u
359.7656 429.585 m
359.5703 429.4639 359.3164 429.3916 359.0049 429.3662 c
358.6934 429.3398 358.2051 429.3506 357.5371 429.3994 c
355.7617 429.5303 L
356.0918 428.9951 L
356.3555 428.5684 356.5684 428.2549 356.7324 428.0576 c
356.8965 427.8604 357.0449 427.7334 357.1816 427.6758 c
356.5156 427.4648 L
355.8438 427.2539 L
353.5781 430.9238 L
353.582 430.9258 L
357.6191 430.6904 L
358.1035 430.6621 358.4414 430.6523 358.6338 430.6621 c
358.8262 430.6738 358.9688 430.708 359.0605 430.7656 c
359.1738 430.835 359.2402 430.9336 359.2598 431.0615 c
359.2793 431.1895 359.2471 431.3193 359.166 431.4512 c
359.0254 431.6787 358.8164 431.7861 358.5371 431.7744 c
358.2598 431.7627 357.9707 431.6328 357.6738 431.3838 c
357.4199 432.6719 L
357.873 433.0469 358.3516 433.1787 358.8555 433.0674 c
359.3594 432.9561 359.7813 432.624 360.123 432.0723 c
360.4258 431.5811 360.5449 431.1064 360.4785 430.6484 c
360.4141 430.1934 360.1758 429.8379 359.7656 429.585 c
f*U
*u
357.9805 420.4912 m
360.4961 422.0449 L
360.0059 422.8252 L
360.0186 422.834 L
362.8691 421.876 L
358.7109 419.3086 L
358.4727 419.1602 358.2793 419.0215 358.1328 418.8926 c
357.9863 418.7627 357.8516 418.6143 357.7324 418.4473 c
357.2539 419.2227 L
356.7715 420.002 L
356.9746 420.0342 357.168 420.0859 357.3496 420.1592 c
357.5313 420.2324 357.7412 420.3438 357.9805 420.4912 c
f*U
*u
359.3965 408.5996 m
359.2012 408.4795 358.9473 408.4063 358.6348 408.3809 c
358.3242 408.3545 357.834 408.3652 357.168 408.415 c
355.3906 408.5459 L
355.7207 408.0107 L
355.9844 407.583 356.1992 407.2705 356.3613 407.0723 c
356.5254 406.875 356.6748 406.748 356.8105 406.6914 c
356.1445 406.4795 L
355.4746 406.2695 L
353.207 409.9385 L
353.2109 409.9404 L
357.25 409.7051 L
357.7324 409.6777 358.0703 409.667 358.2637 409.6768 c
358.4551 409.6895 358.5977 409.7227 358.6914 409.7803 c
358.8037 409.8506 358.8701 409.9492 358.8887 410.0762 c
358.9082 410.2041 358.877 410.334 358.7949 410.4658 c
358.6543 410.6934 358.4463 410.8008 358.168 410.7891 c
357.8887 410.7773 357.6016 410.6475 357.3027 410.3994 c
357.0488 411.6865 L
357.5039 412.0625 357.9824 412.1934 358.4863 412.082 c
358.9893 411.9707 359.4111 411.6396 359.752 411.0879 c
360.0557 410.5957 360.1738 410.1211 360.1074 409.6641 c
360.043 409.208 359.8066 408.8535 359.3965 408.5996 c
f*U
*u
350.4414 403.5195 m
350.2598 403.8125 350.0957 404.041 349.9463 404.2061 c
349.7969 404.3701 349.6309 404.5088 349.4492 404.6191 c
350.125 404.8467 L
350.8047 405.0713 L
352.8496 401.7607 L
352.8457 401.7588 L
350.0508 401.5693 L
350.0684 401.3828 350.0605 401.1973 350.0254 401.0107 c
349.9258 400.4824 349.6543 400.0811 349.209 399.8066 c
348.6826 399.4814 348.1582 399.3945 347.6387 399.5469 c
347.1191 399.6982 346.6777 400.0674 346.3164 400.6533 c
346.1211 400.9688 345.9863 401.2656 345.9121 401.542 c
345.8369 401.8193 345.7988 402.1611 345.7969 402.5654 c
346.9023 402.6563 L
346.875 402.4063 346.873 402.2021 346.8945 402.0439 c
346.916 401.8857 346.9648 401.7441 347.041 401.6201 c
347.2148 401.3398 347.4199 401.1602 347.6582 401.0811 c
347.8965 401.001 348.1328 401.0332 348.3662 401.1777 c
348.6006 401.3223 348.7363 401.5205 348.7734 401.7705 c
348.8086 402.0215 348.7412 402.2871 348.5684 402.5684 c
348.502 402.6758 L
350.8564 402.8467 l
350.4414 403.5195 L
f*U
*u
337.3281 399.751 m
337.3965 399.7461 L
339.2832 399.6787 L
337.9004 398.8242 L
337.9004 398.8262 L
337.3281 399.751 l
f1 D
336.8789 398.3369 m
336.0586 397.8301 l
335.8906 397.7266 335.7207 397.6338 335.5469 397.5518 c
335.375 397.4697 335.2441 397.4199 335.1602 397.4043 C
336.041 395.9775 l
336.1035 396.0293 336.2158 396.1084 336.375 396.2139 c
336.5332 396.3193 336.6953 396.4238 336.8633 396.5273 C
337.6836 397.0342 L
337.7354 396.9512 l
337.8066 396.835 337.8711 396.7148 337.9297 396.5889 c
337.9863 396.4629 338.0215 396.3682 338.0352 396.3027 C
339.1387 396.9844 l
339.084 397.0264 339.0137 397.1025 338.9258 397.2129 c
338.8379 397.3232 338.7559 397.4385 338.6836 397.5576 C
338.6309 397.6426 L
341.1543 399.2646 L
340.7617 399.9033 L
340.3691 400.5381 l
339.6543 400.5586 339.0391 400.5938 338.5244 400.6436 c
338.0078 400.6943 337.3965 400.7793 336.6895 400.8965 C
336.1855 400.585 L
335.6836 400.2744 L
336.8789 398.3369 l
f*U
*u
0 D
327.3857 398.9941 m
326.8574 398.668 326.332 398.582 325.8086 398.7383 c
325.2852 398.8936 324.8398 399.2676 324.4746 399.8604 c
324.3066 400.1328 324.1836 400.3945 324.1074 400.6455 c
324.0293 400.8955 323.9736 401.2217 323.9375 401.6211 c
325.0508 401.7871 L
325.0186 401.5557 325.0156 401.3623 325.0391 401.2061 c
325.0625 401.0498 325.1172 400.9004 325.2051 400.7588 c
325.3721 400.4893 325.5742 400.3174 325.8115 400.2432 c
326.0488 400.1709 326.2871 400.207 326.5264 400.3555 c
326.75 400.4932 326.875 400.707 326.9004 400.9971 c
326.9258 401.2861 326.8457 401.5811 326.6611 401.8799 c
326.5928 401.9912 326.5098 402.0947 326.4141 402.1914 c
326.3203 402.2891 326.2227 402.3652 326.125 402.4209 c
326.7168 402.7197 327.209 403.001 327.5996 403.2676 c
327.9922 403.5352 328.4355 403.8916 328.9277 404.3359 c
330.8906 401.1592 L
330.2646 400.9268 L
329.6338 400.6943 L
329.6426 400.7734 329.6309 400.877 329.5957 401.0049 c
329.5625 401.1318 329.5176 401.2402 329.4629 401.3281 c
328.8457 402.3291 L
327.8828 401.7441 L
327.9961 401.5615 L
328.2715 401.1172 328.3496 400.6465 328.2324 400.1494 c
328.1133 399.6543 327.832 399.2695 327.3857 398.9941 c
f*U
*u
318.3301 408.7861 m
318.541 408.7305 318.7061 408.6055 318.8262 408.4121 c
318.9512 408.209 318.9922 408.0049 318.9473 407.7998 c
318.9043 407.5938 318.7852 407.4326 318.5918 407.3125 c
318.4043 407.1963 318.207 407.166 318.002 407.2207 c
317.7969 407.2744 317.6318 407.4004 317.5098 407.5986 c
317.3926 407.7891 317.3574 407.9912 317.4023 408.207 c
317.4473 408.4219 317.5586 408.585 317.7373 408.6953 c
317.9229 408.8096 318.1191 408.8398 318.3301 408.7861 c
f1 D
321.2852 410.2656 m
321.1582 410.2305 321.0645 410.2129 321.0039 410.2158 C
318.9473 410.2705 l
318.5254 410.2822 318.1621 410.2559 317.8574 410.1953 c
317.5527 410.1338 317.2852 410.0313 317.0508 409.8867 c
316.5508 409.5781 316.2559 409.1602 316.1621 408.6309 c
316.0684 408.1016 316.1943 407.5576 316.5391 407 c
316.9004 406.415 317.3359 406.0527 317.8477 405.916 c
318.3574 405.7773 318.8828 405.876 319.4277 406.2129 c
319.8594 406.4795 320.1367 406.8496 320.2578 407.3203 c
320.3789 407.793 320.3105 408.2373 320.0547 408.6523 c
320.0068 408.7334 319.9551 408.8096 319.8984 408.8818 C
321.375 408.8457 l
321.7461 408.835 322.0332 408.8193 322.2334 408.7969 c
322.4336 408.7744 322.5918 408.7412 322.708 408.6973 C
321.6523 410.4063 l
321.5313 410.3496 321.4092 410.3027 321.2852 410.2656 c
f*U
*u
0 D
312.5352 418.0449 m
312.6113 418.0283 312.7559 418.0225 312.9668 418.0273 c
313.1777 418.0322 313.3965 418.0479 313.623 418.0742 c
318.0098 418.6045 L
317.3008 419.752 L
317.1523 419.9941 317.0098 420.1914 316.873 420.3457 c
316.7363 420.499 316.5781 420.6406 316.3965 420.7705 c
317.0664 420.9775 L
317.7383 421.1855 L
320.0098 417.5068 L
313.8125 416.708 L
313.7637 416.7041 313.7051 416.6865 313.6328 416.6582 c
313.5625 416.6299 313.502 416.5967 313.4512 416.5596 c
312.5352 418.0449 L
f*U
*u
318.7266 431.3887 m
318.752 431.582 318.8398 431.7246 318.9883 431.8164 c
319.1396 431.9092 319.3066 431.9248 319.4902 431.8623 c
319.6738 431.8008 319.8223 431.6777 319.9355 431.4941 c
320.0498 431.3086 320.0938 431.1201 320.0664 430.9277 c
320.041 430.7363 319.9531 430.5938 319.8008 430.5 c
319.6523 430.4082 319.4863 430.3936 319.3027 430.4561 c
319.1221 430.5195 318.9727 430.6436 318.8594 430.8291 c
318.7451 431.0127 318.7012 431.1992 318.7266 431.3887 c
f1 D
319.1641 429.29 m
319.6367 429.1348 320.0859 429.1895 320.5137 429.4531 c
320.9434 429.7178 321.1943 430.0967 321.2676 430.5889 c
321.3418 431.0811 321.2227 431.5811 320.9102 432.0879 c
320.5967 432.5947 320.2031 432.9238 319.7305 433.0771 c
319.2588 433.2305 318.8086 433.1748 318.3789 432.9092 c
317.9512 432.6455 317.7012 432.2695 317.627 431.7793 C
317.6172 431.7139 L
317.5117 431.75 l
317.0059 431.915 316.5234 431.8555 316.0625 431.5703 c
315.6035 431.2871 315.333 430.8857 315.25 430.3643 c
315.1699 429.8447 315.293 429.3174 315.623 428.7832 c
315.9531 428.249 316.3691 427.9023 316.8711 427.7422 c
317.373 427.583 317.8535 427.6445 318.3125 427.9277 c
318.7715 428.2129 319.0449 428.6143 319.1289 429.1309 C
319.1465 429.2969 L
319.1641 429.29 l
f0 D
317.9902 429.5977 m
317.9414 429.3984 317.8203 429.2402 317.625 429.1201 c
317.4336 429.002 317.2383 428.9648 317.041 429.0107 c
316.8438 429.0557 316.6855 429.1748 316.5664 429.3662 c
316.4482 429.5576 316.4131 429.7529 316.4609 429.9492 c
316.5078 430.1465 316.6289 430.3047 316.8203 430.4229 c
317.0156 430.543 317.2109 430.5811 317.4082 430.5352 c
317.6055 430.4893 317.7637 430.3711 317.8828 430.1787 c
318.001 429.9873 318.0371 429.793 317.9902 429.5977 c
f*U
*u
326.7207 438.874 m
326.5078 438.9277 326.3418 439.0518 326.2227 439.2451 c
326.0977 439.4482 326.0566 439.6523 326.1016 439.8594 c
326.1475 440.0674 326.2695 440.2314 326.4668 440.3535 c
326.6582 440.4717 326.8594 440.5039 327.0684 440.4512 c
327.2773 440.3984 327.4424 440.2725 327.5645 440.0742 c
327.6816 439.8857 327.7168 439.6826 327.668 439.4658 c
327.6191 439.249 327.5039 439.084 327.3213 438.9717 c
327.1318 438.8545 326.9316 438.8223 326.7207 438.874 c
f1 D
323.7813 437.3936 m
323.9219 437.4316 324.0293 437.4492 324.1016 437.4453 C
326.1055 437.3916 l
326.5273 437.3809 326.8965 437.4102 327.2129 437.4785 c
327.5293 437.5469 327.8164 437.6611 328.0781 437.8232 c
328.5605 438.1201 328.8418 438.5303 328.9258 439.0527 c
329.0098 439.5762 328.8809 440.1162 328.5352 440.6738 c
328.1738 441.2578 327.7383 441.6201 327.2285 441.7588 c
326.7168 441.8975 326.1895 441.7979 325.6445 441.4619 c
325.2148 441.1953 324.9434 440.8164 324.8359 440.3223 c
324.7285 439.8291 324.8125 439.3574 325.0889 438.9092 C
325.166 438.7842 L
323.916 438.8125 l
323.4551 438.8301 323.1055 438.8496 322.8701 438.873 c
322.6338 438.8955 322.457 438.9248 322.3398 438.9619 C
323.3926 437.2549 l
323.5098 437.3086 323.6387 437.3545 323.7813 437.3936 c
f*U
*u
0 D
333.7236 443.9053 m
336.2402 445.459 L
335.748 446.2393 L
335.7617 446.248 L
338.6113 445.29 L
334.4551 442.7217 L
334.2148 442.5742 334.0234 442.4355 333.876 442.3057 c
333.7295 442.1768 333.5957 442.0283 333.4766 441.8604 c
332.9961 442.6367 L
332.5156 443.416 L
332.7188 443.4482 332.9121 443.5 333.0938 443.5723 c
333.2754 443.6465 333.4844 443.7578 333.7236 443.9053 c
f*U
*u
336.3145 439.377 m
336.1738 439.6025 336.21 439.8613 336.418 440.1514 c
336.627 440.4424 337.0039 440.7559 337.543 441.0889 c
338.0742 441.417 338.5195 441.6094 338.8799 441.667 c
339.2402 441.7246 339.4883 441.6426 339.624 441.4209 c
339.7598 441.2002 339.7227 440.9414 339.5117 440.6445 c
339.2988 440.3467 338.9277 440.0342 338.3965 439.7061 c
337.8672 439.3789 337.4219 439.1875 337.0605 439.1309 c
336.6992 439.0742 336.4502 439.1563 336.3145 439.377 c
f1 D
335.3164 438.7607 m
335.6914 438.1563 336.2441 437.8135 336.9766 437.7354 c
337.709 437.6563 338.4648 437.8564 339.2422 438.3369 c
340.0215 438.8184 340.5391 439.4033 340.7969 440.0947 c
341.0547 440.7842 340.9941 441.4316 340.6211 442.0371 c
340.248 442.6406 339.6973 442.9814 338.9648 443.0615 c
338.2324 443.1396 337.4766 442.9395 336.6973 442.458 c
335.9023 441.9668 335.3789 441.3828 335.125 440.7031 c
334.873 440.0254 334.9355 439.3779 335.3164 438.7607 c
f*U
*u
0 D
345.4766 441.3691 m
347.9932 442.9229 L
347.502 443.7041 L
347.5156 443.7119 L
350.3652 442.7539 L
346.207 440.1865 L
345.9688 440.0381 345.7754 439.9004 345.6289 439.7705 c
345.4824 439.6416 345.3496 439.4922 345.2295 439.3252 c
344.75 440.1006 L
344.2695 440.8809 L
344.4727 440.9121 344.6641 440.9648 344.8477 441.0361 c
345.0273 441.1104 345.2383 441.2217 345.4766 441.3691 c
f*U
*u
347.8477 437.5303 m
350.3652 439.084 L
349.873 439.8643 L
349.8867 439.873 L
352.7363 438.915 L
348.5791 436.3467 L
348.3398 436.1992 348.1465 436.0605 348 435.9316 c
347.8535 435.8018 347.7207 435.6533 347.6016 435.4854 c
347.1211 436.2617 L
346.6406 437.041 L
346.8438 437.0732 347.0361 437.125 347.2188 437.1973 c
347.3984 437.2715 347.6094 437.3818 347.8477 437.5303 c
f*U
0 R
0 G
0.25 w334.3379 420.2686 m
333.2451 418.8408 l
333.9189 417.749 l
335.6855 418.0869 l
351.4102 427.7988 l
356.4551 432.4219 l
350.0625 429.9805 l
334.3379 420.2686 l
b334.4629 422.8848 m
334.3516 424.1602 l
335.3281 424.7627 l
336.416 424.0908 l
343.0254 413.3896 l
344.4531 408.8965 l
341.0723 412.1836 l
334.4629 422.8848 l
b/BBAccumRotation (0.553269) XT
1 Ap
0.75 g
0.5 w216 432 m
144 432 L
144 504 L
216 504 L
216 432 L
b1 g
0.67 G
0.25 w211.5 436.5 m
148.5 436.5 L
148.5 499.5 L
211.5 499.5 L
211.5 436.5 L
b0 G
2 w207 468 m
207 453.0884 194.9116 441 180 441 c
165.0884 441 153 453.0884 153 468 c
153 482.9116 165.0884 495 180 495 c
194.9116 495 207 482.9116 207 468 c
b*u
0 Ap
0 g
1 w177.0327 488.3071 m
177.0327 491.2642 L
176.1108 491.2563 L
176.1108 491.272 L
178.4233 493.1938 L
178.4233 488.3071 L
178.4233 488.0259 178.4395 487.7891 178.4727 487.5962 c
178.5059 487.4033 178.5625 487.2119 178.6421 487.022 c
177.73 487.022 L
176.814 487.022 L
176.8936 487.2119 176.9502 487.4033 176.9854 487.5962 c
177.0166 487.7891 177.0327 488.0259 177.0327 488.3071 c
f*U
*u
184.1704 491.583 m
184.1704 491.3535 184.0986 491.0996 183.9561 490.8208 c
183.8154 490.542 183.5488 490.1318 183.1567 489.5898 c
182.1118 488.147 L
182.7407 488.147 L
183.2432 488.147 183.6216 488.1646 183.8755 488.1997 c
184.1294 488.2349 184.3159 488.2954 184.436 488.3813 c
184.2661 487.7036 L
184.0923 487.022 L
179.7798 487.022 L
179.7798 487.0259 L
182.1016 490.3384 L
182.3794 490.7344 182.5654 491.0166 182.6587 491.186 c
182.7495 491.3555 182.7954 491.4946 182.7954 491.604 c
182.7954 491.7368 182.7461 491.8447 182.6475 491.9282 c
182.5488 492.0117 182.4219 492.0532 182.2666 492.0532 c
181.9995 492.0532 181.7979 491.9316 181.6616 491.6885 c
181.5254 491.4453 181.4849 491.1318 181.5396 490.748 c
180.311 491.2095 L
180.23 491.7925 180.3696 492.2686 180.729 492.6387 c
181.0884 493.0088 181.5923 493.1938 182.2407 493.1938 c
182.8188 493.1938 183.2847 493.0449 183.6392 492.748 c
183.9932 492.4536 184.1704 492.0654 184.1704 491.583 c
f*U
*u
190.9688 485.2856 m
190.9688 488.2427 L
190.0469 488.2349 L
190.0469 488.2505 L
192.3594 490.1724 L
192.3594 485.2856 L
192.3594 485.0044 192.376 484.7676 192.4092 484.5747 c
192.4424 484.3818 192.4985 484.1904 192.5781 484.0005 c
191.666 484.0005 L
190.75 484.0005 L
190.8296 484.1904 190.8867 484.3818 190.9209 484.5747 c
190.9531 484.7676 190.9688 485.0044 190.9688 485.2856 c
f*U
*u
201.8301 480.2412 m
201.8301 480.0117 201.7588 479.7578 201.6157 479.479 c
201.4751 479.2002 201.209 478.79 200.8164 478.248 c
199.7715 476.8052 L
200.4004 476.8052 L
200.9028 476.8052 201.2813 476.8228 201.5352 476.8579 c
201.7891 476.8931 201.9756 476.9536 202.0957 477.0396 c
201.9258 476.3618 L
201.752 475.6802 L
197.4395 475.6802 L
197.4395 475.6841 L
199.7617 478.9966 L
200.0391 479.3926 200.2251 479.6748 200.3184 479.8442 c
200.4092 480.0137 200.4551 480.1528 200.4551 480.2622 c
200.4551 480.395 200.4058 480.5029 200.3076 480.5864 c
200.209 480.6699 200.082 480.7114 199.9263 480.7114 c
199.6592 480.7114 199.458 480.5898 199.3213 480.3467 c
199.1855 480.1035 199.1445 479.79 199.1992 479.4063 c
197.9707 479.8677 L
197.8896 480.4507 198.0293 480.9268 198.3887 481.2969 c
198.748 481.667 199.252 481.8521 199.9004 481.8521 c
200.4785 481.8521 200.9443 481.7031 201.2988 481.4063 c
201.6528 481.1118 201.8301 480.7236 201.8301 480.2412 c
f*U
*u
201.4468 469.9526 m
201.103 469.9526 200.8218 469.9326 200.603 469.8921 c
200.3843 469.8516 200.1797 469.7832 199.9897 469.687 c
200.1519 470.3804 L
200.3179 471.0776 L
204.2085 471.0776 L
204.2085 471.0737 L
202.9014 468.5967 L
203.0693 468.5132 203.2227 468.4082 203.3623 468.2803 c
203.7598 467.9189 203.9585 467.4766 203.9585 466.9541 c
203.9585 466.335 203.7568 465.8438 203.3545 465.4814 c
202.9521 465.1182 202.4067 464.937 201.7188 464.937 c
201.3472 464.937 201.0239 464.978 200.749 465.0601 c
200.4736 465.1421 200.1631 465.2886 199.8179 465.4995 c
200.3218 466.4878 L
200.52 466.334 200.6924 466.2246 200.8384 466.1597 c
200.9844 466.0947 201.1309 466.062 201.2769 466.062 c
201.6055 466.062 201.8662 466.1426 202.0596 466.3037 c
202.2524 466.4653 202.3491 466.6826 202.3491 466.9565 c
202.3491 467.2324 202.252 467.4521 202.0581 467.6147 c
201.8643 467.7773 201.6021 467.8589 201.2715 467.8589 c
201.146 467.8589 L
202.2373 469.9526 l
201.4468 469.9526 L
f*U
*u
197.7627 456.8159 m
197.8027 456.8711 L
198.8521 458.4409 L
198.8521 456.8159 L
198.8501 456.8159 L
197.7627 456.8159 l
f1 D
198.7295 455.6909 m
198.7295 454.7261 l
198.7295 454.5298 198.7192 454.3364 198.6982 454.1455 c
198.6777 453.9546 198.6514 453.8188 198.6201 453.7378 C
200.2964 453.7378 l
200.2861 453.8188 200.2778 453.9546 200.2715 454.1455 c
200.2646 454.3364 200.2612 454.5298 200.2612 454.7261 C
200.2612 455.6909 L
200.3584 455.6909 l
200.4951 455.6909 200.6318 455.6826 200.769 455.6655 c
200.9058 455.6484 201.0054 455.6284 201.0679 455.605 C
201.0679 456.9019 l
201.0039 456.8784 200.9014 456.8584 200.7617 456.8413 c
200.6211 456.8242 200.4805 456.8159 200.3408 456.8159 C
200.2412 456.8159 L
200.187 459.8159 L
199.437 459.8159 L
198.6909 459.8159 l
198.2979 459.2192 197.9448 458.7148 197.6323 458.3027 c
197.3174 457.8896 196.9238 457.4141 196.4526 456.8745 C
196.4526 456.2808 L
196.4526 455.6909 L
198.7295 455.6909 l
f*U
*u
0 D
193.1821 447.959 m
193.1821 447.3379 192.9785 446.8462 192.5713 446.4824 c
192.1641 446.1191 191.6123 445.9375 190.915 445.9375 c
190.5947 445.9375 190.3076 445.9707 190.0542 446.0371 c
189.8008 446.103 189.4941 446.2261 189.1353 446.4063 c
189.5791 447.4399 L
189.7588 447.2915 189.9214 447.1865 190.0669 447.124 c
190.2124 447.0625 190.3687 447.0313 190.5352 447.0313 c
190.8525 447.0313 191.1045 447.1133 191.292 447.2764 c
191.479 447.4404 191.5728 447.6626 191.5728 447.9434 c
191.5728 448.2061 191.4561 448.4248 191.2231 448.5986 c
190.9902 448.7725 190.6978 448.8594 190.3462 448.8594 c
190.2158 448.8594 190.0845 448.8438 189.9517 448.8135 c
189.8188 448.7832 189.7031 448.7412 189.604 448.6875 c
189.6611 449.3477 189.6797 449.9141 189.6587 450.3867 c
189.6377 450.8618 189.5674 451.4258 189.4478 452.0781 c
193.1821 452.0781 L
193.0513 451.4238 L
192.9165 450.7656 L
192.854 450.8149 192.7598 450.8584 192.6333 450.8965 c
192.5068 450.9341 192.3916 450.9531 192.2876 450.9531 c
191.1118 450.9531 L
191.104 449.8281 L
191.3184 449.8281 L
191.8408 449.8281 192.2827 449.6475 192.644 449.2871 c
193.0029 448.9258 193.1821 448.4834 193.1821 447.959 c
f*U
*u
180.0918 445.3994 m
180.25 445.5498 180.4434 445.625 180.6714 445.625 c
180.9097 445.625 181.1045 445.5522 181.2563 445.4072 c
181.4082 445.2622 181.4839 445.0757 181.4839 444.8477 c
181.4839 444.6274 181.4067 444.4443 181.2524 444.2979 c
181.0981 444.1514 180.9043 444.0781 180.6714 444.0781 c
180.4482 444.0781 180.2573 444.1538 180.0977 444.3057 c
179.9385 444.457 179.8589 444.6377 179.8589 444.8477 c
179.8589 445.0654 179.9365 445.249 180.0918 445.3994 c
f1 D
180.3867 448.6919 m
180.3496 448.5645 180.3149 448.4756 180.2813 448.4268 C
179.1543 446.7061 l
178.9229 446.3525 178.7534 446.0298 178.6455 445.7383 c
178.5376 445.4473 178.4839 445.1641 178.4839 444.8882 c
178.4839 444.3027 178.6846 443.8311 179.0854 443.4736 c
179.4863 443.1162 180.0151 442.9375 180.6714 442.9375 c
181.3589 442.9375 181.8955 443.1182 182.2808 443.48 c
182.666 443.8418 182.8589 444.3423 182.8589 444.9824 c
182.8589 445.4893 182.6899 445.9189 182.3521 446.27 c
182.0142 446.6211 181.6006 446.7969 181.1123 446.7969 c
181.0186 446.7993 180.9263 446.7954 180.8354 446.7852 C
181.6421 448.0215 l
181.8462 448.333 182.0107 448.5684 182.1348 448.7271 c
182.2588 448.8857 182.3701 449.0029 182.4683 449.0781 C
180.4604 449.0781 l
180.4448 448.9453 180.4199 448.8164 180.3867 448.6919 c
f*U
*u
0 D
169.1694 445.3335 m
169.2241 445.3906 169.3052 445.5107 169.4121 445.6929 c
169.519 445.875 169.6206 446.0693 169.7168 446.2749 c
171.5713 450.2866 L
170.2217 450.2866 L
169.9375 450.2866 169.6943 450.269 169.4922 450.2339 c
169.29 450.1987 169.0859 450.1382 168.8804 450.0522 c
169.0562 450.7305 L
169.2324 451.4116 L
173.5562 451.4116 L
170.9785 445.7197 L
170.957 445.6758 170.9404 445.6157 170.9272 445.54 c
170.9141 445.4648 170.9102 445.396 170.9155 445.3335 c
169.1694 445.3335 L
f*U
*u
161.0703 457.6143 m
160.9194 457.7373 160.8442 457.8867 160.8442 458.0615 c
160.8442 458.2393 160.9189 458.3896 161.0684 458.5127 c
161.2178 458.6367 161.3999 458.6982 161.6157 458.6982 c
161.834 458.6982 162.0176 458.6367 162.167 458.5127 c
162.3164 458.3896 162.3911 458.2393 162.3911 458.0615 c
162.3911 457.8867 162.3164 457.7378 162.167 457.6157 c
162.0176 457.4937 161.834 457.4326 161.6157 457.4326 c
161.3999 457.4326 161.2183 457.4932 161.0703 457.6143 c
f1 D
163.0859 456.8838 m
163.4658 457.2041 163.6563 457.6152 163.6563 458.1172 c
163.6563 458.6221 163.4663 459.0352 163.0864 459.3564 c
162.7065 459.6777 162.2188 459.8389 161.623 459.8389 c
161.0273 459.8389 160.54 459.6777 160.1616 459.3564 c
159.7832 459.0352 159.5938 458.6221 159.5938 458.1172 c
159.5938 457.6152 159.7822 457.2041 160.1602 456.8838 C
160.2109 456.8408 L
160.125 456.7705 l
159.7188 456.4268 159.5156 455.9844 159.5156 455.4434 c
159.5156 454.9043 159.7153 454.4629 160.1152 454.1196 c
160.5146 453.7764 161.0283 453.6045 161.6563 453.6045 c
162.2837 453.6045 162.7974 453.7764 163.1973 454.1196 c
163.5967 454.4629 163.7969 454.9043 163.7969 455.4434 c
163.7969 455.9844 163.5986 456.4268 163.2031 456.7705 C
163.0703 456.8721 L
163.0859 456.8838 l
f0 D
162.208 456.0464 m
162.3506 455.9009 162.4219 455.7139 162.4219 455.4854 c
162.4219 455.2593 162.3506 455.0742 162.208 454.9302 c
162.0654 454.7861 161.8813 454.7139 161.6563 454.7139 c
161.4307 454.7139 161.2466 454.7861 161.104 454.9302 c
160.9614 455.0742 160.8906 455.2593 160.8906 455.4854 c
160.8906 455.7139 160.9614 455.9004 161.104 456.0444 c
161.2466 456.1885 161.4307 456.2607 161.6563 456.2607 c
161.8813 456.2607 162.0654 456.1895 162.208 456.0464 c
f*U
*u
158.9023 468.3486 m
158.7451 468.1963 158.5522 468.1201 158.3247 468.1201 c
158.0869 468.1201 157.8916 468.1934 157.7393 468.3408 c
157.5864 468.4883 157.5103 468.6787 157.5103 468.9111 c
157.5103 469.1357 157.5879 469.3232 157.7432 469.4736 c
157.8979 469.623 158.0918 469.6982 158.3247 469.6982 c
158.5469 469.6982 158.7373 469.6206 158.8965 469.4658 c
159.0557 469.3105 159.1353 469.1255 159.1353 468.9111 c
159.1353 468.6885 159.0576 468.501 158.9023 468.3486 c
f1 D
158.6172 465.0693 m
158.6592 465.21 158.7002 465.3101 158.7422 465.3701 C
159.8403 467.0459 l
160.0713 467.3999 160.2407 467.7295 160.3486 468.0342 c
160.4561 468.3389 160.5103 468.6445 160.5103 468.9521 c
160.5103 469.5171 160.3096 469.9727 159.9092 470.3193 c
159.5083 470.6655 158.9805 470.8389 158.3247 470.8389 c
157.6377 470.8389 157.1011 470.6582 156.7148 470.2964 c
156.3281 469.9346 156.1353 469.4336 156.1353 468.7939 c
156.1353 468.2866 156.3164 467.8574 156.6797 467.5063 c
157.043 467.1553 157.4883 466.9795 158.0146 466.9795 C
158.1626 466.9795 L
157.4814 465.9307 l
157.2236 465.5474 157.0229 465.2607 156.8799 465.0723 c
156.7368 464.8828 156.6187 464.748 156.5259 464.667 C
158.5317 464.667 l
158.5474 464.7944 158.5762 464.9287 158.6172 465.0693 c
f*U
*u
0 D
158.3018 476.9517 m
158.3018 479.9087 L
157.3799 479.9009 L
157.3799 479.9165 L
159.6924 481.8384 L
159.6924 476.9517 L
159.6924 476.6704 159.709 476.4336 159.7422 476.2407 c
159.7754 476.0479 159.8315 475.8564 159.9111 475.6665 c
158.999 475.6665 L
158.083 475.6665 L
158.1626 475.8564 158.2197 476.0479 158.2539 476.2407 c
158.2861 476.4336 158.3018 476.6704 158.3018 476.9517 c
f*U
*u
163.5156 476.7759 m
163.2505 476.7759 163.0493 476.9414 162.9116 477.272 c
162.7739 477.6025 162.7051 478.0859 162.7051 478.7212 c
162.7051 479.3447 162.7749 479.8252 162.9155 480.1616 c
163.0557 480.498 163.2559 480.6665 163.5156 480.6665 c
163.7749 480.6665 163.9756 480.498 164.1172 480.1616 c
164.2588 479.8252 164.3301 479.3447 164.3301 478.7212 c
164.3301 478.0986 164.2588 477.6191 164.1172 477.2817 c
163.9756 476.9443 163.7749 476.7759 163.5156 476.7759 c
f1 D
163.5156 475.604 m
164.2271 475.604 164.8091 475.895 165.2612 476.4771 c
165.7134 477.0591 165.9395 477.8071 165.9395 478.7212 c
165.9395 479.6367 165.7134 480.3848 165.2612 480.9663 c
164.8091 481.5479 164.2271 481.8384 163.5156 481.8384 c
162.8066 481.8384 162.2261 481.5479 161.7739 480.9663 c
161.3218 480.3848 161.0957 479.6367 161.0957 478.7212 c
161.0957 477.7861 161.3179 477.0332 161.7622 476.4614 c
162.2065 475.8896 162.791 475.604 163.5156 475.604 c
f*U
*u
0 D
166.6353 485.6187 m
166.6353 488.5757 L
165.7134 488.5679 L
165.7134 488.5835 L
168.0259 490.5054 L
168.0259 485.6187 L
168.0259 485.3374 168.042 485.1006 168.0752 484.9077 c
168.1084 484.7148 168.165 484.5234 168.2446 484.3335 c
167.3325 484.3335 L
166.4165 484.3335 L
166.4961 484.5234 166.5527 484.7148 166.5879 484.9077 c
166.6191 485.1006 166.6353 485.3374 166.6353 485.6187 c
f*U
*u
171.1479 485.6187 m
171.1479 488.5757 L
170.2261 488.5679 L
170.2261 488.5835 L
172.5386 490.5054 L
172.5386 485.6187 L
172.5386 485.3374 172.5547 485.1006 172.5879 484.9077 c
172.6211 484.7148 172.6777 484.5234 172.7573 484.3335 c
171.8452 484.3335 L
170.9292 484.3335 L
171.0088 484.5234 171.0654 484.7148 171.1001 484.9077 c
171.1318 485.1006 171.1479 485.3374 171.1479 485.6187 c
f*U
0 R
0 G
0.25 w178.7344 465.0527 m
179.3755 463.3726 l
180.6582 463.3726 l
181.2993 465.0527 l
181.2993 483.5356 l
180.0166 490.2568 l
178.7344 483.5356 l
178.7344 465.0527 l
b176.5747 466.5356 m
175.4312 467.1094 l
175.4312 468.2568 l
176.5747 468.8301 l
189.1523 468.8301 l
193.7261 467.6831 l
189.1523 466.5356 l
176.5747 466.5356 l
b/BBAccumRotation (1.570796) XT
u0.75 g
1 w144.0361 425.25 m
144.0361 510.75 l
B0 g
144.0361 510.2402 m
142.2344 509.1445 l
142.1938 509.2061 l
143.3604 512.1436 l
143.5859 513.167 143.8105 514.1904 144.0361 515.2139 c
144.2612 514.1904 144.4863 513.167 144.7119 512.1436 c
145.8784 509.2061 l
145.8477 509.1445 l
144.0361 510.2402 l
fUu0.75 g
0 R
0 G
137.2861 432 m
222.7861 432 l
B0 g
222.2764 432 m
221.1807 433.8018 l
221.2422 433.8428 l
224.1797 432.6758 l
225.2031 432.4502 226.2266 432.2256 227.25 432 c
226.2266 431.7744 225.2031 431.5498 224.1797 431.3242 c
221.2422 430.1572 l
221.1807 430.1885 l
222.2764 432 l
fUu0.75 g
0 R
0 G
288 425.2861 m
288 510.7861 l
B0 g
288 510.2764 m
286.1982 509.1807 l
286.1577 509.2422 l
287.3242 512.1797 l
287.5498 513.2031 287.7744 514.2266 288 515.25 c
288.2251 514.2266 288.4502 513.2031 288.6758 512.1797 c
289.8423 509.2422 l
289.8115 509.1807 l
288 510.2764 l
fUu0.75 g
0 R
0 G
281.25 432.0361 m
366.75 432.0361 l
B0 g
366.2402 432.0361 m
365.1445 433.8379 l
365.2061 433.8789 l
368.1436 432.7119 l
369.167 432.4863 370.1904 432.2617 371.2139 432.0361 c
370.1904 431.8105 369.167 431.5859 368.1436 431.3604 c
365.2061 430.1934 l
365.1445 430.2246 l
366.2402 432.0361 l
fU0 R
0.74 G
4 w228.9492 466.5732 m
269.4492 466.5732 l
B/BBAccumRotation (1.570796) XT
0.74 g
1 w264.9551 460.6484 m
267.4717 466.5732 l
264.9551 472.5 l
279 466.5732 l
264.9551 460.6484 l
f/BBAccumRotation (1.570796) XT
1 Ap
0.75 g
0 R
0 G
0.5 w204.6338 296.9443 m
143.4189 334.8018 L
242.5342 358.1836 L
303.75 320.3262 L
204.6338 296.9443 L
b1 g
0.67 G
0.25 w207.002 300.7725 m
153.4385 333.8975 L
240.166 354.3564 L
293.7285 321.2314 L
207.002 300.7725 L
b0 G
2 w246.54 313.3682 m
226.0117 308.5254 199.0938 310.9561 186.416 318.7959 c
173.7383 326.6377 180.0996 336.918 200.6279 341.7607 c
221.1563 346.6035 248.0742 344.1729 260.7529 336.333 c
273.4307 328.4912 267.0684 318.21 246.54 313.3682 c
b*u
0 Ap
0 g
1 w249.0156 335.7197 m
253.0859 336.6787 L
252.293 337.1621 L
252.3135 337.167 L
256.9258 336.5752 L
250.1982 334.9883 L
249.8115 334.8975 249.499 334.8115 249.2617 334.7314 c
249.0244 334.6514 248.8086 334.5596 248.6143 334.4561 c
247.8398 334.9346 L
247.0605 335.417 L
247.3896 335.4365 247.7021 335.4697 247.9971 335.5127 c
248.2891 335.5596 248.6289 335.6279 249.0156 335.7197 c
f*U
*u
259.5947 333.0303 m
259.2783 332.9561 258.8672 332.9111 258.3633 332.8955 c
257.8594 332.8789 257.0684 332.8857 255.9883 332.915 c
253.1143 332.9971 L
253.6484 332.666 L
254.0762 332.4023 254.4209 332.208 254.6855 332.0869 c
254.9502 331.9639 255.1924 331.8857 255.4131 331.8506 c
254.335 331.7197 L
253.249 331.5898 L
249.582 333.8584 L
249.5879 333.8584 L
256.1211 333.7139 L
256.9033 333.6963 257.4502 333.6904 257.7627 333.6963 c
258.0732 333.7031 258.3037 333.7246 258.4541 333.7607 c
258.6367 333.8027 258.7432 333.8643 258.7744 333.9424 c
258.8057 334.0225 258.7549 334.1025 258.623 334.1836 c
258.3955 334.3242 258.0566 334.3906 257.6064 334.3838 c
257.1563 334.376 256.6904 334.2959 256.208 334.1416 c
255.7988 334.9385 L
256.5322 335.1699 257.3066 335.251 258.1221 335.1826 c
258.9365 335.1143 259.6201 334.9092 260.1709 334.5674 c
260.6631 334.2646 260.8535 333.9707 260.7461 333.6875 c
260.6426 333.4063 260.2578 333.1865 259.5947 333.0303 c
f*U
*u
256.7051 327.4111 m
260.7754 328.3701 L
259.9814 328.8525 L
260.0029 328.8584 L
264.6143 328.2666 L
257.8877 326.6797 L
257.501 326.5879 257.1885 326.502 256.9512 326.4229 c
256.7139 326.3428 256.4971 326.251 256.3037 326.1475 c
255.5293 326.626 L
254.75 327.1084 L
255.0791 327.1279 255.3916 327.1602 255.6855 327.2051 c
255.9785 327.251 256.3184 327.3193 256.7051 327.4111 c
f*U
*u
258.9961 320.0615 m
258.6797 319.9873 258.2695 319.9424 257.7637 319.9268 c
257.2607 319.9102 256.4688 319.917 255.3896 319.9473 c
252.5146 320.0283 L
253.0488 319.6973 L
253.4766 319.4326 253.8223 319.2402 254.0859 319.1182 c
254.3506 318.9951 254.5928 318.917 254.8135 318.8818 c
253.7354 318.751 L
252.6504 318.6221 L
248.9824 320.8887 L
248.9893 320.8896 L
255.5225 320.7451 L
256.3037 320.7275 256.8516 320.7217 257.1631 320.7275 c
257.4736 320.7354 257.7041 320.7549 257.8545 320.791 c
258.0371 320.835 258.1445 320.8955 258.1758 320.9736 c
258.207 321.0537 258.1563 321.1338 258.0234 321.2148 c
257.7959 321.3555 257.459 321.4219 257.0078 321.415 c
256.5576 321.4072 256.0918 321.3271 255.6094 321.1738 c
255.1982 321.9697 L
255.9346 322.2021 256.708 322.2822 257.5234 322.2139 c
258.3379 322.1445 259.0205 321.9404 259.5713 321.5986 c
260.0635 321.2949 260.2549 321.001 260.1475 320.7197 c
260.042 320.4375 259.6592 320.2178 258.9961 320.0615 c
f*U
*u
244.5059 316.9219 m
244.2139 317.1025 243.9473 317.2441 243.7061 317.3467 c
243.4639 317.4482 243.1953 317.5332 242.9023 317.6016 c
243.9941 317.7422 L
245.0957 317.8809 L
248.4033 315.835 L
248.3984 315.834 L
243.876 315.7168 L
243.9043 315.6016 243.8896 315.4873 243.833 315.3721 c
243.6738 315.0449 243.2324 314.7969 242.5137 314.6279 c
241.6611 314.4268 240.8135 314.3721 239.9727 314.4668 c
239.1309 314.5605 238.418 314.7881 237.834 315.1504 c
237.5176 315.3457 237.2988 315.5283 237.1777 315.7002 c
237.0566 315.8711 236.9951 316.083 236.9912 316.333 c
238.7803 316.3877 L
238.7363 316.2334 238.7324 316.1084 238.7676 316.0107 c
238.8027 315.9121 238.8818 315.8252 239.0059 315.748 c
239.2861 315.5752 239.6172 315.4639 240.0049 315.415 c
240.3896 315.3652 240.7715 315.3857 241.1494 315.4746 c
241.5283 315.5635 241.749 315.6865 241.8086 315.8408 c
241.8662 315.9961 241.7559 316.1602 241.4756 316.334 c
241.3682 316.4004 L
245.1787 316.5068 l
244.5059 316.9219 L
f*U
*u
223.291 314.5928 m
223.3994 314.5898 L
226.4541 314.5479 L
224.2168 314.0205 L
224.2148 314.0215 L
223.291 314.5928 l
f1 D
222.5635 313.7197 m
221.2354 313.4053 l
220.9639 313.3418 220.6895 313.2842 220.4082 313.2334 c
220.1299 313.1826 219.9189 313.1523 219.7822 313.1426 C
221.207 312.2607 l
221.3086 312.293 221.4902 312.3418 221.7471 312.4072 c
222.0029 312.4717 222.2666 312.5361 222.5381 312.6006 C
223.8662 312.9141 L
223.9492 312.8623 l
224.0645 312.791 224.1689 312.7168 224.2627 312.6387 c
224.3545 312.5615 224.4121 312.5029 224.4326 312.4619 C
226.2188 312.8838 l
226.1318 312.9092 226.0166 312.9561 225.876 313.0244 c
225.7314 313.0928 225.6006 313.1641 225.4824 313.2373 C
225.3975 313.29 L
229.4814 314.292 L
228.8447 314.6865 L
228.209 315.0791 l
227.0527 315.0928 226.0586 315.1143 225.2256 315.1445 c
224.3887 315.1758 223.3994 315.2285 222.2568 315.3008 C
221.4404 315.1084 L
220.6279 314.917 L
222.5635 313.7197 l
f*U
*u
0 D
207.2031 314.125 m
206.3477 313.9238 205.4971 313.8701 204.6504 313.9678 c
203.8047 314.0635 203.085 314.2939 202.4922 314.6611 c
202.2207 314.8291 202.0215 314.9912 201.8984 315.1455 c
201.7734 315.2998 201.6826 315.502 201.625 315.749 c
203.4238 315.8506 L
203.373 315.708 203.3672 315.5889 203.4053 315.4922 c
203.4434 315.3955 203.5332 315.3037 203.6758 315.2158 c
203.9453 315.0498 204.2725 314.9424 204.6563 314.8975 c
205.041 314.8525 205.4258 314.875 205.8125 314.9658 c
206.1748 315.0518 206.376 315.1836 206.418 315.3633 c
206.459 315.542 206.3301 315.7236 206.0303 315.9092 c
205.9199 315.9775 205.7861 316.042 205.6318 316.1006 c
205.4785 316.1611 205.3223 316.208 205.1641 316.2432 c
206.1211 316.4277 206.916 316.6016 207.5488 316.7666 c
208.1855 316.9316 208.9014 317.1514 209.6982 317.4268 c
212.873 315.4639 L
211.8613 315.3193 L
210.8408 315.1758 L
210.8545 315.2246 210.835 315.2881 210.7793 315.3682 c
210.7246 315.4463 210.6533 315.5127 210.5645 315.5674 c
209.5645 316.1865 L
208.0078 315.8252 L
208.1914 315.7119 L
208.6357 315.4375 208.7627 315.1465 208.5742 314.8389 c
208.3809 314.5332 207.9248 314.2959 207.2031 314.125 c
f*U
*u
192.5498 320.1768 m
192.8916 320.1416 193.1592 320.0654 193.3525 319.9453 c
193.5557 319.8193 193.6211 319.6943 193.5508 319.5674 c
193.4795 319.4404 193.2881 319.3408 192.9736 319.2666 c
192.6699 319.1943 192.3525 319.1748 192.0195 319.21 c
191.6875 319.2432 191.4209 319.3203 191.2227 319.4424 c
191.0332 319.5605 190.9766 319.6855 191.0488 319.8193 c
191.1221 319.9521 191.3027 320.0518 191.5918 320.1201 c
191.8926 320.1914 192.2109 320.21 192.5498 320.1768 c
f1 D
197.332 321.0908 m
197.126 321.0693 196.9746 321.0586 196.8779 321.0596 C
193.5508 321.0947 l
192.8682 321.1006 192.2783 321.085 191.7861 321.0479 c
191.2939 321.0098 190.8594 320.9463 190.4805 320.8564 c
189.6729 320.666 189.1943 320.4072 189.042 320.0811 c
188.8916 319.7529 189.0957 319.417 189.6543 319.0732 c
190.2373 318.7119 190.9434 318.4873 191.7695 318.4033 c
192.5947 318.3174 193.4463 318.3779 194.3281 318.5869 c
195.0264 318.751 195.4736 318.9795 195.6689 319.2705 c
195.8652 319.5635 195.7559 319.8369 195.3418 320.0947 c
195.2637 320.1436 195.1797 320.1914 195.0898 320.2354 C
197.4766 320.2139 l
198.0791 320.207 198.543 320.1973 198.8662 320.1826 c
199.1914 320.1689 199.4473 320.1494 199.6348 320.1221 C
197.9268 321.1777 l
197.7314 321.1436 197.5332 321.1143 197.332 321.0908 c
f*U
*u
0 D
183.1738 325.8984 m
183.2969 325.8877 183.5322 325.8848 183.874 325.8877 c
184.2148 325.8906 184.5693 325.9004 184.9346 325.917 c
192.0332 326.2451 L
190.8867 326.9541 L
190.6445 327.1025 190.4141 327.2256 190.1924 327.3203 c
189.9727 327.415 189.7168 327.5029 189.4229 327.583 c
190.5059 327.7109 L
191.5938 327.8389 L
195.2695 325.5654 L
185.2422 325.0723 L
185.1631 325.0693 185.0674 325.0596 184.9512 325.042 c
184.8369 325.0244 184.7383 325.0029 184.6582 324.9805 c
183.1738 325.8984 L
f*U
*u
193.1914 334.1455 m
193.2334 334.2646 193.375 334.3525 193.6162 334.4092 c
193.8613 334.4668 194.1318 334.4766 194.4277 334.4385 c
194.7256 334.3994 194.9648 334.3232 195.1475 334.21 c
195.334 334.0957 195.4053 333.9795 195.3613 333.8604 c
195.3203 333.7412 195.1768 333.6533 194.9316 333.5957 c
194.6904 333.5391 194.4229 333.5303 194.126 333.5693 c
193.832 333.6084 193.5918 333.6846 193.4063 333.7998 c
193.2227 333.9131 193.1504 334.0283 193.1914 334.1455 c
f1 D
193.9014 332.8486 m
194.6641 332.752 195.3926 332.7861 196.083 332.9482 c
196.7783 333.1123 197.1855 333.3467 197.3047 333.6514 c
197.4238 333.9551 197.2324 334.2646 196.7246 334.5771 c
196.2188 334.8906 195.582 335.0938 194.8174 335.1885 c
194.0537 335.2832 193.3242 335.249 192.6289 335.085 c
191.9385 334.9219 191.5322 334.6895 191.4131 334.3857 C
191.3965 334.3467 L
191.2266 334.3682 l
190.4082 334.4697 189.627 334.4336 188.8828 334.2568 c
188.1406 334.083 187.7021 333.835 187.5684 333.5127 c
187.4375 333.1904 187.6367 332.8652 188.1709 332.5342 c
188.7041 332.2041 189.377 331.9912 190.1895 331.8916 c
191.002 331.793 191.7793 331.8311 192.5215 332.0068 c
193.2656 332.1826 193.707 332.4307 193.8447 332.749 C
193.8711 332.8525 L
193.9014 332.8486 l
f0 D
192.002 333.0381 m
191.9209 332.915 191.7256 332.8174 191.4111 332.7432 c
191.1006 332.6699 190.7842 332.6475 190.4648 332.6748 c
190.1455 332.7031 189.8896 332.7764 189.6982 332.8955 c
189.5059 333.0137 189.4492 333.1338 189.5264 333.2549 c
189.6035 333.3779 189.7988 333.4756 190.1094 333.5479 c
190.4238 333.6221 190.7402 333.6455 191.0605 333.6182 c
191.3789 333.5889 191.6357 333.5166 191.8271 333.3975 c
192.0186 333.2783 192.0781 333.1592 192.002 333.0381 c
f*U
*u
206.126 338.7705 m
205.7822 338.8037 205.5146 338.8809 205.3203 339.001 c
205.1182 339.126 205.0537 339.252 205.126 339.3799 c
205.1992 339.5088 205.3975 339.6104 205.7168 339.6855 c
206.0264 339.7588 206.3506 339.7783 206.6895 339.7451 c
207.0273 339.7129 207.2949 339.6357 207.4932 339.5127 c
207.6807 339.3965 207.7383 339.2705 207.6592 339.1367 c
207.5811 339.0029 207.3936 338.9014 207.0986 338.8311 c
206.792 338.7588 206.4678 338.7393 206.126 338.7705 c
f1 D
201.3701 337.8564 m
201.5996 337.8799 201.7715 337.8906 201.8896 337.8877 C
205.1309 337.8545 l
205.8154 337.8486 206.4121 337.8662 206.9229 337.9092 c
207.4346 337.9502 207.9004 338.0215 208.3242 338.1221 c
209.1035 338.3057 209.5586 338.5586 209.6953 338.8818 c
209.8311 339.2051 209.6211 339.5381 209.0635 339.8838 c
208.4785 340.2441 207.7744 340.4678 206.9482 340.5537 c
206.1211 340.6396 205.2666 340.5781 204.3867 340.3701 c
203.6895 340.2061 203.252 339.9717 203.0771 339.666 c
202.9033 339.3613 203.0391 339.0693 203.4863 338.793 C
203.6123 338.7158 L
201.5889 338.7334 l
200.8428 338.7432 200.2764 338.7559 199.8965 338.7705 c
199.5146 338.7842 199.2275 338.8018 199.0381 338.8252 C
200.7432 337.7705 l
200.9326 337.8037 201.1406 337.832 201.3701 337.8564 c
f*U
*u
0 D
217.458 341.8799 m
221.5293 342.8408 L
220.7344 343.3232 L
220.7559 343.3281 L
225.3672 342.7363 L
218.6406 341.1494 L
218.2529 341.0576 217.9424 340.9717 217.7041 340.8916 c
217.4668 340.8115 217.252 340.7197 217.0576 340.6162 c
216.2813 341.0967 L
215.502 341.5781 L
215.833 341.5977 216.1436 341.6299 216.4395 341.6748 c
216.7314 341.7197 217.0703 341.7891 217.458 341.8799 c
f*U
*u
221.6494 339.082 m
221.4229 339.2217 221.4805 339.3818 221.8184 339.5605 c
222.1563 339.7402 222.7646 339.9346 223.6387 340.1396 c
224.4961 340.3428 225.2178 340.4619 225.8008 340.4971 c
226.3828 340.5322 226.7842 340.4814 227.0049 340.3447 c
227.2246 340.208 227.165 340.0488 226.8223 339.8652 c
226.4795 339.6807 225.8789 339.4873 225.0195 339.2852 c
224.1631 339.083 223.4424 338.9648 222.8564 338.9297 c
222.2725 338.8945 221.8691 338.9453 221.6494 339.082 c
f1 D
220.0361 338.7012 m
220.6406 338.3271 221.5361 338.1162 222.7217 338.0674 c
223.9072 338.0186 225.1299 338.1416 226.3877 338.4385 c
227.6484 338.7373 228.4863 339.0986 228.9033 339.5254 c
229.3184 339.9521 229.2227 340.3516 228.6182 340.7256 c
228.0146 341.0986 227.1221 341.3096 225.9375 341.3584 c
224.752 341.4072 223.5313 341.2832 222.2695 340.9854 c
220.9824 340.6826 220.1348 340.3213 219.7256 339.9014 c
219.3164 339.4824 219.4199 339.083 220.0361 338.7012 c
f*U
*u
0 D
236.4746 340.3135 m
240.5459 341.2725 L
239.751 341.7559 L
239.7725 341.7607 L
244.3848 341.1689 L
237.6563 339.582 L
237.2695 339.4902 236.957 339.4053 236.7207 339.3252 c
236.4824 339.2451 236.2676 339.1533 236.0742 339.0498 c
235.2988 339.5283 L
234.5205 340.0107 L
234.8486 340.0303 235.1602 340.0635 235.4561 340.1074 c
235.748 340.1533 236.0879 340.2217 236.4746 340.3135 c
f*U
*u
240.3115 337.9404 m
244.3828 338.9014 L
243.5879 339.3828 L
243.6084 339.3877 L
248.2207 338.7959 L
241.4941 337.209 L
241.1064 337.1182 240.7949 337.0322 240.5566 336.9521 c
240.3203 336.8721 240.1055 336.7803 239.9111 336.6768 c
239.1357 337.1572 L
238.3564 337.6377 L
238.6865 337.6582 238.9971 337.6904 239.292 337.7354 c
239.584 337.7803 239.9238 337.8486 240.3115 337.9404 c
f*U
0 R
0 G
0.25 w218.4512 327.2725 m
216.6836 326.3906 l
217.7734 325.7158 l
220.6318 325.9248 l
246.0742 331.9268 l
254.2363 334.7842 l
243.8945 333.2744 l
218.4512 327.2725 l
b218.6543 328.8896 m
218.4727 329.6777 l
220.0527 330.0498 l
221.8145 329.6348 l
232.5088 323.0215 l
234.8193 320.2451 l
229.3486 322.2764 l
218.6543 328.8896 l
b/BBAccumRotation (0.553269) XT
u0.75 g
1 w144 328.5361 m
144 414.0361 l
B0 g
144 413.5264 m
142.1982 412.4307 l
142.1577 412.4922 l
143.3242 415.4297 l
143.5498 416.4531 143.7744 417.4766 144 418.5 c
144.2251 417.4766 144.4502 416.4531 144.6758 415.4297 c
145.8423 412.4922 l
145.8115 412.4307 l
144 413.5264 l
fUu0.75 g
0 R
0 G
137.25 335.2861 m
222.75 335.2861 l
B0 g
222.2402 335.2861 m
221.1445 337.0879 l
221.2061 337.1289 l
224.1436 335.9619 l
225.167 335.7363 226.1904 335.5117 227.2139 335.2861 c
226.1904 335.0605 225.167 334.8359 224.1436 334.6104 c
221.2061 333.4434 l
221.1445 333.4746 l
222.2402 335.2861 l
fU0 R
0.74 G
4 w270 409.5 m
241.3623 380.8623 l
B0.74 g
1 w240.3506 388.2295 m
242.7607 382.2607 l
248.731 379.8486 l
234.6089 374.1084 l
240.3506 388.2295 l
f0 g
0 R
0.74 G
4 w209.25 285.75 m
237.8877 257.1123 l
B/BBAccumRotation (0.785398) XT
0.74 g
1 w230.5205 256.1006 m
236.4893 258.5098 l
238.9004 264.4805 l
244.6406 250.3584 l
230.5205 256.1006 l
f/BBAccumRotation (0.785398) XT
1 Ap
0.75 g
0 R
0 G
0.5 w332.957 215.9639 m
260.9824 216.0068 L
333.0234 287.9824 L
405 287.9404 L
332.957 215.9639 L
b1 g
0.67 G
0.25 w332.9609 220.4648 m
269.9824 220.502 L
333.0205 283.4814 L
395.998 283.4443 L
332.9609 220.4648 L
b0 G
2 w359.9814 251.958 m
345.0605 237.0508 320.8809 224.9736 305.9756 224.9824 c
291.0684 224.9932 291.0781 237.082 305.999 251.9893 c
320.9199 266.8965 345.0996 278.9736 360.0068 278.9648 c
374.9131 278.9551 374.9023 266.8643 359.9814 251.958 c
b*u
0 Ap
0 g
1 w350.3428 272.2764 m
353.3018 275.2305 L
352.373 275.2256 L
352.3877 275.2393 L
356.623 277.1602 L
351.7334 272.2744 L
351.4521 271.9941 351.2305 271.7568 351.0713 271.5645 c
350.9111 271.3711 350.7754 271.1797 350.665 270.9893 c
349.7549 270.9902 L
348.8379 270.9912 L
349.1084 271.1807 349.3564 271.373 349.585 271.5645 c
349.8086 271.7578 350.0615 271.9951 350.3428 272.2764 c
f*U
*u
360.7568 275.5459 m
360.5264 275.3174 360.2002 275.0635 359.7793 274.7852 c
359.3594 274.5059 358.6836 274.0967 357.749 273.5537 c
355.2607 272.1133 L
355.8887 272.1123 L
356.3916 272.1123 356.7861 272.1279 357.0752 272.165 c
357.3652 272.1982 357.6123 272.2598 357.8184 272.3457 c
356.9697 271.668 L
356.1143 270.9863 L
351.8027 270.9893 L
351.8076 270.9932 L
357.4414 274.3037 L
358.1162 274.6992 358.585 274.9814 358.8477 275.1504 c
359.1084 275.3193 359.293 275.459 359.4023 275.5684 c
359.5352 275.7002 359.5938 275.8086 359.5791 275.8916 c
359.5635 275.9756 359.4785 276.0176 359.3242 276.0176 c
359.0566 276.0176 358.7334 275.8955 358.3535 275.6533 c
357.9746 275.4102 357.6201 275.0977 357.291 274.7129 c
356.5244 275.1748 L
357.0264 275.7578 357.6426 276.2334 358.373 276.6045 c
359.1016 276.9736 359.791 277.1582 360.4395 277.1572 c
361.0166 277.1582 361.333 277.0078 361.3906 276.7109 c
361.4502 276.417 361.2383 276.0283 360.7568 275.5459 c
f*U
*u
361.251 269.2471 m
364.21 272.2021 L
363.2803 272.1953 L
363.2959 272.2119 L
367.5303 274.1318 L
362.6406 269.2471 L
362.3604 268.9658 362.1396 268.7275 361.9795 268.5361 c
361.8193 268.3428 361.6836 268.1514 361.5732 267.9609 c
360.6631 267.9619 L
359.7461 267.9629 L
360.0156 268.1523 360.2646 268.3438 360.4912 268.5361 c
360.7168 268.7295 360.9697 268.9658 361.251 269.2471 c
f*U
*u
367.0625 264.1982 m
366.8311 263.9688 366.5068 263.7148 366.084 263.4355 c
365.665 263.1572 364.9873 262.7471 364.0537 262.2061 c
361.5645 260.7637 L
362.1934 260.7627 L
362.6963 260.7627 363.0908 260.7803 363.3799 260.8154 c
363.6699 260.8496 363.917 260.9111 364.123 260.9961 c
363.2744 260.3184 L
362.4189 259.6396 L
358.1074 259.6396 L
358.1123 259.6445 L
363.7471 262.9541 L
364.4209 263.3496 364.8906 263.6328 365.1523 263.8018 c
365.4121 263.9717 365.5977 264.1094 365.707 264.2188 c
365.8398 264.3525 365.8994 264.46 365.8848 264.543 c
365.8691 264.6279 365.7842 264.6689 365.6279 264.668 c
365.3604 264.668 365.0391 264.5479 364.6592 264.3047 c
364.2803 264.0615 363.9258 263.749 363.5957 263.3643 c
362.8281 263.8262 L
363.332 264.4111 363.9482 264.8848 364.6777 265.2549 c
365.4072 265.624 366.0957 265.8096 366.7432 265.8076 c
367.3213 265.8086 367.6396 265.6592 367.6953 265.3633 c
367.7539 265.0674 367.5439 264.6797 367.0625 264.1982 c
f*U
*u
356.3828 253.9131 m
356.04 253.9131 355.7393 253.8936 355.4795 253.8535 c
355.2197 253.8125 354.9463 253.7441 354.6621 253.6484 c
355.5166 254.3408 L
356.3809 255.0381 L
360.2705 255.0361 L
360.2666 255.0322 L
356.4805 252.5557 L
356.5654 252.4736 356.6123 252.3682 356.625 252.2412 c
356.6611 251.8789 356.416 251.4355 355.8936 250.9141 c
355.2744 250.2949 354.5811 249.8027 353.8164 249.4414 c
353.0508 249.0791 352.3252 248.8984 351.6377 248.8994 c
351.2656 248.8994 350.9834 248.9404 350.79 249.0225 c
350.5977 249.1045 350.4336 249.252 350.2988 249.4629 c
351.792 250.4492 L
351.8359 250.2949 351.8984 250.1865 351.9795 250.1221 c
352.0615 250.0566 352.1748 250.0244 352.3203 250.0244 c
352.6504 250.0244 352.9902 250.1035 353.3457 250.2656 c
353.6992 250.4248 354.0137 250.6436 354.2881 250.917 c
354.5635 251.1924 354.6865 251.4131 354.6563 251.5752 c
354.624 251.7373 354.4434 251.8193 354.1143 251.8203 c
353.9883 251.8193 L
357.1738 253.9131 l
356.3828 253.9131 L
f*U
*u
339.5576 240.7832 m
339.6514 240.8379 L
342.2715 242.4072 L
340.6455 240.7832 L
340.6436 240.7822 L
339.5576 240.7832 l
f1 D
339.3965 239.6582 m
338.4326 238.6924 l
338.2344 238.4961 338.0313 238.3027 337.8193 238.1123 c
337.6084 237.9229 337.4453 237.7861 337.334 237.7061 C
339.0098 237.7041 l
339.0791 237.7842 339.208 237.9219 339.3926 238.1123 c
339.5762 238.3018 339.7666 238.4951 339.9639 238.6924 C
340.9287 239.6572 L
341.0264 239.6563 l
341.1621 239.6563 341.29 239.6484 341.4111 239.6318 c
341.5293 239.6133 341.6094 239.5938 341.6484 239.5703 C
342.9463 240.8682 l
342.8594 240.8438 342.7363 240.8232 342.5811 240.8076 c
342.4219 240.7891 342.2725 240.7813 342.1338 240.7813 C
342.0342 240.7822 L
344.9824 243.7803 L
344.2334 243.7813 L
343.4863 243.7813 l
342.4951 243.1855 341.6377 242.6807 340.9131 242.2686 c
340.1846 241.8564 339.3154 241.3818 338.3057 240.8418 C
337.7119 240.249 L
337.1211 239.6602 L
339.3965 239.6582 l
f*U
*u
0 D
326.1152 231.9316 m
325.4932 231.3105 324.7979 230.8184 324.0254 230.4561 c
323.2559 230.0928 322.5225 229.9111 321.8252 229.9121 c
321.5068 229.9131 321.252 229.9453 321.0654 230.0127 c
320.8779 230.0781 320.6943 230.2021 320.5166 230.3818 c
321.9932 231.4131 L
322.0254 231.2656 322.082 231.1611 322.166 231.0986 c
322.249 231.0361 322.374 231.0059 322.541 231.0059 c
322.8574 231.0068 323.1924 231.0869 323.542 231.251 c
323.8936 231.4141 324.209 231.6357 324.4902 231.916 c
324.7539 232.1797 324.8555 232.3975 324.7969 232.5723 c
324.7373 232.7461 324.5322 232.833 324.1797 232.833 c
324.0498 232.833 323.9023 232.8174 323.7402 232.7861 c
323.5781 232.7578 323.4209 232.7158 323.2676 232.6621 c
323.9844 233.3223 324.5693 233.8877 325.0215 234.3604 c
325.4766 234.835 325.9697 235.3984 326.5029 236.0518 c
330.2354 236.0498 L
329.4512 235.3955 L
328.6582 234.7373 L
328.6445 234.7861 328.5947 234.8291 328.5049 234.8682 c
328.417 234.9063 328.3213 234.9248 328.2168 234.9248 c
327.041 234.9268 L
325.9063 233.8008 L
326.1221 233.8008 L
326.6445 233.8008 326.9053 233.6201 326.9063 233.2598 c
326.9023 232.8975 326.6396 232.4561 326.1152 231.9316 c
f*U
*u
310.4678 229.3809 m
310.7773 229.5303 311.0449 229.6064 311.2725 229.6055 c
311.5117 229.6045 311.6328 229.5332 311.6396 229.3877 c
311.6455 229.2432 311.5352 229.0576 311.3066 228.8291 c
311.0869 228.6084 310.8271 228.4248 310.5244 228.2793 c
310.2246 228.1328 309.957 228.0586 309.7246 228.0586 c
309.502 228.0596 309.3877 228.1357 309.3789 228.2881 c
309.3711 228.4385 309.4727 228.6191 309.6826 228.8291 c
309.9014 229.0479 310.1621 229.2305 310.4678 229.3809 c
f1 D
314.0566 232.6709 m
313.8926 232.5449 313.7695 232.4561 313.6865 232.4063 C
310.8379 230.6875 l
310.2529 230.333 309.7598 230.0107 309.3604 229.7197 c
308.9619 229.4287 308.625 229.1475 308.3506 228.8711 c
307.7627 228.2852 307.4922 227.8135 307.5342 227.4561 c
307.5781 227.0977 307.9287 226.9189 308.584 226.9199 c
309.2705 226.9189 309.9893 227.0986 310.7363 227.4619 c
311.4834 227.8223 312.1758 228.3213 312.8164 228.9619 c
313.3242 229.4688 313.585 229.8975 313.5977 230.249 c
313.6113 230.6006 313.374 230.7764 312.8867 230.7783 c
312.7939 230.7783 312.6982 230.7744 312.5986 230.7646 C
314.6406 232.001 l
315.1563 232.3115 315.5566 232.5469 315.8389 232.7041 c
316.123 232.8643 316.3506 232.9814 316.5244 233.0566 C
314.5166 233.0576 l
314.3682 232.9258 314.2158 232.7969 314.0566 232.6709 c
f*U
*u
0 D
299.4844 229.3213 m
299.5947 229.3779 299.7969 229.499 300.0859 229.6807 c
300.374 229.8623 300.6709 230.0566 300.9727 230.2627 c
306.8398 234.2725 L
305.4922 234.2725 L
305.208 234.2725 304.9473 234.2549 304.709 234.2197 c
304.4717 234.1846 304.208 234.125 303.916 234.0391 c
304.7705 234.7168 L
305.6289 235.3975 L
309.9502 235.3945 L
301.6777 229.7061 L
301.6123 229.6621 301.5361 229.6035 301.4463 229.5264 c
301.3584 229.4521 301.2861 229.3818 301.2295 229.3213 c
299.4844 229.3213 L
f*U
*u
303.6738 241.6025 m
303.6475 241.7256 303.7207 241.875 303.8965 242.0498 c
304.0752 242.2275 304.2998 242.3779 304.5723 242.501 c
304.8457 242.624 305.0898 242.6855 305.3047 242.6846 c
305.5225 242.6865 305.6445 242.624 305.6699 242.5 c
305.6973 242.377 305.6221 242.2266 305.4434 242.0498 c
305.2676 241.874 305.0449 241.7266 304.7715 241.6035 c
304.501 241.4824 304.2568 241.4209 304.0381 241.4209 c
303.8223 241.4209 303.7002 241.4814 303.6738 241.6025 c
f1 D
304.96 240.8721 m
305.6592 241.1904 306.2607 241.6025 306.7627 242.1025 c
307.2686 242.6084 307.4922 243.0215 307.4336 243.3438 c
307.375 243.665 307.0498 243.8271 306.4531 243.8262 c
305.8574 243.8271 305.209 243.665 304.5088 243.3447 c
303.8096 243.0234 303.207 242.6104 302.7012 242.1064 c
302.1992 241.6045 301.9766 241.1934 302.0342 240.8721 C
302.041 240.8301 L
301.8848 240.7598 l
301.1357 240.416 300.4902 239.9746 299.9492 239.4336 c
299.4092 238.8955 299.167 238.4541 299.2227 238.1094 c
299.2803 237.7666 299.6211 237.5947 300.249 237.5928 c
300.876 237.5928 301.5605 237.7646 302.3037 238.1074 c
303.0469 238.4502 303.6885 238.8916 304.2275 239.4307 c
304.7686 239.9717 305.0137 240.415 304.9639 240.7568 C
304.9316 240.8594 L
304.96 240.8721 l
f0 D
303.2441 240.0352 m
303.2393 239.8877 303.124 239.7021 302.8955 239.4736 c
302.6699 239.248 302.4131 239.0625 302.127 238.9189 c
301.8398 238.7744 301.584 238.7021 301.3584 238.7041 c
301.1328 238.7021 301.0215 238.7754 301.0234 238.9189 c
301.0244 239.0635 301.1396 239.249 301.3652 239.4746 c
301.5938 239.7031 301.8506 239.8887 302.1377 240.0342 c
302.4238 240.1768 302.6807 240.25 302.9063 240.249 c
303.1318 240.249 303.2451 240.1787 303.2441 240.0352 c
f*U
*u
312.248 252.335 m
311.9385 252.1816 311.6699 252.1064 311.4424 252.1064 c
311.2041 252.1064 311.083 252.1807 311.0771 252.3271 c
311.0723 252.4756 311.1875 252.666 311.4189 252.8975 c
311.6445 253.123 311.9102 253.3096 312.2158 253.46 c
312.5195 253.6104 312.7881 253.6846 313.0215 253.6846 c
313.2422 253.6836 313.3574 253.6064 313.3604 253.4521 c
313.3643 253.2969 313.2578 253.1123 313.0439 252.8965 c
312.8213 252.6738 312.5557 252.4873 312.248 252.335 c
f1 D
308.6826 249.0576 m
308.8652 249.1982 309.0059 249.2969 309.1084 249.3564 C
311.8828 251.0322 l
312.4688 251.3867 312.9668 251.7148 313.3789 252.0205 c
313.793 252.3232 314.1514 252.6289 314.459 252.9375 c
315.0264 253.5029 315.2803 253.958 315.2266 254.3047 c
315.1719 254.6514 314.8193 254.8232 314.1631 254.8252 c
313.4756 254.8242 312.7588 254.6445 312.0107 254.2832 c
311.2617 253.9219 310.5674 253.4209 309.9277 252.7813 c
309.4209 252.2754 309.1719 251.8467 309.1836 251.4941 c
309.1963 251.1436 309.4648 250.9658 309.9902 250.9658 C
310.1377 250.9668 L
308.4082 249.9189 l
307.7676 249.5342 307.2793 249.248 306.9482 249.0615 c
306.6162 248.8721 306.3623 248.7354 306.1895 248.6563 C
308.1943 248.6553 l
308.3379 248.7822 308.5 248.916 308.6826 249.0576 c
f*U
*u
0 D
320.2559 260.9346 m
323.2148 263.8916 L
322.2852 263.8838 L
322.3008 263.8994 L
326.5352 265.8193 L
321.6465 260.9346 L
321.3643 260.6523 321.1455 260.416 320.9844 260.2227 c
320.8242 260.0303 320.6904 259.8389 320.5791 259.6494 c
319.666 259.6494 L
318.75 259.6494 L
319.0215 259.8408 319.2686 260.0313 319.4971 260.2246 c
319.7217 260.416 319.9736 260.6533 320.2559 260.9346 c
f*U
*u
325.292 260.7559 m
325.0264 260.7568 324.9912 260.9229 325.1846 261.252 c
325.3779 261.583 325.793 262.0674 326.4287 262.7012 c
327.0518 263.3252 327.6025 263.8057 328.0811 264.1416 c
328.5576 264.4775 328.9258 264.6455 329.1855 264.6455 c
329.4443 264.6436 329.4766 264.4775 329.2822 264.1406 c
329.0869 263.8037 328.6777 263.3232 328.0527 262.7002 c
327.4297 262.0781 326.8789 261.5986 326.3994 261.2607 c
325.9209 260.9248 325.5508 260.7549 325.292 260.7559 c
f1 D
324.1191 259.585 m
324.8311 259.584 325.7031 259.875 326.7373 260.4561 c
327.7725 261.0381 328.7471 261.7852 329.6621 262.6982 c
330.5771 263.6152 331.1006 264.3633 331.2305 264.9453 c
331.3594 265.5264 331.0684 265.8154 330.3574 265.8164 c
329.6484 265.8164 328.7773 265.5273 327.7441 264.9463 c
326.71 264.3652 325.7363 263.6182 324.8193 262.7021 c
323.8838 261.7676 323.3525 261.0146 323.2246 260.4424 c
323.0967 259.8711 323.3945 259.5859 324.1191 259.585 c
f*U
*u
0 D
337.2588 269.5947 m
340.2188 272.5498 L
339.2881 272.543 L
339.3037 272.5586 L
343.5391 274.4785 L
338.6484 269.5928 L
338.3672 269.3115 338.1465 269.0752 337.9873 268.8828 c
337.8262 268.6895 337.6924 268.499 337.582 268.3086 c
336.6709 268.3086 L
335.7549 268.3096 L
336.0244 268.499 336.2715 268.6904 336.5 268.8838 c
336.7246 269.0762 336.9775 269.3135 337.2588 269.5947 c
f*U
*u
341.7695 269.5908 m
344.7285 272.5488 L
343.7998 272.54 L
343.8145 272.5557 L
348.0498 274.4756 L
343.1602 269.5908 L
342.8789 269.3096 342.6582 269.0732 342.498 268.8799 c
342.3389 268.6875 342.2041 268.4961 342.0938 268.3057 c
341.1816 268.3076 L
340.2656 268.3066 L
340.5361 268.4971 340.7832 268.6885 341.0107 268.8818 c
341.2354 269.0732 341.4883 269.3096 341.7695 269.5908 c
f*U
0 R
0 G
0.25 w328.7764 249.0283 m
327.7363 247.3486 l
329.0186 247.3477 l
331.3398 249.0273 l
349.833 267.5029 l
355.2764 274.2236 l
347.2705 267.5049 l
328.7764 249.0283 l
b328.0996 250.5107 m
327.5313 251.0859 l
328.6797 252.2324 l
330.3965 252.8057 l
342.9707 252.7979 l
346.3955 251.6504 l
340.6738 250.5029 l
328.0996 250.5107 l
b/BBAccumRotation (1.106538) XT
u0.75 g
1 w260.9824 209.25 m
260.9824 294.75 l
B0 g
260.9824 294.2402 m
259.1807 293.1445 l
259.1401 293.2061 l
260.3066 296.1436 l
260.5322 297.167 260.7568 298.1904 260.9824 299.2139 c
261.2075 298.1904 261.4326 297.167 261.6582 296.1436 c
262.8247 293.2061 l
262.7939 293.1445 l
260.9824 294.2402 l
fUu0.75 g
0 R
0 G
254.2324 216 m
339.7324 216 l
B0 g
339.2227 216 m
338.127 217.8018 l
338.1885 217.8428 l
341.126 216.6758 l
342.1494 216.4502 343.1729 216.2256 344.1963 216 c
343.1729 215.7744 342.1494 215.5498 341.126 215.3242 c
338.1885 214.1572 l
338.127 214.1885 l
339.2227 216 l
fUu*u
230.876 454.5 m
230.1421 454.5 L
230.1421 458.6841 L
230.8345 458.6841 L
230.8345 457.9878 L
230.8511 457.9878 L
231.1431 458.4761 231.5264 458.8037 232.0767 458.8037 c
232.1685 458.8037 232.2104 458.7959 232.2686 458.7798 c
232.2686 458.0518 L
231.9937 458.0518 L
231.3096 458.0518 230.876 457.54 230.876 456.9321 C
230.876 454.5 l
f*U
*u
234.5952 458.8037 m
235.9878 458.8037 236.6216 457.6758 236.6216 456.5962 c
236.6216 455.5161 235.9878 454.3882 234.5952 454.3882 c
233.2026 454.3882 232.5688 455.5161 232.5688 456.5962 c
232.5688 457.6758 233.2026 458.8037 234.5952 458.8037 c
f1 D
234.5952 454.9961 m
235.646 454.9961 235.8628 456.0361 235.8628 456.5962 c
235.8628 457.1558 235.646 458.1958 234.5952 458.1958 c
233.5444 458.1958 233.3276 457.1558 233.3276 456.5962 c
233.3276 456.0361 233.5444 454.9961 234.5952 454.9961 c
f*U
*u
0 D
238.3564 458.1001 m
238.3564 455.3799 L
238.3564 455.0518 238.6484 455.0518 238.7983 455.0518 c
239.0566 455.0518 L
239.0566 454.5 L
238.79 454.4761 238.5815 454.4438 238.5063 454.4438 c
237.7808 454.4438 237.6226 454.8359 237.6226 455.3398 c
237.6226 458.1001 L
237.0303 458.1001 L
237.0303 458.6841 L
237.6226 458.6841 L
237.6226 459.8521 L
238.3564 459.8521 L
238.3564 458.6841 L
239.0566 458.6841 L
239.0566 458.1001 L
238.3564 458.1001 l
f*U
*u
239.749 457.4121 m
239.7822 458.4121 240.4746 458.8037 241.5503 458.8037 c
241.9004 458.8037 243.168 458.708 243.168 457.6357 c
243.168 455.228 L
243.168 455.0518 243.2598 454.98 243.4102 454.98 c
243.4766 454.98 243.5684 454.9961 243.6519 455.0122 c
243.6519 454.5 L
243.5269 454.4678 243.4185 454.4199 243.2515 454.4199 c
242.6011 454.4199 242.501 454.7402 242.4761 455.0601 c
242.1924 454.7642 241.7505 454.3799 240.8999 454.3799 c
240.0991 454.3799 239.5322 454.8682 239.5322 455.5879 c
239.5322 455.9399 239.6406 456.7559 240.8584 456.8999 c
242.0674 457.0439 L
242.2427 457.0601 242.4512 457.124 242.4512 457.54 c
242.4512 457.98 242.1172 458.2197 241.4253 458.2197 c
240.5913 458.2197 240.4746 457.7319 240.4243 457.4121 C
239.749 457.4121 l
f1 D
242.4346 456.6357 m
242.3174 456.5479 242.1343 456.4839 241.2251 456.3721 c
240.8667 456.3242 240.291 456.2202 240.291 455.6919 c
240.291 455.2358 240.5327 454.9639 241.0835 454.9639 c
241.7671 454.9639 242.4346 455.3882 242.4346 455.9478 C
242.4346 456.6357 l
f*U
*u
0 D
245.3115 458.1001 m
245.3115 455.3799 L
245.3115 455.0518 245.6035 455.0518 245.7534 455.0518 c
246.0117 455.0518 L
246.0117 454.5 L
245.7451 454.4761 245.5366 454.4438 245.4614 454.4438 c
244.7358 454.4438 244.5776 454.8359 244.5776 455.3398 c
244.5776 458.1001 L
243.9854 458.1001 L
243.9854 458.6841 L
244.5776 458.6841 L
244.5776 459.8521 L
245.3115 459.8521 L
245.3115 458.6841 L
246.0117 458.6841 L
246.0117 458.1001 L
245.3115 458.1001 l
f*U
*u
250.4316 455.812 m
250.4067 455.6118 250.2065 455.02 249.6563 454.668 c
249.4561 454.54 249.1724 454.3799 248.4722 454.3799 c
247.2461 454.3799 246.5205 455.2681 246.5205 456.4761 c
246.5205 457.772 247.1709 458.8037 248.6138 458.8037 c
249.873 458.8037 250.4902 457.8438 250.4902 456.3638 c
247.3047 456.3638 L
247.3047 455.4922 247.73 454.9878 248.5723 454.9878 c
249.2642 454.9878 249.6729 455.5 249.6978 455.812 C
250.4316 455.812 l
f1 D
249.7314 456.9238 m
249.6895 457.5718 249.4063 458.1719 248.5137 458.1719 c
247.8384 458.1719 247.3047 457.5718 247.3047 456.9238 C
249.7314 456.9238 l
f*U
*u
0 D
255.6274 460.3638 m
254.9185 459.084 254.4932 458.3159 254.4932 456.396 c
254.4932 455.0762 254.9683 454.1001 255.6357 452.8442 c
255.1436 452.8442 L
254.2764 454.0918 253.709 455.0918 253.709 456.5879 c
253.709 457.9961 254.2178 459.1318 255.1187 460.3638 C
255.6274 460.3638 l
f*U
*u
258.3291 456.356 m
256.2861 456.356 L
256.2861 457.0762 L
258.3291 457.0762 L
258.3291 456.356 l
f*U
*u
259.9219 457.772 m
260.1724 457.9561 260.5308 458.124 261.0562 458.124 c
262.0068 458.124 262.9824 457.4839 262.9824 456.3242 c
262.9824 455.7002 262.6904 454.3481 260.856 454.3481 c
260.0889 454.3481 259.1045 454.644 258.9629 455.8999 c
259.7217 455.8999 L
259.7969 455.2441 260.3057 454.9561 260.9644 454.9561 c
261.7231 454.9561 262.1987 455.54 262.1987 456.2441 c
262.1987 457.0518 261.623 457.4922 260.8975 457.4922 c
260.4722 457.4922 260.0889 457.2998 259.8135 456.9561 c
259.1797 456.9878 L
259.6216 460.0039 L
262.6572 460.0039 L
262.6572 459.3159 L
260.1724 459.3159 L
259.9219 457.772 l
f*U
*u
266.6851 457.4922 m
267.4775 457.1719 267.644 456.5479 267.644 456.124 c
267.644 455.2202 267.0439 454.3481 265.6597 454.3481 c
265.334 454.3481 264.7173 454.4282 264.25 454.7798 c
263.6499 455.2358 263.6499 455.8438 263.6499 456.1162 c
263.6499 456.8042 264.0249 457.2441 264.6421 457.4839 c
264.1416 457.668 263.8496 458.0518 263.8496 458.5801 c
263.8496 459.1641 264.2251 460.124 265.626 460.124 c
266.9272 460.124 267.4355 459.332 267.4355 458.6758 c
267.4355 457.8682 266.9438 457.6201 266.6851 457.4922 c
f1 D
264.4336 456.1001 m
264.4336 455.6519 264.667 454.98 265.6846 454.98 c
266.2183 454.98 266.8604 455.1641 266.8604 456.0439 c
266.8604 456.8042 266.3101 457.1401 265.6426 457.1401 c
264.8174 457.1401 264.4336 456.6201 264.4336 456.1001 c
f266.6768 458.6519 m
266.6768 458.9961 266.4434 459.4922 265.5845 459.4922 c
264.8003 459.4922 264.6089 458.9722 264.6089 458.6118 c
264.6089 458.0762 265.1006 457.748 265.6343 457.748 c
266.2681 457.748 266.6768 458.1401 266.6768 458.6519 c
f*U
*u
0 D
269.5625 454.5 m
268.6948 454.5 L
268.6948 455.3481 L
269.5625 455.3481 L
269.5625 454.5 l
f*U
*u
272.1558 457.7002 m
272.2808 457.6919 272.4146 457.6841 272.5396 457.6841 c
273.1064 457.6841 273.6567 457.8999 273.6567 458.604 c
273.6567 458.9399 273.4482 459.4922 272.5728 459.4922 c
271.5303 459.4922 271.4639 458.6758 271.4302 458.2842 c
270.7134 458.2842 L
270.7134 459.1079 271.0635 460.124 272.606 460.124 c
273.7402 460.124 274.416 459.5 274.416 458.644 c
274.416 457.9238 273.9824 457.5801 273.6655 457.4839 c
273.6655 457.4678 L
274.2324 457.292 274.6411 456.9082 274.6411 456.1558 c
274.6411 455.2358 274.0239 454.3481 272.5313 454.3481 c
272.0977 454.3481 271.7305 454.4521 271.4468 454.5962 c
270.7964 454.9238 270.6216 455.5718 270.5713 456.2202 c
271.3301 456.2202 L
271.3555 455.6919 271.4888 454.98 272.5811 454.98 c
273.3315 454.98 273.8569 455.4199 273.8569 456.0679 c
273.8569 457.0122 272.9897 457.1001 272.4893 457.1001 c
272.3809 457.1001 272.2642 457.0918 272.1558 457.0918 C
272.1558 457.7002 l
f*U
*u
276.6631 460.728 m
277.708 460.728 278.1831 459.8818 278.1831 459.0723 c
278.1831 458.2622 277.708 457.416 276.6631 457.416 c
275.6187 457.416 275.1436 458.2622 275.1436 459.0723 c
275.1436 459.8818 275.6187 460.728 276.6631 460.728 c
f1 D
276.6631 457.8721 m
277.4512 457.8721 277.6138 458.6519 277.6138 459.0723 c
277.6138 459.4922 277.4512 460.272 276.6631 460.272 c
275.875 460.272 275.7124 459.4922 275.7124 459.0723 c
275.7124 458.6519 275.875 457.8721 276.6631 457.8721 c
f*U
*u
0 D
278.6938 452.8442 m
279.4028 454.124 279.8281 454.8921 279.8281 456.812 c
279.8281 458.1318 279.3525 459.1079 278.6855 460.3638 c
279.1777 460.3638 L
280.0449 459.1157 280.6118 458.1162 280.6118 456.6201 c
280.6118 455.2119 280.1035 454.0762 279.2026 452.8442 C
278.6938 452.8442 l
f*U
U1 Ap
1 g
261 389.8584 m
238.5 389.8584 L
238.5 398.8584 L
261 398.8584 L
261 389.8584 L
fu*u
0 Ap
0 g
214.519 395.1006 m
214.5107 395.3643 214.4106 395.8042 213.4849 395.8042 c
213.2598 395.8042 212.6177 395.7324 212.6177 395.2124 c
212.6177 394.8682 212.8428 394.7881 213.4097 394.6523 c
214.1436 394.4766 L
215.0527 394.2607 215.3696 393.9404 215.3696 393.3721 c
215.3696 392.5088 214.6274 391.9883 213.6431 391.9883 c
211.917 391.9883 211.792 392.9482 211.7671 393.4521 c
212.4756 393.4521 L
212.5005 393.124 212.6006 392.5967 213.6348 392.5967 c
214.1602 392.5967 214.6357 392.7969 214.6357 393.2607 c
214.6357 393.5967 214.3936 393.708 213.7686 393.8604 c
212.9175 394.0605 L
212.3091 394.2041 211.9087 394.5 211.9087 395.0762 c
211.9087 395.9966 212.7007 396.4121 213.5601 396.4121 c
215.1191 396.4121 215.2275 395.3086 215.2275 395.1006 C
214.519 395.1006 l
f*U
*u
218.939 394.8848 m
218.8472 395.4443 218.522 395.7803 217.9048 395.7803 c
216.9956 395.7803 216.7036 394.9482 216.7036 394.2041 c
216.7036 393.4844 216.8872 392.5967 217.8965 392.5967 c
218.3882 392.5967 218.8135 392.9482 218.939 393.5889 c
219.6475 393.5889 L
219.5728 392.9248 219.1475 391.9883 217.8711 391.9883 c
216.6455 391.9883 215.9199 392.876 215.9199 394.084 c
215.9199 395.3804 216.5703 396.4121 218.0132 396.4121 c
219.1558 396.4121 219.5894 395.6123 219.6475 394.8848 C
218.939 394.8848 l
f*U
*u
220.3564 395.0205 m
220.3896 396.0205 221.082 396.4121 222.1577 396.4121 c
222.5078 396.4121 223.7754 396.3164 223.7754 395.2441 c
223.7754 392.8359 L
223.7754 392.6602 223.8672 392.5889 224.0176 392.5889 c
224.084 392.5889 224.1758 392.6045 224.2593 392.6201 c
224.2593 392.1084 L
224.1343 392.0762 224.0259 392.0283 223.8589 392.0283 c
223.2085 392.0283 223.1084 392.3486 223.0835 392.668 c
222.7998 392.3721 222.3579 391.9883 221.5073 391.9883 c
220.7065 391.9883 220.1396 392.4766 220.1396 393.1963 c
220.1396 393.5488 220.248 394.3643 221.4658 394.5088 c
222.6748 394.6523 L
222.8501 394.668 223.0586 394.7324 223.0586 395.1484 c
223.0586 395.5884 222.7246 395.8281 222.0327 395.8281 c
221.1987 395.8281 221.082 395.3403 221.0317 395.0205 C
220.3564 395.0205 l
f1 D
223.0415 394.2441 m
222.9248 394.1563 222.7417 394.0928 221.8325 393.9805 c
221.4741 393.9326 220.8984 393.8281 220.8984 393.3008 c
220.8984 392.8447 221.1401 392.5723 221.6909 392.5723 c
222.3745 392.5723 223.0415 392.9961 223.0415 393.5566 C
223.0415 394.2441 l
f*U
*u
0 D
225.7686 392.1084 m
225.0347 392.1084 L
225.0347 397.8525 L
225.7686 397.8525 L
225.7686 392.1084 l
f*U
*u
230.5723 393.4199 m
230.5469 393.2207 230.3467 392.6279 229.7964 392.2764 c
229.5962 392.1484 229.313 391.9883 228.6123 391.9883 c
227.3862 391.9883 226.6611 392.876 226.6611 394.084 c
226.6611 395.3804 227.3115 396.4121 228.7539 396.4121 c
230.0132 396.4121 230.6304 395.4521 230.6304 393.9727 c
227.4448 393.9727 L
227.4448 393.1006 227.8701 392.5967 228.7124 392.5967 c
229.4048 392.5967 229.813 393.1084 229.8384 393.4199 C
230.5723 393.4199 l
f1 D
229.8716 394.5322 m
229.8301 395.1802 229.5464 395.7803 228.6538 395.7803 c
227.9785 395.7803 227.4448 395.1802 227.4448 394.5322 C
229.8716 394.5322 l
f*U
*u
0 D
235.7676 397.9722 m
235.0586 396.6924 234.6333 395.9243 234.6333 394.0039 c
234.6333 392.6846 235.1089 391.708 235.7759 390.4521 c
235.2837 390.4521 L
234.4165 391.7002 233.8496 392.7002 233.8496 394.1963 c
233.8496 395.6045 234.3584 396.7402 235.2588 397.9722 C
235.7676 397.9722 l
f*U
*u
239.0532 392.1084 m
238.2695 392.1084 L
238.2695 396.1006 L
236.9019 396.1006 L
236.9019 396.6602 L
237.8525 396.7241 238.2441 396.8125 238.4775 397.7324 c
239.0532 397.7324 L
239.0532 392.1084 l
f*U
*u
242.2891 392.1084 m
241.4214 392.1084 L
241.4214 392.9561 L
242.2891 392.9561 L
242.2891 392.1084 l
f*U
*u
246.4922 396.2363 m
246.4004 396.7324 246.1167 397.1006 245.4829 397.1006 c
244.332 397.1006 244.0903 395.6123 244.0903 395.0205 c
244.1069 395.0044 L
244.2905 395.3086 244.6992 395.6924 245.4995 395.6924 c
246.2168 395.6924 247.334 395.2524 247.334 393.9082 c
247.334 393.332 247.1758 392.916 246.7754 392.5 c
246.4668 392.1729 246.1167 391.9561 245.291 391.9561 c
244.8408 391.9561 244.1987 392.1484 243.7817 392.7725 c
243.4312 393.3008 243.3315 393.9883 243.3315 394.7246 c
243.3315 395.9565 243.748 397.7324 245.4995 397.7324 c
246.1748 397.7324 247.1343 397.3804 247.209 396.2363 C
246.4922 396.2363 l
f1 D
245.4243 392.5889 m
246.125 392.5889 246.5752 393.1162 246.5752 393.876 c
246.5752 394.3721 246.3003 395.0605 245.3911 395.0605 c
244.582 395.0605 244.1904 394.5 244.1904 393.8359 c
244.1904 393.2363 244.5654 392.5889 245.4243 392.5889 c
f*U
*u
0 D
250.645 392.1084 m
249.8608 392.1084 L
249.8608 396.1006 L
248.4932 396.1006 L
248.4932 396.6602 L
249.4443 396.7241 249.8359 396.8125 250.0693 397.7324 c
250.645 397.7324 L
250.645 392.1084 l
f*U
*u
255.6401 395.1006 m
256.4326 394.7803 256.5991 394.1563 256.5991 393.7324 c
256.5991 392.8281 255.999 391.9561 254.6147 391.9561 c
254.2891 391.9561 253.6724 392.0361 253.2051 392.3887 c
252.6045 392.8447 252.6045 393.4521 252.6045 393.7246 c
252.6045 394.4121 252.98 394.8525 253.5972 395.0923 c
253.0967 395.2764 252.8047 395.6602 252.8047 396.1885 c
252.8047 396.7725 253.1802 397.7324 254.5811 397.7324 c
255.8823 397.7324 256.3906 396.9404 256.3906 396.2842 c
256.3906 395.4766 255.8989 395.2285 255.6401 395.1006 c
f1 D
253.3887 393.708 m
253.3887 393.2607 253.6221 392.5889 254.6396 392.5889 c
255.1733 392.5889 255.8154 392.7725 255.8154 393.6523 c
255.8154 394.4121 255.2651 394.748 254.5977 394.748 c
253.7725 394.748 253.3887 394.2285 253.3887 393.708 c
f255.6318 396.2603 m
255.6318 396.6045 255.3984 397.1006 254.5396 397.1006 c
253.7554 397.1006 253.564 396.5806 253.564 396.2202 c
253.564 395.6846 254.0557 395.3564 254.5894 395.3564 c
255.2231 395.3564 255.6318 395.7485 255.6318 396.2603 c
f*U
*u
0 D
257.6499 392.9561 m
258.5176 392.9561 L
258.5176 392.1729 L
258.5176 391.084 257.8169 390.9561 257.6499 390.9326 c
257.6499 391.3008 L
258.0005 391.332 258.0923 391.7324 258.0923 392.1084 c
257.6499 392.1084 L
257.6499 392.9561 l
f*U
*u
263.8794 391.9561 m
262.1948 391.9561 261.8696 393.6768 261.8696 394.8447 c
261.8696 396.0122 262.1948 397.7324 263.8794 397.7324 c
265.564 397.7324 265.8892 396.0122 265.8892 394.8447 c
265.8892 393.6768 265.564 391.9561 263.8794 391.9561 c
f1 D
263.8794 397.1006 m
263.0371 397.1006 262.6538 396.2524 262.6538 394.8447 c
262.6538 393.4365 263.0371 392.5889 263.8794 392.5889 c
264.7217 392.5889 265.1055 393.4365 265.1055 394.8447 c
265.1055 396.2524 264.7217 397.1006 263.8794 397.1006 c
f*U
*u
0 D
267.791 392.1084 m
266.9233 392.1084 L
266.9233 392.9561 L
267.791 392.9561 L
267.791 392.1084 l
f*U
*u
271.9937 396.2363 m
271.9023 396.7324 271.6187 397.1006 270.9849 397.1006 c
269.834 397.1006 269.5923 395.6123 269.5923 395.0205 c
269.6089 395.0044 L
269.792 395.3086 270.2007 395.6924 271.0015 395.6924 c
271.7188 395.6924 272.8359 395.2524 272.8359 393.9082 c
272.8359 393.332 272.6777 392.916 272.2773 392.5 c
271.9688 392.1729 271.6187 391.9561 270.793 391.9561 c
270.3428 391.9561 269.7007 392.1484 269.2837 392.7725 c
268.9331 393.3008 268.833 393.9883 268.833 394.7246 c
268.833 395.9565 269.25 397.7324 271.0015 397.7324 c
271.6768 397.7324 272.6357 397.3804 272.7109 396.2363 C
271.9937 396.2363 l
f1 D
270.9263 392.5889 m
271.627 392.5889 272.0771 393.1162 272.0771 393.876 c
272.0771 394.3721 271.8022 395.0605 270.8931 395.0605 c
270.084 395.0605 269.6924 394.5 269.6924 393.8359 c
269.6924 393.2363 270.0674 392.5889 270.9263 392.5889 c
f*U
*u
0 D
276.147 392.1084 m
275.3628 392.1084 L
275.3628 396.1006 L
273.9951 396.1006 L
273.9951 396.6602 L
274.9458 396.7241 275.3379 396.8125 275.5713 397.7324 c
276.147 397.7324 L
276.147 392.1084 l
f*U
*u
281.1421 395.1006 m
281.9346 394.7803 282.1011 394.1563 282.1011 393.7324 c
282.1011 392.8281 281.501 391.9561 280.1162 391.9561 c
279.791 391.9561 279.1738 392.0361 278.707 392.3887 c
278.1064 392.8447 278.1064 393.4521 278.1064 393.7246 c
278.1064 394.4121 278.4819 394.8525 279.0991 395.0923 c
278.5986 395.2764 278.3066 395.6602 278.3066 396.1885 c
278.3066 396.7725 278.6821 397.7324 280.083 397.7324 c
281.3838 397.7324 281.8926 396.9404 281.8926 396.2842 c
281.8926 395.4766 281.4009 395.2285 281.1421 395.1006 c
f1 D
278.8906 393.708 m
278.8906 393.2607 279.124 392.5889 280.1416 392.5889 c
280.6753 392.5889 281.3174 392.7725 281.3174 393.6523 c
281.3174 394.4121 280.7671 394.748 280.0996 394.748 c
279.2739 394.748 278.8906 394.2285 278.8906 393.708 c
f281.1338 396.2603 m
281.1338 396.6045 280.9004 397.1006 280.0415 397.1006 c
279.2573 397.1006 279.0654 396.5806 279.0654 396.2202 c
279.0654 395.6846 279.5576 395.3564 280.0913 395.3564 c
280.7251 395.3564 281.1338 395.7485 281.1338 396.2603 c
f*U
*u
0 D
285.0366 390.4521 m
285.7456 391.7324 286.1709 392.5 286.1709 394.4199 c
286.1709 395.7402 285.6953 396.7163 285.0283 397.9722 c
285.5205 397.9722 L
286.3877 396.7241 286.9546 395.7246 286.9546 394.2285 c
286.9546 392.8203 286.4458 391.6846 285.5454 390.4521 C
285.0366 390.4521 l
f*U
U1 Ap
1 g
236.25 267.75 m
213.75 267.75 L
213.75 276.75 L
236.25 276.75 L
236.25 267.75 L
fu*u
0 Ap
0 g
199.376 270 m
198.6421 270 L
198.6421 274.1836 L
199.3345 274.1836 L
199.3345 273.4883 L
199.3511 273.4883 L
199.6431 273.9756 200.0264 274.3037 200.5767 274.3037 c
200.6685 274.3037 200.7104 274.2959 200.7686 274.2803 c
200.7686 273.5518 L
200.4937 273.5518 L
199.8096 273.5518 199.376 273.04 199.376 272.4316 C
199.376 270 l
f*U
*u
203.0952 274.3037 m
204.4878 274.3037 205.1216 273.1758 205.1216 272.0957 c
205.1216 271.0156 204.4878 269.8877 203.0952 269.8877 c
201.7026 269.8877 201.0688 271.0156 201.0688 272.0957 c
201.0688 273.1758 201.7026 274.3037 203.0952 274.3037 c
f1 D
203.0952 270.4961 m
204.146 270.4961 204.3628 271.5361 204.3628 272.0957 c
204.3628 272.6563 204.146 273.6963 203.0952 273.6963 c
202.0444 273.6963 201.8276 272.6563 201.8276 272.0957 c
201.8276 271.5361 202.0444 270.4961 203.0952 270.4961 c
f*U
*u
0 D
206.8564 273.5996 m
206.8564 270.8799 L
206.8564 270.5518 207.1484 270.5518 207.2983 270.5518 c
207.5566 270.5518 L
207.5566 270 L
207.29 269.9756 207.0815 269.9443 207.0063 269.9443 c
206.2808 269.9443 206.1226 270.3359 206.1226 270.8398 c
206.1226 273.5996 L
205.5303 273.5996 L
205.5303 274.1836 L
206.1226 274.1836 L
206.1226 275.3516 L
206.8564 275.3516 L
206.8564 274.1836 L
207.5566 274.1836 L
207.5566 273.5996 L
206.8564 273.5996 l
f*U
*u
208.249 272.9121 m
208.2822 273.9121 208.9746 274.3037 210.0503 274.3037 c
210.4004 274.3037 211.668 274.208 211.668 273.1357 c
211.668 270.7275 L
211.668 270.5518 211.7598 270.4805 211.9102 270.4805 c
211.9766 270.4805 212.0684 270.4961 212.1519 270.5117 c
212.1519 270 L
212.0269 269.9678 211.9185 269.9199 211.7515 269.9199 c
211.1011 269.9199 211.001 270.2402 210.9761 270.5596 c
210.6924 270.2637 210.2505 269.8799 209.3999 269.8799 c
208.5991 269.8799 208.0322 270.3682 208.0322 271.0879 c
208.0322 271.4404 208.1406 272.2559 209.3584 272.4004 c
210.5674 272.5439 L
210.7427 272.5596 210.9512 272.624 210.9512 273.04 c
210.9512 273.4795 210.6172 273.7197 209.9253 273.7197 c
209.0913 273.7197 208.9746 273.2324 208.9243 272.9121 C
208.249 272.9121 l
f1 D
210.9346 272.1357 m
210.8174 272.0479 210.6343 271.9844 209.7251 271.8721 c
209.3667 271.8242 208.791 271.7197 208.791 271.1924 c
208.791 270.7363 209.0327 270.4639 209.5835 270.4639 c
210.2671 270.4639 210.9346 270.8877 210.9346 271.4482 C
210.9346 272.1357 l
f*U
*u
0 D
213.8115 273.5996 m
213.8115 270.8799 L
213.8115 270.5518 214.1035 270.5518 214.2534 270.5518 c
214.5117 270.5518 L
214.5117 270 L
214.2451 269.9756 214.0366 269.9443 213.9614 269.9443 c
213.2358 269.9443 213.0776 270.3359 213.0776 270.8398 c
213.0776 273.5996 L
212.4854 273.5996 L
212.4854 274.1836 L
213.0776 274.1836 L
213.0776 275.3516 L
213.8115 275.3516 L
213.8115 274.1836 L
214.5117 274.1836 L
214.5117 273.5996 L
213.8115 273.5996 l
f*U
*u
218.9316 271.3115 m
218.9067 271.1123 218.7065 270.5195 218.1563 270.168 c
217.9561 270.04 217.6724 269.8799 216.9722 269.8799 c
215.7461 269.8799 215.0205 270.7676 215.0205 271.9756 c
215.0205 273.2715 215.6709 274.3037 217.1138 274.3037 c
218.373 274.3037 218.9902 273.3438 218.9902 271.8643 c
215.8047 271.8643 L
215.8047 270.9922 216.23 270.4883 217.0723 270.4883 c
217.7642 270.4883 218.1729 271 218.1978 271.3115 C
218.9316 271.3115 l
f1 D
218.2314 272.4238 m
218.1895 273.0723 217.9063 273.6719 217.0137 273.6719 c
216.3384 273.6719 215.8047 273.0723 215.8047 272.4238 C
218.2314 272.4238 l
f*U
*u
0 D
224.1274 275.8643 m
223.4185 274.584 222.9932 273.8164 222.9932 271.8955 c
222.9932 270.5762 223.4683 269.5996 224.1357 268.3438 c
223.6436 268.3438 L
222.7764 269.5918 222.209 270.5918 222.209 272.0879 c
222.209 273.4961 222.7178 274.6318 223.6187 275.8643 C
224.1274 275.8643 l
f*U
*u
226.2871 273.2002 m
226.4121 273.1924 226.5454 273.1836 226.6709 273.1836 c
227.2378 273.1836 227.7881 273.4004 227.7881 274.1035 c
227.7881 274.4404 227.5796 274.9922 226.7041 274.9922 c
225.6616 274.9922 225.5947 274.1758 225.5615 273.7842 c
224.8442 273.7842 L
224.8442 274.6084 225.1948 275.624 226.7373 275.624 c
227.8716 275.624 228.5469 275 228.5469 274.1436 c
228.5469 273.4238 228.1133 273.0801 227.7964 272.9844 c
227.7964 272.9678 L
228.3638 272.792 228.7725 272.4082 228.7725 271.6563 c
228.7725 270.7363 228.1553 269.8477 226.6626 269.8477 c
226.2285 269.8477 225.8618 269.9521 225.5781 270.0957 c
224.9277 270.4238 224.7524 271.0723 224.7026 271.7197 c
225.4614 271.7197 L
225.4863 271.1924 225.6201 270.4805 226.7124 270.4805 c
227.4629 270.4805 227.9883 270.9199 227.9883 271.5684 c
227.9883 272.5117 227.1211 272.5996 226.6206 272.5996 c
226.5122 272.5996 226.3955 272.5918 226.2871 272.5918 C
226.2871 273.2002 l
f*U
*u
232.0498 270 m
231.2656 270 L
231.2656 273.9922 L
229.8979 273.9922 L
229.8979 274.5518 L
230.8486 274.6162 231.2407 274.7041 231.4741 275.624 c
232.0498 275.624 L
232.0498 270 l
f*U
*u
235.2852 270 m
234.418 270 L
234.418 270.8477 L
235.2852 270.8477 L
235.2852 270 l
f*U
*u
236.3193 275.5039 m
240.3726 275.5039 L
240.3726 274.8877 L
239.7886 274.3037 238.3877 272.5117 237.9624 270 c
237.1533 270 L
237.3535 271.5439 238.4209 273.5596 239.5469 274.8164 c
236.3193 274.8164 L
236.3193 275.5039 l
f*U
*u
242.3862 276.2285 m
243.4307 276.2285 243.9063 275.3818 243.9063 274.5723 c
243.9063 273.7617 243.4307 272.916 242.3862 272.916 c
241.3418 272.916 240.8667 273.7617 240.8667 274.5723 c
240.8667 275.3818 241.3418 276.2285 242.3862 276.2285 c
f1 D
242.3862 273.3721 m
243.1743 273.3721 243.3369 274.1523 243.3369 274.5723 c
243.3369 274.9922 243.1743 275.7725 242.3862 275.7725 c
241.5981 275.7725 241.4355 274.9922 241.4355 274.5723 c
241.4355 274.1523 241.5981 273.3721 242.3862 273.3721 c
f*U
*u
0 D
244.417 268.3438 m
245.126 269.624 245.5513 270.3916 245.5513 272.3115 c
245.5513 273.6318 245.0757 274.6084 244.4087 275.8643 c
244.9009 275.8643 L
245.7681 274.6162 246.335 273.6162 246.335 272.1201 c
246.335 270.7119 245.8262 269.5762 244.9258 268.3438 C
244.417 268.3438 l
f*U
U*u
213.7969 423 m
215.3525 425.1973 L
213.8594 427.2656 L
215.251 427.2656 L
216.0186 426.0928 L
216.8203 427.2656 L
218.1563 427.2656 L
216.7007 425.2451 L
218.2969 423 L
216.9053 423 L
216.0186 424.3213 L
215.1328 423 l
213.7969 423 L
f*U
*u
137.2969 503.7656 m
138.5 503.7656 L
139.5391 500.7344 L
140.5313 503.7656 L
141.7344 503.7656 L
140.2148 499.665 L
139.9341 498.9082 L
139.834 498.6602 139.7383 498.4717 139.6475 498.3408 c
139.5566 498.2104 139.4526 498.1045 139.335 498.0234 c
139.2173 497.9424 139.0723 497.8789 138.9004 497.8335 c
138.7285 497.7881 138.5342 497.7656 138.3174 497.7656 c
138.0986 497.7656 137.8828 497.7881 137.6719 497.833 c
137.5938 498.709 L
137.7695 498.6738 137.9277 498.6563 138.0684 498.6563 c
138.3291 498.6563 138.5225 498.7344 138.6475 498.8896 c
138.7725 499.0454 138.8682 499.2437 138.9346 499.4844 c
137.2969 503.7656 L
f*U
*u
330.7969 209.25 m
332.3525 211.4473 L
330.8594 213.5156 L
332.251 213.5156 L
333.0186 212.3428 L
333.8203 213.5156 L
335.1563 213.5156 L
333.7012 211.4951 L
335.2969 209.25 L
333.9053 209.25 L
333.0186 210.5713 L
332.1328 209.25 l
330.7969 209.25 L
f*U
*u
254.2969 290.0156 m
255.5 290.0156 L
256.5391 286.9844 L
257.5313 290.0156 L
258.7344 290.0156 L
257.2148 285.915 L
256.9341 285.1582 L
256.834 284.9102 256.7383 284.7217 256.6475 284.5908 c
256.5566 284.4609 256.4526 284.3545 256.335 284.2734 c
256.2173 284.1924 256.0723 284.1289 255.9004 284.084 c
255.7285 284.0381 255.5342 284.0156 255.3174 284.0156 c
255.0986 284.0156 254.8828 284.0381 254.6719 284.083 c
254.5938 284.959 L
254.7695 284.9238 254.9277 284.9063 255.0684 284.9063 c
255.3291 284.9063 255.5225 284.9844 255.6475 285.1396 c
255.7725 285.2949 255.8682 285.4941 255.9346 285.7344 c
254.2969 290.0156 L
f*U
*u
137.2969 411.5156 m
138.5 411.5156 L
139.5391 408.4844 L
140.5313 411.5156 L
141.7344 411.5156 L
140.2148 407.415 L
139.9341 406.6582 L
139.834 406.4102 139.7383 406.2217 139.6475 406.0908 c
139.5566 405.9604 139.4526 405.8545 139.335 405.7734 c
139.2173 405.6924 139.0723 405.6289 138.9004 405.5835 c
138.7285 405.5381 138.5342 405.5156 138.3174 405.5156 c
138.0986 405.5156 137.8828 405.5381 137.6719 405.583 c
137.5938 406.459 L
137.7695 406.4238 137.9277 406.4063 138.0684 406.4063 c
138.3291 406.4063 138.5225 406.4844 138.6475 406.6396 c
138.7725 406.7954 138.8682 406.9937 138.9346 407.2344 c
137.2969 411.5156 L
f*U
*u
281.2969 503.7656 m
282.5 503.7656 L
283.5391 500.7344 L
284.5313 503.7656 L
285.7344 503.7656 L
284.2148 499.665 L
283.9341 498.9082 L
283.834 498.6602 283.7383 498.4717 283.6475 498.3408 c
283.5566 498.2104 283.4526 498.1045 283.335 498.0234 c
283.2173 497.9424 283.0723 497.8789 282.9004 497.8335 c
282.7285 497.7881 282.5342 497.7656 282.3174 497.7656 c
282.0986 497.7656 281.8828 497.7881 281.6719 497.833 c
281.5938 498.709 L
281.7695 498.6738 281.9277 498.6563 282.0684 498.6563 c
282.3291 498.6563 282.5225 498.7344 282.6475 498.8896 c
282.7725 499.0454 282.8682 499.2437 282.9346 499.4844 c
281.2969 503.7656 L
f*U
1 Ap
0 R
0 G
0.5 w407.25 204.75 m
135 204.75 L
135 517.5 L
407.25 517.5 L
407.25 204.75 L
sLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
