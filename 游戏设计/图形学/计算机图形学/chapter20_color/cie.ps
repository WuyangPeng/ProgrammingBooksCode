%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Alice Peters) (A K Peters, Ltd.)
%%Title: (cie.ps)
%%CreationDate: 5/1/2002 4:10 PM
%%BoundingBox: 125 415 372 678
%%HiResBoundingBox: 125.8916 415 372 677.5181
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 24 588 780
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -93 683 1.5 1137 720 18 0 1 10 67 1 0
%AI5_OpenViewLayers: 7
%%PageOrigin:12 24
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -20 -24 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 120 128 8
%%BeginData: 9618 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFFFF5227FF2727FD73FF5227A8F827FD0D7D52FD0D7D52FD0C7D
%52FD0C7D52FD0C7D52FD0C7D52FD0C7D52FD0C7D52FD09FFFD12A87DFD0D
%A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7D
%FD0CA87DFD0DA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0C
%A87DFD0EFFFD0DA87DFD0DA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD
%0CA87DFD0CA87DFD0EFF7DFD0CA87DFD0DA87DFD0CA87DFD0CA87DFD0CA8
%7DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DFD0DA87DFD0CA87DFD0C
%A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DFD0CA87DFD0DA87D
%FD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA8
%7DFD0DA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD
%0EFF7DFD09A8FD057DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD
%0CA87DFD0CA87DFD0EFFFD07A87DA8A8FD05FFA8A87DFD09A87DFD0CA87D
%FD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DFD05A87DFF7D
%FF7DFF7DFD05FFA8A87DFD06A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87D
%FD0CA87DFD0CA87DFD0EFFFD05A87DFF277D7D5252277DFD07FF7DFD05A8
%7DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD09FFA87D
%FF52A87DFD05A8FF7D27A827A8527DFD09FFA87DA8A87DFD0CA87DFD0CA8
%7DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD09FF2752FFF852A8FD047DFF
%FFA8FD057DFD0CFF7D7D52FD197D52FD197D52FD197D52FD09FF7D525227
%7D7DA8A8A87DFD15FFA87D7DFD0BA87DFD0CA87DFD0CA87DFD0CA87DFD0C
%A87DFD0CA87DFD0EFFFD05A8FD18FF7DFD0AA87DFD0CA87DFD0CA87DFD0C
%A87DFD0CA87DFD0CA87DFD0EFF7DFD04A8FD19FF7DFD09A87DFD0CA87DFD
%0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A8A87DFD1BFFFD09A87DFD
%0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DA8A87DFD1DFFA8
%7DFD05A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A8
%A87DFD1FFF7DFD04A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87D
%FD0EFF7DA8A8A8FD20FF7DA8A8A87DFD0CA87DFD0CA87DFD0CA87DFD0CA8
%7DFD0CA87DFD0EFFA8A8A87DFD21FFA8A8A87DFD0CA87DFD0CA87DFD0CA8
%7DFD0CA87DFD0CA87DFD0EFF7DA8A8A8FD22FFA87D7DFD0CA87DFD0CA87D
%FD0CA87DFD0CA87DFD0CA87DFD0EFFFD04A8FD09FF277D5252527D7D527D
%5227FD10FF7DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7D
%A8A8A8FD08FF527D27277D27F82727525227FD11FFFD0CA87DFD0CA87DFD
%0CA87DFD0CA87DFD0CA87DFD09FF7D52FF7D27FD04A8FD08FF7DF85252FF
%527D7D527D7D52FD0CFFFD04A8FFFD0CA87DFD0CA87DFD0CA87DFD0CA87D
%FD0CA87DFD09FF2727FFFD047D52FD09FFA87D7DFD14FFA827A827A82752
%FFA8FD097D52FD0C7D52FD0C7D52FD0C7D52FD0C7D52A8FD08FF7D7D52A8
%FFA8A8A8FD20FF7D52527D275227FFFFFF7DFD07A87DFD0CA87DFD0CA87D
%FD0CA87DFD0CA87DFD0EFF7DA87DFD20FFA852A827A87D7DFD04FF7DFD06
%A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A87DFD2CFF7DFD05
%A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DA87DFD2DFF7DFD04
%A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A8A8FD2EFFFD04A8
%7DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DA87DFD2FFFA8A8A87D
%FD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A8A8FD30FFA8A87DFD0C
%A87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DA87DFD31FFA87DFD0CA87DFD
%0CA87DFD0CA87DFD0CA87DFD0EFFA8A8A8FD32FFFD0DA87DFD0CA87DFD0C
%A87DFD0CA87DFD0EFF7DA87DFD33FFFD0CA87DFD0CA87DFD0CA87DFD0CA8
%7DFD0EFFA8A8A8FD34FFFD0BA87DFD0CA87DFD0CA87DFD0CA87DFD09FFA8
%7DFF7DA87DA87DFD35FFFD0AA87DFD0CA87DFD0CA87DFD0CA87DFD09FF27
%52A8F87DA87D7DFD37FFFD157D52FD197D52FD09FF522752277D7DA87DFD
%37FFFD08A87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A8A8FD39FFFD06A8
%7DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DA87DFD39FFFD06A87DFD0CA87D
%FD0CA87DFD0CA87DFD0EFFFD04A8FD3AFFFD04A87DFD0CA87DFD0CA87DFD
%0CA87DFD0EFF7DA8A8A8FF7D52FF7DFF7DFD33FFFD04A87DFD0CA87DFD0C
%A87DFD0CA87DFD0EFFA8A8A87DFF52A852527D277DFD33FFA8A8A87DFD0C
%A87DFD0CA87DFD0CA87DFD0EFF7DA8A8A8FF7D2752277D27A8FD2CFFA8FF
%A8FD05FFA8A87DFD0CA87DFD0CA87DFD0CA87DFD0EFFA8A8A87DFFA8A8FF
%A8FFA8FD28FF7DFFFD097DA87DA8FF7DFD0CA87DFD0CA87DFD0CA87DFD0E
%FF7DA8A87DFD2FFF7DF852F8F8527D52272752F8F852FFFD0DA87DFD0CA8
%7DFD0CA87DFD0EFFA8A8A87DFD2FFFA8F8A852277D7D7D2752A85252A8FF
%FFFFFD0BA87DFD0CA87DFD0CA87DFD0EFF7DFD04A8FD2EFFA87DFD0FFFFD
%0BA87DFD0CA87DFD0CA87DFD09FFA87DFFA87DFD05A8FD41FFFD09A87DFD
%0CA87DFD0CA87DFD09FF2727FF2752FD057DFD41FFA8FD087D52FD0C7D52
%FD0C7D52A8FD08FF7D527D5252FD05A8FD42FFFD08A87DFD0CA87DFD0CA8
%7DFD0EFF7DA8A8A87DFD43FFFD07A87DFD0CA87DFD0CA87DFD0EFFFD05A8
%FD44FFFD06A87DFD0CA87DFD0CA87DFD0EFF7DFD05A8FD44FFFD05A87DFD
%0CA87DFD0CA87DFD06FFA8A8FD06FFFD05A87DFD45FFFD04A87DFD0CA87D
%FD0CA87DFD06FFF8527DFD05FF7DFD04A87DFD46FFA8A8A87DFD0CA87DFD
%0CA87DFD06FF7DF8FD06FFFD05A87DFD47FF7DA87DFD0CA87DFD0CA87DFD
%06FFF87DFD06FF7DFD06A8FD47FF7D7DFD0CA87DFD0CA87DFD0EFFFD07A8
%FD48FF7DFD0CA87DFD0CA87DFD0EFF7DFD05A87DFD49FF7DFD0BA87DFD0C
%A87DFD0EFFFD07A8FD4AFF7DFD0AA87DFD0CA87DFD0AFFA8FFFFA87DFD05
%A87DFD4BFF7DFD09A87DFD0CA87DFD09FF5227FF7D27FD08A8FD4BFFFD09
%A87DFD0CA87DFD09FF52277D2727FD087DFD46FFA8FD04FFA8FD087D52FD
%0C7D52A8FD08FFA8A8A8FFFD08A87DFD46FF527D7D52A827FD08A87DFD0C
%A87DFD0EFF7DFD08A8FD44FFA827522752277DA8A87DFD05A87DFD0CA87D
%FD0EFFFD09A8FD45FF2752A87DA827FFFFFD06A87DFD0CA87DFD0EFF7DFD
%07A87DFD4EFF7DFD04A87DFD0CA87DFD0EFFFD09A8FFFFFF52A8A852FFA8
%FFA8FD44FFFD04A87DFD0CA87DFD0EFF7DFD07A87DFFFFFF272752525227
%F8F8FD44FFFD04A87DFD0CA87DFD0EFFFD09A87DFFFF27F87D52272727F8
%FD14FFA8A8FF27A87D5227FFA8FD27FFA8A8A87DFD0CA87DFD0EFF7DFD08
%A87DFD1EFF27F8F82727522727F8F8A8FD27FFA8A87DFD0CA87DFD0EFFFD
%09A87DFD1EFF52F852277D52522727F8FD29FFA87DFD0CA87DFD0EFF7DFD
%09A87DFD51FF7DFD0CA87DFD0EFFFD0BA8FD48FFA8FD09FF7DFD0BA87DFD
%09FF7D52FF277D7DFD09A87DFD42FFA87D7DA8A827A8FD0AFF7DFD0AA87D
%FD09FF2752FF7D27A8FD0A7DA8FD41FF2752F8522752A8FD0BFFFD0A7D52
%FD09FFA8527D527D7DFD0BA8FD41FF277D275227F8A8FD05FF527D7D7DA8
%7DA87DFD08A87DFD0EFFFD0BA87DFD4DFFF8522727277DA8FF7DFD07A87D
%FD0EFF7DFD0CA8FD4BFFA827277D527D27FFA87DFD07A87DFD0EFFFD0DA8
%FD4CFFA8FD04FFA87DFD09A87DFD0EFF7DFD0BA87DFD4FFFA87D7DFD0AA8
%7DFD0EFFFD0DA8FD4DFFA87D7DFD0CA87DFD0EFF7DFD0DA8FD4AFFA8A87D
%A87DFD0CA87DFD0EFFFD0DA87DFD48FFA87DFD04A87DFD0CA87DFD0EFF7D
%FD0CA87DFD46FFFD08A87DFD0CA87DFD0EFFFD0DA87DA8FD43FFA87DFD08
%A87DFD0CA87DFD0AFFA8FFA8FF7DFD0CA87D7DFD41FFA87D7DFD09A87DFD
%0CA87DFD09FF5227FF5227FD0DA87DA8FD3FFFA87DFD0CA87DFD0CA87DFD
%09FF52277D2752FD0D7D5252FD3DFFA87D7D52FD0C7D52FD0C7D52A8FD08
%FFFD12A87DA87DFD3AFFA87DA8A8A87DFD0CA87DFD0CA87DFD0EFF7DFD0C
%A87DA87DFD38FFA8A87DFD04A87DFD0CA87DFD0CA87DFD0EFFFD0DA87DA8
%7DFD36FFA87DFD07A87DFD0CA87DFD0CA87DFD0EFF7DFD0CA87DA8A87DFD
%33FFFD0BA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DA8A8A8FD31FFA87DFD
%0BA87DFD0CA87DFD0CA87DFD0EFF7DFD0CA87DA8A87DA8FD2EFFA87D52FD
%0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DA8A8A87DFD2CFFA87DA8A87D
%FD0CA87DFD0CA87DFD0CA87DFD0EFF7DFD0CA87DA8A8A87DFD2AFFA87D7D
%A8A8A87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DFD05A8FD07FFA8
%A87D52A8A852FFFF52A8FD15FFA87DFD06A87DFD0CA87DFD0CA87DFD0CA8
%7DFD0EFF7DFD0CA87DFD04A87DFD07FF52272752FD0427F8527DFD13FFA8
%A87DFD07A87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DFD05A8FD08
%FFF8A85227F852272752A8FD11FFA87DFD0AA87DFD0CA87DFD0CA87DFD0C
%A87DFD09FF7D52FF7D7D7DFD0CA87DFD06A8FD0AFFA8FFFFFFA8FFA8FD0F
%FF7D7DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD09FF2727FF7D52A8FD0C
%7D52FD067DFD1EFFA87D7D52FD197D52FD197D52FD09FF7D5252A87D7DFD
%0CA87DFD05A87DFD1CFF7D7DA8A8A87DFD0CA87DFD0CA87DFD0CA87DFD0C
%A87DFD0EFFFD0DA87DFD07A8FD19FFA87DFD05A87DFD0CA87DFD0CA87DFD
%0CA87DFD0CA87DFD0EFF7DFD0CA87DFD06A87DFD17FF7D7DFD07A87DFD0C
%A87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DFD07A8FD15FFA87DFD
%09A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFF7DFD0CA87DFD08A8
%FD12FF7D7DFD0BA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0D
%A87DFD07A87DFD10FFA87D7DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0C
%A87DFD0EFF7DFD0CA87DFD09A87D277D277D27A8FD06FF7D7DA8A87DFD0C
%A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DFD0AA82752
%F8527D52FD04FFA87DFD04A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD
%0CA87DFD0EFF7DFD0CA87DFD08A87D7D277DF8A827A8FFFF7D7DFD06A87D
%FD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0EFFFD0DA87DFD0AA8
%FD06FFA87DFD08A87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD
%0EFF7DFD0CA87DFD0AA8FD04FF7D7DFD0AA87DFD0CA87DFD0CA87DFD0CA8
%7DFD0CA87DFD0CA87DFD09FF7D7DFF7D52FD0DA87DFD09A87DFFFFA87DFD
%0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD0CA87DFD09FF2727FF27
%27FD287D52FD197D52FD197D52FD0D7DFD09FF7D7D527D7DFD77FFA827A8
%7D27A8FD07FF277DFF277DFD08FF7D27FF2752FD08FF7D27FF5252FD08FF
%A827A8A827FD09FF5252FF27A8FD07FF5252FF27A8FD08FFA8277DA827A8
%FD08FFA827A87D27FD0AFFA8277D7D27A8FD07FF2727FF52A8FD08FF2752
%FF7D52FD08FF5227FF7D52FD08FFA8277D7DF8FD09FF2752A85252FD07FF
%2752A8277DFD08FFA8277DFF52FD09FFA8277D7D277DFD0AFF527D7D7DFD
%08FF7D7D7DA8A8FD08FFA8527D527DFD08FFFD057DFD09FF527DA87DFD09
%FF7D7D7D52A8FD07FF7D7D7D52A8FD08FFA87D7DA87DFD09FFA87D7DA852
%FDB4FFA8A8FD76FF52F8A8FD75FF52F87DFD3BFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7834.75 8587 m
-7834.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7834.75 8587 L
nu0 Ap
0 O
1 g
-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
F-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
F-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
F-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
F-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
F-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
F-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
F-7844.7817 8565.125 m
-7850.9009 8563.6162 -7854.7817 8565.125 V
-7858.877 8563.6484 -7864.7817 8565.125 V
-7869.7446 8563.4492 -7874.7817 8565.125 V
-7880.7969 8563.5742 -7884.7817 8565.125 V
-7884.7817 8584.8096 L
-7881.6958 8585.7842 -7878.2969 8585.9912 -7874.3799 8584.9082 C
-7868.2134 8586.4912 -7864.4634 8584.9082 V
-7859.4634 8586.4912 -7854.3799 8584.8242 V
-7850.0474 8586.4082 -7844.3799 8584.9082 V
-7838.8799 8586.3242 -7834.7817 8585.125 V
-7834.7817 8565.4404 L
-7837.5254 8564.4287 -7840.6514 8563.9287 -7844.7817 8565.125 C
f0 R
0 G
1 J 1 j 0.5 w-7864.75 8585 m
-7872.54 8586.9473 -7878.813 8583.585 -7884.75 8579.0488 C
S-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
S-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
S-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
S-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
S-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
S-7854.75 8565 m
-7846.96 8563.0527 -7840.687 8566.415 -7834.75 8570.9512 C
S-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
S-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
SUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7833.8921 8586 L
-7833.8921 8529.9756 L
-7884 8529.9756 L
-7884 8586 L
nu0 O
0.1 1 1 0 k
-7846.9014 8551.5752 m
-7848.7178 8545.0957 -7858.8247 8548.4658 Y
-7858.791 8548.5303 L
-7868.8999 8545.1611 -7870.7144 8551.6396 V
-7876.6758 8569.0068 -7871.4922 8575.7451 V
-7864.7529 8585.3369 -7860.6055 8585.3369 V
-7857.0103 8585.2705 L
-7852.8638 8585.2705 -7846.125 8575.6816 Y
-7840.9409 8568.9424 -7846.9014 8551.5752 Y
fu0 0 0 1 k
-7851.3926 8529.9756 m
-7852.1167 8531.4199 -7852.9238 8532.4756 V
-7852.4058 8532.0635 -7851.5151 8531.1924 -7851.3926 8529.9756 C
f-7865.064 8532.4854 m
-7865.8711 8531.4307 -7866.5942 8529.9863 Y
-7866.4727 8531.2021 -7865.582 8532.0732 -7865.064 8532.4854 C
fU0 0.61 0.74 0 k
-7850.5977 8554.4609 m
-7851.9038 8549.7959 -7859.1816 8552.2217 Y
-7859.1567 8552.2686 L
-7866.436 8549.8428 -7867.7417 8554.5078 V
-7872.0337 8567.0117 -7868.3018 8571.8633 V
-7863.4487 8578.7686 -7860.4634 8578.7686 V
-7857.875 8578.7227 L
-7854.8887 8578.7227 -7850.0366 8571.8174 Y
-7846.3042 8566.9639 -7850.5977 8554.4609 Y
fu1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7854.6226 8557.2754 m
-7853.813 8557.2754 -7853.1558 8556.6182 -7853.1558 8555.8096 c
-7853.1558 8555 -7853.813 8554.3428 -7854.6226 8554.3428 c
-7855.4321 8554.3428 -7856.0889 8555 -7856.0889 8555.8096 c
-7856.0889 8556.6182 -7855.4321 8557.2754 -7854.6226 8557.2754 c
b-7854.3638 8568.9971 m
-7853.0806 8568.9971 -7852.0415 8568.1201 -7852.0415 8567.042 c
-7852.0415 8565.9619 -7853.0806 8565.0869 -7854.3638 8565.0869 c
-7855.645 8565.0869 -7856.6846 8565.9619 -7856.6846 8567.042 c
-7856.6846 8568.1201 -7855.645 8568.9971 -7854.3638 8568.9971 c
b-7853.834 8580.7861 m
-7852.2817 8580.7861 -7851.0239 8580.1299 -7851.0239 8579.3213 c
-7851.0239 8578.5117 -7852.2817 8577.8545 -7853.834 8577.8545 c
-7855.3862 8577.8545 -7856.645 8578.5117 -7856.645 8579.3213 c
-7856.645 8580.1299 -7855.3862 8580.7861 -7853.834 8580.7861 c
b-7849.6104 8552.5264 m
-7848.8687 8552.5264 -7848.2671 8551.8154 -7848.2671 8550.9365 c
-7848.2671 8550.0596 -7848.8687 8549.3477 -7849.6104 8549.3477 c
-7850.353 8549.3477 -7850.9546 8550.0596 -7850.9546 8550.9365 c
-7850.9546 8551.8154 -7850.353 8552.5264 -7849.6104 8552.5264 c
b-7848.0034 8574.083 m
-7848.8818 8573.7354 -7849.1494 8572.335 -7848.603 8570.9541 c
-7848.0566 8569.5752 -7846.9014 8568.7363 -7846.0234 8569.085 c
-7845.145 8569.4326 -7844.877 8570.833 -7845.4233 8572.2139 c
-7845.9702 8573.5947 -7847.125 8574.4316 -7848.0034 8574.083 c
bu-7863.0566 8557.1592 m
-7863.8662 8557.1592 -7864.5239 8556.502 -7864.5239 8555.6934 c
-7864.5239 8554.8828 -7863.8662 8554.2266 -7863.0566 8554.2266 c
-7862.248 8554.2266 -7861.5913 8554.8828 -7861.5913 8555.6934 c
-7861.5913 8556.502 -7862.248 8557.1592 -7863.0566 8557.1592 c
b-7863.3159 8568.8799 m
-7864.5991 8568.8799 -7865.6382 8568.0049 -7865.6382 8566.9248 c
-7865.6382 8565.8447 -7864.5991 8564.9697 -7863.3159 8564.9697 c
-7862.0342 8564.9697 -7860.9951 8565.8447 -7860.9951 8566.9248 c
-7860.9951 8568.0049 -7862.0342 8568.8799 -7863.3159 8568.8799 c
b-7863.8457 8580.6709 m
-7865.3975 8580.6709 -7866.6558 8580.0146 -7866.6558 8579.2041 c
-7866.6558 8578.3936 -7865.3975 8577.7383 -7863.8457 8577.7383 c
-7862.293 8577.7383 -7861.0352 8578.3936 -7861.0352 8579.2041 c
-7861.0352 8580.0146 -7862.293 8580.6709 -7863.8457 8580.6709 c
b-7868.0679 8552.4092 m
-7868.811 8552.4092 -7869.4121 8551.6982 -7869.4121 8550.8213 c
-7869.4121 8549.9443 -7868.811 8549.2334 -7868.0679 8549.2334 c
-7867.3262 8549.2334 -7866.7241 8549.9443 -7866.7241 8550.8213 c
-7866.7241 8551.6982 -7867.3262 8552.4092 -7868.0679 8552.4092 c
b-7869.6758 8573.9678 m
-7868.7983 8573.6201 -7868.5298 8572.2188 -7869.0762 8570.8379 c
-7869.6226 8569.457 -7870.7778 8568.6201 -7871.6558 8568.9678 c
-7872.5342 8569.3164 -7872.8032 8570.7178 -7872.2568 8572.0967 c
-7871.7104 8573.4775 -7870.5552 8574.3154 -7869.6758 8573.9678 c
bUU0 Ap
0 0 0 1 k
-7859.1318 8552.6553 m
-7859.1318 8585.3145 l
Fu-7843.3906 8538.5303 m
-7844.0815 8537.8369 -7847.019 8538.7021 Y
-7848.229 8538.874 -7848.0562 8541.2939 Y
-7847.019 8543.3682 -7847.7104 8543.1943 Y
-7848.2998 8543.1943 -7849.855 8543.1143 -7850.7822 8543.0635 C
-7851.1226 8541.6689 -7852.6128 8540.4756 -7854.7217 8539.7695 C
-7852.7578 8536.4775 -7854.5176 8535.7949 -7856.2935 8535.79 C
-7856.3096 8535.7021 -7856.332 8535.6162 -7856.3599 8535.5332 C
-7854.1089 8535.5791 -7853.6392 8533.2588 Y
-7853.4048 8533.0635 -7853.1606 8532.7861 -7852.9238 8532.4756 C
-7853.1416 8532.6475 -7853.2944 8532.7393 Y
-7854.2583 8532.7393 -7855.8774 8534.4941 -7856.4966 8535.207 C
-7856.9194 8534.4434 -7857.853 8533.9111 -7858.9434 8533.9111 c
-7860.0698 8533.9111 -7861.0322 8534.4795 -7861.4312 8535.2852 C
-7861.9985 8534.624 -7863.6968 8532.751 -7864.6943 8532.751 C
-7864.8462 8532.6572 -7865.064 8532.4854 V
-7864.8281 8532.7939 -7864.583 8533.0732 -7864.3481 8533.2686 C
-7863.8638 8535.6563 -7861.5254 8535.5342 V
-7861.5449 8535.5889 -7861.5674 8535.6436 -7861.5806 8535.7021 C
-7864.9238 8535.6924 -7863.937 8538.3174 -7863.2104 8539.6602 C
-7865.5918 8540.376 -7867.2646 8541.7012 -7867.5239 8543.25 C
-7868.4473 8543.2998 -7869.6729 8543.3584 -7870.1802 8543.3584 C
-7870.8726 8543.5313 -7869.835 8541.458 V
-7869.6626 8539.0391 -7870.8726 8538.8662 V
-7873.8096 8538.002 -7874.501 8538.6934 V
-7875.1919 8539.5566 -7876.0562 8538.3467 V
-7875.1919 8540.0752 -7873.291 8539.5566 V
-7870.6982 8538.8662 -7871.3906 8540.5938 V
-7871.9087 8544.0498 -7870.1802 8544.7402 V
-7868.0342 8545.8545 -7866.2822 8546.0889 V
-7865.9087 8546.4141 -7865.4639 8546.7109 -7864.958 8546.9766 C
-7867.5562 8547.0469 -7870.2246 8547.9209 -7871.0752 8550.9561 C
-7871.5151 8552.2432 -7872.0518 8554.2432 V
-7873.1025 8554.8252 -7874.3022 8556.0078 -7875.541 8558.2627 C
-7876.394 8561.4502 -7877.167 8556.7129 V
-7878.3975 8553.6494 -7879.6504 8553.5381 V
-7878.4702 8555.2871 -7878.9038 8556.416 V
-7877.2998 8560.917 -7875.6138 8559.8994 V
-7874.0986 8559.2197 -7872.688 8556.8154 V
-7873.0698 8558.4971 -7873.4326 8560.417 -7873.6743 8562.3906 C
-7874.4888 8562.3975 L
-7876.3506 8561.4795 -7876.3262 8564.959 V
-7877.1226 8568.9453 -7876.3594 8571.6826 V
-7875.647 8574.1504 -7878.1274 8572.9307 V
-7879.2842 8573.3242 -7879.9839 8572.7881 V
-7882.3882 8571.4131 -7884 8573.124 V
-7882.147 8572.8799 -7881.4482 8573.417 V
-7879.9785 8573.5615 -7879.897 8574.1787 V
-7876.9561 8574.8555 -7876.188 8574.0771 V
-7874.417 8573.2139 -7875.1304 8570.3604 V
-7875.8799 8562.4814 -7874.3198 8564.4053 V
-7874.1182 8564.4219 -7873.8784 8564.5176 V
-7874.1519 8568.4326 -7873.8018 8572.3252 -7871.9961 8574.8516 C
-7875.4536 8567.333 -7870.2974 8552.3037 Y
-7868.9609 8547.5303 -7863.127 8548.1016 -7860.145 8548.7344 C
-7860.0718 8550.1299 -7859.8374 8551.9492 -7859.1318 8552.6553 C
-7858.2134 8550.6963 -7858.2358 8549.0732 V
-7857.0762 8548.7217 -7850.2817 8546.8447 -7847.4487 8550.3369 C
-7848.4312 8547.8135 -7850.8262 8547.0186 -7853.2007 8546.9189 C
-7852.667 8546.6318 -7852.2041 8546.3047 -7851.8257 8545.9502 C
-7850.041 8545.7861 -7847.7104 8544.5771 Y
-7845.9814 8543.8857 -7846.5015 8540.4307 Y
-7847.1919 8538.7021 -7844.5991 8539.3936 Y
-7842.7002 8539.9111 -7841.835 8538.1836 Y
-7842.7002 8539.3936 -7843.3906 8538.5303 Y
f-7837.9082 8572.9521 m
-7838.6074 8573.4893 -7839.7632 8573.0938 Y
-7842.2446 8574.3135 -7841.5327 8571.8467 Y
-7840.769 8569.1104 -7841.564 8565.1221 Y
-7841.541 8561.6445 -7843.4014 8562.5596 Y
-7844.0342 8562.5557 L
-7844.3198 8560.6123 -7844.7046 8558.7549 -7845.0898 8557.1699 C
-7843.7129 8559.4199 -7842.2778 8560.0635 Y
-7840.5913 8561.082 -7838.9878 8556.5791 Y
-7839.4214 8555.4502 -7838.2417 8553.7021 Y
-7839.4937 8553.8125 -7840.7246 8556.876 Y
-7841.4976 8561.6152 -7842.3511 8558.4268 Y
-7843.5776 8556.1904 -7844.769 8555.0098 -7845.814 8554.4229 C
-7846.2026 8553.0635 -7846.4858 8552.2393 Y
-7846.7002 8551.4727 -7847.0337 8550.8486 -7847.4487 8550.3369 C
-7847.3799 8550.5127 -7847.3174 8550.6982 -7847.2632 8550.8916 C
-7841.3022 8568.2588 -7846.4858 8574.9971 V
-7853.2246 8584.5869 -7857.3721 8584.5869 V
-7860.9663 8584.6514 L
-7865.1138 8584.6514 -7871.853 8575.0615 Y
-7871.9038 8574.9961 -7871.9463 8574.9219 -7871.9961 8574.8516 C
-7871.7378 8575.4141 -7871.437 8575.9404 -7871.0752 8576.4092 C
-7864.3359 8586 -7860.189 8586 V
-7856.5942 8585.9346 L
-7852.4482 8585.9346 -7845.709 8576.3447 Y
-7843.5801 8573.5771 -7843.3306 8569.0176 -7843.7769 8564.6055 C
-7843.6553 8564.5752 -7843.5698 8564.5684 Y
-7842.0112 8562.6475 -7842.7598 8570.5244 Y
-7843.4746 8573.3789 -7841.7026 8574.2402 Y
-7840.9351 8575.0186 -7837.9946 8574.3428 Y
-7837.9136 8573.7256 -7836.4434 8573.5811 Y
-7835.7446 8573.0449 -7833.8921 8573.2881 Y
-7835.5024 8571.5771 -7837.9082 8572.9521 Y
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7819.187 8586 L
-7819.187 8521.9023 L
-7884 8521.9023 L
-7884 8586 L
nu0 O
0 g
-7849.6978 8544.4297 m
-7851.6094 8521.9023 L
-7853.5215 8544.4297 L
-7852.9033 8544.3066 -7852.2642 8544.2402 -7851.6094 8544.2402 c
-7850.9551 8544.2402 -7850.3159 8544.3066 -7849.6978 8544.4297 C
f-7861.2402 8552.3975 m
-7884 8554.3301 L
-7861.1138 8556.2734 L
-7861.2856 8555.5469 -7861.3848 8554.793 -7861.3848 8554.0156 c
-7861.3848 8553.4629 -7861.3281 8552.9248 -7861.2402 8552.3975 C
f-7856.519 8545.5723 m
-7870.1626 8536.8047 L
-7860.2153 8549.377 L
-7859.3574 8547.791 -7858.0718 8546.4766 -7856.519 8545.5723 C
f-7853.481 8563.6074 m
-7851.5786 8586 L
-7849.6768 8563.5967 L
-7850.3018 8563.7227 -7850.9473 8563.791 -7851.6094 8563.791 c
-7852.25 8563.791 -7852.873 8563.7246 -7853.481 8563.6074 C
f-7841.9609 8555.5068 m
-7819.187 8553.5732 L
-7842.083 8551.6289 L
-7842.083 8551.8506 L
-7841.9258 8552.5488 -7841.834 8553.2695 -7841.834 8554.0156 c
-7841.834 8554.5234 -7841.8848 8555.0195 -7841.9609 8555.5068 C
f-7860.1138 8558.8262 m
-7870.1641 8571.5293 L
-7856.2778 8562.6055 L
-7857.8823 8561.7305 -7859.2114 8560.416 -7860.1138 8558.8262 C
f-7842.9961 8549.3945 m
-7832.875 8536.6055 L
-7846.7666 8545.5313 L
-7845.1768 8546.4414 -7843.8633 8547.7793 -7842.9961 8549.3945 C
f-7846.6895 8562.4512 m
-7832.873 8571.3281 L
-7842.9658 8558.5732 L
-7843.8198 8560.1895 -7845.1152 8561.5313 -7846.6895 8562.4512 C
f-7842.8887 8558.6133 m
-7842.3862 8557.6641 -7842.043 8556.6211 -7841.875 8555.5195 c
-7841.7993 8555.0293 -7841.748 8554.5273 -7841.748 8554.0156 c
-7841.748 8553.2637 -7841.8398 8552.5352 -7841.998 8551.8311 c
-7842.1958 8550.957 -7842.5049 8550.124 -7842.918 8549.3545 c
-7843.7954 8547.7246 -7845.1191 8546.374 -7846.7241 8545.4561 c
-7847.6294 8544.9375 -7848.6226 8544.5537 -7849.6802 8544.3457 c
-7850.3047 8544.2207 -7850.9497 8544.1523 -7851.6094 8544.1523 c
-7852.2695 8544.1523 -7852.915 8544.2207 -7853.5391 8544.3457 c
-7854.623 8544.5605 -7855.6382 8544.957 -7856.5625 8545.4961 c
-7858.1313 8546.4102 -7859.4282 8547.7363 -7860.291 8549.335 c
-7860.7969 8550.2695 -7861.145 8551.2969 -7861.3262 8552.3828 c
-7861.415 8552.916 -7861.4727 8553.459 -7861.4727 8554.0156 c
-7861.4727 8554.8008 -7861.3711 8555.5605 -7861.1978 8556.293 c
-7860.981 8557.207 -7860.6406 8558.0732 -7860.187 8558.8701 c
-7859.2793 8560.4727 -7857.939 8561.8008 -7856.3174 8562.6826 c
-7855.4487 8563.1553 -7854.5 8563.498 -7853.4961 8563.6934 c
-7852.8848 8563.8115 -7852.2554 8563.8779 -7851.6094 8563.8779 c
-7850.9414 8563.8779 -7850.29 8563.8086 -7849.6602 8563.6826 c
-7848.5786 8563.4668 -7847.5664 8563.0654 -7846.6455 8562.5273 c
-7845.0566 8561.5977 -7843.751 8560.2441 -7842.8887 8558.6133 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7874.75 8587 m
-7874.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7874.75 8587 L
nuu0 Ap
0 O
1 g
-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 c
-7877.897 8566.9736 -7881.0898 8565 -7884.75 8565 C
-7884.75 8585 L
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 c
-7881.9121 8584.7754 -7880.1807 8584.0645 -7878.7441 8582.9824 c
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 c
f0 R
0 G
1 J 1 j 0.5 w-7884.75 8565.3174 m
-7881.7207 8566.2744 -7878.8926 8567.9326 -7876.1543 8569.9072 C
S-7884.75 8570.9512 m
-7881.5991 8573.3564 -7878.543 8576.0869 -7875.4058 8578.5361 C
S-7878.7441 8582.9824 m
-7880.8105 8581.8916 -7882.7993 8580.5342 -7884.75 8579.043 C
S-7883.8018 8584.9521 m
-7884.1191 8584.8682 -7884.4375 8584.7852 -7884.75 8584.6865 C
S-7878.7441 8582.9824 m
-7880.1807 8584.0645 -7881.9121 8584.7744 -7883.8018 8584.9521 C
S-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 C
S-7884.75 8585 m
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 C
S-7878.7441 8582.9824 m
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 C
S-7876.1543 8569.9072 m
-7877.8975 8566.9736 -7881.0898 8565 -7884.75 8565 C
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884.0254 8586.0264 m
-7828.0542 8586.0264 L
-7828.0542 8524.5342 L
-7884.0254 8524.5342 L
-7884.0254 8586.0264 L
nuu0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7857.5991 8562.7217 m
-7857.3594 8573.5215 -7862.8794 8583.8398 v
-7862.4009 8586 -7860.959 8586 v
-7861.2002 8582.6406 -7860.2393 8582.1611 v
-7855.9199 8570.1602 -7856.6382 8562.2402 v
-7857.5991 8562.7217 l
b-7857.5991 8562.7217 m
-7859.2793 8568 -7871.0391 8569.2012 v
-7875.3594 8569.6807 -7875.5991 8571.1211 v
-7869.1206 8561.5195 -7868.1602 8561.7607 v
-7881.3594 8556.001 -7884 8550.7197 v
-7878.959 8553.6006 -7875.5991 8551.4404 v
-7867.6802 8551.2012 -7862.6406 8553.3613 v
-7858.8008 8555.2813 -7866.7202 8539.2012 v
-7862.8794 8550.9609 -7859.2793 8524.5605 v
-7858.3198 8529.8408 -7856.8799 8531.2813 v
-7850.8799 8538.9609 -7851.8398 8541.1211 v
-7852.3198 8544.9609 -7847.7598 8538.7207 v
-7848 8548.3213 -7850.4009 8551.6807 v
-7852.5591 8555.2813 -7846.5591 8553.1211 v
-7840.5591 8551.2012 -7835.2793 8552.8809 v
-7829.7598 8554.3203 -7828.0801 8551.4404 v
-7839.8398 8563.9209 -7845.5991 8563.6807 v
-7843.9194 8567.2813 l
-7841.519 8572.0811 -7842 8573.2813 v
-7857.2681 8563.8828 -7857.5991 8562.7217 v
b-7857.5991 8562.7217 m
-7854.959 8544.2402 -7857.5991 8536.5605 v
-7859.998 8526.001 -7859.2793 8524.5605 v
S-7856.1602 8551.4404 m
-7850.1602 8546.6406 -7848.959 8541.3604 v
S-7856.1602 8550.7197 m
-7865.0391 8543.041 -7866.7202 8539.2012 v
S-7828.0801 8551.4404 m
-7829.2793 8553.6006 -7857.3594 8561.7607 y
-7862.4009 8556.2422 -7873.9199 8553.8408 v
-7881.5986 8552.8809 -7884 8550.7197 v
S-7874.6382 8569.6807 m
-7863.1191 8560.5615 -7857.3594 8561.7607 y
-7843.1992 8568 -7842 8573.2813 v
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.8496 8585.9961 m
-7833.96 8585.9961 L
-7833.96 8534.9258 L
-7883.8496 8534.9258 L
-7883.8496 8585.9961 L
nu0 O
0.025 0.1 0.475 0 k
-7862.1504 8553.9043 m
-7864.4766 8552.8125 -7866.6914 8552.4434 -7868.373 8552.9238 c
-7869.0518 8553.1172 -7869.645 8553.4473 -7870.123 8553.9238 c
-7870.6006 8554.4023 -7870.9297 8554.9951 -7871.123 8555.6729 c
-7872.0088 8558.7715 -7870.0103 8563.6777 -7865.9233 8567.7666 c
-7861.834 8571.8535 -7856.9297 8573.8516 -7853.8286 8572.9668 c
-7853.1519 8572.7715 -7852.5586 8572.4424 -7852.0806 8571.9658 c
-7851.603 8571.4883 -7851.2754 8570.8955 -7851.082 8570.2168 c
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.582 8561.21 -7854.791 8559.6133 -7856.2793 8558.123 c
-7858.1504 8556.2539 -7860.1914 8554.8242 -7862.1504 8553.9043 c
fu0.0035 0.014 0.0665 0 k
-7861.2183 8552.9727 m
-7863.8306 8552.0215 -7866.3975 8551.9688 -7868.373 8552.9238 C
-7866.6914 8552.4434 -7864.4766 8552.8125 -7862.1504 8553.9043 c
-7861.6191 8554.1543 -7861.0806 8554.4434 -7860.543 8554.7676 C
-7858.8984 8554.0537 L
-7859.667 8553.6172 -7860.4434 8553.2539 -7861.2183 8552.9727 c
f0.015 0.06 0.285 0 k
-7858.8984 8554.0537 m
-7860.543 8554.7676 L
-7859.0962 8555.6348 -7857.6426 8556.7607 -7856.2793 8558.123 c
-7856.1538 8558.25 -7856.0327 8558.3779 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7856.3706 8555.7236 -7857.6191 8554.7813 -7858.8984 8554.0537 C
fUu0.039 0.156 0.741 0 k
-7849.687 8541.4043 m
-7849.9746 8541.6914 -7861.2183 8552.9727 Y
-7860.4434 8553.2539 -7859.667 8553.6172 -7858.8984 8554.0537 C
-7845.4146 8540.5703 L
-7847.061 8540.0996 -7848.6406 8540.3555 -7849.687 8541.4043 c
f0.025 0.1 0.475 0 k
-7845.4146 8540.5703 m
-7858.8984 8554.0537 L
-7857.584 8554.8027 -7856.2969 8555.7754 -7855.1143 8556.957 c
-7855.084 8556.9863 -7855.0586 8557.0156 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7841.5264 8543.1328 -7841.7202 8542.9141 -7841.9302 8542.7012 c
-7843.0103 8541.623 -7844.2305 8540.9082 -7845.4146 8540.5703 C
fUu0.0115 0.046 0.2185 0 k
-7835.9346 8550.3926 m
-7833.5337 8547.9893 -7833.335 8544.0898 -7835.1382 8540.6973 C
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f0.015 0.06 0.285 0 k
-7843.5337 8535.5957 m
-7842.582 8534.9258 L
-7845.2046 8534.3516 -7847.8306 8534.9141 -7849.6206 8536.7061 c
-7848.1719 8535.2578 -7845.9082 8534.9307 -7843.5337 8535.5957 C
f0.0295 0.118 0.5605 0 k
-7843.5337 8535.5957 m
-7845.9082 8534.9307 -7848.1719 8535.2578 -7849.6206 8536.7061 c
-7851.019 8538.1055 -7851.3706 8540.2637 -7850.7954 8542.5469 C
-7848.8672 8539.5449 -7845.4082 8540.5537 V
-7843.585 8535.6309 L
-7843.5337 8535.5957 L
f*u
1 D
0.048 0.192 0.912 0 k
-7835.9346 8550.3926 m
-7837.2817 8551.7383 -7839.332 8552.1133 -7841.5234 8551.627 C
-7851.6714 8561.7734 L
-7851.7695 8561.5684 -7851.7695 8561.5684 -7851.6714 8561.7734 c
-7850.2246 8564.8145 -7849.9702 8567.916 -7851.082 8570.2168 C
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.5054 8561.3438 -7854.5918 8559.8848 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7855.1816 8556.8945 -7855.1465 8556.9238 -7855.1143 8556.957 c
-7855.084 8556.9883 -7855.0566 8557.0176 -7855.0273 8557.0469 c
-7855.0278 8557.0469 -7855.0278 8557.0469 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f*U
0 D
0.0215 0.086 0.4085 0 k
-7842.582 8534.9258 m
-7843.5337 8535.5957 L
-7841.6846 8536.1113 -7839.7656 8537.2285 -7838.1138 8538.8828 c
-7837.4063 8539.5889 -7836.7998 8540.3418 -7836.2954 8541.1182 C
-7835.1382 8540.6973 L
-7835.6553 8539.7246 -7836.3374 8538.793 -7837.1802 8537.9512 c
-7838.7695 8536.3594 -7840.6758 8535.3428 -7842.582 8534.9258 C
f0.0205 0.082 0.3895 0 k
-7836.2954 8541.1182 m
-7836.7998 8540.3418 -7837.4063 8539.5889 -7838.1138 8538.8828 c
-7839.7656 8537.2285 -7841.6846 8536.1113 -7843.5337 8535.5957 C
-7843.585 8535.6309 L
-7845.4082 8540.5537 L
-7844.2114 8540.9219 -7842.9878 8541.6436 -7841.9302 8542.7012 c
-7841.7202 8542.9141 -7841.5264 8543.1328 -7841.3408 8543.3574 C
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
fUu0.445 0.356 0.267 0 k
-7883.8496 8585.9961 m
-7861.957 8562.9688 L
-7862.2007 8562.6494 -7862.5752 8562.6133 -7862.8887 8562.6592 C
-7867.1802 8567.2891 -7878.3145 8579.4561 -7882.7266 8584.2793 C
-7883.5649 8585.3516 -7884 8585.9932 -7883.8496 8585.9961 C
f0.15 0.12 0.09 0 k
-7883.834 8585.9961 m
-7882.6606 8585.7031 -7861.6934 8564.0029 Y
-7861.6934 8563.502 -7861.7993 8563.1758 -7861.957 8562.9688 C
-7883.8496 8585.9961 L
-7883.8442 8585.9961 -7883.8418 8586 -7883.834 8585.9961 c
f0.2 0.16 0.12 0 k
-7882.7266 8584.2793 m
-7878.3145 8579.4561 -7867.1802 8567.2891 -7862.8887 8562.6592 C
-7863.2002 8562.7041 -7863.4526 8562.8301 Y
-7864.603 8563.1328 -7878.5742 8578.9619 -7882.7266 8584.2793 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7882.9502 8585.2324 m
-7833.0391 8585.2324 L
-7833.0391 8521.1152 L
-7882.9502 8521.1152 L
-7882.9502 8585.2324 L
nu0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7833.2358 8521.1152 m
-7833.6064 8521.248 -7833.9858 8521.2832 -7834.3833 8521.2031 c
-7834.4863 8521.168 l
-7834.5254 8521.1602 -7834.5703 8521.1787 -7834.6025 8521.1992 c
-7834.9434 8521.3926 l
-7838.7129 8523.2959 -7842.0962 8525.8965 -7844.5 8529.4473 c
-7845.9634 8531.5918 -7847.123 8533.8789 -7848.7993 8535.8564 c
-7849.1729 8536.209 -7849.1758 8536.7725 -7848.834 8537.1309 c
-7848.4951 8537.501 -7847.918 8537.5078 -7847.561 8537.165 c
-7847.4038 8537.21 l
-7847.2642 8537.1289 -7847.0742 8537.0703 -7847.0234 8536.957 c
-7845.853 8534.2031 -7845.1895 8531.5137 -7843.4336 8529.1387 c
-7841.1719 8526.0947 -7838.1777 8523.9941 -7835.0298 8522.0234 c
-7834.3672 8521.6055 L
-7834.4966 8521.6348 L
-7833.7695 8521.6426 l
-7833.791 8521.6113 -7833.8008 8521.5957 -7833.8223 8521.5645 C
-7833.6064 8521.5234 -7833.377 8521.4746 -7833.1626 8521.4336 c
-7833.0762 8521.4238 -7833.0186 8521.3389 -7833.0391 8521.2383 c
-7833.0503 8521.1523 -7833.1382 8521.1084 -7833.2358 8521.1152 c
-7833.2358 8521.1152 l
b-7849.2222 8534.9951 m
-7849.5742 8534.8066 -7849.9658 8534.6719 -7850.248 8534.3887 c
-7856.4521 8528.1719 -7866.6802 8527.2734 -7874.0488 8533.6855 C
-7874.1582 8533.7813 -7874.1582 8533.957 -7874.063 8534.0645 C
-7871.0527 8532.9434 -7862.8838 8534.375 -7859.3223 8537.4121 C
-7859.2534 8537.4668 -7859.1465 8537.4531 -7859.1055 8537.3711 C
-7859.0503 8537.3047 -7859.0664 8537.1953 -7859.1328 8537.1563 C
-7862.5625 8534.0859 -7867.0674 8532.29 -7871.6729 8532.748 C
-7868.8535 8531.1855 -7865.6313 8530.4941 -7862.3984 8530.6885 c
-7857.7144 8530.9717 -7853.4634 8533.1191 -7849.3711 8535.2793 c
-7849.291 8535.3193 -7849.1978 8535.293 -7849.1553 8535.2109 C
-7849.1016 8535.1309 -7849.1426 8535.0352 -7849.2222 8534.9951 c
b-7858.647 8536.3359 m
-7860.2266 8540.3613 -7862.3911 8544.3203 -7865.8018 8547.0762 c
-7865.9648 8547.2119 -7865.9946 8547.4492 -7865.8711 8547.6055 c
-7865.7344 8547.7676 -7865.5049 8547.7793 -7865.3481 8547.6563 c
-7861.123 8545.5967 -7858.1904 8541.1309 -7858.1626 8536.4014 c
-7858.1626 8536.4014 l
-7858.1328 8536.2676 -7858.2354 8536.1348 -7858.3633 8536.1221 c
-7858.5039 8536.1055 -7858.6318 8536.1973 -7858.647 8536.3359 c
-7858.647 8536.3359 l
b-7852.9414 8541.0176 m
-7853.042 8541.1816 -7853.1152 8541.3838 -7853.2617 8541.4824 c
-7856.0806 8543.3906 -7858.9785 8544.6309 -7861.8848 8546.1328 c
-7862.0503 8546.209 -7862.1118 8546.418 -7862.0313 8546.5703 c
-7861.9512 8546.7227 -7861.7559 8546.7793 -7861.5898 8546.7041 c
-7858.439 8545.3232 -7854.313 8544.5 -7852.6729 8541.1797 c
-7852.6289 8541.1113 -7852.6455 8541.0146 -7852.7266 8540.9648 c
-7852.7959 8540.9199 -7852.897 8540.9492 -7852.9414 8541.0176 c
-7852.9414 8541.0176 l
b-7852.6602 8541.918 m
-7852.4438 8542.4297 -7852.1431 8542.8896 -7852.0503 8543.4355 c
-7851.2183 8548.2773 -7851.1152 8553.042 -7852.248 8557.6875 c
-7852.248 8557.6875 l
-7852.3418 8557.9531 -7852.2114 8558.2441 -7851.9438 8558.3389 c
-7851.6777 8558.4336 -7851.3882 8558.3125 -7851.2935 8558.0479 c
-7849.293 8552.8115 -7849.897 8546.7373 -7852.3711 8541.7832 c
-7852.4063 8541.7002 -7852.498 8541.6689 -7852.582 8541.6914 c
-7852.6641 8541.7275 -7852.6978 8541.835 -7852.6602 8541.918 c
-7852.6602 8541.918 l
b-7851.5352 8557.5938 m
-7848.8984 8555.2275 -7846.6816 8552.252 -7845.853 8548.7363 c
-7845.853 8548.7363 l
-7845.7246 8548.1816 -7846.0742 8547.623 -7846.6416 8547.4902 c
-7847.1992 8547.375 -7847.7578 8547.7246 -7847.8862 8548.2793 c
-7848.5649 8551.5313 -7849.8711 8554.6729 -7851.7954 8557.3867 c
-7851.7954 8557.3867 l
-7851.8462 8557.4551 -7851.834 8557.5576 -7851.7695 8557.6201 c
-7851.6992 8557.6699 -7851.5977 8557.6582 -7851.5352 8557.5938 c
-7851.5352 8557.5938 l
b-7836.3711 8550.1826 m
-7837.7114 8545.8301 -7840.2598 8542.0693 -7843.689 8539.1533 C
-7843.729 8539.0723 -7843.8242 8539.0322 -7843.9038 8539.0859 C
-7843.9863 8539.127 -7844.0122 8539.2207 -7843.9722 8539.3018 C
-7843.957 8539.7891 -7843.7144 8540.2334 -7843.4458 8540.5313 c
-7838.4063 8546.1621 -7834.9902 8554.7197 -7837.3433 8561.9551 C
-7837.0762 8556.4512 -7838.7241 8550.3008 -7842.1362 8545.6738 c
-7843.1606 8544.2695 -7844.7422 8544.1211 -7846.3081 8544.2031 C
-7846.4023 8544.1895 -7846.4834 8544.2432 -7846.4961 8544.3369 c
-7846.5098 8544.4189 -7846.4551 8544.5137 -7846.3623 8544.5254 C
-7843.1479 8545.7695 -7841.4878 8549.2246 -7840.084 8552.1943 c
-7838.415 8555.7441 -7837.7017 8559.6387 -7838.0054 8563.5 C
-7838.0454 8563.6777 -7838.1138 8565.3975 -7837.9775 8565.4102 C
-7837.8306 8565.4395 -7837.709 8565.3438 -7837.6802 8565.1943 C
-7837.645 8565.0449 -7834.6426 8555.7988 -7836.3711 8550.1826 c
b-7844.4863 8537.4912 m
-7843.3945 8533.6211 -7841.1094 8530.251 -7838.4824 8527.2383 c
-7838.3306 8527.1045 -7838.3145 8526.8867 -7838.4502 8526.7354 c
-7838.5752 8526.6006 -7838.8047 8526.582 -7838.957 8526.7178 c
-7842.3306 8529.332 -7843.4487 8533.541 -7844.7954 8537.375 c
-7844.7954 8537.375 l
-7844.8262 8537.4648 -7844.7754 8537.5586 -7844.6982 8537.5869 c
-7844.6094 8537.6191 -7844.5166 8537.5684 -7844.4863 8537.4912 c
-7844.4863 8537.4912 l
b-7838.5313 8562.1094 m
-7838.5991 8562.0566 -7838.707 8562.083 -7838.748 8562.1504 C
-7838.9634 8562.4746 -7840.6914 8564.5195 -7841.3926 8565.1406 c
-7846.1719 8569.3945 -7849.5137 8573.9609 -7857.5391 8577.7227 c
-7864.4512 8580.9639 -7867.1113 8583.5957 -7874.3862 8581.8262 c
-7877.687 8581.0293 -7879.0313 8580.5313 -7880.4351 8575.4551 C
-7881.9473 8569.2988 -7880.8672 8571.7832 -7881.084 8564.4385 c
-7881.2222 8559.6973 -7884 8548.4551 -7871.5254 8534.2598 C
-7871.4199 8534.1484 -7871.4336 8533.9961 -7871.5337 8533.9072 C
-7871.6328 8533.8027 -7871.7959 8533.8164 -7871.8862 8533.916 C
-7877.5786 8538.7168 -7881.0234 8545.6582 -7882.3145 8552.9424 c
-7883.2871 8558.4668 -7882.9199 8563.25 -7882.666 8569.6367 c
-7882.5688 8572.0938 -7883.6855 8579.0723 -7878.9102 8583.0625 c
-7875.3926 8586 -7870.3911 8585.5469 -7866.3545 8584.1563 c
-7860.6992 8582.2119 -7855.9727 8579.1465 -7850.8711 8575.6094 c
-7847.2656 8573.125 -7839.2881 8563.2852 -7838.4785 8562.3262 C
-7838.4351 8562.2588 -7838.4502 8562.1504 -7838.5313 8562.1094 C
b-7873.0503 8549.3057 m
-7872.168 8548.5029 -7871.7017 8549.8457 -7871.4297 8550.6016 c
-7871.1626 8551.3574 -7870.189 8551.25 -7870.5127 8551.5732 c
-7870.8369 8551.8975 -7870.8369 8551.9521 -7871.3232 8551.5195 c
-7871.8086 8551.0879 -7871.8086 8551.7363 -7872.5649 8551.25 c
-7873.3198 8550.7627 -7873.645 8549.8457 -7873.0503 8549.3057 c
b-7865.6519 8553.9492 m
-7865.3657 8553.5918 -7864.6802 8553.5723 -7864.4648 8553.8945 c
-7864.25 8554.2197 -7863.3306 8554.2734 -7863.4937 8554.5967 c
-7863.6543 8554.9219 -7863.6016 8555.1387 -7864.0874 8554.9219 c
-7864.5737 8554.7051 -7864.4121 8555.2998 -7864.897 8555.084 c
-7865.3833 8554.8672 -7865.8687 8554.2197 -7865.6519 8553.9492 c
b-7857.6074 8559.0791 m
-7857.1206 8558.7559 -7855.8794 8559.5117 -7856.4727 8559.5117 c
-7857.0674 8559.5117 -7856.311 8560.2676 -7856.8521 8560.4834 c
-7857.3906 8560.6992 -7857.2832 8560.4297 -7857.6074 8560.6445 c
-7857.9297 8560.8613 -7858.3633 8561.2393 -7858.5239 8560.4297 c
-7858.6855 8559.6191 -7858.3633 8559.6191 -7857.9849 8559.3496 c
-7857.6074 8559.0791 -7857.6074 8559.0791 y
b-7872.2402 8559.3496 m
-7871.1074 8559.2422 -7871.8633 8559.998 -7871.269 8560.4834 c
-7870.6738 8560.9697 -7869.918 8561.6172 -7870.729 8561.4004 c
-7871.5391 8561.1855 -7872.9961 8561.6719 -7872.9434 8560.5381 c
-7872.8887 8559.4033 -7872.6328 8559.3867 -7872.2402 8559.3496 c
b-7866.5703 8567.6113 m
-7866.1016 8567.3438 -7866.6802 8567.7197 -7866.0303 8567.6113 c
-7865.3833 8567.5039 -7864.7886 8567.6113 -7865.2207 8567.8281 c
-7865.6519 8568.0439 -7866.3008 8568.1523 -7866.4634 8567.9893 c
-7866.625 8567.8281 -7866.9473 8567.8281 -7866.5703 8567.6113 c
b-7857.0674 8567.1797 m
-7857.4785 8566.1797 -7856.0962 8566.4238 -7855.4473 8566.7461 c
-7854.7998 8567.0723 -7853.8262 8566.4775 -7854.4209 8566.9102 c
-7855.0137 8567.3418 -7854.7998 8566.9102 -7855.3926 8567.2334 c
-7855.9873 8567.5566 -7856.6895 8568.0977 -7857.0674 8567.1797 c
b-7872.6738 8573.0664 m
-7872.7222 8572.0752 -7871.8086 8572.957 -7871.269 8573.0117 c
-7870.729 8573.0664 -7870.0801 8573.0664 -7870.2432 8573.2813 c
-7870.4038 8573.498 -7870.459 8573.498 -7871.1626 8573.7129 c
-7871.8633 8573.9297 -7872.6191 8574.1445 -7872.6738 8573.0664 c
b-7873.1582 8567.6113 m
-7874.0664 8567.9746 -7874.293 8567.8809 -7874.5625 8568.2051 c
-7874.834 8568.5293 -7875.1558 8569.2314 -7875.5352 8568.0977 c
-7875.9121 8566.9629 -7875.4282 8565.7764 -7875.0479 8565.9375 c
-7874.6714 8566.0996 -7874.293 8566.7461 -7873.8618 8566.9629 c
-7873.4297 8567.1797 -7872.6191 8567.3945 -7873.1582 8567.6113 c
bUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7803 8586 L
-7803 8481 L
-7884 8481 L
-7884 8586 L
nuuu0 O
0 0 0 1 k
-7865.8057 8498.4258 m
-7866.0742 8496.6621 -7867.1602 8495.291 -7868.5239 8495.3965 c
-7869.8862 8495.502 -7870.707 8497.0234 -7870.7432 8498.8066 c
-7870.748 8499.0693 -7870.6743 8500.2441 -7870.6304 8500.4775 C
-7870.6382 8500.582 -7870.6191 8500.6738 -7870.6104 8500.7803 c
-7870.5142 8502.0254 -7869.3574 8503.3604 -7867.9414 8503.25 c
-7866.5249 8503.1406 -7865.4897 8501.8613 -7865.6367 8500.4727 c
-7865.644 8500.4072 -7865.6958 8499.626 -7865.707 8499.5625 C
-7865.6816 8499.2852 -7865.7598 8498.7256 -7865.8057 8498.4258 c
f-7876.2646 8507.7334 m
-7876.9946 8515.916 -7871.5015 8515.1191 v
-7868.3682 8514.0186 -7869.4414 8511.1211 v
-7869.6426 8509.752 -7871.7847 8508.498 v
-7872.146 8508.25 -7872.7632 8507.1016 v
-7873.1294 8505.5977 -7874.5186 8505.2979 v
-7876.0762 8505.251 -7876.2646 8507.7334 v
f-7850.7646 8516.4971 m
F-7850.0762 8514.3408 m
-7850.7847 8513.1934 -7853.8848 8513.6279 Y
-7854.811 8513.6885 -7855.3799 8513.1113 Y
-7857.8394 8509.0918 -7861.0386 8509.8857 -7861.4082 8509.9932 C
-7861.4097 8509.9863 L
-7864.999 8510.6045 -7865.2666 8515.6035 V
-7865.4912 8516.3828 -7866.335 8516.7695 V
-7869.2695 8517.8613 -7869.3481 8519.208 V
-7869.8999 8521.1152 -7867.6006 8521.7422 V
-7865.6792 8522.2568 -7863.7886 8519.8945 V
-7862.6113 8518.6797 -7859.5762 8517.9395 V
-7859.5728 8517.9531 L
-7856.3594 8517.0459 -7854.6392 8517.5889 Y
-7851.8521 8518.7676 -7850.4063 8517.4014 Y
-7848.6826 8515.7559 -7850.0762 8514.3408 Y
f-7863.9834 8497.8789 m
-7864.5854 8496.2002 -7864.2822 8494.4775 -7863.0327 8493.9229 c
-7861.7842 8493.3672 -7860.3384 8494.3164 -7859.4585 8495.8672 c
-7859.3286 8496.0957 -7858.8359 8497.165 -7858.7632 8497.3906 C
-7858.7065 8497.4785 -7858.6792 8497.5684 -7858.6362 8497.667 c
-7858.1289 8498.8086 -7858.5122 8500.5303 -7859.8105 8501.1074 c
-7861.1089 8501.6855 -7862.6279 8501.0527 -7863.1582 8499.7617 c
-7863.1831 8499.7002 -7863.5078 8498.9883 -7863.5298 8498.9268 C
-7863.6831 8498.6963 -7863.8809 8498.166 -7863.9834 8497.8789 c
f-7849.7129 8500.9316 m
-7845.1802 8507.7822 -7850.3911 8509.6943 v
-7853.6714 8510.2168 -7854.103 8507.1572 v
-7854.5786 8505.8564 -7853.29 8503.7354 v
-7853.0903 8503.3447 -7853.0938 8502.04 v
-7853.4858 8500.5449 -7852.4082 8499.6182 v
-7851.0591 8498.8359 -7849.7129 8500.9316 v
fUu-7824.7358 8550.1074 m
-7824.3687 8548.3623 -7824.9048 8546.6963 -7826.2183 8546.3164 c
-7827.5322 8545.9375 -7828.8345 8547.0752 -7829.4937 8548.7324 c
-7829.5903 8548.9775 -7829.9326 8550.1025 -7829.9746 8550.3369 C
-7830.0176 8550.4326 -7830.0322 8550.5244 -7830.0625 8550.6279 c
-7830.4087 8551.8271 -7829.7935 8553.4805 -7828.4282 8553.875 c
-7827.063 8554.2695 -7825.645 8553.4365 -7825.2969 8552.085 c
-7825.2793 8552.0205 -7825.0552 8551.2705 -7825.0425 8551.207 C
-7824.9214 8550.9551 -7824.7983 8550.4053 -7824.7358 8550.1074 c
f-7838.2705 8554.6172 m
-7841.8242 8562.0244 -7836.3999 8563.2061 v
-7833.0801 8563.2754 -7833.0688 8560.1846 v
-7832.7778 8558.8311 -7834.3433 8556.9072 v
-7834.5942 8556.5459 -7834.7695 8555.2539 v
-7834.5854 8553.7188 -7835.7793 8552.9492 v
-7837.2222 8552.3594 -7838.2705 8554.6172 v
f-7817.4648 8571.7695 m
F-7816.063 8569.9912 m
-7816.3247 8568.6689 -7819.3799 8567.9883 Y
-7820.27 8567.7197 -7820.5986 8566.9795 Y
-7821.4922 8562.3535 -7824.7666 8561.9746 -7825.1494 8561.9453 C
-7825.1494 8561.9395 L
-7828.7271 8561.2588 -7830.731 8565.8467 V
-7831.2153 8566.4961 -7832.1416 8566.5625 V
-7835.272 8566.5557 -7835.8169 8567.7891 V
-7837.0039 8569.3809 -7835.0713 8570.7764 V
-7833.4526 8571.9316 -7830.853 8570.3818 V
-7829.3242 8569.6582 -7826.2222 8570.0293 V
-7826.2231 8570.042 L
-7822.896 8570.3213 -7821.4766 8571.4326 Y
-7819.2793 8573.5146 -7817.4463 8572.7432 Y
-7815.2554 8571.8057 -7816.063 8569.9912 Y
f-7822.8374 8550.2354 m
-7822.813 8548.4512 -7821.9258 8546.9453 -7820.5601 8546.8633 c
-7819.1943 8546.7803 -7818.1743 8548.1768 -7817.895 8549.9385 c
-7817.854 8550.1973 -7817.7666 8551.3711 -7817.7778 8551.6094 C
-7817.7559 8551.7109 -7817.7617 8551.8037 -7817.7559 8551.9121 c
-7817.6807 8553.1592 -7818.644 8554.6367 -7820.0625 8554.7217 c
-7821.4814 8554.8066 -7822.6826 8553.6826 -7822.7246 8552.2871 c
-7822.7271 8552.2217 -7822.7822 8551.4404 -7822.7798 8551.375 C
-7822.8433 8551.1045 -7822.8423 8550.54 -7822.8374 8550.2354 c
f-7811.0186 8557.5625 m
-7809.1777 8565.5684 -7814.7271 8565.5303 v
-7817.9834 8564.8691 -7817.3154 8561.8516 v
-7817.3032 8560.4668 -7815.353 8558.9326 v
-7815.0278 8558.6377 -7814.5742 8557.415 v
-7814.417 8555.876 -7813.083 8555.3877 v
-7811.5454 8555.1279 -7811.0186 8557.5625 v
fUU1 Ap
-7884 8586 m
-7884 8481 L
-7803 8481 L
-7803 8586 L
-7884 8586 L
nUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8543.918 m
-7885 8587 L
-7798.2217 8587 L
-7798.2217 8543.918 L
-7885 8543.918 L
nuu0 O
0 0 0 1 k
-7825.2217 8573.2363 m
-7825.2217 8581.0742 L
-7813.2217 8574.1445 L
-7801.2217 8567.2168 L
-7813.2217 8560.2891 L
-7825.2217 8553.3613 L
-7825.2217 8561.4824 L
-7883.9351 8547.7168 L
-7870.9878 8566.8027 L
-7885 8587 L
-7825.2217 8573.2363 L
f0 1 1 0.1 k
0 R
0 0 0 1 K
-7823.2217 8570.2363 m
-7823.2217 8578.0742 L
-7811.2217 8571.1445 L
-7799.2217 8564.2168 L
-7811.2217 8557.2891 L
-7823.2217 8550.3613 L
-7823.2217 8558.4824 L
-7881.9351 8544.7168 L
-7867.2754 8564.3594 L
-7881.9351 8584 L
-7823.2217 8570.2363 L
bUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7726.3994 8587 m
-7726.3994 8573.4199 L
-7885 8573.4199 L
-7885 8587 L
-7726.3994 8587 L
nuu0 O
0.285 0.228 0.171 0 k
-7741.0786 8585.4844 m
-7741.043 8586.6895 L
-7727.5103 8587.5176 -7726.8418 8586.2822 v
-7726.7441 8586.1016 -7726.647 8585.7148 -7726.561 8585.1934 C
-7728.584 8585.8242 -7738.291 8585.5713 -7741.0786 8585.4844 C
f0.44 0.352 0.264 0 k
-7741.4063 8574.0234 m
-7741.3711 8575.2676 L
-7738.4912 8575.0488 -7728.1914 8574.3164 -7726.543 8574.8652 C
-7726.7031 8574.2188 -7726.9199 8573.7646 -7727.2046 8573.6152 c
-7728.8306 8572.7656 -7741.4063 8574.0234 Y
f0.145 0.116 0.087 0 k
-7741.3711 8575.2676 m
-7741.0786 8585.4844 L
-7738.291 8585.5713 -7728.584 8585.8242 -7726.561 8585.1934 C
-7726.1519 8582.7773 -7725.9258 8577.3604 -7726.543 8574.8652 C
-7728.1914 8574.3164 -7738.4912 8575.0488 -7741.3711 8575.2676 C
fUu0.155 0.124 0.093 0 k
-7766.9375 8579.2734 m
-7765.897 8579.6563 L
-7747.0728 8575.1465 L
-7747.481 8574.3145 L
-7766.3633 8576.7246 L
-7767.252 8577.0059 L
-7767.6504 8576.8936 -7768.1934 8576.8242 V
-7767.6094 8577.2373 -7767.1426 8578.1406 -7766.9375 8579.2734 C
fu0.085 0.068 0.051 0 k
-7771.7993 8583.666 m
-7772.5977 8583.7217 -7769.749 8583.6641 Y
-7770.3481 8583.0176 -7770.771 8581.8203 -7770.8105 8580.4375 c
-7770.8169 8580.2246 -7770.8105 8580.0176 -7770.7993 8579.8135 C
-7771.041 8579.707 -7771.0918 8579.7734 -7771.6289 8579.5645 C
-7771 8583.6113 -7771.7993 8583.666 v
f0.305 0.244 0.183 0 k
-7770.3442 8576.8672 m
-7770.5527 8576.8105 -7770.4937 8578.9307 Y
-7769.4785 8579.7588 L
-7767.8359 8578.9434 L
-7766.9375 8579.2734 L
-7767.1426 8578.1406 -7767.6094 8577.2373 -7768.1934 8576.8242 C
-7768.6094 8576.7715 -7769.874 8576.7998 -7770.3442 8576.8672 C
fU0.115 0.092 0.069 0 k
-7766.9375 8579.2734 m
-7767.8359 8578.9434 L
-7769.4785 8579.7588 L
-7770.4937 8578.9307 L
-7770.793 8579.708 -7770.7993 8579.8135 V
-7769.5137 8580.3789 -7768.1831 8580.7402 -7766.8398 8580.9258 C
-7766.79 8580.7275 -7766.7842 8580.543 -7766.79 8580.3369 c
-7766.7998 8579.9717 -7766.8218 8579.6182 -7766.9375 8579.2734 C
f0.41 0.328 0.246 0 k
-7747.4512 8575.3965 m
-7749.377 8576.6426 -7758.3862 8582.0986 -7766.8398 8580.9258 C
-7766.9038 8582.0928 -7767.248 8583.0908 -7767.75 8583.6631 C
-7767.1895 8583.6621 L
-7746.7402 8586.7559 L
-7747.0366 8576.4258 L
-7747.0728 8575.1465 L
-7747.2046 8575.2373 -7747.4512 8575.3965 v
f0.395 0.316 0.237 0 k
-7770.8105 8580.4375 m
-7770.771 8581.8203 -7770.3481 8583.0176 -7769.749 8583.6641 C
-7767.6807 8583.6631 L
-7767.1782 8583.0908 -7766.8218 8582.0713 -7766.8398 8580.9258 C
-7768.1831 8580.7402 -7769.5137 8580.3789 -7770.7993 8579.8135 C
-7770.8105 8580.0176 -7770.8169 8580.2246 -7770.8105 8580.4375 c
fUu0 0 0 0.11 k
-7741.2642 8574.2012 m
-7740.2407 8574.0352 L
-7741.2642 8574.2012 L
-7741.2642 8574.2012 L
f0 0 0 0.34 k
-7747.481 8574.3145 m
-7747.0728 8575.1465 L
-7745.6714 8574.918 L
-7744.5234 8574.7314 L
-7742.6758 8574.4307 L
-7741.2642 8574.2012 L
-7740.2407 8574.0352 L
-7740.2954 8573.7168 -7740.3672 8573.498 -7740.4648 8573.4199 C
-7747.481 8574.3145 L
f0 0 0 0.32 k
-7745.8042 8579.207 m
-7746.041 8586.8613 L
-7740.7144 8587 L
-7739.7266 8583.5146 -7740.1816 8579.1543 V
-7745.8042 8579.207 L
fU0.025 0.02 0.015 0 k
-7739.3223 8576.3848 m
-7736.373 8576.9199 -7733.2402 8577.1602 -7730.3159 8576.3613 c
-7730.2856 8576.3496 -7730.2754 8576.3184 -7730.2871 8576.2969 c
-7730.2881 8576.2656 -7730.3198 8576.2559 -7730.3418 8576.2559 c
-7733.2422 8577.0645 -7736.375 8576.8242 -7739.3042 8576.2783 c
-7739.3262 8576.2793 -7739.3574 8576.291 -7739.3672 8576.3223 c
-7739.3662 8576.3438 -7739.355 8576.375 -7739.3223 8576.3848 c
-7739.3223 8576.3848 l
f-7737.8374 8575.3076 m
-7737.7295 8575.3789 -7737.6313 8575.4941 -7737.5234 8575.502 c
-7733.7886 8575.832 -7730.1631 8575.7813 -7726.4746 8575.6641 c
-7726.4526 8575.6641 -7726.4209 8575.6426 -7726.4214 8575.6211 c
-7726.4214 8575.5879 -7726.4551 8575.5684 -7726.4766 8575.5684 c
-7729.3223 8575.6816 -7732.1401 8575.6992 -7735.0039 8575.5352 c
-7735.9336 8575.4766 -7736.9082 8575.7402 -7737.7778 8575.2207 c
-7737.7993 8575.2109 -7737.8306 8575.2109 -7737.8506 8575.2334 c
-7737.8618 8575.2559 -7737.8594 8575.2871 -7737.8374 8575.3076 c
-7737.8374 8575.3076 l
f-7733.373 8577.3672 m
-7731.5098 8578.6797 -7729.3022 8579.374 -7727.1001 8579.8867 c
-7727.0679 8579.8965 -7727.0474 8579.8848 -7727.0366 8579.8535 c
-7727.0273 8579.8203 -7727.0488 8579.8008 -7727.0703 8579.79 c
-7729.2617 8579.2656 -7731.459 8578.6035 -7733.3105 8577.2803 c
-7733.3433 8577.2598 -7733.375 8577.2715 -7733.3848 8577.293 c
-7733.4058 8577.3145 -7733.3945 8577.3457 -7733.373 8577.3672 c
-7733.373 8577.3672 l
f-7738.9321 8584.0566 m
-7736.7295 8584.5703 -7734.5298 8585.0303 -7732.2798 8585.2754 c
-7732.2598 8585.2852 -7732.229 8585.2637 -7732.229 8585.2422 c
-7732.2183 8585.209 -7732.2407 8585.1777 -7732.2729 8585.1787 c
-7734.5122 8584.8809 -7736.7305 8584.5176 -7738.9126 8583.9502 c
-7738.9351 8583.9512 -7738.9673 8583.9629 -7738.9766 8583.9941 c
-7738.9751 8584.0156 -7738.9648 8584.0479 -7738.9321 8584.0566 c
-7738.9321 8584.0566 l
f-7738.439 8583.3604 m
-7736.3457 8584.1973 -7734.1016 8583.9297 -7731.9023 8583.9629 c
-7731.8706 8583.9609 -7731.8496 8583.9395 -7731.8506 8583.9082 c
-7731.8521 8583.875 -7731.873 8583.8555 -7731.8945 8583.8555 c
-7734.0928 8583.8438 -7736.3374 8584.0996 -7738.4209 8583.2529 c
-7738.4434 8583.2539 -7738.4746 8583.2656 -7738.4834 8583.2969 c
-7738.4834 8583.3184 -7738.4722 8583.3506 -7738.439 8583.3604 c
-7738.439 8583.3604 l
f-7737.707 8584.7051 m
-7736.3833 8584.752 -7735.1504 8584.5469 -7733.8271 8584.209 c
-7733.3594 8584.0996 -7732.9199 8584.2266 -7732.4609 8584.2129 c
-7731.897 8584.1973 l
-7731.874 8584.1963 -7731.8633 8584.1855 -7731.8535 8584.1738 c
-7731.834 8584.1523 -7731.8442 8584.1211 -7731.8662 8584.0996 c
-7732.0625 8583.9453 l
-7732.0742 8583.9453 -7732.085 8583.9355 -7732.0962 8583.9355 c
-7732.5 8583.9473 l
-7733.9551 8584.1914 -7735.457 8584.6719 -7736.8926 8584.0742 c
-7736.9258 8584.0645 -7736.957 8584.0859 -7736.9673 8584.1074 c
-7736.9673 8584.1396 -7736.9551 8584.1602 -7736.9336 8584.1709 c
-7735.647 8584.6992 -7734.1714 8584.4756 -7732.8818 8584.0547 c
-7732.0918 8584.043 L
-7732.124 8584.0332 L
-7731.9282 8584.1875 L
-7731.8984 8584.0898 L
-7732.4639 8584.1064 l
-7732.9321 8584.1406 -7733.3848 8583.9834 -7733.8398 8584.1035 c
-7735.1543 8584.4609 -7736.3975 8584.625 -7737.71 8584.5986 c
-7737.7422 8584.5996 -7737.7642 8584.6211 -7737.7617 8584.6533 c
-7737.7617 8584.6855 -7737.7402 8584.7061 -7737.707 8584.7051 c
-7737.707 8584.7051 l
f-7738.5718 8585.0605 m
-7735.8711 8586.2207 -7732.9023 8585.5703 -7730.1279 8585.1816 c
-7729.7832 8585.2891 l
-7729.7617 8585.2988 -7729.7417 8585.2871 -7729.7207 8585.2656 c
-7729.71 8585.2441 -7729.7217 8585.2129 -7729.7422 8585.2021 c
-7730.0801 8585.0098 l
-7732.7754 8584.3926 -7735.5391 8584.7813 -7738.271 8584.7852 c
-7738.3022 8584.7871 -7738.3232 8584.8086 -7738.3223 8584.8398 c
-7738.3198 8584.8721 -7738.2983 8584.8926 -7738.2681 8584.8926 c
-7735.6738 8584.9355 -7733.0303 8584.4434 -7730.4727 8585.0742 c
-7729.7954 8585.2891 L
-7729.7534 8585.1914 L
-7730.1406 8585.0859 l
-7732.9058 8585.4424 -7735.8418 8586.1348 -7738.5313 8584.9746 c
-7738.5537 8584.9648 -7738.585 8584.9648 -7738.5962 8584.998 c
-7738.6055 8585.0195 -7738.605 8585.0508 -7738.5718 8585.0605 c
-7738.5718 8585.0605 l
f-7735.6895 8578.3945 m
-7734.3945 8578.9004 -7732.9834 8578.6465 -7731.6802 8578.3438 c
-7731.647 8578.3418 -7731.6367 8578.3203 -7731.6382 8578.2891 c
-7731.6504 8578.2568 -7731.6714 8578.2461 -7731.7031 8578.248 c
-7732.998 8578.5303 -7734.377 8578.8154 -7735.6504 8578.2969 c
-7735.6826 8578.2871 -7735.7144 8578.2988 -7735.7246 8578.3311 c
-7735.7222 8578.3525 -7735.7114 8578.3848 -7735.6895 8578.3945 c
-7735.6895 8578.3945 l
f-7736.1401 8580.2207 m
-7734.2266 8580.6895 -7732.3145 8581.1035 -7730.355 8581.3242 c
-7730.3242 8581.334 -7730.3022 8581.3125 -7730.293 8581.2803 c
-7730.2954 8581.2598 -7730.3159 8581.2285 -7730.3374 8581.2285 c
-7732.2959 8581.0078 -7734.209 8580.582 -7736.1206 8580.1133 c
-7736.1426 8580.1152 -7736.1738 8580.126 -7736.1831 8580.1582 c
-7736.1831 8580.1797 -7736.1719 8580.2109 -7736.1401 8580.2207 c
-7736.1401 8580.2207 l
f-7736.9336 8582.6348 m
-7734.499 8583.4609 -7731.8647 8583.0547 -7729.3457 8583.0879 c
-7729.313 8583.0879 -7729.293 8583.0664 -7729.293 8583.0332 c
-7729.2954 8583.0117 -7729.3159 8582.9922 -7729.3481 8582.9922 c
-7731.8574 8582.916 -7734.481 8583.3848 -7736.8945 8582.5264 c
-7736.9282 8582.5273 -7736.959 8582.5391 -7736.9688 8582.5605 c
-7736.9678 8582.5918 -7736.9561 8582.624 -7736.9336 8582.6348 c
-7736.9336 8582.6348 l
f-7732.0542 8583.8496 m
-7730.6582 8584.5449 -7729.0503 8584.4033 -7727.5342 8584.4668 c
-7727.502 8584.4648 -7727.4824 8584.4434 -7727.4824 8584.4121 c
-7727.4834 8584.3906 -7727.5054 8584.3594 -7727.5366 8584.3594 c
-7729.0137 8584.2207 -7730.6489 8584.5234 -7732.0039 8583.7617 c
-7732.0366 8583.7529 -7732.0679 8583.7637 -7732.0786 8583.7861 c
-7732.0879 8583.8076 -7732.0767 8583.8398 -7732.0542 8583.8496 c
-7732.0542 8583.8496 l
f-7731.3418 8580.4248 m
-7730.3926 8580.3975 -7729.4336 8580.3701 -7728.4839 8580.3428 c
-7728.4526 8580.3418 -7728.4312 8580.3203 -7728.4336 8580.2881 c
-7728.4336 8580.2559 -7728.4551 8580.2354 -7728.4878 8580.2363 c
-7729.437 8580.2637 -7730.397 8580.291 -7731.3457 8580.3184 c
-7731.377 8580.3184 -7731.3975 8580.3418 -7731.3975 8580.373 c
-7731.397 8580.4043 -7731.374 8580.4258 -7731.3418 8580.4248 c
-7731.3418 8580.4248 l
f-7729.1592 8578.0361 m
-7728.6895 8578.0645 -7728.209 8578.0723 -7727.7383 8578.0918 c
-7727.7168 8578.0908 -7727.6855 8578.0684 -7727.6865 8578.0371 c
-7727.687 8578.0039 -7727.71 8577.9844 -7727.7417 8577.9844 c
-7728.2114 8577.9873 -7728.6816 8577.9375 -7729.1514 8577.9395 c
-7729.1831 8577.9297 -7729.2031 8577.9512 -7729.2134 8577.9844 c
-7729.2129 8578.0156 -7729.1914 8578.0371 -7729.1592 8578.0361 c
-7729.1592 8578.0361 l
f-7736.9702 8580.2344 m
-7736.5688 8580.5107 -7736.125 8580.6797 -7735.645 8580.751 c
-7735.6113 8580.7607 -7735.5918 8580.7383 -7735.5806 8580.7168 c
-7735.5703 8580.6855 -7735.5928 8580.6543 -7735.6152 8580.6543 c
-7736.0854 8580.5723 -7736.5176 8580.4023 -7736.9209 8580.1475 c
-7736.9521 8580.1377 -7736.9849 8580.1387 -7736.9946 8580.1709 c
-7737.0039 8580.1934 -7736.9922 8580.2246 -7736.9702 8580.2344 c
-7736.9702 8580.2344 l
f-7738.1904 8586.085 m
-7735.7344 8586.5273 -7733.2983 8587.001 -7730.7993 8586.7266 c
-7730.7778 8586.7266 -7730.7568 8586.7041 -7730.7578 8586.6719 c
-7730.7578 8586.6406 -7730.7798 8586.6191 -7730.8022 8586.6191 c
-7733.291 8586.873 -7735.7344 8586.4844 -7738.1719 8585.9775 c
-7738.1934 8585.9785 -7738.2256 8585.9902 -7738.2344 8586.0215 c
-7738.2344 8586.043 -7738.2222 8586.0752 -7738.1904 8586.085 c
-7738.1904 8586.085 l
f0.195 0.156 0.117 0 k
-7738.166 8574.6445 m
-7735.7969 8574.2676 -7733.4058 8574.3477 -7731.0298 8574.5898 c
-7730.998 8574.5879 -7730.9766 8574.5664 -7730.9766 8574.5352 c
-7730.9785 8574.5137 -7731 8574.4824 -7731.0215 8574.4824 c
-7733.4082 8574.2422 -7735.791 8574.1602 -7738.1694 8574.5391 c
-7738.2026 8574.5391 -7738.2222 8574.5605 -7738.2217 8574.5938 c
-7738.2207 8574.625 -7738.1992 8574.6465 -7738.166 8574.6445 c
-7738.166 8574.6445 l
f0.335 0.268 0.201 0 k
-7737.4351 8574.1113 m
-7734.9282 8574.1152 -7732.4146 8574.2773 -7729.918 8573.8965 c
-7729.8862 8573.8945 -7729.8647 8573.873 -7729.8662 8573.8418 c
-7729.8672 8573.8086 -7729.8896 8573.7891 -7729.9209 8573.7891 c
-7732.418 8574.1699 -7734.9297 8574.0293 -7737.4375 8574.0059 c
-7737.46 8574.0059 -7737.481 8574.0273 -7737.4785 8574.0596 c
-7737.4785 8574.0918 -7737.457 8574.1123 -7737.4351 8574.1113 c
-7737.4351 8574.1113 l
f0.205 0.164 0.123 0 k
-7738.9766 8574.3262 m
-7737.5039 8574.668 -7736.0078 8574.4023 -7734.5391 8574.2207 c
-7734.5078 8574.2207 -7734.4873 8574.1973 -7734.499 8574.166 c
-7734.5 8574.1348 -7734.5215 8574.1133 -7734.5537 8574.125 c
-7736.0103 8574.2842 -7737.4961 8574.583 -7738.9473 8574.2188 c
-7738.9785 8574.2207 -7739.0103 8574.2324 -7739.0098 8574.2637 c
-7739.019 8574.2852 -7738.998 8574.3164 -7738.9766 8574.3262 c
-7738.9766 8574.3262 l
f-7732.3535 8573.7949 m
-7731.1978 8573.9219 -7730.0273 8573.8145 -7728.8926 8573.5898 c
-7728.8711 8573.5781 -7728.8506 8573.5566 -7728.8618 8573.5244 c
-7728.8623 8573.5029 -7728.8945 8573.4824 -7728.916 8573.4941 c
-7730.0503 8573.7402 -7731.1914 8573.7939 -7732.3462 8573.6885 c
-7732.3794 8573.6895 -7732.3984 8573.7109 -7732.4087 8573.7324 c
-7732.4082 8573.7646 -7732.3862 8573.7852 -7732.3535 8573.7949 c
-7732.3535 8573.7949 l
f0.335 0.268 0.201 0 k
-7739.2681 8576.4473 m
-7737.9214 8577.1885 -7736.3066 8576.5977 -7734.855 8576.6416 c
-7734.8223 8576.6406 -7734.8022 8576.6191 -7734.8022 8576.5859 c
-7734.8042 8576.5654 -7734.8262 8576.5449 -7734.8574 8576.5449 c
-7736.2886 8576.4902 -7737.8823 8577.0801 -7739.2168 8576.3506 c
-7739.2383 8576.3398 -7739.2695 8576.3516 -7739.291 8576.374 c
-7739.3008 8576.3955 -7739.2886 8576.4277 -7739.2681 8576.4473 c
-7739.2681 8576.4473 l
f-7737.8945 8578.5645 m
-7735.6719 8579.0449 -7733.3896 8578.6162 -7731.1504 8578.5625 c
-7731.1177 8578.5615 -7731.0977 8578.5391 -7731.0977 8578.5078 c
-7731.1001 8578.4863 -7731.1318 8578.4668 -7731.1519 8578.4668 c
-7733.3833 8578.4775 -7735.6519 8578.9805 -7737.875 8578.457 c
-7737.8975 8578.457 -7737.9287 8578.4688 -7737.9375 8578.502 c
-7737.9375 8578.5225 -7737.9258 8578.5547 -7737.8945 8578.5645 c
-7737.8945 8578.5645 l
f-7732.0273 8575.1406 m
-7730.3496 8575.9688 -7728.499 8576.502 -7726.603 8576.3613 c
-7726.5718 8576.3613 -7726.5513 8576.3389 -7726.5527 8576.3066 c
-7726.5527 8576.2754 -7726.5742 8576.2539 -7726.6074 8576.2559 c
-7728.481 8576.416 -7730.3198 8575.8604 -7731.9873 8575.0547 c
-7732.0078 8575.0449 -7732.041 8575.0449 -7732.0503 8575.0781 c
-7732.061 8575.0996 -7732.061 8575.1309 -7732.0273 8575.1406 c
-7732.0273 8575.1406 l
fu0.5 0.85 1 0.45 k
-7885 8581.9082 m
-7885.0254 8582.4883 -7884.5664 8583.1875 -7883.167 8583.9902 C
-7882.8521 8584.0029 -7881.3945 8584.0234 -7879.0889 8584.0488 C
-7879.0889 8581.8223 L
-7881.1382 8581.8457 -7883.1177 8581.8867 -7885 8581.9082 C
f-7884.5088 8580.9688 m
-7879.0889 8580.8447 L
-7879.0889 8579.8145 L
-7882.644 8579.959 L
-7883.8145 8580.3301 -7884.5088 8580.9688 V
f0.5 0.85 1 0.32 k
-7879.0889 8580.8252 m
-7884.4746 8580.9434 L
-7884.7695 8581.2148 -7884.9849 8581.5566 -7885 8581.9277 C
-7883.1177 8581.9063 -7881.1382 8581.8848 -7879.0889 8581.8613 C
-7879.0889 8580.8252 L
f0.5 0.85 1 0.45 k
-7774.1504 8580.6172 m
-7852.3584 8581.541 -7879.1079 8581.8418 V
-7879.1079 8584.0488 L
-7862.8145 8584.2324 -7803.9902 8584.707 Y
-7769.749 8583.6641 L
-7770.457 8580.5684 L
-7774.1504 8580.6172 L
f0.5 0.85 1 0.12 k
-7879.1079 8579.8145 m
-7879.1079 8580.8447 L
-7770.4258 8579 L
-7770.3833 8576.8633 L
-7803.6553 8576.7129 L
-7879.1079 8579.8145 L
fu0.065 0.052 0.039 0 k
-7747.0728 8575.1465 m
-7747.0366 8576.4258 L
-7747.2954 8575.1172 L
-7765.897 8579.6563 L
-7766.9375 8579.2734 L
-7766.8794 8579.6055 -7766.8398 8579.957 -7766.8306 8580.3223 c
-7766.8242 8580.5283 -7766.8281 8580.7285 -7766.8398 8580.9258 C
-7758.3862 8582.0986 -7748.9634 8577.6719 -7747.0366 8576.4258 C
-7746.7402 8586.7559 L
-7746.041 8586.8613 L
-7745.8042 8579.207 L
-7740.1816 8579.1543 L
-7740.0898 8577.0137 -7740.0718 8575.0215 -7740.2407 8574.0352 C
-7747.0728 8575.1465 L
f0.4 0.7 1 0 k
-7770.457 8580.5879 m
-7770.4258 8578.9805 L
-7879.1079 8580.8252 L
-7879.1079 8581.8613 L
-7852.3584 8581.5605 -7770.457 8580.5879 Y
fUU0.025 0.02 0.015 0 k
-7734.7344 8583.0293 m
-7734.7344 8583.0625 -7734.7129 8583.082 -7734.6802 8583.082 c
-7731.6714 8583.1133 -7729.4214 8582.9453 -7726.415 8582.8594 C
-7726.4087 8582.7656 L
-7729.3262 8582.8701 -7731.7607 8583.0078 -7734.6841 8582.9746 C
-7734.7168 8582.9766 -7734.7358 8582.998 -7734.7344 8583.0293 C
f-7726.3994 8582.7656 m
-7726.4082 8582.7441 L
-7726.4087 8582.7656 L
-7726.4063 8582.7656 -7726.4033 8582.7656 -7726.3994 8582.7656 C
f-7730.4487 8581.4238 m
-7731.4458 8581.292 -7732.3394 8581.7656 -7733.2114 8582.1973 C
-7733.2441 8582.208 -7733.2534 8582.2402 -7733.2422 8582.2715 C
-7733.2305 8582.293 -7733.1982 8582.3027 -7733.1777 8582.291 c
-7732.3262 8581.8301 -7731.4312 8581.4199 -7730.4678 8581.5195 c
-7729.1079 8581.6621 -7727.9038 8582.375 -7726.5254 8582.4531 C
-7726.4463 8582.3594 L
-7728.04 8582.2656 -7728.8647 8581.623 -7730.4487 8581.4238 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7756.877 8586 L
-7756.877 8538.415 L
-7884 8538.415 L
-7884 8586 L
nu*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7857.793 8570.417 m
-7857.8232 8570.2676 L
-7859.9849 8564.3643 -7860.9438 8561.6377 -7861.2754 8560.2891 c
-7861.3657 8560.2891 L
-7861.6953 8561.6074 -7862.7754 8564.335 -7864.9673 8570.2676 c
-7864.9966 8570.417 L
-7857.793 8570.417 l
f1 D
-7868.1182 8578.9678 m
-7869.6191 8582.5371 -7870.3994 8584.709 -7868.1182 8584.917 c
-7868.1182 8585.9678 L
-7870.6992 8585.9375 -7873.5806 8585.917 -7876.3418 8585.917 c
-7880.0649 8585.917 -7882.5273 8585.9375 -7884 8585.9678 c
-7884 8584.917 L
-7882.1064 8584.709 -7881.0542 8582.5674 -7873.5513 8565.5029 c
-7861.6953 8538.415 L
-7859.8638 8538.415 L
-7848.1582 8565.5029 L
-7840.8047 8582.5078 -7839.7246 8584.709 -7837.8887 8584.917 c
-7837.8887 8585.9678 L
-7839.5142 8585.9375 -7841.916 8585.917 -7845.5767 8585.917 c
-7848.5488 8585.917 -7851.6694 8585.9375 -7854.7026 8585.9678 c
-7854.7026 8584.917 L
-7852.481 8584.709 -7853.3218 8582.5078 -7854.7617 8578.9678 C
-7868.1182 8578.9678 l
f*U
*u
0 D
-7813.0762 8554.0811 m
-7813.0762 8550.4717 -7815.3535 8548.0947 -7819.1294 8548.0947 c
-7820.2383 8548.0947 -7821.0767 8548.2158 -7821.5273 8548.2451 c
-7821.5273 8560.5479 L
-7820.8672 8560.6084 -7820.208 8560.6084 -7819.729 8560.6084 c
-7818.2002 8560.6084 -7816.7026 8560.127 -7815.6841 8559.4053 c
-7814.3945 8558.5332 -7813.0762 8556.7881 -7813.0762 8554.1416 C
-7813.0762 8554.0811 l
f1 D
-7832.0806 8558.3926 m
-7832.0806 8542.6445 -7832.0806 8540.4287 -7834.542 8540.2783 c
-7834.542 8539.3184 L
-7833.042 8539.2588 -7830.3174 8539.1992 -7827.5664 8539.1689 c
-7825.6538 8539.1084 -7822.3945 8539.0186 -7820.1479 8538.9775 c
-7816.582 8538.9775 -7813.585 8539.4258 -7811.0049 8540.2627 c
-7806.353 8541.8477 -7801.9702 8545.8525 -7801.9702 8553.6602 c
-7801.9702 8558.7432 -7804.4014 8562.3193 -7806.5034 8564.0605 c
-7807.583 8565.0215 -7808.8135 8565.832 -7809.7744 8566.3125 c
-7809.7744 8566.4629 L
-7807.5234 8569.4912 -7805.6025 8572.0625 -7799.3906 8580.6426 c
-7797.5 8583.0645 -7795.9102 8584.7383 -7794.7402 8584.9775 c
-7794.7402 8586 L
-7796.6602 8586 -7799 8585.8848 -7801.1294 8585.8848 c
-7803.3511 8585.8848 -7804.8521 8586 -7806.4424 8586 c
-7807.6729 8586 -7808.7241 8585.9404 -7809.5039 8585.2725 c
-7813.0151 8579.8477 -7816.9121 8573.7559 -7820.1182 8568.7139 c
-7820.5078 8568.7139 -7820.957 8568.7139 -7821.5273 8568.7139 c
-7821.5273 8571.2852 L
-7821.5273 8582.5264 -7821.437 8584.7686 -7819.1895 8584.9775 c
-7819.1895 8585.9697 L
-7820.6279 8585.9404 -7823.9194 8585.915 -7826.6992 8585.915 c
-7829.9287 8585.915 -7832.8921 8585.9404 -7834.5122 8585.9697 c
-7834.5122 8584.9775 L
-7832.0518 8584.7686 -7832.0806 8582.5264 -7832.0806 8565.5918 C
-7832.0806 8558.3926 l
f*U
*u
0 D
-7781.4561 8565.5928 m
-7781.4561 8582.4941 -7781.4561 8584.6484 -7784.2832 8584.9775 C
-7784.2832 8585.9697 l
-7782.3887 8585.9404 -7779.0542 8585.915 -7775.7822 8585.915 c
-7772.6294 8585.915 -7769.5688 8585.9404 -7767.2881 8585.9697 C
-7767.2881 8584.9775 l
-7770.2578 8584.9775 -7770.2881 8582.5244 -7770.2881 8565.5928 C
-7770.2881 8548.1514 L
-7762.8193 8548.1514 l
-7759.999 8548.1514 -7758.5298 8548.96 -7757.8994 8551.2627 C
-7756.9072 8551.2627 l
-7756.9072 8546.4697 -7756.877 8542.415 -7756.877 8539.1709 c
-7761.3486 8539.2012 -7766.748 8539.2314 -7772.0601 8539.2314 C
-7779.7446 8539.2314 l
-7784.5537 8539.2314 -7789.9966 8539.2012 -7794.9614 8539.1709 c
-7794.9614 8542.3848 -7794.9326 8546.4697 -7794.9326 8551.2627 C
-7793.9072 8551.2627 l
-7793.3657 8549.1094 -7791.771 8548.1514 -7788.9438 8548.1514 C
-7781.4561 8548.1514 l
-7781.4561 8565.5928 L
f*U
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7884.75 8563 m
-7884.75 8587 L
-7874.75 8587 L
-7874.75 8563 L
-7884.75 8563 L
n0 Ap
0 O
1 g
-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 c
-7877.5879 8565.2256 -7879.3198 8565.9346 -7880.7559 8567.0176 c
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 c
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.2319 8578.5996 -7883.3457 8580.0918 c
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
-7874.75 8565 L
f0 R
0 G
1 J 1 j 0.5 w-7874.75 8584.6816 m
-7877.7793 8583.7256 -7880.6074 8582.0674 -7883.3457 8580.0918 C
S-7874.75 8579.0488 m
-7877.8999 8576.6436 -7880.957 8573.9131 -7884.0942 8571.4639 C
S-7880.7559 8567.0176 m
-7878.6904 8568.1084 -7876.7017 8569.4668 -7874.75 8570.957 C
S-7875.6982 8565.0479 m
-7875.3809 8565.1309 -7875.063 8565.2148 -7874.75 8565.3145 C
S-7880.7559 8567.0176 m
-7879.3193 8565.9355 -7877.5879 8565.2256 -7875.6982 8565.0479 C
S-7884.0942 8571.4639 m
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.231 8578.5996 -7883.3457 8580.0918 C
S-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 C
S-7880.7559 8567.0176 m
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 C
S-7883.3457 8580.0918 m
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
SU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8569.9043 m
-7846.7305 8561.3408 L
-7885 8561.3408 L
-7885 8569.9043 L
-7846.7305 8569.9043 L
f-7846.7305 8573.0967 m
-7846.7305 8572.4229 L
-7885 8572.4229 L
-7885 8573.0967 L
-7846.7305 8573.0967 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8565.8262 m
-7846.7305 8574.3896 L
-7859.3408 8574.3896 L
-7859.3408 8587 L
-7867.9038 8587 L
-7867.9063 8565.8262 L
-7867.9038 8565.8262 L
-7867.9038 8565.8252 L
-7846.7305 8565.8262 L
f-7846.7305 8563.3076 m
-7870.4233 8563.3076 L
-7870.4233 8587 L
-7871.0967 8587 L
-7871.0977 8562.6328 L
-7846.7305 8562.6328 L
-7846.7305 8563.3076 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8586.999 m
-7885 8548.7285 L
-7846.7305 8548.7285 L
-7846.7305 8586.999 L
-7885 8586.999 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8561.3389 m
-7872.3896 8561.3389 L
-7872.3896 8586.999 L
-7863.8262 8587 L
-7863.8262 8569.9033 L
-7846.7305 8569.9033 L
-7846.7305 8561.3389 L
f-7846.7305 8572.4219 m
-7861.3081 8572.4219 L
-7861.3081 8587 L
-7860.6338 8587 L
-7860.6338 8573.0957 L
-7846.7305 8573.0957 L
-7846.7305 8572.4219 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.0625 8559.4609 m
-7884.6025 8559.4609 L
-7884.6025 8587 L
-7857.0625 8587 L
-7857.0625 8559.4609 L
n0 O
0 0.55 1 0.12 k
-7856.8418 8572.7002 m
-7885 8572.7002 L
-7885 8573.8252 L
-7856.8418 8573.8252 L
-7856.8418 8572.7002 L
fu0 0.55 1 0.3 k
-7883.9814 8560.5215 m
-7884.4102 8562.5254 -7883.1865 8566.1514 -7880.0874 8569.251 c
-7876.9878 8572.3496 -7873.3457 8573.6602 -7871.3594 8573.1455 C
-7871.3594 8573.1455 L
-7870.875 8571.1895 -7872.1519 8567.5117 -7875.25 8564.4141 c
-7878.3457 8561.3184 -7882.0122 8560.1064 -7883.9814 8560.5215 C
f0 0.39 0.7 0.12 k
-7883.9814 8585.9912 m
-7884.4102 8583.9883 -7883.1865 8580.3613 -7880.0874 8577.2617 c
-7876.9878 8574.1641 -7873.3457 8572.8535 -7871.3594 8573.3672 C
-7871.3594 8573.3672 L
-7870.875 8575.3242 -7872.1519 8579.001 -7875.25 8582.0996 c
-7878.3457 8585.1953 -7882.0122 8586.4063 -7883.9814 8585.9912 C
fUu0 0.55 1 0.3 k
-7870.1782 8585.9912 m
-7870.6074 8583.9883 -7869.3838 8580.3613 -7866.2842 8577.2617 c
-7863.1855 8574.1641 -7859.543 8572.8535 -7857.5576 8573.3672 C
-7857.5566 8573.3672 L
-7857.0718 8575.3242 -7858.3496 8579.001 -7861.4473 8582.0996 c
-7864.543 8585.1953 -7868.209 8586.4063 -7870.1782 8585.9912 C
f0 0.39 0.7 0.12 k
-7870.1782 8560.5215 m
-7870.6074 8562.5254 -7869.3838 8566.1514 -7866.2842 8569.251 c
-7863.1855 8572.3496 -7859.543 8573.6602 -7857.5576 8573.1455 C
-7857.5566 8573.1455 L
-7857.0718 8571.1895 -7858.3496 8567.5117 -7861.4473 8564.4141 c
-7864.543 8561.3184 -7868.209 8560.1064 -7870.1782 8560.5215 C
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.4609 m
-7885 8559.4609 L
-7885 8587 L
-7857.4609 8587 L
-7857.4609 8559.4609 L
n0 O
0 0.55 1 0.3 k
-7875.4233 8573.252 m
-7874.3096 8571.5313 -7870.8809 8569.833 -7866.4966 8569.833 c
-7862.1152 8569.833 -7858.6138 8571.4824 -7857.5718 8573.25 C
-7857.5718 8573.25 L
-7858.6138 8574.9766 -7862.1152 8576.6738 -7866.4966 8576.6738 c
-7870.875 8576.6738 -7874.3242 8574.9375 -7875.4233 8573.252 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.9521 8584.3125 m
-7776.7954 8584.3125 L
-7776.7954 8570.1855 L
-7883.9521 8570.1855 L
-7883.9521 8584.3125 L
nu0 O
0 0 0 1 k
-7882.2832 8583.623 m
-7882.8535 8586 -7882.8184 8582.0039 V
-7883.0479 8578.8027 L
-7883.6167 8576.4551 L
-7883.4502 8574.123 L
-7881.9502 8573.4551 -7865.2832 8572.123 V
-7858.6167 8570.7891 -7849.6167 8570.7891 V
-7784.3936 8571.4766 -7779.4912 8572.8848 v
-7820.3882 8570.875 -7822.9688 8571.5117 v
-7783.8569 8573.1602 -7780.8545 8574.4316 v
-7818.79 8572.5469 -7822.167 8574.1777 v
-7787.249 8575.9102 -7783.021 8577.5313 v
-7789.7217 8576.8828 -7791.5127 8577.082 v
-7788.3896 8577.5703 l
-7793.4194 8577.502 l
-7796.3218 8577.1289 l
-7788.4521 8578.2422 -7787.9033 8578.8086 v
-7784.3154 8578.1309 -7798.5186 8578.3848 v
-7832.1177 8574.4551 -7882.2832 8583.623 V
f/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7883.9502 8573.123 m
-7863.667 8571.2949 -7843.9727 8570.2207 v
-7801.1514 8570.502 -7796.5737 8570.9004 v
-7784.1631 8571.0313 -7776.7959 8572.0273 v
S/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7821.8369 8570.4082 m
-7825.2959 8570.0273 -7851.2607 8570.2793 Y
-7861.627 8570.1602 -7883.9502 8573.123 Y
S/BBAccumRotation (5.805971) XT
-7820.9873 8573.6641 m
-7790.3608 8574.582 -7783.6606 8575.2324 v
S/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7829.6201 8578.2051 m
-7794.3706 8579.6172 -7791.4058 8580.1406 v
S/BBAccumRotation (5.805971) XT
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8585.9355 m
-7670.4009 8585.9355 L
-7670.4009 8578.1348 L
-7884 8578.1348 L
-7884 8585.9355 L
n0 O
0 0 0 1 k
-7884 8582.0352 m
-7873.9858 8584.5273 -7867.187 8585.875 -7855.2007 8585.9355 c
-7842.2183 8586 -7777.2002 8585.9355 y
-7712.1816 8586 -7699.2002 8585.9355 v
-7687.2129 8585.875 -7680.415 8584.5273 -7670.4009 8582.0352 C
-7680.415 8579.543 -7687.2129 8578.1953 -7699.2002 8578.1348 c
-7712.1816 8578.0693 -7777.2002 8578.1348 y
-7842.2183 8578.0693 -7855.2007 8578.1348 v
-7867.187 8578.1953 -7873.9858 8579.543 -7884 8582.0352 C
fU%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -
(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -
(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -
( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -
(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -
( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -
(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -
(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -
(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -
(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -
(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -
(tternOnPath Brush Tool/ Rope /) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Dog Tracks)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Fall Leaf)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -
(1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Ladybug)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -
(1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Push Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -
( 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Strawberry)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -
(-75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Twinkle Star )
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Arrow)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Paintbrush)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -
( 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Double Lines)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -
(0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Laurel)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -
(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rope )
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -
(0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u1 Ap
0 O
0.8 g
0 R
0 G
0 J 0 j 0.5 w 4 M []0 d0 XR
359.5107 675 m
143.9893 675 L
143.9893 432 L
359.5107 432 L
359.5107 675 L
b0 Ap
171 432 m
171 675 l
S198 432 m
198 675 l
S225 432 m
225 675 l
S252 432 m
252 675 l
S279 432 m
279 675 l
S306 432 m
306 675 l
S333 432 m
333 675 l
S144 648 m
360 648 l
S144 621 m
360 621 l
S144 594 m
360 594 l
S144 567 m
360 567 l
S144 540 m
360 540 l
S144 513 m
360 513 l
S144 486 m
360 486 l
S2 To
1 0 0 1 -7885 8587 0.3157 Tp
0 Tv
1 w144 459 m
360 459 l
NTP
0 Tr
0 O
0 g
%_ 0 50 XQ
/_Helvetica 12 11.172 -2.7001 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(\r) TX 
TO
0 R
0 G
0.5 w342 504 m
S162 657 m
S144 459 m
360 459 l
S0 O
1 g
192.3335 432.0117 m
342.334 506.5391 l
200.3335 679.9175 156.8335 655.0752 v
147.8335 655.0752 147.8335 600.2148 v
147.8335 545.355 192.3335 432.0117 y
bUu*u
0 g
1 w191.792 443.2002 m
191.9121 443.1919 192.04 443.1841 192.1602 443.1841 c
192.7041 443.1841 193.2319 443.3999 193.2319 444.104 c
193.2319 444.4399 193.0317 444.9922 192.1919 444.9922 c
191.1919 444.9922 191.1279 444.1758 191.0962 443.7842 c
190.4082 443.7842 L
190.4082 444.6079 190.7441 445.624 192.2241 445.624 c
193.312 445.624 193.96 445 193.96 444.144 c
193.96 443.4238 193.5439 443.0801 193.2397 442.9839 c
193.2397 442.9678 L
193.7842 442.792 194.1758 442.4082 194.1758 441.6558 c
194.1758 440.7358 193.584 439.8481 192.1519 439.8481 c
191.7358 439.8481 191.3838 439.9521 191.1118 440.0962 c
190.4878 440.4238 190.3198 441.0718 190.272 441.7202 c
191 441.7202 L
191.0239 441.1919 191.1519 440.48 192.2002 440.48 c
192.9199 440.48 193.4238 440.9199 193.4238 441.5679 c
193.4238 442.5122 192.5918 442.6001 192.1118 442.6001 c
192.0078 442.6001 191.896 442.5918 191.792 442.5918 C
191.792 443.2002 l
f*U
*u
197.6641 442.9922 m
198.4238 442.6719 198.584 442.0479 198.584 441.624 c
198.584 440.7202 198.0078 439.8481 196.6802 439.8481 c
196.3682 439.8481 195.7759 439.9282 195.3281 440.2798 c
194.752 440.7358 194.752 441.3438 194.752 441.6162 c
194.752 442.3042 195.1118 442.7441 195.7041 442.9839 c
195.2241 443.168 194.9438 443.5518 194.9438 444.0801 c
194.9438 444.6641 195.3042 445.624 196.6479 445.624 c
197.896 445.624 198.3838 444.832 198.3838 444.1758 c
198.3838 443.3682 197.9121 443.1201 197.6641 442.9922 c
f1 D
195.5039 441.6001 m
195.5039 441.1519 195.728 440.48 196.7041 440.48 c
197.2158 440.48 197.832 440.6641 197.832 441.5439 c
197.832 442.3042 197.3037 442.6401 196.6641 442.6401 c
195.8721 442.6401 195.5039 442.1201 195.5039 441.6001 c
f197.6558 444.1519 m
197.6558 444.4961 197.4321 444.9922 196.6079 444.9922 c
195.856 444.9922 195.6719 444.4722 195.6719 444.1118 c
195.6719 443.5762 196.144 443.248 196.6558 443.248 c
197.2642 443.248 197.6558 443.6401 197.6558 444.1519 c
f*U
*u
0 D
201.1201 439.8481 m
199.5039 439.8481 199.1919 441.5679 199.1919 442.7358 c
199.1919 443.9038 199.5039 445.624 201.1201 445.624 c
202.7358 445.624 203.0479 443.9038 203.0479 442.7358 c
203.0479 441.5679 202.7358 439.8481 201.1201 439.8481 c
f1 D
201.1201 444.9922 m
200.312 444.9922 199.9438 444.144 199.9438 442.7358 c
199.9438 441.3281 200.312 440.48 201.1201 440.48 c
201.9277 440.48 202.2959 441.3281 202.2959 442.7358 c
202.2959 444.144 201.9277 444.9922 201.1201 444.9922 c
f*U
Uu*u
0 D
327.5439 508.168 m
328.3037 507.8477 328.4639 507.2236 328.4639 506.7998 c
328.4639 505.896 327.8877 505.0239 326.5605 505.0239 c
326.248 505.0239 325.6563 505.104 325.208 505.4556 c
324.6318 505.9116 324.6318 506.5195 324.6318 506.792 c
324.6318 507.48 324.9922 507.9199 325.584 508.1597 c
325.1045 508.3438 324.8242 508.7275 324.8242 509.2559 c
324.8242 509.8398 325.1846 510.7998 326.5283 510.7998 c
327.7764 510.7998 328.2637 510.0078 328.2637 509.3516 c
328.2637 508.5439 327.792 508.2959 327.5439 508.168 c
f1 D
325.3838 506.7759 m
325.3838 506.3276 325.6084 505.6558 326.584 505.6558 c
327.0957 505.6558 327.7119 505.8398 327.7119 506.7197 c
327.7119 507.48 327.1836 507.8159 326.5439 507.8159 c
325.752 507.8159 325.3838 507.2959 325.3838 506.7759 c
f327.5361 509.3276 m
327.5361 509.6719 327.3125 510.168 326.4883 510.168 c
325.7363 510.168 325.5518 509.6479 325.5518 509.2876 c
325.5518 508.752 326.0244 508.4238 326.5361 508.4238 c
327.1445 508.4238 327.5361 508.8159 327.5361 509.3276 c
f*U
*u
0 D
331 505.0239 m
329.3838 505.0239 329.0723 506.7437 329.0723 507.9116 c
329.0723 509.0796 329.3838 510.7998 331 510.7998 c
332.6162 510.7998 332.9277 509.0796 332.9277 507.9116 c
332.9277 506.7437 332.6162 505.0239 331 505.0239 c
f1 D
331 510.168 m
330.1924 510.168 329.8242 509.3198 329.8242 507.9116 c
329.8242 506.5039 330.1924 505.6558 331 505.6558 c
331.8076 505.6558 332.1758 506.5039 332.1758 507.9116 c
332.1758 509.3198 331.8076 510.168 331 510.168 c
f*U
*u
0 D
335.4482 505.0239 m
333.832 505.0239 333.5205 506.7437 333.5205 507.9116 c
333.5205 509.0796 333.832 510.7998 335.4482 510.7998 c
337.0645 510.7998 337.376 509.0796 337.376 507.9116 c
337.376 506.7437 337.0645 505.0239 335.4482 505.0239 c
f1 D
335.4482 510.168 m
334.6396 510.168 334.2725 509.3198 334.2725 507.9116 c
334.2725 506.5039 334.6396 505.6558 335.4482 505.6558 c
336.2559 505.6558 336.624 506.5039 336.624 507.9116 c
336.624 509.3198 336.2559 510.168 335.4482 510.168 c
f*U
Uu*u
0 D
153.8374 581.7813 m
154.0776 581.9653 154.4214 582.1333 154.9258 582.1333 c
155.8374 582.1333 156.7734 581.4932 156.7734 580.3335 c
156.7734 579.7095 156.4937 578.3574 154.7334 578.3574 c
153.9976 578.3574 153.0537 578.6533 152.9175 579.9092 c
153.6455 579.9092 L
153.7178 579.2534 154.2056 578.9653 154.8374 578.9653 c
155.5654 578.9653 156.0215 579.5493 156.0215 580.2534 c
156.0215 581.061 155.4697 581.5015 154.7734 581.5015 c
154.3657 581.5015 153.9976 581.3091 153.7334 580.9653 c
153.1255 580.9971 L
153.5498 584.0132 L
156.4614 584.0132 L
156.4614 583.3252 L
154.0776 583.3252 L
153.8374 581.7813 l
f*U
*u
159.3335 578.3574 m
157.7178 578.3574 157.4058 580.0771 157.4058 581.2451 c
157.4058 582.4131 157.7178 584.1333 159.3335 584.1333 c
160.9497 584.1333 161.2617 582.4131 161.2617 581.2451 c
161.2617 580.0771 160.9497 578.3574 159.3335 578.3574 c
f1 D
159.3335 583.501 m
158.5254 583.501 158.1577 582.6533 158.1577 581.2451 c
158.1577 579.8374 158.5254 578.9893 159.3335 578.9893 c
160.1416 578.9893 160.5098 579.8374 160.5098 581.2451 c
160.5098 582.6533 160.1416 583.501 159.3335 583.501 c
f*U
*u
0 D
163.7817 578.3574 m
162.1655 578.3574 161.8535 580.0771 161.8535 581.2451 c
161.8535 582.4131 162.1655 584.1333 163.7817 584.1333 c
165.3975 584.1333 165.7095 582.4131 165.7095 581.2451 c
165.7095 580.0771 165.3975 578.3574 163.7817 578.3574 c
f1 D
163.7817 583.501 m
162.9736 583.501 162.6055 582.6533 162.6055 581.2451 c
162.6055 579.8374 162.9736 578.9893 163.7817 578.9893 c
164.5894 578.9893 164.9575 579.8374 164.9575 581.2451 c
164.9575 582.6533 164.5894 583.501 163.7817 583.501 c
f*U
Uu*u
0 D
158.1699 651.1147 m
158.4102 651.2988 158.7539 651.4668 159.2583 651.4668 c
160.1699 651.4668 161.106 650.8267 161.106 649.667 c
161.106 649.043 160.8262 647.6909 159.0659 647.6909 c
158.3301 647.6909 157.3862 647.9868 157.25 649.2427 c
157.978 649.2427 L
158.0503 648.5869 158.5381 648.2988 159.1699 648.2988 c
159.8979 648.2988 160.354 648.8828 160.354 649.5869 c
160.354 650.3945 159.8022 650.835 159.106 650.835 c
158.6982 650.835 158.3301 650.6426 158.0659 650.2988 c
157.458 650.3306 L
157.8823 653.3467 L
160.7939 653.3467 L
160.7939 652.6587 L
158.4102 652.6587 L
158.1699 651.1147 l
f*U
*u
161.7939 651.4507 m
161.7939 653.2827 163.1299 653.4668 163.7383 653.4668 c
164.7139 653.4668 165.498 652.835 165.498 651.7866 c
165.498 650.7788 164.834 650.355 163.9941 649.9067 c
163.4102 649.5869 L
162.6421 649.1626 162.4741 648.7227 162.4419 648.5068 c
165.498 648.5068 L
165.498 647.8428 L
161.6499 647.8428 L
161.6899 649.0107 162.2183 649.6348 162.9702 650.0747 c
163.7139 650.5068 L
164.314 650.8506 164.7461 651.0825 164.7461 651.8188 c
164.7461 652.2666 164.458 652.835 163.6343 652.835 c
162.5703 652.835 162.522 651.8428 162.498 651.4507 C
161.7939 651.4507 l
f*U
*u
168.1143 647.6909 m
166.498 647.6909 166.186 649.4106 166.186 650.5786 c
166.186 651.7466 166.498 653.4668 168.1143 653.4668 c
169.73 653.4668 170.042 651.7466 170.042 650.5786 c
170.042 649.4106 169.73 647.6909 168.1143 647.6909 c
f1 D
168.1143 652.835 m
167.3062 652.835 166.938 651.9868 166.938 650.5786 c
166.938 649.1709 167.3062 648.3228 168.1143 648.3228 c
168.9219 648.3228 169.29 649.1709 169.29 650.5786 c
169.29 651.9868 168.9219 652.835 168.1143 652.835 c
f*U
Uu*u
0 D
216.1987 620.1226 m
216.4448 620.3066 216.7969 620.4746 217.313 620.4746 c
218.2471 620.4746 219.2056 619.8345 219.2056 618.6748 c
219.2056 618.0508 218.9189 616.6987 217.1162 616.6987 c
216.3628 616.6987 215.396 616.9946 215.2568 618.2505 c
216.0024 618.2505 L
216.0762 617.5947 216.5757 617.3066 217.2231 617.3066 c
217.9683 617.3066 218.4355 617.8906 218.4355 618.5947 c
218.4355 619.4023 217.8701 619.8428 217.1572 619.8428 c
216.7397 619.8428 216.3628 619.6504 216.0923 619.3066 c
215.4697 619.3384 L
215.9038 622.3545 L
218.8857 622.3545 L
218.8857 621.6665 L
216.4448 621.6665 L
216.1987 620.1226 l
f*U
*u
220.7539 620.1226 m
220.9995 620.3066 221.3521 620.4746 221.8682 620.4746 c
222.8018 620.4746 223.7603 619.8345 223.7603 618.6748 c
223.7603 618.0508 223.4736 616.6987 221.6714 616.6987 c
220.9175 616.6987 219.9512 616.9946 219.8115 618.2505 c
220.5571 618.2505 L
220.6309 617.5947 221.1309 617.3066 221.7778 617.3066 c
222.5234 617.3066 222.9902 617.8906 222.9902 618.5947 c
222.9902 619.4023 222.4248 619.8428 221.7124 619.8428 c
221.2944 619.8428 220.9175 619.6504 220.6475 619.3066 c
220.0249 619.3384 L
220.459 622.3545 L
223.4409 622.3545 L
223.4409 621.6665 L
220.9995 621.6665 L
220.7539 620.1226 l
f*U
*u
226.3818 616.6987 m
224.7271 616.6987 224.4077 618.4185 224.4077 619.5864 c
224.4077 620.7544 224.7271 622.4746 226.3818 622.4746 c
228.0366 622.4746 228.3564 620.7544 228.3564 619.5864 c
228.3564 618.4185 228.0366 616.6987 226.3818 616.6987 c
f1 D
226.3818 621.8428 m
225.5547 621.8428 225.1777 620.9946 225.1777 619.5864 c
225.1777 618.1787 225.5547 617.3306 226.3818 617.3306 c
227.2095 617.3306 227.5864 618.1787 227.5864 619.5864 c
227.5864 620.9946 227.2095 621.8428 226.3818 621.8428 c
f*U
Uu*u
0 D
305.0776 536.6455 m
304.9878 537.1416 304.709 537.5098 304.0864 537.5098 c
302.9561 537.5098 302.7183 536.0215 302.7183 535.4297 c
302.7349 535.4136 L
302.915 535.7178 303.3164 536.1016 304.103 536.1016 c
304.8076 536.1016 305.9053 535.6616 305.9053 534.3174 c
305.9053 533.7417 305.7495 533.3257 305.3564 532.9097 c
305.0532 532.5815 304.709 532.3657 303.8979 532.3657 c
303.4556 532.3657 302.8247 532.5576 302.4155 533.1816 c
302.0713 533.7095 301.9731 534.3975 301.9731 535.1338 c
301.9731 536.3657 302.3823 538.1416 304.103 538.1416 c
304.7666 538.1416 305.7085 537.7896 305.7822 536.6455 C
305.0776 536.6455 l
f1 D
304.0293 532.9976 m
304.7173 532.9976 305.1597 533.5254 305.1597 534.2856 c
305.1597 534.7817 304.8892 535.4697 303.9966 535.4697 c
303.2017 535.4697 302.8169 534.9097 302.8169 534.2456 c
302.8169 533.6455 303.1855 532.9976 304.0293 532.9976 c
f*U
*u
0 D
308.4941 532.3657 m
306.8394 532.3657 306.5195 534.0854 306.5195 535.2534 c
306.5195 536.4214 306.8394 538.1416 308.4941 538.1416 c
310.1484 538.1416 310.4688 536.4214 310.4688 535.2534 c
310.4688 534.0854 310.1484 532.3657 308.4941 532.3657 c
f1 D
308.4941 537.5098 m
307.667 537.5098 307.29 536.6616 307.29 535.2534 c
307.29 533.8457 307.667 532.9976 308.4941 532.9976 c
309.3213 532.9976 309.6982 533.8457 309.6982 535.2534 c
309.6982 536.6616 309.3213 537.5098 308.4941 537.5098 c
f*U
*u
0 D
313.0488 532.3657 m
311.3945 532.3657 311.0742 534.0854 311.0742 535.2534 c
311.0742 536.4214 311.3945 538.1416 313.0488 538.1416 c
314.7041 538.1416 315.0234 536.4214 315.0234 535.2534 c
315.0234 534.0854 314.7041 532.3657 313.0488 532.3657 c
f1 D
313.0488 537.5098 m
312.2217 537.5098 311.8447 536.6616 311.8447 535.2534 c
311.8447 533.8457 312.2217 532.9976 313.0488 532.9976 c
313.876 532.9976 314.2529 533.8457 314.2529 535.2534 c
314.2529 536.6616 313.876 537.5098 313.0488 537.5098 c
f*U
Uu*u
0 D
225.7212 519.6665 m
224.3809 523.9321 L
225.4702 523.9321 L
226.2637 521.1367 L
226.9946 523.9321 L
228.0747 523.9321 L
228.7793 521.1367 L
229.5889 523.9321 L
230.6934 523.9321 L
229.3335 519.6665 L
228.2578 519.6665 L
227.5293 522.4102 L
226.8105 519.6665 l
225.7212 519.6665 L
f*U
*u
232.4106 525.5415 m
232.4106 523.3701 L
232.772 523.7969 233.2036 524.0103 233.7061 524.0103 c
233.9639 524.0103 234.1963 523.9619 234.4038 523.8662 c
234.6108 523.77 234.7671 523.6475 234.8721 523.498 c
234.9771 523.3486 235.0488 523.1836 235.0874 523.002 c
235.126 522.8208 235.145 522.5396 235.145 522.1582 c
235.145 519.6665 L
234.02 519.6665 L
234.02 521.9106 L
234.02 522.356 233.999 522.6387 233.9565 522.7588 c
233.9141 522.8789 233.8394 522.9741 233.7319 523.0449 c
233.6245 523.1152 233.4902 523.1509 233.3286 523.1509 c
233.1431 523.1509 232.9775 523.1055 232.832 523.0146 c
232.686 522.9238 232.5796 522.7871 232.5122 522.6045 c
232.4443 522.4219 232.4106 522.1523 232.4106 521.7949 c
232.4106 519.6665 L
231.2856 519.6665 L
231.2856 525.5415 l
232.4106 525.5415 L
f*U
*u
236.2915 524.4946 m
236.2915 525.5415 L
237.4165 525.5415 L
237.4165 524.4946 l
236.2915 524.4946 L
f236.2915 519.6665 m
236.2915 523.9321 L
237.4165 523.9321 L
237.4165 519.6665 l
236.2915 519.6665 L
f*U
*u
240.5371 523.9321 m
240.5371 523.0415 L
239.7715 523.0415 L
239.7715 521.3086 L
239.7715 520.9575 239.7783 520.7529 239.793 520.6953 c
239.8076 520.6367 239.8408 520.5889 239.8926 520.5513 c
239.9438 520.5137 240.0068 520.4946 240.0811 520.4946 c
240.1841 520.4946 240.3335 520.5303 240.5293 520.6025 c
240.6152 519.7261 L
240.3564 519.6133 240.063 519.5571 239.7358 519.5571 c
239.5352 519.5571 239.354 519.5918 239.1929 519.6602 c
239.0317 519.7285 238.9136 519.8174 238.8384 519.9268 c
238.7632 520.0361 238.7109 520.1836 238.6821 520.3696 c
238.6582 520.5015 238.6465 520.7686 238.6465 521.1699 c
238.6465 523.0415 L
238.1309 523.0415 L
238.1309 523.9321 L
238.6465 523.9321 L
238.6465 524.7759 L
239.7715 525.4321 L
239.7715 523.9321 l
240.5371 523.9321 L
f*U
*u
243.7339 521.0103 m
244.8589 520.8228 L
244.7158 520.4102 244.4907 520.0962 244.1826 519.8809 c
243.8745 519.665 243.4888 519.5571 243.0264 519.5571 c
242.2939 519.5571 241.752 519.7988 241.4004 520.2832 c
241.1226 520.6709 240.9839 521.1602 240.9839 521.752 c
240.9839 522.458 241.167 523.0107 241.5337 523.4102 c
241.9004 523.8105 242.3638 524.0103 242.9243 524.0103 c
243.5542 524.0103 244.0508 523.8013 244.415 523.3838 c
244.7788 522.9658 244.9531 522.3257 244.937 521.4634 c
242.1401 521.4634 L
242.1479 521.1328 242.2358 520.876 242.4048 520.6924 c
242.5737 520.5083 242.7842 520.4165 243.0361 520.4165 c
243.2075 520.4165 243.3516 520.4634 243.4688 520.5571 c
243.5854 520.6509 243.6738 520.8018 243.7339 521.0103 c
f1 D
243.8276 522.1509 m
243.8193 522.4775 243.7358 522.7256 243.5771 522.8955 c
243.4185 523.0654 243.2251 523.1509 242.9976 523.1509 c
242.7539 523.1509 242.5527 523.061 242.394 522.8818 c
242.2354 522.7021 242.1572 522.459 242.1602 522.1509 c
243.8276 522.1509 L
f*U
Uu*u
0 D
198.2715 462.1851 m
196.6284 466.4507 L
197.769 466.4507 L
198.5322 464.2734 L
198.7534 463.5469 L
198.812 463.7314 198.8491 463.853 198.8643 463.9121 c
198.9004 464.0327 198.9385 464.1533 198.9795 464.2734 c
199.7534 466.4507 L
200.8628 466.4507 L
199.2427 462.1851 l
198.2715 462.1851 L
f*U
*u
201.519 467.0132 m
201.519 468.0601 L
202.5972 468.0601 L
202.5972 467.0132 l
201.519 467.0132 L
f201.519 462.1851 m
201.519 466.4507 L
202.5972 466.4507 L
202.5972 462.1851 l
201.519 462.1851 L
f*U
*u
203.4561 464.3623 m
203.4561 464.7368 203.5444 465.0991 203.7217 465.4492 c
203.8989 465.7998 204.1494 466.0674 204.4741 466.252 c
204.7988 466.4365 205.1611 466.5288 205.5615 466.5288 c
206.1802 466.5288 206.687 466.3193 207.082 465.9009 c
207.4771 465.4824 207.6748 464.9531 207.6748 464.3145 c
207.6748 463.6699 207.4751 463.1353 207.0762 462.7114 c
206.6772 462.2876 206.1748 462.0757 205.5693 462.0757 c
205.1948 462.0757 204.8374 462.1641 204.4976 462.3403 c
204.1572 462.5166 203.8989 462.7754 203.7217 463.1167 c
203.5444 463.4575 203.4561 463.873 203.4561 464.3623 c
f1 D
204.5654 464.3022 m
204.5654 463.8809 204.6616 463.5576 204.8545 463.334 c
205.0474 463.1094 205.2847 462.9976 205.5674 462.9976 c
205.8501 462.9976 206.0869 463.1094 206.2783 463.334 c
206.4697 463.5576 206.5654 463.8833 206.5654 464.3105 c
206.5654 464.7266 206.4697 465.0469 206.2783 465.2705 c
206.0869 465.4951 205.8501 465.6069 205.5674 465.6069 c
205.2847 465.6069 205.0474 465.4951 204.8545 465.2705 c
204.6616 465.0469 204.5654 464.7236 204.5654 464.3022 c
f*U
*u
0 D
208.5132 462.1851 m
208.5132 468.0601 L
209.5913 468.0601 L
209.5913 462.1851 l
208.5132 462.1851 L
f*U
*u
213.0747 463.5288 m
214.1528 463.3413 L
214.0146 462.9287 213.7964 462.6147 213.498 462.3994 c
213.2002 462.1836 212.8271 462.0757 212.3794 462.0757 c
211.6704 462.0757 211.146 462.3174 210.8057 462.8018 c
210.5371 463.1895 210.4028 463.6787 210.4028 464.2705 c
210.4028 464.9766 210.5801 465.5293 210.9351 465.9287 c
211.29 466.3291 211.7393 466.5288 212.2822 466.5288 c
212.8916 466.5288 213.3726 466.3198 213.7251 465.9023 c
214.0776 465.4844 214.2461 464.8442 214.231 463.9819 c
211.5122 463.9819 L
211.5195 463.6514 211.6064 463.3945 211.772 463.2109 c
211.9375 463.0269 212.1436 462.9351 212.3906 462.9351 c
212.5586 462.9351 212.7002 462.9819 212.8149 463.0757 c
212.9292 463.1694 213.0161 463.3203 213.0747 463.5288 c
f1 D
213.1528 464.6694 m
213.145 464.9961 213.064 465.2441 212.9097 465.4141 c
212.7549 465.584 212.5669 465.6694 212.3457 465.6694 c
212.1089 465.6694 211.9131 465.5796 211.7588 465.4004 c
211.6045 465.2207 211.5288 464.9775 211.5313 464.6694 c
213.1528 464.6694 L
f*U
*u
0 D
216.9644 466.4507 m
216.9644 465.5601 L
216.23 465.5601 L
216.23 463.8271 L
216.23 463.4761 216.2373 463.2715 216.2515 463.2139 c
216.2656 463.1553 216.2979 463.1074 216.3486 463.0698 c
216.3989 463.0322 216.4604 463.0132 216.5332 463.0132 c
216.6343 463.0132 216.7803 463.0488 216.9722 463.1211 c
217.0425 462.2446 L
216.7939 462.1318 216.5127 462.0757 216.1982 462.0757 c
216.0054 462.0757 215.8315 462.1104 215.6768 462.1787 c
215.522 462.2471 215.4087 462.3359 215.3364 462.4453 c
215.2642 462.5547 215.2139 462.7021 215.186 462.8882 c
215.1631 463.02 215.1519 463.2871 215.1519 463.6885 c
215.1519 465.5601 L
214.6519 465.5601 L
214.6519 466.4507 L
215.1519 466.4507 L
215.1519 467.2944 L
216.23 467.9507 L
216.23 466.4507 l
216.9644 466.4507 L
f*U
Uu*u
167.7793 523.8516 m
167.7793 529.7266 L
168.8574 529.7266 L
168.8574 527.6025 L
169.1924 527.9976 169.5894 528.1953 170.0479 528.1953 c
170.5479 528.1953 170.9614 528.0073 171.2886 527.6318 c
171.6157 527.2559 171.7793 526.7158 171.7793 526.0127 c
171.7793 525.2852 171.6123 524.7246 171.2788 524.332 c
170.9448 523.9385 170.5396 523.7422 170.063 523.7422 c
169.8281 523.7422 169.5967 523.8052 169.3687 523.9307 c
169.1406 524.0566 168.9443 524.2383 168.7793 524.4766 c
168.7793 523.8516 l
167.7793 523.8516 L
f1 D
168.8418 526.0625 m
168.8418 525.6211 168.9092 525.2939 169.0439 525.083 c
169.2334 524.7827 169.4849 524.6328 169.7988 524.6328 c
170.04 524.6328 170.2451 524.7393 170.415 524.9521 c
170.585 525.165 170.6699 525.5 170.6699 525.958 c
170.6699 526.4453 170.5845 526.7969 170.4131 527.0127 c
170.2422 527.228 170.0229 527.3359 169.7559 527.3359 c
169.4941 527.3359 169.2764 527.2305 169.1025 527.0205 c
168.9287 526.8105 168.8418 526.4912 168.8418 526.0625 c
f*U
*u
0 D
172.6177 523.8516 m
172.6177 529.7266 L
173.6958 529.7266 L
173.6958 523.8516 l
172.6177 523.8516 L
f*U
*u
177.5234 523.8516 m
177.5234 524.4883 L
177.3745 524.2617 177.1782 524.0801 176.9355 523.9453 c
176.6924 523.8096 176.436 523.7422 176.166 523.7422 c
175.8911 523.7422 175.644 523.8057 175.4258 523.9316 c
175.207 524.0576 175.0488 524.2349 174.9512 524.4629 c
174.8535 524.6914 174.8047 525.0068 174.8047 525.4102 c
174.8047 528.1172 L
175.8828 528.1172 L
175.8828 526.1494 L
175.8828 525.5479 175.9028 525.1787 175.9429 525.043 c
175.9829 524.9072 176.0557 524.7998 176.1611 524.7207 c
176.2671 524.6411 176.4009 524.6016 176.5635 524.6016 c
176.749 524.6016 176.9155 524.6543 177.0625 524.7607 c
177.2095 524.8672 177.3101 524.999 177.3643 525.1563 c
177.4185 525.3135 177.4453 525.6982 177.4453 526.311 c
177.4453 528.1172 L
178.5234 528.1172 L
178.5234 523.8516 l
177.5234 523.8516 L
f*U
*u
181.9863 525.1953 m
183.0645 525.0078 L
182.9258 524.5952 182.708 524.2813 182.4097 524.0654 c
182.1113 523.8501 181.7388 523.7422 181.291 523.7422 c
180.582 523.7422 180.0576 523.9844 179.7173 524.4683 c
179.4482 524.856 179.3145 525.3457 179.3145 525.9365 c
179.3145 526.6426 179.4917 527.1953 179.8467 527.5957 c
180.2017 527.9951 180.6504 528.1953 181.1934 528.1953 c
181.8032 528.1953 182.2842 527.9863 182.6367 527.5684 c
182.9893 527.1504 183.1572 526.5107 183.1426 525.6484 c
180.4238 525.6484 L
180.4312 525.3179 180.5176 525.0605 180.6836 524.877 c
180.8486 524.6934 181.0552 524.6016 181.3022 524.6016 c
181.4702 524.6016 181.6113 524.6484 181.7266 524.7422 c
181.8408 524.8359 181.9277 524.9868 181.9863 525.1953 c
f1 D
182.0645 526.3359 m
182.0566 526.6626 181.9756 526.9111 181.8213 527.0811 c
181.6665 527.251 181.4785 527.3359 181.2573 527.3359 c
181.0205 527.3359 180.8247 527.2461 180.6704 527.0669 c
180.5161 526.8877 180.4404 526.6436 180.4424 526.3359 c
182.0645 526.3359 L
f*U
Uu*u
0 D
168.1289 622.8701 m
169.5352 622.7295 L
169.5581 622.5713 169.6118 622.4629 169.6953 622.4033 c
169.8105 622.3188 169.9927 622.2764 170.2407 622.2764 c
170.5581 622.2764 170.7964 622.3208 170.9551 622.4097 c
171.062 622.4688 171.1431 622.5645 171.1978 622.6963 c
171.2354 622.791 171.2539 622.9648 171.2539 623.2178 c
171.2588 623.8438 L
170.8931 623.3818 170.4321 623.1514 169.875 623.1514 c
169.2539 623.1514 168.7622 623.3926 168.3994 623.875 c
168.1147 624.2568 167.9727 624.7314 167.9727 625.2993 c
167.9727 626.0112 168.1592 626.5552 168.5317 626.9312 c
168.9048 627.3071 169.3682 627.4951 169.9224 627.4951 c
170.4937 627.4951 170.9639 627.2646 171.332 626.8037 c
171.332 627.417 L
172.4883 627.417 L
172.4883 623.5869 L
172.4883 623.0835 172.4434 622.707 172.353 622.458 c
172.2627 622.209 172.1362 622.0132 171.9736 621.8711 c
171.8105 621.7295 171.5933 621.6182 171.3213 621.5376 c
171.0493 621.457 170.7051 621.417 170.2891 621.417 c
169.5034 621.417 168.9463 621.541 168.6177 621.7891 c
168.2891 622.0376 168.1245 622.3525 168.1245 622.7334 c
168.1245 622.7705 168.126 622.8164 168.1289 622.8701 c
f1 D
169.2383 625.3628 m
169.2383 624.9116 169.332 624.5811 169.52 624.3721 c
169.708 624.1621 169.9399 624.0576 170.2153 624.0576 c
170.5107 624.0576 170.7603 624.165 170.9639 624.3799 c
171.1675 624.5947 171.2695 624.9131 171.2695 625.335 c
171.2695 625.7749 171.1719 626.1016 170.9771 626.3154 c
170.7817 626.5288 170.5352 626.6357 170.2368 626.6357 c
169.9468 626.6357 169.708 626.5313 169.52 626.3213 c
169.332 626.1123 169.2383 625.7925 169.2383 625.3628 c
f*U
*u
0 D
174.8945 623.1514 m
173.6602 623.1514 L
173.6602 627.417 L
174.8008 627.417 L
174.8008 626.8125 L
174.9951 627.0977 175.1699 627.2832 175.3252 627.3682 c
175.4805 627.4526 175.6567 627.4951 175.8545 627.4951 c
176.1333 627.4951 176.4019 627.4238 176.6602 627.2813 c
176.2773 626.2949 L
176.0728 626.418 175.8823 626.4795 175.707 626.4795 c
175.5366 626.4795 175.3926 626.4365 175.2744 626.3496 c
175.1563 626.2637 175.0635 626.1069 174.9961 625.8809 c
174.9282 625.6548 174.8945 625.1812 174.8945 624.46 c
174.8945 623.1514 L
f*U
*u
179.8921 624.4951 m
181.1108 624.3076 L
180.9531 623.895 180.7041 623.5811 180.3638 623.3652 c
180.0234 623.1499 179.5977 623.042 179.0864 623.042 c
178.2769 623.042 177.6782 623.2842 177.2896 623.7681 c
176.9829 624.1558 176.8296 624.6455 176.8296 625.2363 c
176.8296 625.9424 177.0308 626.4951 177.4336 626.8955 c
177.8364 627.2949 178.3457 627.4951 178.9619 627.4951 c
179.6538 627.4951 180.1997 627.2861 180.5996 626.8682 c
180.9995 626.4502 181.1904 625.8105 181.1733 624.9482 c
178.0952 624.9482 L
178.104 624.6177 178.2031 624.3604 178.3936 624.1768 c
178.584 623.9932 178.8213 623.9014 179.1055 623.9014 c
179.2988 623.9014 179.4614 623.9482 179.5933 624.042 c
179.7251 624.1357 179.8247 624.2866 179.8921 624.4951 c
f1 D
179.9546 625.6357 m
179.9458 625.9624 179.8535 626.2109 179.6787 626.3809 c
179.5039 626.5508 179.291 626.6357 179.04 626.6357 c
178.7715 626.6357 178.5498 626.5459 178.375 626.3667 c
178.2002 626.1875 178.1138 625.9434 178.1167 625.6357 c
179.9546 625.6357 L
f*U
*u
0 D
184.8687 624.4951 m
186.0874 624.3076 L
185.9297 623.895 185.6807 623.5811 185.3403 623.3652 c
185 623.1499 184.5742 623.042 184.063 623.042 c
183.2539 623.042 182.6548 623.2842 182.2666 623.7681 c
181.9595 624.1558 181.8062 624.6455 181.8062 625.2363 c
181.8062 625.9424 182.0078 626.4951 182.4106 626.8955 c
182.8135 627.2949 183.3228 627.4951 183.939 627.4951 c
184.6304 627.4951 185.1763 627.2861 185.5762 626.8682 c
185.9761 626.4502 186.1675 625.8105 186.1499 624.9482 c
183.0718 624.9482 L
183.0806 624.6177 183.1802 624.3604 183.3706 624.1768 c
183.561 623.9932 183.7983 623.9014 184.0825 623.9014 c
184.2759 623.9014 184.438 623.9482 184.5698 624.042 c
184.7017 624.1357 184.8013 624.2866 184.8687 624.4951 c
f1 D
184.9312 625.6357 m
184.9224 625.9624 184.8306 626.2109 184.6558 626.3809 c
184.4805 626.5508 184.2676 626.6357 184.0166 626.6357 c
183.7485 626.6357 183.5269 626.5459 183.3516 626.3667 c
183.1768 626.1875 183.0908 625.9434 183.0938 625.6357 c
184.9312 625.6357 L
f*U
*u
0 D
191.3618 623.1514 m
190.1274 623.1514 L
190.1274 625.3193 L
190.1274 625.7783 190.1016 626.0747 190.0498 626.2095 c
189.998 626.3442 189.9136 626.4492 189.7974 626.5234 c
189.6812 626.5986 189.541 626.6357 189.3774 626.6357 c
189.1675 626.6357 188.979 626.582 188.8125 626.4756 c
188.646 626.3691 188.5317 626.2275 188.4697 626.0518 c
188.4082 625.8755 188.3774 625.5503 188.3774 625.0757 c
188.3774 623.1514 L
187.1431 623.1514 L
187.1431 627.417 L
188.2837 627.417 L
188.2837 626.792 L
188.687 627.2607 189.1948 627.4951 189.8076 627.4951 c
190.0771 627.4951 190.3237 627.4502 190.5474 627.3613 c
190.771 627.2715 190.9399 627.1577 191.0547 627.019 c
191.1694 626.8804 191.249 626.7227 191.2939 626.5469 c
191.3389 626.3711 191.3618 626.1191 191.3618 625.791 c
191.3618 623.1514 L
f*U
Uu*u
247.7139 577.9326 m
249.0107 577.9326 L
250.1279 574.9014 L
251.2139 577.9326 L
252.4795 577.9326 L
250.8516 573.8315 L
250.5508 573.0752 L
250.4434 572.8271 250.3408 572.6387 250.2432 572.5078 c
250.1455 572.3774 250.0337 572.2715 249.9072 572.1904 c
249.7808 572.1094 249.625 572.0459 249.4404 572.0005 c
249.2554 571.9551 249.0469 571.9326 248.814 571.9326 c
248.5781 571.9326 248.3467 571.9551 248.1201 572 c
248.0107 572.876 L
248.2026 572.8408 248.376 572.8232 248.5303 572.8232 c
248.8154 572.8232 249.0264 572.9014 249.1631 573.0566 c
249.2998 573.2124 249.4048 573.4106 249.4775 573.6514 c
247.7139 577.9326 L
f*U
*u
255.9873 575.0107 m
257.2061 574.8232 L
257.0488 574.4106 256.7998 574.0967 256.459 573.8809 c
256.1191 573.6655 255.6934 573.5576 255.1816 573.5576 c
254.3726 573.5576 253.7734 573.7998 253.3853 574.2837 c
253.0781 574.6714 252.9248 575.1611 252.9248 575.752 c
252.9248 576.458 253.1265 577.0107 253.5293 577.4111 c
253.9321 577.8105 254.4414 578.0107 255.0576 578.0107 c
255.749 578.0107 256.2949 577.8018 256.6953 577.3838 c
257.0947 576.9658 257.2861 576.3262 257.2686 575.4639 c
254.1904 575.4639 L
254.1992 575.1333 254.2988 574.876 254.4893 574.6924 c
254.6797 574.5088 254.917 574.417 255.2012 574.417 c
255.3945 574.417 255.5566 574.4639 255.6885 574.5576 c
255.8203 574.6514 255.9199 574.8022 255.9873 575.0107 c
f1 D
256.0498 576.1514 m
256.041 576.478 255.9492 576.7266 255.7744 576.8965 c
255.5996 577.0664 255.3867 577.1514 255.1357 577.1514 c
254.8672 577.1514 254.6455 577.0615 254.4707 576.8823 c
254.2959 576.7031 254.2095 576.459 254.2124 576.1514 c
256.0498 576.1514 L
f*U
*u
0 D
258.2617 573.667 m
258.2617 579.542 L
259.4961 579.542 L
259.4961 573.667 l
258.2617 573.667 L
f*U
*u
260.7505 573.667 m
260.7505 579.542 L
261.9849 579.542 L
261.9849 573.667 l
260.7505 573.667 L
f*U
*u
262.9419 575.8442 m
262.9419 576.2188 263.0425 576.5811 263.2437 576.9316 c
263.4448 577.2817 263.73 577.5493 264.0991 577.7339 c
264.4683 577.9185 264.8804 578.0107 265.3359 578.0107 c
266.0391 578.0107 266.6152 577.8013 267.0645 577.3828 c
267.5137 576.9644 267.7388 576.4355 267.7388 575.7959 c
267.7388 575.1514 267.5117 574.6172 267.0581 574.1934 c
266.6045 573.7695 266.0332 573.5576 265.3447 573.5576 c
264.9185 573.5576 264.5122 573.646 264.1255 573.8223 c
263.7388 573.999 263.4448 574.2578 263.2437 574.5986 c
263.0425 574.9395 262.9419 575.3545 262.9419 575.8442 c
f1 D
264.2075 575.7842 m
264.2075 575.3623 264.3164 575.04 264.5347 574.8154 c
264.7529 574.5918 265.022 574.4795 265.3423 574.4795 c
265.6626 574.4795 265.9312 574.5918 266.1479 574.8154 c
266.3647 575.04 266.4731 575.3652 266.4731 575.792 c
266.4731 576.208 266.3647 576.5283 266.1479 576.7529 c
265.9312 576.9766 265.6626 577.0889 265.3423 577.0889 c
265.022 577.0889 264.7529 576.9766 264.5347 576.7529 c
264.3164 576.5283 264.2075 576.2056 264.2075 575.7842 c
f*U
*u
0 D
269.5879 573.667 m
268.1138 577.9326 L
269.3115 577.9326 L
270.1841 575.1367 L
270.9868 577.9326 L
272.1748 577.9326 L
272.9497 575.1367 L
273.8384 577.9326 L
275.0513 577.9326 L
273.5586 573.667 L
272.376 573.667 L
271.5747 576.4102 L
270.7852 573.667 l
269.5879 573.667 L
f*U
Uu*u
301.4946 509.667 m
300.2603 509.667 L
300.2603 513.9326 L
301.4009 513.9326 L
301.4009 513.3281 L
301.5952 513.6133 301.7705 513.7988 301.9258 513.8838 c
302.0811 513.9683 302.2568 514.0107 302.4546 514.0107 c
302.7334 514.0107 303.002 513.9395 303.2603 513.7969 c
302.8774 512.8105 L
302.6729 512.9336 302.4824 512.9951 302.3071 512.9951 c
302.1367 512.9951 301.9932 512.9521 301.875 512.8652 c
301.7568 512.7793 301.6641 512.6226 301.5962 512.3965 c
301.5283 512.1704 301.4946 511.6968 301.4946 510.9756 c
301.4946 509.667 L
f*U
*u
306.4922 511.0107 m
307.7109 510.8232 L
307.5527 510.4106 307.3037 510.0967 306.9639 509.8809 c
306.6235 509.6655 306.1978 509.5576 305.6865 509.5576 c
304.877 509.5576 304.2783 509.7998 303.8896 510.2837 c
303.583 510.6714 303.4297 511.1611 303.4297 511.752 c
303.4297 512.458 303.6309 513.0107 304.0337 513.4111 c
304.4365 513.8105 304.9458 514.0107 305.562 514.0107 c
306.2539 514.0107 306.7998 513.8018 307.1992 513.3838 c
307.5996 512.9658 307.791 512.3262 307.7734 511.4639 c
304.6953 511.4639 L
304.7041 511.1333 304.8032 510.876 304.9937 510.6924 c
305.1841 510.5088 305.4214 510.417 305.7056 510.417 c
305.8989 510.417 306.0615 510.4639 306.1934 510.5576 c
306.3252 510.6514 306.4248 510.8022 306.4922 511.0107 c
f1 D
306.5547 512.1514 m
306.5459 512.478 306.4536 512.7266 306.2788 512.8965 c
306.104 513.0664 305.8911 513.1514 305.6401 513.1514 c
305.3716 513.1514 305.1499 513.0615 304.9751 512.8823 c
304.8003 512.7031 304.7139 512.459 304.7168 512.1514 c
306.5547 512.1514 L
f*U
*u
0 D
313.0322 509.667 m
311.8916 509.667 L
311.8916 510.292 L
311.7021 510.0488 311.4785 509.8652 311.2207 509.7422 c
310.9629 509.6191 310.7031 509.5576 310.4404 509.5576 c
309.9072 509.5576 309.4512 509.7549 309.0713 510.1494 c
308.6904 510.5439 308.501 511.0942 308.501 511.8003 c
308.501 512.5225 308.6855 513.0713 309.0547 513.4473 c
309.4238 513.8228 309.8906 514.0107 310.4541 514.0107 c
310.9717 514.0107 311.4199 513.813 311.7979 513.418 c
311.7979 515.542 L
313.0322 515.542 l
313.0322 509.667 L
f1 D
309.7666 511.8779 m
309.7666 511.4229 309.835 511.0938 309.9707 510.8901 c
310.168 510.5957 310.4443 510.4482 310.7988 510.4482 c
311.0801 510.4482 311.3193 510.5586 311.5176 510.7793 c
311.7148 511.0005 311.8135 511.3306 311.8135 511.7695 c
311.8135 512.2598 311.7178 512.6123 311.5254 512.8281 c
311.334 513.0435 311.0889 513.1514 310.79 513.1514 c
310.499 513.1514 310.2559 513.0449 310.0605 512.832 c
309.8643 512.6191 309.7666 512.3008 309.7666 511.8779 c
f*U
Uu*u
0 D
134.3853 434.7861 m
134.8652 434.7861 135.2407 434.6323 135.5112 434.3252 c
135.8335 433.9614 135.9946 433.3579 135.9946 432.5151 c
135.9946 431.6743 135.832 431.0698 135.5078 430.7021 c
135.2393 430.3984 134.8652 430.2471 134.3853 430.2471 c
133.9028 430.2471 133.5142 430.4131 133.2188 430.7461 c
132.9233 431.0781 132.7759 431.6709 132.7759 432.5244 c
132.7759 433.3608 132.938 433.9634 133.2627 434.3311 c
133.5308 434.6348 133.9053 434.7861 134.3853 434.7861 c
f1 D
134.3853 434.083 m
134.2715 434.083 134.1699 434.0498 134.0806 433.9844 c
133.9912 433.9185 133.9219 433.8003 133.873 433.6304 c
133.8081 433.4092 133.7759 433.0376 133.7759 432.5151 c
133.7759 431.9922 133.8047 431.6333 133.8628 431.438 c
133.9209 431.2422 133.9941 431.1123 134.082 431.0474 c
134.1704 430.9824 134.2715 430.9502 134.3853 430.9502 c
134.499 430.9502 134.6006 430.9829 134.6899 431.0488 c
134.7793 431.1147 134.8486 431.2329 134.8975 431.4028 c
134.9624 431.6216 134.9946 431.9922 134.9946 432.5151 c
134.9946 433.0376 134.9658 433.3965 134.9077 433.5923 c
134.8496 433.7876 134.7764 433.9185 134.6885 433.9844 c
134.6001 434.0498 134.499 434.083 134.3853 434.083 c
f*U
*u
0 D
136.832 430.333 m
136.832 431.1846 L
137.7773 431.1846 L
137.7773 430.333 l
136.832 430.333 L
f*U
*u
140.1523 434.7861 m
140.6323 434.7861 141.0078 434.6323 141.2783 434.3252 c
141.6006 433.9614 141.7617 433.3579 141.7617 432.5151 c
141.7617 431.6743 141.5991 431.0698 141.2749 430.7021 c
141.0063 430.3984 140.6323 430.2471 140.1523 430.2471 c
139.6699 430.2471 139.2813 430.4131 138.9858 430.7461 c
138.6904 431.0781 138.543 431.6709 138.543 432.5244 c
138.543 433.3608 138.7051 433.9634 139.0298 434.3311 c
139.2979 434.6348 139.6719 434.7861 140.1523 434.7861 c
f1 D
140.1523 434.083 m
140.0386 434.083 139.937 434.0498 139.8477 433.9844 c
139.7583 433.9185 139.689 433.8003 139.6401 433.6304 c
139.5752 433.4092 139.543 433.0376 139.543 432.5151 c
139.543 431.9922 139.5718 431.6333 139.6299 431.438 c
139.688 431.2422 139.7612 431.1123 139.8491 431.0474 c
139.9375 430.9824 140.0386 430.9502 140.1523 430.9502 c
140.2661 430.9502 140.3677 430.9829 140.457 431.0488 c
140.5464 431.1147 140.6152 431.2329 140.6646 431.4028 c
140.7295 431.6216 140.7617 431.9922 140.7617 432.5151 c
140.7617 433.0376 140.7324 433.3965 140.6748 433.5923 c
140.6167 433.7876 140.5435 433.9185 140.4551 433.9844 c
140.3672 434.0498 140.2661 434.083 140.1523 434.083 c
f*U
Uu*u
0 D
134.3853 461.4526 m
134.8652 461.4526 135.2407 461.2988 135.5112 460.9917 c
135.8335 460.6279 135.9946 460.0244 135.9946 459.1816 c
135.9946 458.3408 135.832 457.7363 135.5078 457.3682 c
135.2393 457.0654 134.8652 456.9136 134.3853 456.9136 c
133.9028 456.9136 133.5142 457.0801 133.2188 457.4121 c
132.9233 457.7451 132.7759 458.3379 132.7759 459.1904 c
132.7759 460.0273 132.938 460.6299 133.2627 460.998 c
133.5308 461.3008 133.9053 461.4526 134.3853 461.4526 c
f1 D
134.3853 460.7495 m
134.2715 460.7495 134.1699 460.7168 134.0806 460.6509 c
133.9912 460.585 133.9219 460.4668 133.873 460.2969 c
133.8081 460.0762 133.7759 459.7041 133.7759 459.1816 c
133.7759 458.6592 133.8047 458.2998 133.8628 458.1045 c
133.9209 457.9087 133.9941 457.7788 134.082 457.7139 c
134.1704 457.6489 134.2715 457.6167 134.3853 457.6167 c
134.499 457.6167 134.6006 457.6494 134.6899 457.7153 c
134.7793 457.7813 134.8486 457.8994 134.8975 458.0693 c
134.9624 458.2881 134.9946 458.6592 134.9946 459.1816 c
134.9946 459.7041 134.9658 460.0635 134.9077 460.2588 c
134.8496 460.4541 134.7764 460.585 134.6885 460.6509 c
134.6001 460.7168 134.499 460.7495 134.3853 460.7495 c
f*U
*u
0 D
136.832 456.9995 m
136.832 457.8511 L
137.7773 457.8511 L
137.7773 456.9995 l
136.832 456.9995 L
f*U
*u
140.9805 456.9995 m
140.0352 456.9995 L
140.0352 460.2002 L
139.688 459.9092 139.2793 459.6934 138.8086 459.5542 c
138.8086 460.3276 L
139.0557 460.4004 139.3247 460.5381 139.6147 460.7412 c
139.9048 460.9443 140.1035 461.1816 140.2114 461.4526 c
140.9805 461.4526 l
140.9805 456.9995 L
f*U
Uu*u
134.3853 677.5181 m
134.8652 677.5181 135.2407 677.3643 135.5112 677.0571 c
135.8335 676.6934 135.9946 676.0898 135.9946 675.2471 c
135.9946 674.4063 135.832 673.8018 135.5078 673.4336 c
135.2393 673.1309 134.8652 672.979 134.3853 672.979 c
133.9028 672.979 133.5142 673.1455 133.2188 673.4775 c
132.9233 673.8105 132.7759 674.4033 132.7759 675.2559 c
132.7759 676.0928 132.938 676.6953 133.2627 677.0635 c
133.5308 677.3662 133.9053 677.5181 134.3853 677.5181 c
f1 D
134.3853 676.8149 m
134.2715 676.8149 134.1699 676.7822 134.0806 676.7163 c
133.9912 676.6504 133.9219 676.5322 133.873 676.3623 c
133.8081 676.1416 133.7759 675.7695 133.7759 675.2471 c
133.7759 674.7246 133.8047 674.3652 133.8628 674.1699 c
133.9209 673.9741 133.9941 673.8442 134.082 673.7793 c
134.1704 673.7144 134.2715 673.6821 134.3853 673.6821 c
134.499 673.6821 134.6006 673.7148 134.6899 673.7808 c
134.7793 673.8467 134.8486 673.9648 134.8975 674.1348 c
134.9624 674.3535 134.9946 674.7246 134.9946 675.2471 c
134.9946 675.7695 134.9658 676.1289 134.9077 676.3242 c
134.8496 676.5195 134.7764 676.6504 134.6885 676.7163 c
134.6001 676.7822 134.499 676.8149 134.3853 676.8149 c
f*U
*u
0 D
136.832 673.0649 m
136.832 673.9165 L
137.7773 673.9165 L
137.7773 673.0649 l
136.832 673.0649 L
f*U
*u
138.582 674.084 m
139.5039 674.1743 L
139.5259 674.0073 139.584 673.8833 139.6782 673.8027 c
139.772 673.7222 139.896 673.6821 140.0498 673.6821 c
140.2441 673.6821 140.4092 673.7637 140.5454 673.9268 c
140.6816 674.0894 140.769 674.4263 140.8071 674.937 c
140.5684 674.689 140.27 674.5649 139.9121 674.5649 c
139.5225 674.5649 139.1865 674.6992 138.9043 674.9683 c
138.6216 675.2373 138.4805 675.5874 138.4805 676.0186 c
138.4805 676.4683 138.6294 676.8301 138.9277 677.1055 c
139.2256 677.3804 139.6055 677.5181 140.0669 677.5181 c
140.5688 677.5181 140.9805 677.3438 141.3022 676.9951 c
141.624 676.647 141.7852 676.0737 141.7852 675.2759 c
141.7852 674.4639 141.6177 673.8779 141.2832 673.5186 c
140.9487 673.1587 140.5132 672.979 139.9766 672.979 c
139.5903 672.979 139.2778 673.0713 139.04 673.2559 c
138.8018 673.4404 138.6494 673.7163 138.582 674.084 c
f1 D
140.7227 675.9512 m
140.7227 676.2246 140.6519 676.4375 140.5112 676.5884 c
140.3701 676.7393 140.207 676.8149 140.0225 676.8149 c
139.8462 676.8149 139.7002 676.7529 139.5845 676.6289 c
139.4683 676.5054 139.4102 676.3027 139.4102 676.0205 c
139.4102 675.7344 139.4731 675.5244 139.5996 675.3906 c
139.7256 675.2568 139.8838 675.1899 140.0732 675.1899 c
140.2559 675.1899 140.4097 675.2544 140.5347 675.3833 c
140.6602 675.5122 140.7227 675.7012 140.7227 675.9512 c
f*U
Uu*u
0 D
134.2759 649.8521 m
134.7256 649.8521 135.0771 649.6982 135.3306 649.3911 c
135.6328 649.0273 135.7837 648.4238 135.7837 647.5811 c
135.7837 646.7402 135.6318 646.1357 135.3276 645.7676 c
135.0762 645.4648 134.7256 645.313 134.2759 645.313 c
133.8242 645.313 133.4595 645.4795 133.1831 645.8115 c
132.9063 646.1445 132.7681 646.7373 132.7681 647.5898 c
132.7681 648.4268 132.9199 649.0293 133.2241 649.3975 c
133.4756 649.7002 133.8262 649.8521 134.2759 649.8521 c
f1 D
134.2759 649.1489 m
134.1694 649.1489 134.0742 649.1162 133.9907 649.0503 c
133.9072 648.9844 133.8423 648.8662 133.7964 648.6963 c
133.7358 648.4756 133.7056 648.1035 133.7056 647.5811 c
133.7056 647.0586 133.7324 646.6992 133.7871 646.5039 c
133.8413 646.3081 133.9097 646.1782 133.9922 646.1133 c
134.0747 646.0483 134.1694 646.0161 134.2759 646.0161 c
134.3823 646.0161 134.4775 646.0488 134.561 646.1147 c
134.6445 646.1807 134.7095 646.2988 134.7554 646.4688 c
134.8159 646.6875 134.8462 647.0586 134.8462 647.5811 c
134.8462 648.1035 134.8188 648.4629 134.7646 648.6582 c
134.7104 648.8535 134.6421 648.9844 134.5596 649.0503 c
134.4771 649.1162 134.3823 649.1489 134.2759 649.1489 c
f*U
*u
0 D
136.5605 645.3989 m
136.5605 646.2505 L
137.4512 646.2505 L
137.4512 645.3989 l
136.5605 645.3989 L
f*U
*u
138.9326 647.7886 m
138.7031 647.8813 138.5366 648.0093 138.4321 648.1719 c
138.3281 648.3345 138.2759 648.5127 138.2759 648.7065 c
138.2759 649.0381 138.3965 649.3115 138.6377 649.5278 c
138.8789 649.7441 139.2222 649.8521 139.6665 649.8521 c
140.1069 649.8521 140.4487 649.7441 140.6924 649.5278 c
140.9355 649.3115 141.0571 649.0381 141.0571 648.7065 c
141.0571 648.5005 141.001 648.3174 140.8887 648.1567 c
140.7764 647.9961 140.6187 647.873 140.415 647.7886 c
140.6733 647.6895 140.8696 647.5449 141.0039 647.355 c
141.1387 647.165 141.2056 646.9463 141.2056 646.6978 c
141.2056 646.2876 141.0693 645.9541 140.7964 645.6978 c
140.5234 645.4414 140.1606 645.313 139.7075 645.313 c
139.2861 645.313 138.9355 645.4189 138.6553 645.6309 c
138.3242 645.8818 138.1587 646.2251 138.1587 646.6611 c
138.1587 646.9014 138.2212 647.1221 138.3452 647.3232 c
138.4697 647.5244 138.6655 647.6792 138.9326 647.7886 c
f1 D
139.0337 646.7397 m
139.0337 646.5024 139.0962 646.3174 139.2212 646.1846 c
139.3462 646.0513 139.5024 645.9849 139.6895 645.9849 c
139.8721 645.9849 140.0234 646.0488 140.1431 646.1768 c
140.2632 646.3047 140.3228 646.4893 140.3228 646.7305 c
140.3228 646.9414 140.2617 647.1104 140.1401 647.2383 c
140.0181 647.3662 139.8638 647.4302 139.6768 647.4302 c
139.4604 647.4302 139.2993 647.3574 139.1929 647.2124 c
139.0869 647.0669 139.0337 646.9092 139.0337 646.7397 c
f139.1196 648.6455 m
139.1196 648.4746 139.1694 648.3413 139.269 648.2456 c
139.3687 648.1499 139.5015 648.1021 139.6675 648.1021 c
139.8354 648.1021 139.9697 648.1504 140.0703 648.2471 c
140.1709 648.3438 140.2212 648.4775 140.2212 648.6489 c
140.2212 648.8096 140.1714 648.9385 140.0718 649.0352 c
139.9722 649.1318 139.8403 649.1802 139.6768 649.1802 c
139.5068 649.1802 139.3716 649.1313 139.271 649.0337 c
139.1699 648.9355 139.1196 648.8066 139.1196 648.6455 c
f*U
Uu*u
0 D
134.3853 623.5186 m
134.8652 623.5186 135.2407 623.3647 135.5112 623.0576 c
135.8335 622.6938 135.9946 622.0903 135.9946 621.2476 c
135.9946 620.4067 135.832 619.8022 135.5078 619.4346 c
135.2393 619.1309 134.8652 618.9795 134.3853 618.9795 c
133.9028 618.9795 133.5142 619.1455 133.2188 619.4785 c
132.9233 619.8105 132.7759 620.4033 132.7759 621.2568 c
132.7759 622.0933 132.938 622.6958 133.2627 623.0635 c
133.5308 623.3672 133.9053 623.5186 134.3853 623.5186 c
f1 D
134.3853 622.8154 m
134.2715 622.8154 134.1699 622.7822 134.0806 622.7168 c
133.9912 622.6509 133.9219 622.5327 133.873 622.3628 c
133.8081 622.1416 133.7759 621.77 133.7759 621.2476 c
133.7759 620.7246 133.8047 620.3657 133.8628 620.1704 c
133.9209 619.9746 133.9941 619.8447 134.082 619.7798 c
134.1704 619.7148 134.2715 619.6826 134.3853 619.6826 c
134.499 619.6826 134.6006 619.7153 134.6899 619.7813 c
134.7793 619.8472 134.8486 619.9653 134.8975 620.1353 c
134.9624 620.354 134.9946 620.7246 134.9946 621.2476 c
134.9946 621.77 134.9658 622.1289 134.9077 622.3247 c
134.8496 622.52 134.7764 622.6509 134.6885 622.7168 c
134.6001 622.7822 134.499 622.8154 134.3853 622.8154 c
f*U
*u
0 D
136.832 619.0654 m
136.832 619.917 L
137.7773 619.917 L
137.7773 619.0654 l
136.832 619.0654 L
f*U
*u
138.5586 622.6592 m
138.5586 623.4482 L
141.8008 623.4482 L
141.8008 622.8311 L
141.5327 622.5947 141.2607 622.2549 140.9839 621.8125 c
140.707 621.3696 140.4961 620.8994 140.3511 620.4009 c
140.2061 619.9023 140.1343 619.4575 140.1367 619.0654 c
139.2227 619.0654 L
139.2383 619.6802 139.3794 620.3066 139.646 620.9458 c
139.9126 621.5845 140.2686 622.1558 140.7139 622.6592 c
138.5586 622.6592 L
f*U
Uu*u
134.2759 596.1851 m
134.7256 596.1851 135.0771 596.0313 135.3306 595.7241 c
135.6328 595.3604 135.7837 594.7568 135.7837 593.9141 c
135.7837 593.0732 135.6318 592.4688 135.3276 592.1006 c
135.0762 591.7979 134.7256 591.646 134.2759 591.646 c
133.8242 591.646 133.4595 591.8125 133.1831 592.1445 c
132.9063 592.4775 132.7681 593.0703 132.7681 593.9229 c
132.7681 594.7598 132.9199 595.3623 133.2241 595.7305 c
133.4756 596.0332 133.8262 596.1851 134.2759 596.1851 c
f1 D
134.2759 595.4819 m
134.1694 595.4819 134.0742 595.4492 133.9907 595.3833 c
133.9072 595.3174 133.8423 595.1992 133.7964 595.0293 c
133.7358 594.8086 133.7056 594.4365 133.7056 593.9141 c
133.7056 593.3916 133.7324 593.0322 133.7871 592.8369 c
133.8413 592.6411 133.9097 592.5112 133.9922 592.4463 c
134.0747 592.3813 134.1694 592.3491 134.2759 592.3491 c
134.3823 592.3491 134.4775 592.3818 134.561 592.4478 c
134.6445 592.5137 134.7095 592.6318 134.7554 592.8018 c
134.8159 593.0205 134.8462 593.3916 134.8462 593.9141 c
134.8462 594.4365 134.8188 594.7959 134.7646 594.9912 c
134.7104 595.1865 134.6421 595.3174 134.5596 595.3833 c
134.4771 595.4492 134.3823 595.4819 134.2759 595.4819 c
f*U
*u
0 D
136.5605 591.7319 m
136.5605 592.5835 L
137.4512 592.5835 L
137.4512 591.7319 l
136.5605 591.7319 L
f*U
*u
141.1826 595.0801 m
140.3232 594.9897 L
140.3022 595.1577 140.2476 595.2817 140.1597 595.3618 c
140.0713 595.4419 139.957 595.4819 139.8164 595.4819 c
139.6294 595.4819 139.4717 595.4019 139.3428 595.2417 c
139.2134 595.082 139.1323 594.7476 139.0986 594.2397 c
139.3203 594.4897 139.5957 594.6147 139.9248 594.6147 c
140.2959 594.6147 140.6143 594.479 140.8789 594.2075 c
141.144 593.936 141.2764 593.5859 141.2764 593.1563 c
141.2764 592.7002 141.1367 592.335 140.8579 592.0591 c
140.5791 591.7837 140.2212 591.646 139.7842 591.646 c
139.3154 591.646 138.9297 591.8203 138.6279 592.1689 c
138.3257 592.5176 138.1748 593.0894 138.1748 593.8838 c
138.1748 594.6982 138.3315 595.2852 138.6455 595.6455 c
138.9595 596.0049 139.3667 596.1851 139.8682 596.1851 c
140.2197 596.1851 140.5112 596.0908 140.7417 595.9019 c
140.9727 595.7129 141.1191 595.439 141.1826 595.0801 c
f1 D
139.1748 593.2227 m
139.1748 592.9438 139.2412 592.7285 139.3745 592.5767 c
139.5078 592.4248 139.6602 592.3491 139.8315 592.3491 c
139.9966 592.3491 140.1343 592.4111 140.2441 592.5352 c
140.354 592.6597 140.4092 592.8633 140.4092 593.1465 c
140.4092 593.4375 140.3496 593.6509 140.2314 593.7866 c
140.1128 593.9219 139.9648 593.9897 139.7871 593.9897 c
139.6157 593.9897 139.4707 593.9248 139.3525 593.7959 c
139.2339 593.666 139.1748 593.4756 139.1748 593.2227 c
f*U
Uu*u
0 D
134.3853 569.8521 m
134.8652 569.8521 135.2407 569.6982 135.5112 569.3911 c
135.8335 569.0273 135.9946 568.4238 135.9946 567.5811 c
135.9946 566.7402 135.832 566.1357 135.5078 565.7676 c
135.2393 565.4648 134.8652 565.313 134.3853 565.313 c
133.9028 565.313 133.5142 565.4795 133.2188 565.8115 c
132.9233 566.1445 132.7759 566.7373 132.7759 567.5898 c
132.7759 568.4268 132.938 569.0293 133.2627 569.3975 c
133.5308 569.7002 133.9053 569.8521 134.3853 569.8521 c
f1 D
134.3853 569.1489 m
134.2715 569.1489 134.1699 569.1162 134.0806 569.0503 c
133.9912 568.9844 133.9219 568.8662 133.873 568.6963 c
133.8081 568.4756 133.7759 568.1035 133.7759 567.5811 c
133.7759 567.0586 133.8047 566.6992 133.8628 566.5039 c
133.9209 566.3081 133.9941 566.1782 134.082 566.1133 c
134.1704 566.0483 134.2715 566.0161 134.3853 566.0161 c
134.499 566.0161 134.6006 566.0488 134.6899 566.1147 c
134.7793 566.1807 134.8486 566.2988 134.8975 566.4688 c
134.9624 566.6875 134.9946 567.0586 134.9946 567.5811 c
134.9946 568.1035 134.9658 568.4629 134.9077 568.6582 c
134.8496 568.8535 134.7764 568.9844 134.6885 569.0503 c
134.6001 569.1162 134.499 569.1489 134.3853 569.1489 c
f*U
*u
0 D
136.832 565.3989 m
136.832 566.2505 L
137.7773 566.2505 L
137.7773 565.3989 l
136.832 565.3989 L
f*U
*u
138.5664 566.5298 m
139.5117 566.6177 L
139.5386 566.4258 139.6187 566.2734 139.751 566.1611 c
139.8838 566.0488 140.0366 565.9927 140.21 565.9927 c
140.4077 565.9927 140.5752 566.0654 140.7124 566.2114 c
140.8491 566.3569 140.918 566.5767 140.918 566.8701 c
140.918 567.1455 140.8501 567.3516 140.7139 567.4893 c
140.5781 567.627 140.4009 567.6958 140.1831 567.6958 c
139.9111 567.6958 139.6675 567.5889 139.4517 567.3755 c
138.6836 567.4741 L
139.168 569.7817 L
141.6758 569.7817 L
141.6758 568.9849 L
139.8877 568.9849 L
139.7383 568.2334 L
139.9497 568.3281 140.1655 568.3755 140.3862 568.3755 c
140.8066 568.3755 141.1631 568.2373 141.4556 567.9614 c
141.748 567.6855 141.8945 567.3271 141.8945 566.8867 c
141.8945 566.5195 141.7764 566.1914 141.54 565.9033 c
141.2183 565.5098 140.7715 565.313 140.2002 565.313 c
139.7432 565.313 139.3706 565.4229 139.0825 565.6426 c
138.7944 565.8628 138.6226 566.1582 138.5664 566.5298 c
f*U
Uu*u
134.3853 542.1851 m
134.8652 542.1851 135.2407 542.0313 135.5112 541.7241 c
135.8335 541.3604 135.9946 540.7568 135.9946 539.9141 c
135.9946 539.0732 135.832 538.4688 135.5078 538.1006 c
135.2393 537.7979 134.8652 537.646 134.3853 537.646 c
133.9028 537.646 133.5142 537.8125 133.2188 538.1445 c
132.9233 538.4775 132.7759 539.0703 132.7759 539.9229 c
132.7759 540.7598 132.938 541.3623 133.2627 541.7305 c
133.5308 542.0332 133.9053 542.1851 134.3853 542.1851 c
f1 D
134.3853 541.4819 m
134.2715 541.4819 134.1699 541.4492 134.0806 541.3833 c
133.9912 541.3174 133.9219 541.1992 133.873 541.0293 c
133.8081 540.8086 133.7759 540.4365 133.7759 539.9141 c
133.7759 539.3916 133.8047 539.0322 133.8628 538.8369 c
133.9209 538.6411 133.9941 538.5112 134.082 538.4463 c
134.1704 538.3813 134.2715 538.3491 134.3853 538.3491 c
134.499 538.3491 134.6006 538.3818 134.6899 538.4478 c
134.7793 538.5137 134.8486 538.6318 134.8975 538.8018 c
134.9624 539.0205 134.9946 539.3916 134.9946 539.9141 c
134.9946 540.4365 134.9658 540.7959 134.9077 540.9912 c
134.8496 541.1865 134.7764 541.3174 134.6885 541.3833 c
134.6001 541.4492 134.499 541.4819 134.3853 541.4819 c
f*U
*u
0 D
136.832 537.7319 m
136.832 538.5835 L
137.7773 538.5835 L
137.7773 537.7319 l
136.832 537.7319 L
f*U
*u
140.4023 537.7319 m
140.4023 538.6226 L
138.3867 538.6226 L
138.3867 539.3618 L
140.5244 542.1851 L
141.3242 542.1851 L
141.3242 539.3647 L
141.9414 539.3647 L
141.9414 538.6226 L
141.3242 538.6226 L
141.3242 537.7319 l
140.4023 537.7319 L
f1 D
140.4023 539.3647 m
140.4023 540.8647 L
139.2764 539.3647 l
140.4023 539.3647 L
f*U
Uu*u
0 D
134.3853 514.8521 m
134.8652 514.8521 135.2407 514.6982 135.5112 514.3911 c
135.8335 514.0273 135.9946 513.4238 135.9946 512.5811 c
135.9946 511.7402 135.832 511.1357 135.5078 510.7676 c
135.2393 510.4648 134.8652 510.313 134.3853 510.313 c
133.9028 510.313 133.5142 510.4795 133.2188 510.8115 c
132.9233 511.1445 132.7759 511.7373 132.7759 512.5898 c
132.7759 513.4268 132.938 514.0293 133.2627 514.3975 c
133.5308 514.7002 133.9053 514.8521 134.3853 514.8521 c
f1 D
134.3853 514.1489 m
134.2715 514.1489 134.1699 514.1162 134.0806 514.0503 c
133.9912 513.9844 133.9219 513.8662 133.873 513.6963 c
133.8081 513.4756 133.7759 513.1035 133.7759 512.5811 c
133.7759 512.0586 133.8047 511.6992 133.8628 511.5039 c
133.9209 511.3081 133.9941 511.1782 134.082 511.1133 c
134.1704 511.0483 134.2715 511.0161 134.3853 511.0161 c
134.499 511.0161 134.6006 511.0488 134.6899 511.1147 c
134.7793 511.1807 134.8486 511.2988 134.8975 511.4688 c
134.9624 511.6875 134.9946 512.0586 134.9946 512.5811 c
134.9946 513.1035 134.9658 513.4629 134.9077 513.6582 c
134.8496 513.8535 134.7764 513.9844 134.6885 514.0503 c
134.6001 514.1162 134.499 514.1489 134.3853 514.1489 c
f*U
*u
0 D
136.832 510.3989 m
136.832 511.2505 L
137.7773 511.2505 L
137.7773 510.3989 l
136.832 510.3989 L
f*U
*u
138.5195 511.5645 m
139.4414 511.6646 L
139.4707 511.4541 139.5493 511.2939 139.6777 511.1826 c
139.8062 511.0718 139.9614 511.0161 140.144 511.0161 c
140.3398 511.0161 140.5049 511.083 140.6387 511.2173 c
140.7729 511.3516 140.8398 511.5322 140.8398 511.7603 c
140.8398 511.9756 140.7754 512.1465 140.6465 512.2725 c
140.5176 512.3984 140.3608 512.4614 140.1753 512.4614 c
140.0532 512.4614 139.9077 512.4404 139.7383 512.3979 c
139.8433 513.0864 L
140.1011 513.0801 140.2974 513.1304 140.4331 513.2363 c
140.5688 513.3423 140.6367 513.4829 140.6367 513.6587 c
140.6367 513.8076 140.5869 513.9268 140.4878 514.0156 c
140.3882 514.1045 140.2563 514.1489 140.0913 514.1489 c
139.9287 514.1489 139.79 514.0986 139.6748 513.9976 c
139.5596 513.8965 139.4897 513.749 139.4648 513.5552 c
138.5898 513.6885 L
138.6504 513.958 138.7427 514.1729 138.8652 514.334 c
138.9883 514.4951 139.1597 514.6216 139.3794 514.7139 c
139.5991 514.8057 139.8457 514.8521 140.1187 514.8521 c
140.5854 514.8521 140.9595 514.7188 141.2412 514.4521 c
141.4736 514.2339 141.5898 513.9878 141.5898 513.7129 c
141.5898 513.3232 141.3521 513.0122 140.8765 512.7798 c
141.1592 512.7251 141.3853 512.603 141.5547 512.4126 c
141.7236 512.2227 141.8086 511.9932 141.8086 511.7241 c
141.8086 511.3335 141.6499 511.001 141.3325 510.7256 c
141.0151 510.4502 140.6196 510.313 140.147 510.313 c
139.6992 510.313 139.3276 510.4282 139.0327 510.6592 c
138.7378 510.8896 138.5669 511.1914 138.5195 511.5645 c
f*U
Uu*u
134.3853 488.8516 m
134.8652 488.8516 135.2407 488.6978 135.5112 488.3906 c
135.8335 488.0269 135.9946 487.4233 135.9946 486.5806 c
135.9946 485.7397 135.832 485.1353 135.5078 484.7676 c
135.2393 484.4639 134.8652 484.3125 134.3853 484.3125 c
133.9028 484.3125 133.5142 484.4785 133.2188 484.8115 c
132.9233 485.1436 132.7759 485.7363 132.7759 486.5898 c
132.7759 487.4263 132.938 488.0288 133.2627 488.3965 c
133.5308 488.7002 133.9053 488.8516 134.3853 488.8516 c
f1 D
134.3853 488.1484 m
134.2715 488.1484 134.1699 488.1152 134.0806 488.0498 c
133.9912 487.9839 133.9219 487.8657 133.873 487.6958 c
133.8081 487.4746 133.7759 487.103 133.7759 486.5806 c
133.7759 486.0576 133.8047 485.6987 133.8628 485.5034 c
133.9209 485.3076 133.9941 485.1777 134.082 485.1128 c
134.1704 485.0479 134.2715 485.0156 134.3853 485.0156 c
134.499 485.0156 134.6006 485.0483 134.6899 485.1143 c
134.7793 485.1802 134.8486 485.2983 134.8975 485.4683 c
134.9624 485.687 134.9946 486.0576 134.9946 486.5806 c
134.9946 487.103 134.9658 487.4619 134.9077 487.6577 c
134.8496 487.853 134.7764 487.9839 134.6885 488.0498 c
134.6001 488.1152 134.499 488.1484 134.3853 488.1484 c
f*U
*u
0 D
136.832 484.3984 m
136.832 485.25 L
137.7773 485.25 L
137.7773 484.3984 l
136.832 484.3984 L
f*U
*u
141.7539 485.1875 m
141.7539 484.3984 L
138.4336 484.3984 L
138.4692 484.6973 138.5771 484.98 138.7568 485.2476 c
138.9365 485.5146 139.291 485.8691 139.8208 486.3115 c
140.2476 486.6685 140.5088 486.9106 140.6055 487.0376 c
140.7354 487.2134 140.8008 487.3867 140.8008 487.5581 c
140.8008 487.748 140.7437 487.8936 140.6299 487.9956 c
140.5156 488.0977 140.3584 488.1484 140.1577 488.1484 c
139.959 488.1484 139.8008 488.0947 139.6836 487.9873 c
139.5659 487.8799 139.4985 487.7021 139.4805 487.4531 c
138.5352 487.5381 L
138.5913 488.0059 138.7681 488.3418 139.0659 488.5459 c
139.3633 488.7495 139.7354 488.8516 140.1816 488.8516 c
140.6709 488.8516 141.0552 488.7334 141.3345 488.4976 c
141.6143 488.2617 141.7539 487.9678 141.7539 487.6172 c
141.7539 487.4175 141.7139 487.2271 141.6343 487.0469 c
141.5547 486.8662 141.4282 486.6772 141.2554 486.4795 c
141.1411 486.3486 140.9341 486.1597 140.6343 485.9136 c
140.3345 485.6675 140.1445 485.5039 140.0649 485.4233 c
139.9854 485.3428 139.9204 485.2642 139.8711 485.1875 c
141.7539 485.1875 L
f*U
Uu*u
143.4185 428.8521 m
143.8984 428.8521 144.2739 428.6982 144.5444 428.3911 c
144.8667 428.0273 145.0278 427.4238 145.0278 426.5811 c
145.0278 425.7402 144.8652 425.1357 144.541 424.7676 c
144.2725 424.4648 143.8984 424.313 143.4185 424.313 c
142.936 424.313 142.5474 424.4795 142.252 424.8115 c
141.9565 425.1445 141.8091 425.7373 141.8091 426.5898 c
141.8091 427.4268 141.9712 428.0293 142.2959 428.3975 c
142.564 428.7002 142.9385 428.8521 143.4185 428.8521 c
f1 D
143.4185 428.1489 m
143.3047 428.1489 143.2031 428.1162 143.1138 428.0503 c
143.0244 427.9844 142.9551 427.8662 142.9063 427.6963 c
142.8413 427.4756 142.8091 427.1035 142.8091 426.5811 c
142.8091 426.0586 142.8379 425.6992 142.896 425.5039 c
142.9541 425.3081 143.0273 425.1782 143.1152 425.1133 c
143.2036 425.0483 143.3047 425.0161 143.4185 425.0161 c
143.5322 425.0161 143.6338 425.0488 143.7231 425.1147 c
143.8125 425.1807 143.8818 425.2988 143.9307 425.4688 c
143.9956 425.6875 144.0278 426.0586 144.0278 426.5811 c
144.0278 427.1035 143.999 427.4629 143.9409 427.6582 c
143.8828 427.8535 143.8096 427.9844 143.7217 428.0503 c
143.6333 428.1162 143.5322 428.1489 143.4185 428.1489 c
f*U
*u
0 D
145.8652 424.3989 m
145.8652 425.2505 L
146.8105 425.2505 L
146.8105 424.3989 l
145.8652 424.3989 L
f*U
*u
149.1855 428.8521 m
149.6655 428.8521 150.041 428.6982 150.3115 428.3911 c
150.6338 428.0273 150.7949 427.4238 150.7949 426.5811 c
150.7949 425.7402 150.6323 425.1357 150.3081 424.7676 c
150.0396 424.4648 149.6655 424.313 149.1855 424.313 c
148.7031 424.313 148.3145 424.4795 148.019 424.8115 c
147.7236 425.1445 147.5762 425.7373 147.5762 426.5898 c
147.5762 427.4268 147.7383 428.0293 148.063 428.3975 c
148.3311 428.7002 148.7051 428.8521 149.1855 428.8521 c
f1 D
149.1855 428.1489 m
149.0718 428.1489 148.9702 428.1162 148.8809 428.0503 c
148.7915 427.9844 148.7222 427.8662 148.6733 427.6963 c
148.6084 427.4756 148.5762 427.1035 148.5762 426.5811 c
148.5762 426.0586 148.605 425.6992 148.6631 425.5039 c
148.7212 425.3081 148.7944 425.1782 148.8823 425.1133 c
148.9707 425.0483 149.0718 425.0161 149.1855 425.0161 c
149.2993 425.0161 149.4009 425.0488 149.4902 425.1147 c
149.5796 425.1807 149.6484 425.2988 149.6978 425.4688 c
149.7627 425.6875 149.7949 426.0586 149.7949 426.5811 c
149.7949 427.1035 149.7656 427.4629 149.708 427.6582 c
149.6499 427.8535 149.5767 427.9844 149.4883 428.0503 c
149.4004 428.1162 149.2993 428.1489 149.1855 428.1489 c
f*U
Uu*u
0 D
168.751 428.8521 m
169.231 428.8521 169.6064 428.6982 169.877 428.3911 c
170.1992 428.0273 170.3604 427.4238 170.3604 426.5811 c
170.3604 425.7402 170.1982 425.1357 169.8735 424.7676 c
169.6055 424.4648 169.231 424.313 168.751 424.313 c
168.2686 424.313 167.8799 424.4795 167.5845 424.8115 c
167.2891 425.1445 167.1416 425.7373 167.1416 426.5898 c
167.1416 427.4268 167.3037 428.0293 167.6284 428.3975 c
167.8965 428.7002 168.2705 428.8521 168.751 428.8521 c
f1 D
168.751 428.1489 m
168.6372 428.1489 168.5356 428.1162 168.4463 428.0503 c
168.3569 427.9844 168.2876 427.8662 168.2388 427.6963 c
168.1738 427.4756 168.1416 427.1035 168.1416 426.5811 c
168.1416 426.0586 168.1704 425.6992 168.2285 425.5039 c
168.2866 425.3081 168.3599 425.1782 168.4478 425.1133 c
168.5361 425.0483 168.6372 425.0161 168.751 425.0161 c
168.8647 425.0161 168.9663 425.0488 169.0557 425.1147 c
169.145 425.1807 169.2139 425.2988 169.2632 425.4688 c
169.3281 425.6875 169.3604 426.0586 169.3604 426.5811 c
169.3604 427.1035 169.3311 427.4629 169.2734 427.6582 c
169.2153 427.8535 169.1421 427.9844 169.0537 428.0503 c
168.9658 428.1162 168.8647 428.1489 168.751 428.1489 c
f*U
*u
0 D
171.1978 424.3989 m
171.1978 425.2505 L
172.1431 425.2505 L
172.1431 424.3989 l
171.1978 424.3989 L
f*U
*u
175.3462 424.3989 m
174.4009 424.3989 L
174.4009 427.5996 L
174.0537 427.3086 173.645 427.0928 173.1743 426.9536 c
173.1743 427.7271 L
173.4214 427.7998 173.6904 427.9375 173.9805 428.1406 c
174.2705 428.3438 174.4692 428.5811 174.5771 428.8521 c
175.3462 428.8521 l
175.3462 424.3989 L
f*U
Uu*u
196.085 428.8521 m
196.5649 428.8521 196.9404 428.6982 197.2109 428.3911 c
197.5332 428.0273 197.6943 427.4238 197.6943 426.5811 c
197.6943 425.7402 197.5322 425.1357 197.2075 424.7676 c
196.9395 424.4648 196.5649 424.313 196.085 424.313 c
195.6025 424.313 195.2139 424.4795 194.9185 424.8115 c
194.623 425.1445 194.4756 425.7373 194.4756 426.5898 c
194.4756 427.4268 194.6377 428.0293 194.9624 428.3975 c
195.2305 428.7002 195.6045 428.8521 196.085 428.8521 c
f1 D
196.085 428.1489 m
195.9712 428.1489 195.8696 428.1162 195.7803 428.0503 c
195.6909 427.9844 195.6216 427.8662 195.5728 427.6963 c
195.5078 427.4756 195.4756 427.1035 195.4756 426.5811 c
195.4756 426.0586 195.5044 425.6992 195.5625 425.5039 c
195.6206 425.3081 195.6938 425.1782 195.7817 425.1133 c
195.8701 425.0483 195.9712 425.0161 196.085 425.0161 c
196.1987 425.0161 196.3003 425.0488 196.3896 425.1147 c
196.479 425.1807 196.5479 425.2988 196.5972 425.4688 c
196.6621 425.6875 196.6943 426.0586 196.6943 426.5811 c
196.6943 427.1035 196.665 427.4629 196.6074 427.6582 c
196.5493 427.8535 196.4761 427.9844 196.3877 428.0503 c
196.2998 428.1162 196.1987 428.1489 196.085 428.1489 c
f*U
*u
0 D
198.5317 424.3989 m
198.5317 425.2505 L
199.4771 425.2505 L
199.4771 424.3989 l
198.5317 424.3989 L
f*U
*u
203.4536 425.188 m
203.4536 424.3989 L
200.1333 424.3989 L
200.1689 424.6973 200.2769 424.9805 200.4565 425.248 c
200.6362 425.5151 200.9907 425.8701 201.5205 426.3115 c
201.9473 426.6689 202.2085 426.9111 202.3052 427.0381 c
202.4351 427.2139 202.5005 427.3872 202.5005 427.5586 c
202.5005 427.7485 202.4434 427.894 202.3296 427.9961 c
202.2153 428.0977 202.0581 428.1489 201.8574 428.1489 c
201.6587 428.1489 201.5005 428.0952 201.3833 427.9878 c
201.2656 427.8809 201.1982 427.7026 201.1802 427.4536 c
200.2349 427.5386 L
200.291 428.0068 200.4678 428.3428 200.7656 428.5464 c
201.063 428.75 201.4351 428.8521 201.8813 428.8521 c
202.3706 428.8521 202.7549 428.7339 203.0342 428.498 c
203.314 428.2617 203.4536 427.9688 203.4536 427.6177 c
203.4536 427.418 203.4136 427.2275 203.334 427.0474 c
203.2544 426.8667 203.1279 426.6777 202.9551 426.48 c
202.8408 426.3486 202.6338 426.1602 202.334 425.9141 c
202.0342 425.668 201.8442 425.5049 201.7646 425.4238 c
201.6851 425.3433 201.6201 425.2646 201.5708 425.188 c
203.4536 425.188 L
f*U
Uu*u
222.7515 428.8521 m
223.2314 428.8521 223.6069 428.6982 223.8774 428.3911 c
224.1997 428.0273 224.3608 427.4238 224.3608 426.5811 c
224.3608 425.7402 224.1982 425.1357 223.874 424.7676 c
223.6055 424.4648 223.2314 424.313 222.7515 424.313 c
222.269 424.313 221.8804 424.4795 221.585 424.8115 c
221.2896 425.1445 221.1421 425.7373 221.1421 426.5898 c
221.1421 427.4268 221.3042 428.0293 221.6289 428.3975 c
221.897 428.7002 222.2715 428.8521 222.7515 428.8521 c
f1 D
222.7515 428.1489 m
222.6377 428.1489 222.5361 428.1162 222.4468 428.0503 c
222.3574 427.9844 222.2881 427.8662 222.2393 427.6963 c
222.1743 427.4756 222.1421 427.1035 222.1421 426.5811 c
222.1421 426.0586 222.1709 425.6992 222.229 425.5039 c
222.2871 425.3081 222.3604 425.1782 222.4482 425.1133 c
222.5366 425.0483 222.6377 425.0161 222.7515 425.0161 c
222.8652 425.0161 222.9668 425.0488 223.0562 425.1147 c
223.1455 425.1807 223.2148 425.2988 223.2637 425.4688 c
223.3286 425.6875 223.3608 426.0586 223.3608 426.5811 c
223.3608 427.1035 223.332 427.4629 223.2739 427.6582 c
223.2158 427.8535 223.1426 427.9844 223.0547 428.0503 c
222.9663 428.1162 222.8652 428.1489 222.7515 428.1489 c
f*U
*u
0 D
225.1982 424.3989 m
225.1982 425.2505 L
226.1436 425.2505 L
226.1436 424.3989 l
225.1982 424.3989 L
f*U
*u
226.8857 425.5645 m
227.8076 425.6646 L
227.8369 425.4541 227.9155 425.2939 228.0439 425.1826 c
228.1724 425.0718 228.3276 425.0161 228.5103 425.0161 c
228.7061 425.0161 228.8711 425.083 229.0049 425.2173 c
229.1392 425.3516 229.2061 425.5322 229.2061 425.7603 c
229.2061 425.9756 229.1416 426.1465 229.0127 426.2725 c
228.8838 426.3984 228.7271 426.4614 228.5415 426.4614 c
228.4194 426.4614 228.2739 426.4404 228.1045 426.3979 c
228.2095 427.0864 L
228.4673 427.0801 228.6636 427.1304 228.7993 427.2363 c
228.9351 427.3423 229.0029 427.4829 229.0029 427.6587 c
229.0029 427.8076 228.9531 427.9268 228.854 428.0156 c
228.7544 428.1045 228.6226 428.1489 228.4575 428.1489 c
228.2949 428.1489 228.1563 428.0986 228.041 427.9976 c
227.9258 427.8965 227.856 427.749 227.8311 427.5552 c
226.9561 427.6885 L
227.0166 427.958 227.1089 428.1729 227.2314 428.334 c
227.3545 428.4951 227.5259 428.6216 227.7456 428.7139 c
227.9653 428.8057 228.2119 428.8521 228.4849 428.8521 c
228.9517 428.8521 229.3257 428.7188 229.6074 428.4521 c
229.8398 428.2339 229.9561 427.9878 229.9561 427.7129 c
229.9561 427.3232 229.7183 427.0122 229.2427 426.7798 c
229.5254 426.7251 229.7515 426.603 229.9209 426.4126 c
230.0898 426.2227 230.1748 425.9932 230.1748 425.7241 c
230.1748 425.3335 230.0161 425.001 229.6987 424.7256 c
229.3813 424.4502 228.9858 424.313 228.5132 424.313 c
228.0654 424.313 227.6938 424.4282 227.3989 424.6592 c
227.104 424.8896 226.9331 425.1914 226.8857 425.5645 c
f*U
Uu*u
250.0845 428.8521 m
250.5645 428.8521 250.9399 428.6982 251.2104 428.3911 c
251.5327 428.0273 251.6938 427.4238 251.6938 426.5811 c
251.6938 425.7402 251.5313 425.1357 251.207 424.7676 c
250.9385 424.4648 250.5645 424.313 250.0845 424.313 c
249.6021 424.313 249.2134 424.4795 248.918 424.8115 c
248.6226 425.1445 248.4751 425.7373 248.4751 426.5898 c
248.4751 427.4268 248.6372 428.0293 248.9619 428.3975 c
249.23 428.7002 249.6045 428.8521 250.0845 428.8521 c
f1 D
250.0845 428.1489 m
249.9707 428.1489 249.8691 428.1162 249.7798 428.0503 c
249.6904 427.9844 249.6211 427.8662 249.5723 427.6963 c
249.5073 427.4756 249.4751 427.1035 249.4751 426.5811 c
249.4751 426.0586 249.5039 425.6992 249.562 425.5039 c
249.6201 425.3081 249.6934 425.1782 249.7813 425.1133 c
249.8696 425.0483 249.9707 425.0161 250.0845 425.0161 c
250.1982 425.0161 250.2998 425.0488 250.3892 425.1147 c
250.4785 425.1807 250.5479 425.2988 250.5967 425.4688 c
250.6616 425.6875 250.6938 426.0586 250.6938 426.5811 c
250.6938 427.1035 250.665 427.4629 250.6069 427.6582 c
250.5488 427.8535 250.4756 427.9844 250.3877 428.0503 c
250.2993 428.1162 250.1982 428.1489 250.0845 428.1489 c
f*U
*u
0 D
252.5313 424.3989 m
252.5313 425.2505 L
253.4766 425.2505 L
253.4766 424.3989 l
252.5313 424.3989 L
f*U
*u
256.1016 424.3989 m
256.1016 425.2896 L
254.0859 425.2896 L
254.0859 426.0288 L
256.2236 428.8521 L
257.0234 428.8521 L
257.0234 426.0317 L
257.6406 426.0317 L
257.6406 425.2896 L
257.0234 425.2896 L
257.0234 424.3989 l
256.1016 424.3989 L
f1 D
256.1016 426.0317 m
256.1016 427.5317 L
254.9756 426.0317 l
256.1016 426.0317 L
f*U
Uu*u
0 D
277.4185 428.8521 m
277.8984 428.8521 278.2739 428.6982 278.5444 428.3911 c
278.8667 428.0273 279.0278 427.4238 279.0278 426.5811 c
279.0278 425.7402 278.8652 425.1357 278.541 424.7676 c
278.2725 424.4648 277.8984 424.313 277.4185 424.313 c
276.936 424.313 276.5474 424.4795 276.252 424.8115 c
275.9565 425.1445 275.8091 425.7373 275.8091 426.5898 c
275.8091 427.4268 275.9712 428.0293 276.2959 428.3975 c
276.564 428.7002 276.9385 428.8521 277.4185 428.8521 c
f1 D
277.4185 428.1489 m
277.3047 428.1489 277.2031 428.1162 277.1138 428.0503 c
277.0244 427.9844 276.9551 427.8662 276.9063 427.6963 c
276.8413 427.4756 276.8091 427.1035 276.8091 426.5811 c
276.8091 426.0586 276.8379 425.6992 276.896 425.5039 c
276.9541 425.3081 277.0273 425.1782 277.1152 425.1133 c
277.2036 425.0483 277.3047 425.0161 277.4185 425.0161 c
277.5322 425.0161 277.6338 425.0488 277.7231 425.1147 c
277.8125 425.1807 277.8818 425.2988 277.9307 425.4688 c
277.9956 425.6875 278.0278 426.0586 278.0278 426.5811 c
278.0278 427.1035 277.999 427.4629 277.9409 427.6582 c
277.8828 427.8535 277.8096 427.9844 277.7217 428.0503 c
277.6333 428.1162 277.5322 428.1489 277.4185 428.1489 c
f*U
*u
0 D
279.8652 424.3989 m
279.8652 425.2505 L
280.8105 425.2505 L
280.8105 424.3989 l
279.8652 424.3989 L
f*U
*u
281.5996 425.5298 m
282.5449 425.6177 L
282.5718 425.4258 282.6519 425.2734 282.7842 425.1611 c
282.917 425.0488 283.0698 424.9927 283.2432 424.9927 c
283.4409 424.9927 283.6084 425.0654 283.7456 425.2114 c
283.8823 425.3569 283.9512 425.5767 283.9512 425.8701 c
283.9512 426.1455 283.8833 426.3516 283.7471 426.4893 c
283.6113 426.627 283.4341 426.6958 283.2163 426.6958 c
282.9443 426.6958 282.7007 426.5889 282.4849 426.3755 c
281.7168 426.4741 L
282.2012 428.7817 L
284.709 428.7817 L
284.709 427.9849 L
282.9209 427.9849 L
282.7715 427.2334 L
282.9829 427.3281 283.1987 427.3755 283.4194 427.3755 c
283.8398 427.3755 284.1963 427.2373 284.4888 426.9614 c
284.7813 426.6855 284.9277 426.3271 284.9277 425.8867 c
284.9277 425.5195 284.8096 425.1914 284.5732 424.9033 c
284.2515 424.5098 283.8047 424.313 283.2334 424.313 c
282.7764 424.313 282.4038 424.4229 282.1157 424.6426 c
281.8276 424.8628 281.6558 425.1582 281.5996 425.5298 c
f*U
Uu*u
302.2754 428.8521 m
302.7251 428.8521 303.0767 428.6982 303.3301 428.3911 c
303.6323 428.0273 303.7832 427.4238 303.7832 426.5811 c
303.7832 425.7402 303.6309 425.1357 303.3271 424.7676 c
303.0757 424.4648 302.7251 424.313 302.2754 424.313 c
301.8232 424.313 301.459 424.4795 301.1826 424.8115 c
300.9058 425.1445 300.7676 425.7373 300.7676 426.5898 c
300.7676 427.4268 300.9194 428.0293 301.2236 428.3975 c
301.4751 428.7002 301.8257 428.8521 302.2754 428.8521 c
f1 D
302.2754 428.1489 m
302.1689 428.1489 302.0737 428.1162 301.9902 428.0503 c
301.9067 427.9844 301.8418 427.8662 301.7959 427.6963 c
301.7354 427.4756 301.7051 427.1035 301.7051 426.5811 c
301.7051 426.0586 301.7324 425.6992 301.7866 425.5039 c
301.8408 425.3081 301.9092 425.1782 301.9917 425.1133 c
302.0742 425.0483 302.1689 425.0161 302.2754 425.0161 c
302.3818 425.0161 302.4771 425.0488 302.5605 425.1147 c
302.644 425.1807 302.709 425.2988 302.7549 425.4688 c
302.8154 425.6875 302.8457 426.0586 302.8457 426.5811 c
302.8457 427.1035 302.8184 427.4629 302.7642 427.6582 c
302.71 427.8535 302.6416 427.9844 302.5591 428.0503 c
302.4766 428.1162 302.3818 428.1489 302.2754 428.1489 c
f*U
*u
0 D
304.5601 424.3989 m
304.5601 425.2505 L
305.4507 425.2505 L
305.4507 424.3989 l
304.5601 424.3989 L
f*U
*u
309.1816 427.7471 m
308.3223 427.6567 L
308.3018 427.8247 308.2471 427.9487 308.1592 428.0288 c
308.0713 428.1089 307.9561 428.1489 307.8154 428.1489 c
307.6289 428.1489 307.4707 428.0688 307.3418 427.9087 c
307.2129 427.749 307.1318 427.4146 307.0977 426.9067 c
307.3193 427.1567 307.5947 427.2817 307.9238 427.2817 c
308.2959 427.2817 308.6133 427.146 308.8789 426.8745 c
309.1436 426.603 309.2754 426.2529 309.2754 425.8232 c
309.2754 425.3672 309.1367 425.002 308.8574 424.7261 c
308.5791 424.4507 308.2207 424.313 307.7832 424.313 c
307.3145 424.313 306.9292 424.4873 306.6274 424.8359 c
306.3252 425.1846 306.1743 425.7563 306.1743 426.5508 c
306.1743 427.3652 306.3311 427.9521 306.645 428.3125 c
306.959 428.6719 307.3662 428.8521 307.8682 428.8521 c
308.2197 428.8521 308.5107 428.7578 308.7412 428.5688 c
308.9717 428.3799 309.1191 428.106 309.1816 427.7471 c
f1 D
307.1738 425.8896 m
307.1738 425.6108 307.2412 425.3955 307.374 425.2437 c
307.5078 425.0918 307.6602 425.0161 307.8311 425.0161 c
307.9961 425.0161 308.1338 425.0781 308.2432 425.2021 c
308.3535 425.3267 308.4082 425.5303 308.4082 425.8135 c
308.4082 426.1045 308.3496 426.3179 308.2305 426.4536 c
308.1123 426.5889 307.9648 426.6567 307.7871 426.6567 c
307.6152 426.6567 307.4707 426.5918 307.3516 426.4629 c
307.2334 426.333 307.1738 426.1426 307.1738 425.8896 c
f*U
Uu*u
0 D
330.085 428.8521 m
330.5654 428.8521 330.9404 428.6982 331.2109 428.3911 c
331.5332 428.0273 331.6943 427.4238 331.6943 426.5811 c
331.6943 425.7402 331.5322 425.1357 331.207 424.7676 c
330.9395 424.4648 330.5654 424.313 330.085 424.313 c
329.6025 424.313 329.2139 424.4795 328.918 424.8115 c
328.623 425.1445 328.4756 425.7373 328.4756 426.5898 c
328.4756 427.4268 328.6377 428.0293 328.9629 428.3975 c
329.2305 428.7002 329.6045 428.8521 330.085 428.8521 c
f1 D
330.085 428.1489 m
329.9707 428.1489 329.8691 428.1162 329.7803 428.0503 c
329.6914 427.9844 329.6221 427.8662 329.5723 427.6963 c
329.5078 427.4756 329.4756 427.1035 329.4756 426.5811 c
329.4756 426.0586 329.5049 425.6992 329.5625 425.5039 c
329.6211 425.3081 329.6934 425.1782 329.7822 425.1133 c
329.8701 425.0483 329.9707 425.0161 330.085 425.0161 c
330.1992 425.0161 330.3008 425.0488 330.3896 425.1147 c
330.4785 425.1807 330.5479 425.2988 330.5977 425.4688 c
330.6621 425.6875 330.6943 426.0586 330.6943 426.5811 c
330.6943 427.1035 330.665 427.4629 330.6074 427.6582 c
330.5488 427.8535 330.4766 427.9844 330.3877 428.0503 c
330.2998 428.1162 330.1992 428.1489 330.085 428.1489 c
f*U
*u
0 D
332.5313 424.3989 m
332.5313 425.2505 L
333.4766 425.2505 L
333.4766 424.3989 l
332.5313 424.3989 L
f*U
*u
334.2578 427.9927 m
334.2578 428.7817 L
337.5 428.7817 L
337.5 428.1646 L
337.2324 427.9277 336.96 427.5884 336.6836 427.1455 c
336.4063 426.7031 336.1953 426.2324 336.0508 425.7344 c
335.9053 425.2363 335.834 424.791 335.8359 424.3989 c
334.9219 424.3989 L
334.9375 425.0137 335.0791 425.6401 335.3457 426.2793 c
335.6123 426.918 335.9678 427.4893 336.4131 427.9927 c
334.2578 427.9927 L
f*U
Uu*u
358.751 428.8521 m
359.2314 428.8521 359.6064 428.6982 359.877 428.3911 c
360.1992 428.0273 360.3604 427.4238 360.3604 426.5811 c
360.3604 425.7402 360.1982 425.1357 359.873 424.7676 c
359.6055 424.4648 359.2314 424.313 358.751 424.313 c
358.2686 424.313 357.8799 424.4795 357.584 424.8115 c
357.2891 425.1445 357.1416 425.7373 357.1416 426.5898 c
357.1416 427.4268 357.3037 428.0293 357.6289 428.3975 c
357.8965 428.7002 358.2705 428.8521 358.751 428.8521 c
f1 D
358.751 428.1489 m
358.6367 428.1489 358.5352 428.1162 358.4463 428.0503 c
358.3574 427.9844 358.2881 427.8662 358.2383 427.6963 c
358.1738 427.4756 358.1416 427.1035 358.1416 426.5811 c
358.1416 426.0586 358.1709 425.6992 358.2285 425.5039 c
358.2871 425.3081 358.3594 425.1782 358.4482 425.1133 c
358.5361 425.0483 358.6367 425.0161 358.751 425.0161 c
358.8652 425.0161 358.9668 425.0488 359.0557 425.1147 c
359.1445 425.1807 359.2139 425.2988 359.2637 425.4688 c
359.3281 425.6875 359.3604 426.0586 359.3604 426.5811 c
359.3604 427.1035 359.3311 427.4629 359.2734 427.6582 c
359.2148 427.8535 359.1426 427.9844 359.0537 428.0503 c
358.9658 428.1162 358.8652 428.1489 358.751 428.1489 c
f*U
*u
0 D
361.1973 424.3989 m
361.1973 425.2505 L
362.1426 425.2505 L
362.1426 424.3989 l
361.1973 424.3989 L
f*U
*u
362.9473 425.418 m
363.8691 425.5083 L
363.8916 425.3413 363.9502 425.2173 364.0439 425.1367 c
364.1377 425.0562 364.2617 425.0161 364.416 425.0161 c
364.6104 425.0161 364.7754 425.0977 364.9111 425.2607 c
365.0479 425.4233 365.1348 425.7603 365.1729 426.271 c
364.9336 426.0229 364.6357 425.8989 364.2783 425.8989 c
363.8887 425.8989 363.5527 426.0332 363.2695 426.3022 c
362.9873 426.5713 362.8457 426.9214 362.8457 427.3525 c
362.8457 427.8022 362.9951 428.1641 363.293 428.4395 c
363.5918 428.7144 363.9717 428.8521 364.4326 428.8521 c
364.9346 428.8521 365.3467 428.6777 365.668 428.3291 c
365.9902 427.981 366.1504 427.4077 366.1504 426.6099 c
366.1504 425.7979 365.9834 425.2119 365.6494 424.8525 c
365.3145 424.4927 364.8789 424.313 364.3418 424.313 c
363.9561 424.313 363.6436 424.4053 363.4053 424.5898 c
363.168 424.7744 363.0146 425.0503 362.9473 425.418 c
f1 D
365.0879 427.2852 m
365.0879 427.5586 365.0176 427.7715 364.877 427.9224 c
364.7363 428.0732 364.5732 428.1489 364.3877 428.1489 c
364.2119 428.1489 364.0664 428.0869 363.9502 427.9629 c
363.834 427.8394 363.7754 427.6367 363.7754 427.3545 c
363.7754 427.0684 363.8389 426.8584 363.9648 426.7246 c
364.0918 426.5908 364.249 426.5239 364.4385 426.5239 c
364.6211 426.5239 364.7754 426.5884 364.9004 426.7173 c
365.0254 426.8462 365.0879 427.0352 365.0879 427.2852 c
f*U
U*u
0 D
243.0469 415 m
244.7212 417.1973 L
243.1094 419.2656 L
244.6172 419.2656 L
245.4385 418.0928 L
246.2988 419.2656 L
247.7344 419.2656 L
246.1729 417.2451 L
247.8906 415 L
246.3823 415 L
245.4385 416.3213 L
244.4824 415 l
243.0469 415 L
f*U
*u
125.8916 556.6626 m
127.1885 556.6626 L
128.3057 553.6318 L
129.3916 556.6626 L
130.6572 556.6626 L
129.0293 552.5615 L
128.7285 551.8047 L
128.6211 551.5576 128.5186 551.3682 128.4209 551.2378 c
128.3232 551.1074 128.2114 551.0015 128.085 550.9199 c
127.9585 550.8389 127.8027 550.7759 127.6182 550.7305 c
127.4331 550.6855 127.2246 550.6626 126.9917 550.6626 c
126.7559 550.6626 126.5244 550.6855 126.2979 550.7305 c
126.1885 551.606 L
126.3804 551.5708 126.5537 551.5532 126.708 551.5532 c
126.9932 551.5532 127.2041 551.6309 127.3408 551.7866 c
127.4775 551.9424 127.5825 552.1406 127.6553 552.3813 c
125.8916 556.6626 L
f*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
