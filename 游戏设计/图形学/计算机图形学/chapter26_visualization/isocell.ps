%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Alice Peters) (A K Peters, Ltd.)
%%Title: (isocell.ps)
%%CreationDate: 5/1/2002 4:56 PM
%%BoundingBox: 136 243 424 441
%%HiResBoundingBox: 136.25 243.75 423.75 440.75
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 24 588 780
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 73 449 2 1276 954 18 1 1 6 44 1 0
%AI5_OpenViewLayers: 7
%%PageOrigin:12 24
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -20 -24 12
%AI7_GridSettings: 72 32 72 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 88 8
%%BeginData: 7674 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C457DFD7EA87D7DFD7EFFA8A8FD7EFFA87DFD2FFF527DFFFFFF7D7DA8
%FFFFA8527DFD42FFA8A8FD2FFF7D277DA8FFA8277D7DA8FF27A852FD41FF
%A87DFD2FFF7D7D2752A8A852FF527DA87D7D7DFD41FFA8A8FD30FFA8FD07
%FFA8FFFFFFA8FD07FFA8FD39FF7D7DFD2FFF7D7D7DA87DA8A87D7D52A8FF
%FF52277DFF527DFF27A852FD38FFA8A8FD2FFF7D527DA8A827FFF8F87D52
%277D525227FFA8A8FFA8A852FD38FFA87DFD2FFF7D7D527D7D7D52FD047D
%A8A8527DA827FFA852A8FF52FD38FFA8A8FD30FFA8FFA8FD05FFA8FFFFFF
%A8FD07FFA8FD39FFA87DFD30FFA8FD4DFFA8A8FD2FFF7D27A8FFA8A8FD07
%FFFD05A8FD3DFFA87DFD2FFF27FD04527D7DFFFFFF7DA8A8FF7DFFFFFF7D
%A87DA87DA87DA8FD35FFA8A8FD2FFF7DFFA87D7DA8A87DA8A8FD04FFA8FD
%0BFFA87DA8A8A87DA8A8FD2DFF7D7DFD33FF7DA8A8FD07FF7DFD13FFA8A8
%7DA87DA87DA8A8FD07FFA85252FFFFFF527DFFFFFF7D27FD10FFA8A8FD30
%FFA8A8A8FD0AFFA8FD1CFFFD07A8FFF87D52A8FF525252A8FF7D7D52FD0F
%FFA87DFD2DFFA8A87DFD0DFF7DFD20FFA87D7DA87D7D7D52FF52FF527DFF
%7D52A87DFD0EFFA8A8FD11FFA87DFFFFFFA8A87DFFFFFF527DFD0CFFA8A8
%7DFD10FFA8FD1DFFA87DA8FFFF7DFFA8FFA8FD0AFFA8FD0EFFA87DFD11FF
%A8277DA8FFFFF87D52FFFF527D7DFD08FFA8A87DFD13FF7DFD1BFF7DA8A8
%FD04FFA8FF527DA8A8A87D7D7DA827FFFFA87D52FFFF27FFA85252A8FD05
%FFA8A8FD11FFA87D52527DFF527D277DFF52A852FD05FFA8A8A8FD16FFA8
%FD18FFA8A8A8FD07FFA8FF525252FF277D7D2727FD0452FF52FFFF7DFFFF
%52A87DFD05FFA87DFD13FFA8A8FFFFA8FF7DFD04FFA8FFFFA8A87DA8FD18
%FF7DFD15FFA8A87DFD0AFFA8FF527D7D527D7DA8527D52A8FD057DA87D7D
%A87D7DA8FD05FFA8A8FD09FF52A8FFA8FFFD04A87DFFFF527D7DFFA852FF
%527D52FF7D7D7DA8FD19FFA8FD13FFA87DA8FD0CFFA8FFA8FD11FFA8FD09
%FF7D7DFD08FF7D527D52A8277D272752522727275227FF2752FFFF5252A8
%A8FFFFA8A87DA87DA8FD14FF7DFD10FFA87DA8A8FD0EFFA8FFA8FD1BFFA8
%A8FD08FFA87D277D7D5227A852A852A8A852A87D27A87D52FF7D52FFA8FD
%08FFFD05A8FD0FFFA8FD0EFFA8A8A8FD11FFA8FF5252A8FFA8A8FD16FFA8
%7DFD09FF7DFFA8FFFFA8FFFFA8A8FFFFA8FD05FFA8FFFF7DFFA8FD0DFFA8
%7DA87DA8A8FD09FF7DFD0BFFA8A87DFD14FFA8FF2752527DA827FD16FFA8
%A8FD20FFA8FD12FFA87DFD04A8FD0EFFA87DFD17FFA8FF7DFF7DA8A87DFD
%16FFA87DFD19FF2752A8FFA8FFFFFF7DFD16FFA87DA87DA8A8FD06FFA87D
%A8FD18FF7DFD1EFFA8A8FD19FFFD04527D52FFFFA8FD1CFFFD04A87DA8A8
%FD1AFFA8FD1EFFA87DFD19FF7DFF277D527DFFFF7DFD1BFFA8FD04FFA8FD
%1CFF7DFD1EFFA8A8FD21FFA8FD1BFFA8FD04FF7DA87DFFFFFFA8A8A8FFFF
%FF52A8FD0FFFA8FD1EFF7D7DFD21FF7DFD1BFF7DFD04FFA87D2752A8FFA8
%F8A87DFFFF527D52FD0EFF7DFD1EFFA8A8FD21FFA8FD1BFFA8FD04FFA8A8
%7DA87DA8FF52527D52FF52A852FD0EFFA8FD1EFFA87DFD21FF7DFD1BFF7D
%FD04FFA8FFFFA8A8FFFFA8FFA8FD04FFA8FD0EFF7DFD1EFFA8A8FD21FFA8
%FD0DFF5227FFFFFF5252A8FFFFFF27A8A8A8FD04FFA8A852FFFFA8A8FFA8
%FF52A8FFFF525252FF527DFF527D7DFD05FFA8FD1EFFA87DFD21FFA8FD0D
%FF2727277DA87D27527DA87D2752527DFD04FFA8525252A87D27A827F87D
%522752527D7DFF5227FF7DA827FD05FF7DFD1EFFA8A8FD22FFA8FD0EFF52
%7DFF7DFFA8A8A8FFFF7D52A8FD04FFA87D7D527DA852A8527D7D7DA8A852
%FF7D7D7DA852A8A87DFD05FFA8FD1EFFA87DFD22FFA8FD04FFA8FD07FF7D
%FFFFFF7DA8FFFF7DFFFFFD04A8FD04FFA8FFA8FD04FFA8FFFFA8FFFFFFA8
%FFFFA8FD05FF7DFD05FF7DFD1EFFA8A8FD22FF7DFFFFFF527D7DA8527DA8
%52527DA8A8A852277DFF52FFFF277D52FF7DFFFFFF7DFD1CFFA8FD1EFF7D
%7DFD22FFA8FFFFFF5252527D7D27A8F8F852522752522752A852FF7D2752
%52FFA8FFFFFFA87D27A8FFA8FFA8FD15FF7DFD1EFFA8A8FD22FFA8FFFFFF
%7DA87DA8FFFF7DA8A87DFFFFFF7DA8FF7DFFFFA8A8A87DFFA8FFFFFFA87D
%277D7D277DA8FD14FFA8FD1FFFA87DFD22FF52FFA827A8FD17FFA8FFFFFF
%A852FF7DA827A87DFD14FFA8FD1FFFA8A8FD22FF27A87D52FD11FF7DA8FD
%05FFA8FFFFFFA8FD1BFFA8FD1FFFA87DFD22FF2727A87DFD10FF7D527D7D
%52A87DFFA8FFFFFFA8FD1BFFA8FD1FFFA8A8FD22FF2727A8FD11FF527D52
%52527D52FFA8FFFFFFA8FD1BFFA8FD1FFFA87DFD21FFA8A852FD12FFA8FF
%FFFD04A8FFA8FFFFFFA8FD1BFFA8FD1FFFA8A8FD23FF52FD18FFFD04A8FF
%FF7DFD1BFF7DFD1FFF7D7DFD23FF27FD15FFA8A87DFD06FFA8FFA87DA87D
%A8A8FD14FFA8FD1FFFA8A8FD23FF52FD14FFA8A8FD08FFA8FD06FFFD06A8
%FD0FFFA8FD1FFFA87DFD23FF27FD11FFA8A8A8FD0AFFA8FD0BFFA87DA87D
%A8A8FD0AFFA8FD1FFFA8A8FD23FF52FD0FFFA87DFD0DFFA8FD11FF7DA8A8
%A87DFD05FFA8FD1FFFA87DFD23FF27FD0BFF7D5227277DFD0EFFA8FD16FF
%7DA87D7D7DA8FD1FFFA8A8FD23FF7DA8FD0AFF52F827FD10FFA8FD1AFFA8
%FD20FFA87DFD23FF7D7DFD08FF2752A852A87D52FD0EFFA8FD18FFA8A8FF
%FF5227A8FFFF7D277DA8FFFF277DFD12FFA8A8FD23FFA852FD05FFA85227
%FD05FF5252FD0EFF7DFD17FFA8FD04FF7D27527DA8FF277D7D7DFFF87D27
%FD11FF7D7DFD24FF52FFFFFFA82752A8FD06FF7D7DFD0EFFA8FD16FF7DFD
%07FF7D7DA8FF7DFF52A8FFFFA852FD11FFA8A8FD24FF52FF7D5252FD19FF
%A8FD15FFA8FD07FFA8FD07FFA8FFFFFFA8A8A8FFA8A8FFFFA8A8FD08FFA8
%7DFD24FF27277DFD1BFFA8FD13FFA8A8FD07FFFD077D52527D527D7D5252
%7DFF7D52FF275252FD08FFA8A8FD12FF7DA8FFFFFF7D7DFFFFFF7D7DFD06
%FF52527DFD1BFFA8FD11FFA8A8FD09FF7D7D5252A8F8A827277D52527D52
%A852A87D7DA8525252FD08FFA87DFD12FF277D7DFFFF275252FFFFA8277D
%A8FD06FF7D2752A8FD18FFA8FD10FFA8A8FD0AFFA87D7DA8A8A87DFFA87D
%A8FFFF52A8FF7DFFA8A8A8FF27FD08FFA8A8FD12FF7D522752FF7D7D2752
%FF7D7D277DFD08FF7D5252FD17FFA8FD0FFFA8FD2BFFA87DFD14FF7DFFFF
%A8FF7DFD04FFA8A8FD0AFFA82752A8FD14FFA8FD0EFF7DFD0DFFA87DFD1D
%FFA8A8FD12FF52A8A8FFA8FFA8FFA87DFFFFA87D27FFA852FFFF277DFD04
%FFA85227FF52FD11FF7DFD0CFFA8A8FD0EFF7D527D7D52A8A8FD18FF7D7D
%FD12FF52277DFF27277DF8275252275252527D7D277D5252527DFD06FF27
%2727FD10FFA8FD0BFFA8A8FD0FFF527DFF7D525227FD18FFA8A8FD12FF27
%7D52FD057D52527D7D7DA852A8A8527DA852A8A8FD06FFA8272727A8FD0E
%FFA8FD09FFA8A8FD14FFA8FFA8FD19FFA87DFD12FFA8FFFFA8FFA8FFFFFF
%7DFFFFFF7DFFA8FD05FF7DFD08FFA8A8FF7DA8A8FD0CFFA8FD08FFA8FD32
%FFA8A8FD30FF7D27FFFFFFA8A8FD0BFFA8FD07FFA8FD33FFA87DFD12FF52
%52A8A8FFA8FD18FF5227FD05FFA8A8A8FD08FFA8FD05FFA8A8FD34FFA8A8
%FD12FF277D277D5252A8FD21FFA8FD07FFA8FD04FFA8A8FD35FFA87DFD11
%FFA87DA827527D27FD23FFA8A8A8FD04FFA8FFFFA8A8FD37FFA8A8FD3EFF
%7DA8FFFF7DFFA8A8FD38FF7D7DFD3FFFA8A87DA87DFD3AFFA8A8FD42FF7D
%FF7D7DFFFFFF7D7DFFFFFFA8527DFD2DFFA87DFD44FF7D2752A8FF7D277D
%A8A8FF27A852FD2CFFA8A8FD44FF7DA852A8A8A85252527DA87D5252FD2C
%FFA87DFD45FFA8FFFFFFA8FFA8FFA8FFFFFF7DFFA8FFA8FFFFFFA8FD24FF
%A8A8FD44FF7D7DA8FF7DA8A87D7D7DA8FFFF5227A8FF527DFF27A852FD23
%FFA87DFD44FF52527D7D7D27FFF8275252275252A87DA82752A8522752FD
%23FFA8A8FD44FF7DA8527D7DA827FD047DA8A852A8FF527DA87D7DA852FD
%23FF7D7DFD45FFA8FFA8FD05FFA8FFFFFFA8FD05FFA8FFA8FD24FFA8A8FD
%7EFFA87DFD44FF7D27FD04A8FD34FFA8A8FD44FF277D527D275252FD33FF
%A87DFD44FF7DFFA87D7D7DA8FD33FFA8A8FD7EFFA87DFD7EFFA8A8FD7EFF
%7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87D7D
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7834.75 8587 m
-7834.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7834.75 8587 L
nu0 Ap
0 O
1 g
-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
F-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
F-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
F-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
F-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
F-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
F-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
F-7844.7817 8565.125 m
-7850.9009 8563.6162 -7854.7817 8565.125 V
-7858.877 8563.6484 -7864.7817 8565.125 V
-7869.7446 8563.4492 -7874.7817 8565.125 V
-7880.7969 8563.5742 -7884.7817 8565.125 V
-7884.7817 8584.8096 L
-7881.6958 8585.7842 -7878.2969 8585.9912 -7874.3799 8584.9082 C
-7868.2134 8586.4912 -7864.4634 8584.9082 V
-7859.4634 8586.4912 -7854.3799 8584.8242 V
-7850.0474 8586.4082 -7844.3799 8584.9082 V
-7838.8799 8586.3242 -7834.7817 8585.125 V
-7834.7817 8565.4404 L
-7837.5254 8564.4287 -7840.6514 8563.9287 -7844.7817 8565.125 C
f0 R
0 G
1 J 1 j 0.5 w-7864.75 8585 m
-7872.54 8586.9473 -7878.813 8583.585 -7884.75 8579.0488 C
S-7854.75 8585 m
-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 C
S-7844.75 8585 m
-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 C
S-7884.75 8565 m
-7864.75 8560 -7854.75 8590 -7834.75 8585 C
S-7874.75 8565 m
-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 C
S-7864.75 8565 m
-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 C
S-7854.75 8565 m
-7846.96 8563.0527 -7840.687 8566.415 -7834.75 8570.9512 C
S-7844.75 8565 m
-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 C
S-7874.75 8585 m
-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 C
SUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7833.8921 8586 L
-7833.8921 8529.9756 L
-7884 8529.9756 L
-7884 8586 L
nu0 O
0.1 1 1 0 k
-7846.9014 8551.5752 m
-7848.7178 8545.0957 -7858.8247 8548.4658 Y
-7858.791 8548.5303 L
-7868.8999 8545.1611 -7870.7144 8551.6396 V
-7876.6758 8569.0068 -7871.4922 8575.7451 V
-7864.7529 8585.3369 -7860.6055 8585.3369 V
-7857.0103 8585.2705 L
-7852.8638 8585.2705 -7846.125 8575.6816 Y
-7840.9409 8568.9424 -7846.9014 8551.5752 Y
fu0 0 0 1 k
-7851.3926 8529.9756 m
-7852.1167 8531.4199 -7852.9238 8532.4756 V
-7852.4058 8532.0635 -7851.5151 8531.1924 -7851.3926 8529.9756 C
f-7865.064 8532.4854 m
-7865.8711 8531.4307 -7866.5942 8529.9863 Y
-7866.4727 8531.2021 -7865.582 8532.0732 -7865.064 8532.4854 C
fU0 0.61 0.74 0 k
-7850.5977 8554.4609 m
-7851.9038 8549.7959 -7859.1816 8552.2217 Y
-7859.1567 8552.2686 L
-7866.436 8549.8428 -7867.7417 8554.5078 V
-7872.0337 8567.0117 -7868.3018 8571.8633 V
-7863.4487 8578.7686 -7860.4634 8578.7686 V
-7857.875 8578.7227 L
-7854.8887 8578.7227 -7850.0366 8571.8174 Y
-7846.3042 8566.9639 -7850.5977 8554.4609 Y
fu1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7854.6226 8557.2754 m
-7853.813 8557.2754 -7853.1558 8556.6182 -7853.1558 8555.8096 c
-7853.1558 8555 -7853.813 8554.3428 -7854.6226 8554.3428 c
-7855.4321 8554.3428 -7856.0889 8555 -7856.0889 8555.8096 c
-7856.0889 8556.6182 -7855.4321 8557.2754 -7854.6226 8557.2754 c
b-7854.3638 8568.9971 m
-7853.0806 8568.9971 -7852.0415 8568.1201 -7852.0415 8567.042 c
-7852.0415 8565.9619 -7853.0806 8565.0869 -7854.3638 8565.0869 c
-7855.645 8565.0869 -7856.6846 8565.9619 -7856.6846 8567.042 c
-7856.6846 8568.1201 -7855.645 8568.9971 -7854.3638 8568.9971 c
b-7853.834 8580.7861 m
-7852.2817 8580.7861 -7851.0239 8580.1299 -7851.0239 8579.3213 c
-7851.0239 8578.5117 -7852.2817 8577.8545 -7853.834 8577.8545 c
-7855.3862 8577.8545 -7856.645 8578.5117 -7856.645 8579.3213 c
-7856.645 8580.1299 -7855.3862 8580.7861 -7853.834 8580.7861 c
b-7849.6104 8552.5264 m
-7848.8687 8552.5264 -7848.2671 8551.8154 -7848.2671 8550.9365 c
-7848.2671 8550.0596 -7848.8687 8549.3477 -7849.6104 8549.3477 c
-7850.353 8549.3477 -7850.9546 8550.0596 -7850.9546 8550.9365 c
-7850.9546 8551.8154 -7850.353 8552.5264 -7849.6104 8552.5264 c
b-7848.0034 8574.083 m
-7848.8818 8573.7354 -7849.1494 8572.335 -7848.603 8570.9541 c
-7848.0566 8569.5752 -7846.9014 8568.7363 -7846.0234 8569.085 c
-7845.145 8569.4326 -7844.877 8570.833 -7845.4233 8572.2139 c
-7845.9702 8573.5947 -7847.125 8574.4316 -7848.0034 8574.083 c
bu-7863.0566 8557.1592 m
-7863.8662 8557.1592 -7864.5239 8556.502 -7864.5239 8555.6934 c
-7864.5239 8554.8828 -7863.8662 8554.2266 -7863.0566 8554.2266 c
-7862.248 8554.2266 -7861.5913 8554.8828 -7861.5913 8555.6934 c
-7861.5913 8556.502 -7862.248 8557.1592 -7863.0566 8557.1592 c
b-7863.3159 8568.8799 m
-7864.5991 8568.8799 -7865.6382 8568.0049 -7865.6382 8566.9248 c
-7865.6382 8565.8447 -7864.5991 8564.9697 -7863.3159 8564.9697 c
-7862.0342 8564.9697 -7860.9951 8565.8447 -7860.9951 8566.9248 c
-7860.9951 8568.0049 -7862.0342 8568.8799 -7863.3159 8568.8799 c
b-7863.8457 8580.6709 m
-7865.3975 8580.6709 -7866.6558 8580.0146 -7866.6558 8579.2041 c
-7866.6558 8578.3936 -7865.3975 8577.7383 -7863.8457 8577.7383 c
-7862.293 8577.7383 -7861.0352 8578.3936 -7861.0352 8579.2041 c
-7861.0352 8580.0146 -7862.293 8580.6709 -7863.8457 8580.6709 c
b-7868.0679 8552.4092 m
-7868.811 8552.4092 -7869.4121 8551.6982 -7869.4121 8550.8213 c
-7869.4121 8549.9443 -7868.811 8549.2334 -7868.0679 8549.2334 c
-7867.3262 8549.2334 -7866.7241 8549.9443 -7866.7241 8550.8213 c
-7866.7241 8551.6982 -7867.3262 8552.4092 -7868.0679 8552.4092 c
b-7869.6758 8573.9678 m
-7868.7983 8573.6201 -7868.5298 8572.2188 -7869.0762 8570.8379 c
-7869.6226 8569.457 -7870.7778 8568.6201 -7871.6558 8568.9678 c
-7872.5342 8569.3164 -7872.8032 8570.7178 -7872.2568 8572.0967 c
-7871.7104 8573.4775 -7870.5552 8574.3154 -7869.6758 8573.9678 c
bUU0 Ap
0 0 0 1 k
-7859.1318 8552.6553 m
-7859.1318 8585.3145 l
Fu-7843.3906 8538.5303 m
-7844.0815 8537.8369 -7847.019 8538.7021 Y
-7848.229 8538.874 -7848.0562 8541.2939 Y
-7847.019 8543.3682 -7847.7104 8543.1943 Y
-7848.2998 8543.1943 -7849.855 8543.1143 -7850.7822 8543.0635 C
-7851.1226 8541.6689 -7852.6128 8540.4756 -7854.7217 8539.7695 C
-7852.7578 8536.4775 -7854.5176 8535.7949 -7856.2935 8535.79 C
-7856.3096 8535.7021 -7856.332 8535.6162 -7856.3599 8535.5332 C
-7854.1089 8535.5791 -7853.6392 8533.2588 Y
-7853.4048 8533.0635 -7853.1606 8532.7861 -7852.9238 8532.4756 C
-7853.1416 8532.6475 -7853.2944 8532.7393 Y
-7854.2583 8532.7393 -7855.8774 8534.4941 -7856.4966 8535.207 C
-7856.9194 8534.4434 -7857.853 8533.9111 -7858.9434 8533.9111 c
-7860.0698 8533.9111 -7861.0322 8534.4795 -7861.4312 8535.2852 C
-7861.9985 8534.624 -7863.6968 8532.751 -7864.6943 8532.751 C
-7864.8462 8532.6572 -7865.064 8532.4854 V
-7864.8281 8532.7939 -7864.583 8533.0732 -7864.3481 8533.2686 C
-7863.8638 8535.6563 -7861.5254 8535.5342 V
-7861.5449 8535.5889 -7861.5674 8535.6436 -7861.5806 8535.7021 C
-7864.9238 8535.6924 -7863.937 8538.3174 -7863.2104 8539.6602 C
-7865.5918 8540.376 -7867.2646 8541.7012 -7867.5239 8543.25 C
-7868.4473 8543.2998 -7869.6729 8543.3584 -7870.1802 8543.3584 C
-7870.8726 8543.5313 -7869.835 8541.458 V
-7869.6626 8539.0391 -7870.8726 8538.8662 V
-7873.8096 8538.002 -7874.501 8538.6934 V
-7875.1919 8539.5566 -7876.0562 8538.3467 V
-7875.1919 8540.0752 -7873.291 8539.5566 V
-7870.6982 8538.8662 -7871.3906 8540.5938 V
-7871.9087 8544.0498 -7870.1802 8544.7402 V
-7868.0342 8545.8545 -7866.2822 8546.0889 V
-7865.9087 8546.4141 -7865.4639 8546.7109 -7864.958 8546.9766 C
-7867.5562 8547.0469 -7870.2246 8547.9209 -7871.0752 8550.9561 C
-7871.5151 8552.2432 -7872.0518 8554.2432 V
-7873.1025 8554.8252 -7874.3022 8556.0078 -7875.541 8558.2627 C
-7876.394 8561.4502 -7877.167 8556.7129 V
-7878.3975 8553.6494 -7879.6504 8553.5381 V
-7878.4702 8555.2871 -7878.9038 8556.416 V
-7877.2998 8560.917 -7875.6138 8559.8994 V
-7874.0986 8559.2197 -7872.688 8556.8154 V
-7873.0698 8558.4971 -7873.4326 8560.417 -7873.6743 8562.3906 C
-7874.4888 8562.3975 L
-7876.3506 8561.4795 -7876.3262 8564.959 V
-7877.1226 8568.9453 -7876.3594 8571.6826 V
-7875.647 8574.1504 -7878.1274 8572.9307 V
-7879.2842 8573.3242 -7879.9839 8572.7881 V
-7882.3882 8571.4131 -7884 8573.124 V
-7882.147 8572.8799 -7881.4482 8573.417 V
-7879.9785 8573.5615 -7879.897 8574.1787 V
-7876.9561 8574.8555 -7876.188 8574.0771 V
-7874.417 8573.2139 -7875.1304 8570.3604 V
-7875.8799 8562.4814 -7874.3198 8564.4053 V
-7874.1182 8564.4219 -7873.8784 8564.5176 V
-7874.1519 8568.4326 -7873.8018 8572.3252 -7871.9961 8574.8516 C
-7875.4536 8567.333 -7870.2974 8552.3037 Y
-7868.9609 8547.5303 -7863.127 8548.1016 -7860.145 8548.7344 C
-7860.0718 8550.1299 -7859.8374 8551.9492 -7859.1318 8552.6553 C
-7858.2134 8550.6963 -7858.2358 8549.0732 V
-7857.0762 8548.7217 -7850.2817 8546.8447 -7847.4487 8550.3369 C
-7848.4312 8547.8135 -7850.8262 8547.0186 -7853.2007 8546.9189 C
-7852.667 8546.6318 -7852.2041 8546.3047 -7851.8257 8545.9502 C
-7850.041 8545.7861 -7847.7104 8544.5771 Y
-7845.9814 8543.8857 -7846.5015 8540.4307 Y
-7847.1919 8538.7021 -7844.5991 8539.3936 Y
-7842.7002 8539.9111 -7841.835 8538.1836 Y
-7842.7002 8539.3936 -7843.3906 8538.5303 Y
f-7837.9082 8572.9521 m
-7838.6074 8573.4893 -7839.7632 8573.0938 Y
-7842.2446 8574.3135 -7841.5327 8571.8467 Y
-7840.769 8569.1104 -7841.564 8565.1221 Y
-7841.541 8561.6445 -7843.4014 8562.5596 Y
-7844.0342 8562.5557 L
-7844.3198 8560.6123 -7844.7046 8558.7549 -7845.0898 8557.1699 C
-7843.7129 8559.4199 -7842.2778 8560.0635 Y
-7840.5913 8561.082 -7838.9878 8556.5791 Y
-7839.4214 8555.4502 -7838.2417 8553.7021 Y
-7839.4937 8553.8125 -7840.7246 8556.876 Y
-7841.4976 8561.6152 -7842.3511 8558.4268 Y
-7843.5776 8556.1904 -7844.769 8555.0098 -7845.814 8554.4229 C
-7846.2026 8553.0635 -7846.4858 8552.2393 Y
-7846.7002 8551.4727 -7847.0337 8550.8486 -7847.4487 8550.3369 C
-7847.3799 8550.5127 -7847.3174 8550.6982 -7847.2632 8550.8916 C
-7841.3022 8568.2588 -7846.4858 8574.9971 V
-7853.2246 8584.5869 -7857.3721 8584.5869 V
-7860.9663 8584.6514 L
-7865.1138 8584.6514 -7871.853 8575.0615 Y
-7871.9038 8574.9961 -7871.9463 8574.9219 -7871.9961 8574.8516 C
-7871.7378 8575.4141 -7871.437 8575.9404 -7871.0752 8576.4092 C
-7864.3359 8586 -7860.189 8586 V
-7856.5942 8585.9346 L
-7852.4482 8585.9346 -7845.709 8576.3447 Y
-7843.5801 8573.5771 -7843.3306 8569.0176 -7843.7769 8564.6055 C
-7843.6553 8564.5752 -7843.5698 8564.5684 Y
-7842.0112 8562.6475 -7842.7598 8570.5244 Y
-7843.4746 8573.3789 -7841.7026 8574.2402 Y
-7840.9351 8575.0186 -7837.9946 8574.3428 Y
-7837.9136 8573.7256 -7836.4434 8573.5811 Y
-7835.7446 8573.0449 -7833.8921 8573.2881 Y
-7835.5024 8571.5771 -7837.9082 8572.9521 Y
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7819.187 8586 L
-7819.187 8521.9023 L
-7884 8521.9023 L
-7884 8586 L
nu0 O
0 g
-7849.6978 8544.4297 m
-7851.6094 8521.9023 L
-7853.5215 8544.4297 L
-7852.9033 8544.3066 -7852.2642 8544.2402 -7851.6094 8544.2402 c
-7850.9551 8544.2402 -7850.3159 8544.3066 -7849.6978 8544.4297 C
f-7861.2402 8552.3975 m
-7884 8554.3301 L
-7861.1138 8556.2734 L
-7861.2856 8555.5469 -7861.3848 8554.793 -7861.3848 8554.0156 c
-7861.3848 8553.4629 -7861.3281 8552.9248 -7861.2402 8552.3975 C
f-7856.519 8545.5723 m
-7870.1626 8536.8047 L
-7860.2153 8549.377 L
-7859.3574 8547.791 -7858.0718 8546.4766 -7856.519 8545.5723 C
f-7853.481 8563.6074 m
-7851.5786 8586 L
-7849.6768 8563.5967 L
-7850.3018 8563.7227 -7850.9473 8563.791 -7851.6094 8563.791 c
-7852.25 8563.791 -7852.873 8563.7246 -7853.481 8563.6074 C
f-7841.9609 8555.5068 m
-7819.187 8553.5732 L
-7842.083 8551.6289 L
-7842.083 8551.8506 L
-7841.9258 8552.5488 -7841.834 8553.2695 -7841.834 8554.0156 c
-7841.834 8554.5234 -7841.8848 8555.0195 -7841.9609 8555.5068 C
f-7860.1138 8558.8262 m
-7870.1641 8571.5293 L
-7856.2778 8562.6055 L
-7857.8823 8561.7305 -7859.2114 8560.416 -7860.1138 8558.8262 C
f-7842.9961 8549.3945 m
-7832.875 8536.6055 L
-7846.7666 8545.5313 L
-7845.1768 8546.4414 -7843.8633 8547.7793 -7842.9961 8549.3945 C
f-7846.6895 8562.4512 m
-7832.873 8571.3281 L
-7842.9658 8558.5732 L
-7843.8198 8560.1895 -7845.1152 8561.5313 -7846.6895 8562.4512 C
f-7842.8887 8558.6133 m
-7842.3862 8557.6641 -7842.043 8556.6211 -7841.875 8555.5195 c
-7841.7993 8555.0293 -7841.748 8554.5273 -7841.748 8554.0156 c
-7841.748 8553.2637 -7841.8398 8552.5352 -7841.998 8551.8311 c
-7842.1958 8550.957 -7842.5049 8550.124 -7842.918 8549.3545 c
-7843.7954 8547.7246 -7845.1191 8546.374 -7846.7241 8545.4561 c
-7847.6294 8544.9375 -7848.6226 8544.5537 -7849.6802 8544.3457 c
-7850.3047 8544.2207 -7850.9497 8544.1523 -7851.6094 8544.1523 c
-7852.2695 8544.1523 -7852.915 8544.2207 -7853.5391 8544.3457 c
-7854.623 8544.5605 -7855.6382 8544.957 -7856.5625 8545.4961 c
-7858.1313 8546.4102 -7859.4282 8547.7363 -7860.291 8549.335 c
-7860.7969 8550.2695 -7861.145 8551.2969 -7861.3262 8552.3828 c
-7861.415 8552.916 -7861.4727 8553.459 -7861.4727 8554.0156 c
-7861.4727 8554.8008 -7861.3711 8555.5605 -7861.1978 8556.293 c
-7860.981 8557.207 -7860.6406 8558.0732 -7860.187 8558.8701 c
-7859.2793 8560.4727 -7857.939 8561.8008 -7856.3174 8562.6826 c
-7855.4487 8563.1553 -7854.5 8563.498 -7853.4961 8563.6934 c
-7852.8848 8563.8115 -7852.2554 8563.8779 -7851.6094 8563.8779 c
-7850.9414 8563.8779 -7850.29 8563.8086 -7849.6602 8563.6826 c
-7848.5786 8563.4668 -7847.5664 8563.0654 -7846.6455 8562.5273 c
-7845.0566 8561.5977 -7843.751 8560.2441 -7842.8887 8558.6133 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7874.75 8587 m
-7874.75 8563 L
-7884.75 8563 L
-7884.75 8587 L
-7874.75 8587 L
nuu0 Ap
0 O
1 g
-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 c
-7877.897 8566.9736 -7881.0898 8565 -7884.75 8565 C
-7884.75 8585 L
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 c
-7881.9121 8584.7754 -7880.1807 8584.0645 -7878.7441 8582.9824 c
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 c
f0 R
0 G
1 J 1 j 0.5 w-7884.75 8565.3174 m
-7881.7207 8566.2744 -7878.8926 8567.9326 -7876.1543 8569.9072 C
S-7884.75 8570.9512 m
-7881.5991 8573.3564 -7878.543 8576.0869 -7875.4058 8578.5361 C
S-7878.7441 8582.9824 m
-7880.8105 8581.8916 -7882.7993 8580.5342 -7884.75 8579.043 C
S-7883.8018 8584.9521 m
-7884.1191 8584.8682 -7884.4375 8584.7852 -7884.75 8584.6865 C
S-7878.7441 8582.9824 m
-7880.1807 8584.0645 -7881.9121 8584.7744 -7883.8018 8584.9521 C
S-7875.4058 8578.5361 m
-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c
-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 C
S-7884.75 8585 m
-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 C
S-7878.7441 8582.9824 m
-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 C
S-7876.1543 8569.9072 m
-7877.8975 8566.9736 -7881.0898 8565 -7884.75 8565 C
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884.0254 8586.0264 m
-7828.0542 8586.0264 L
-7828.0542 8524.5342 L
-7884.0254 8524.5342 L
-7884.0254 8586.0264 L
nuu0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7857.5991 8562.7217 m
-7857.3594 8573.5215 -7862.8794 8583.8398 v
-7862.4009 8586 -7860.959 8586 v
-7861.2002 8582.6406 -7860.2393 8582.1611 v
-7855.9199 8570.1602 -7856.6382 8562.2402 v
-7857.5991 8562.7217 l
b-7857.5991 8562.7217 m
-7859.2793 8568 -7871.0391 8569.2012 v
-7875.3594 8569.6807 -7875.5991 8571.1211 v
-7869.1206 8561.5195 -7868.1602 8561.7607 v
-7881.3594 8556.001 -7884 8550.7197 v
-7878.959 8553.6006 -7875.5991 8551.4404 v
-7867.6802 8551.2012 -7862.6406 8553.3613 v
-7858.8008 8555.2813 -7866.7202 8539.2012 v
-7862.8794 8550.9609 -7859.2793 8524.5605 v
-7858.3198 8529.8408 -7856.8799 8531.2813 v
-7850.8799 8538.9609 -7851.8398 8541.1211 v
-7852.3198 8544.9609 -7847.7598 8538.7207 v
-7848 8548.3213 -7850.4009 8551.6807 v
-7852.5591 8555.2813 -7846.5591 8553.1211 v
-7840.5591 8551.2012 -7835.2793 8552.8809 v
-7829.7598 8554.3203 -7828.0801 8551.4404 v
-7839.8398 8563.9209 -7845.5991 8563.6807 v
-7843.9194 8567.2813 l
-7841.519 8572.0811 -7842 8573.2813 v
-7857.2681 8563.8828 -7857.5991 8562.7217 v
b-7857.5991 8562.7217 m
-7854.959 8544.2402 -7857.5991 8536.5605 v
-7859.998 8526.001 -7859.2793 8524.5605 v
S-7856.1602 8551.4404 m
-7850.1602 8546.6406 -7848.959 8541.3604 v
S-7856.1602 8550.7197 m
-7865.0391 8543.041 -7866.7202 8539.2012 v
S-7828.0801 8551.4404 m
-7829.2793 8553.6006 -7857.3594 8561.7607 y
-7862.4009 8556.2422 -7873.9199 8553.8408 v
-7881.5986 8552.8809 -7884 8550.7197 v
S-7874.6382 8569.6807 m
-7863.1191 8560.5615 -7857.3594 8561.7607 y
-7843.1992 8568 -7842 8573.2813 v
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.8496 8585.9961 m
-7833.96 8585.9961 L
-7833.96 8534.9258 L
-7883.8496 8534.9258 L
-7883.8496 8585.9961 L
nu0 O
0.025 0.1 0.475 0 k
-7862.1504 8553.9043 m
-7864.4766 8552.8125 -7866.6914 8552.4434 -7868.373 8552.9238 c
-7869.0518 8553.1172 -7869.645 8553.4473 -7870.123 8553.9238 c
-7870.6006 8554.4023 -7870.9297 8554.9951 -7871.123 8555.6729 c
-7872.0088 8558.7715 -7870.0103 8563.6777 -7865.9233 8567.7666 c
-7861.834 8571.8535 -7856.9297 8573.8516 -7853.8286 8572.9668 c
-7853.1519 8572.7715 -7852.5586 8572.4424 -7852.0806 8571.9658 c
-7851.603 8571.4883 -7851.2754 8570.8955 -7851.082 8570.2168 c
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.582 8561.21 -7854.791 8559.6133 -7856.2793 8558.123 c
-7858.1504 8556.2539 -7860.1914 8554.8242 -7862.1504 8553.9043 c
fu0.0035 0.014 0.0665 0 k
-7861.2183 8552.9727 m
-7863.8306 8552.0215 -7866.3975 8551.9688 -7868.373 8552.9238 C
-7866.6914 8552.4434 -7864.4766 8552.8125 -7862.1504 8553.9043 c
-7861.6191 8554.1543 -7861.0806 8554.4434 -7860.543 8554.7676 C
-7858.8984 8554.0537 L
-7859.667 8553.6172 -7860.4434 8553.2539 -7861.2183 8552.9727 c
f0.015 0.06 0.285 0 k
-7858.8984 8554.0537 m
-7860.543 8554.7676 L
-7859.0962 8555.6348 -7857.6426 8556.7607 -7856.2793 8558.123 c
-7856.1538 8558.25 -7856.0327 8558.3779 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7856.3706 8555.7236 -7857.6191 8554.7813 -7858.8984 8554.0537 C
fUu0.039 0.156 0.741 0 k
-7849.687 8541.4043 m
-7849.9746 8541.6914 -7861.2183 8552.9727 Y
-7860.4434 8553.2539 -7859.667 8553.6172 -7858.8984 8554.0537 C
-7845.4146 8540.5703 L
-7847.061 8540.0996 -7848.6406 8540.3555 -7849.687 8541.4043 c
f0.025 0.1 0.475 0 k
-7845.4146 8540.5703 m
-7858.8984 8554.0537 L
-7857.584 8554.8027 -7856.2969 8555.7754 -7855.1143 8556.957 c
-7855.084 8556.9863 -7855.0586 8557.0156 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7841.5264 8543.1328 -7841.7202 8542.9141 -7841.9302 8542.7012 c
-7843.0103 8541.623 -7844.2305 8540.9082 -7845.4146 8540.5703 C
fUu0.0115 0.046 0.2185 0 k
-7835.9346 8550.3926 m
-7833.5337 8547.9893 -7833.335 8544.0898 -7835.1382 8540.6973 C
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f0.015 0.06 0.285 0 k
-7843.5337 8535.5957 m
-7842.582 8534.9258 L
-7845.2046 8534.3516 -7847.8306 8534.9141 -7849.6206 8536.7061 c
-7848.1719 8535.2578 -7845.9082 8534.9307 -7843.5337 8535.5957 C
f0.0295 0.118 0.5605 0 k
-7843.5337 8535.5957 m
-7845.9082 8534.9307 -7848.1719 8535.2578 -7849.6206 8536.7061 c
-7851.019 8538.1055 -7851.3706 8540.2637 -7850.7954 8542.5469 C
-7848.8672 8539.5449 -7845.4082 8540.5537 V
-7843.585 8535.6309 L
-7843.5337 8535.5957 L
f*u
1 D
0.048 0.192 0.912 0 k
-7835.9346 8550.3926 m
-7837.2817 8551.7383 -7839.332 8552.1133 -7841.5234 8551.627 C
-7851.6714 8561.7734 L
-7851.7695 8561.5684 -7851.7695 8561.5684 -7851.6714 8561.7734 c
-7850.2246 8564.8145 -7849.9702 8567.916 -7851.082 8570.2168 C
-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c
-7853.5054 8561.3438 -7854.5918 8559.8848 -7855.9102 8558.5059 C
-7855.2153 8556.8633 L
-7855.1816 8556.8945 -7855.1465 8556.9238 -7855.1143 8556.957 c
-7855.084 8556.9883 -7855.0566 8557.0176 -7855.0273 8557.0469 c
-7855.0278 8557.0469 -7855.0278 8557.0469 -7855.0278 8557.0449 C
-7841.3408 8543.3574 L
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 c
f*U
0 D
0.0215 0.086 0.4085 0 k
-7842.582 8534.9258 m
-7843.5337 8535.5957 L
-7841.6846 8536.1113 -7839.7656 8537.2285 -7838.1138 8538.8828 c
-7837.4063 8539.5889 -7836.7998 8540.3418 -7836.2954 8541.1182 C
-7835.1382 8540.6973 L
-7835.6553 8539.7246 -7836.3374 8538.793 -7837.1802 8537.9512 c
-7838.7695 8536.3594 -7840.6758 8535.3428 -7842.582 8534.9258 C
f0.0205 0.082 0.3895 0 k
-7836.2954 8541.1182 m
-7836.7998 8540.3418 -7837.4063 8539.5889 -7838.1138 8538.8828 c
-7839.7656 8537.2285 -7841.6846 8536.1113 -7843.5337 8535.5957 C
-7843.585 8535.6309 L
-7845.4082 8540.5537 L
-7844.2114 8540.9219 -7842.9878 8541.6436 -7841.9302 8542.7012 c
-7841.7202 8542.9141 -7841.5264 8543.1328 -7841.3408 8543.3574 C
-7836.3262 8541.1289 L
-7836.2954 8541.1182 L
fUu0.445 0.356 0.267 0 k
-7883.8496 8585.9961 m
-7861.957 8562.9688 L
-7862.2007 8562.6494 -7862.5752 8562.6133 -7862.8887 8562.6592 C
-7867.1802 8567.2891 -7878.3145 8579.4561 -7882.7266 8584.2793 C
-7883.5649 8585.3516 -7884 8585.9932 -7883.8496 8585.9961 C
f0.15 0.12 0.09 0 k
-7883.834 8585.9961 m
-7882.6606 8585.7031 -7861.6934 8564.0029 Y
-7861.6934 8563.502 -7861.7993 8563.1758 -7861.957 8562.9688 C
-7883.8496 8585.9961 L
-7883.8442 8585.9961 -7883.8418 8586 -7883.834 8585.9961 c
f0.2 0.16 0.12 0 k
-7882.7266 8584.2793 m
-7878.3145 8579.4561 -7867.1802 8567.2891 -7862.8887 8562.6592 C
-7863.2002 8562.7041 -7863.4526 8562.8301 Y
-7864.603 8563.1328 -7878.5742 8578.9619 -7882.7266 8584.2793 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7882.9502 8585.2324 m
-7833.0391 8585.2324 L
-7833.0391 8521.1152 L
-7882.9502 8521.1152 L
-7882.9502 8585.2324 L
nu0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7833.2358 8521.1152 m
-7833.6064 8521.248 -7833.9858 8521.2832 -7834.3833 8521.2031 c
-7834.4863 8521.168 l
-7834.5254 8521.1602 -7834.5703 8521.1787 -7834.6025 8521.1992 c
-7834.9434 8521.3926 l
-7838.7129 8523.2959 -7842.0962 8525.8965 -7844.5 8529.4473 c
-7845.9634 8531.5918 -7847.123 8533.8789 -7848.7993 8535.8564 c
-7849.1729 8536.209 -7849.1758 8536.7725 -7848.834 8537.1309 c
-7848.4951 8537.501 -7847.918 8537.5078 -7847.561 8537.165 c
-7847.4038 8537.21 l
-7847.2642 8537.1289 -7847.0742 8537.0703 -7847.0234 8536.957 c
-7845.853 8534.2031 -7845.1895 8531.5137 -7843.4336 8529.1387 c
-7841.1719 8526.0947 -7838.1777 8523.9941 -7835.0298 8522.0234 c
-7834.3672 8521.6055 L
-7834.4966 8521.6348 L
-7833.7695 8521.6426 l
-7833.791 8521.6113 -7833.8008 8521.5957 -7833.8223 8521.5645 C
-7833.6064 8521.5234 -7833.377 8521.4746 -7833.1626 8521.4336 c
-7833.0762 8521.4238 -7833.0186 8521.3389 -7833.0391 8521.2383 c
-7833.0503 8521.1523 -7833.1382 8521.1084 -7833.2358 8521.1152 c
-7833.2358 8521.1152 l
b-7849.2222 8534.9951 m
-7849.5742 8534.8066 -7849.9658 8534.6719 -7850.248 8534.3887 c
-7856.4521 8528.1719 -7866.6802 8527.2734 -7874.0488 8533.6855 C
-7874.1582 8533.7813 -7874.1582 8533.957 -7874.063 8534.0645 C
-7871.0527 8532.9434 -7862.8838 8534.375 -7859.3223 8537.4121 C
-7859.2534 8537.4668 -7859.1465 8537.4531 -7859.1055 8537.3711 C
-7859.0503 8537.3047 -7859.0664 8537.1953 -7859.1328 8537.1563 C
-7862.5625 8534.0859 -7867.0674 8532.29 -7871.6729 8532.748 C
-7868.8535 8531.1855 -7865.6313 8530.4941 -7862.3984 8530.6885 c
-7857.7144 8530.9717 -7853.4634 8533.1191 -7849.3711 8535.2793 c
-7849.291 8535.3193 -7849.1978 8535.293 -7849.1553 8535.2109 C
-7849.1016 8535.1309 -7849.1426 8535.0352 -7849.2222 8534.9951 c
b-7858.647 8536.3359 m
-7860.2266 8540.3613 -7862.3911 8544.3203 -7865.8018 8547.0762 c
-7865.9648 8547.2119 -7865.9946 8547.4492 -7865.8711 8547.6055 c
-7865.7344 8547.7676 -7865.5049 8547.7793 -7865.3481 8547.6563 c
-7861.123 8545.5967 -7858.1904 8541.1309 -7858.1626 8536.4014 c
-7858.1626 8536.4014 l
-7858.1328 8536.2676 -7858.2354 8536.1348 -7858.3633 8536.1221 c
-7858.5039 8536.1055 -7858.6318 8536.1973 -7858.647 8536.3359 c
-7858.647 8536.3359 l
b-7852.9414 8541.0176 m
-7853.042 8541.1816 -7853.1152 8541.3838 -7853.2617 8541.4824 c
-7856.0806 8543.3906 -7858.9785 8544.6309 -7861.8848 8546.1328 c
-7862.0503 8546.209 -7862.1118 8546.418 -7862.0313 8546.5703 c
-7861.9512 8546.7227 -7861.7559 8546.7793 -7861.5898 8546.7041 c
-7858.439 8545.3232 -7854.313 8544.5 -7852.6729 8541.1797 c
-7852.6289 8541.1113 -7852.6455 8541.0146 -7852.7266 8540.9648 c
-7852.7959 8540.9199 -7852.897 8540.9492 -7852.9414 8541.0176 c
-7852.9414 8541.0176 l
b-7852.6602 8541.918 m
-7852.4438 8542.4297 -7852.1431 8542.8896 -7852.0503 8543.4355 c
-7851.2183 8548.2773 -7851.1152 8553.042 -7852.248 8557.6875 c
-7852.248 8557.6875 l
-7852.3418 8557.9531 -7852.2114 8558.2441 -7851.9438 8558.3389 c
-7851.6777 8558.4336 -7851.3882 8558.3125 -7851.2935 8558.0479 c
-7849.293 8552.8115 -7849.897 8546.7373 -7852.3711 8541.7832 c
-7852.4063 8541.7002 -7852.498 8541.6689 -7852.582 8541.6914 c
-7852.6641 8541.7275 -7852.6978 8541.835 -7852.6602 8541.918 c
-7852.6602 8541.918 l
b-7851.5352 8557.5938 m
-7848.8984 8555.2275 -7846.6816 8552.252 -7845.853 8548.7363 c
-7845.853 8548.7363 l
-7845.7246 8548.1816 -7846.0742 8547.623 -7846.6416 8547.4902 c
-7847.1992 8547.375 -7847.7578 8547.7246 -7847.8862 8548.2793 c
-7848.5649 8551.5313 -7849.8711 8554.6729 -7851.7954 8557.3867 c
-7851.7954 8557.3867 l
-7851.8462 8557.4551 -7851.834 8557.5576 -7851.7695 8557.6201 c
-7851.6992 8557.6699 -7851.5977 8557.6582 -7851.5352 8557.5938 c
-7851.5352 8557.5938 l
b-7836.3711 8550.1826 m
-7837.7114 8545.8301 -7840.2598 8542.0693 -7843.689 8539.1533 C
-7843.729 8539.0723 -7843.8242 8539.0322 -7843.9038 8539.0859 C
-7843.9863 8539.127 -7844.0122 8539.2207 -7843.9722 8539.3018 C
-7843.957 8539.7891 -7843.7144 8540.2334 -7843.4458 8540.5313 c
-7838.4063 8546.1621 -7834.9902 8554.7197 -7837.3433 8561.9551 C
-7837.0762 8556.4512 -7838.7241 8550.3008 -7842.1362 8545.6738 c
-7843.1606 8544.2695 -7844.7422 8544.1211 -7846.3081 8544.2031 C
-7846.4023 8544.1895 -7846.4834 8544.2432 -7846.4961 8544.3369 c
-7846.5098 8544.4189 -7846.4551 8544.5137 -7846.3623 8544.5254 C
-7843.1479 8545.7695 -7841.4878 8549.2246 -7840.084 8552.1943 c
-7838.415 8555.7441 -7837.7017 8559.6387 -7838.0054 8563.5 C
-7838.0454 8563.6777 -7838.1138 8565.3975 -7837.9775 8565.4102 C
-7837.8306 8565.4395 -7837.709 8565.3438 -7837.6802 8565.1943 C
-7837.645 8565.0449 -7834.6426 8555.7988 -7836.3711 8550.1826 c
b-7844.4863 8537.4912 m
-7843.3945 8533.6211 -7841.1094 8530.251 -7838.4824 8527.2383 c
-7838.3306 8527.1045 -7838.3145 8526.8867 -7838.4502 8526.7354 c
-7838.5752 8526.6006 -7838.8047 8526.582 -7838.957 8526.7178 c
-7842.3306 8529.332 -7843.4487 8533.541 -7844.7954 8537.375 c
-7844.7954 8537.375 l
-7844.8262 8537.4648 -7844.7754 8537.5586 -7844.6982 8537.5869 c
-7844.6094 8537.6191 -7844.5166 8537.5684 -7844.4863 8537.4912 c
-7844.4863 8537.4912 l
b-7838.5313 8562.1094 m
-7838.5991 8562.0566 -7838.707 8562.083 -7838.748 8562.1504 C
-7838.9634 8562.4746 -7840.6914 8564.5195 -7841.3926 8565.1406 c
-7846.1719 8569.3945 -7849.5137 8573.9609 -7857.5391 8577.7227 c
-7864.4512 8580.9639 -7867.1113 8583.5957 -7874.3862 8581.8262 c
-7877.687 8581.0293 -7879.0313 8580.5313 -7880.4351 8575.4551 C
-7881.9473 8569.2988 -7880.8672 8571.7832 -7881.084 8564.4385 c
-7881.2222 8559.6973 -7884 8548.4551 -7871.5254 8534.2598 C
-7871.4199 8534.1484 -7871.4336 8533.9961 -7871.5337 8533.9072 C
-7871.6328 8533.8027 -7871.7959 8533.8164 -7871.8862 8533.916 C
-7877.5786 8538.7168 -7881.0234 8545.6582 -7882.3145 8552.9424 c
-7883.2871 8558.4668 -7882.9199 8563.25 -7882.666 8569.6367 c
-7882.5688 8572.0938 -7883.6855 8579.0723 -7878.9102 8583.0625 c
-7875.3926 8586 -7870.3911 8585.5469 -7866.3545 8584.1563 c
-7860.6992 8582.2119 -7855.9727 8579.1465 -7850.8711 8575.6094 c
-7847.2656 8573.125 -7839.2881 8563.2852 -7838.4785 8562.3262 C
-7838.4351 8562.2588 -7838.4502 8562.1504 -7838.5313 8562.1094 C
b-7873.0503 8549.3057 m
-7872.168 8548.5029 -7871.7017 8549.8457 -7871.4297 8550.6016 c
-7871.1626 8551.3574 -7870.189 8551.25 -7870.5127 8551.5732 c
-7870.8369 8551.8975 -7870.8369 8551.9521 -7871.3232 8551.5195 c
-7871.8086 8551.0879 -7871.8086 8551.7363 -7872.5649 8551.25 c
-7873.3198 8550.7627 -7873.645 8549.8457 -7873.0503 8549.3057 c
b-7865.6519 8553.9492 m
-7865.3657 8553.5918 -7864.6802 8553.5723 -7864.4648 8553.8945 c
-7864.25 8554.2197 -7863.3306 8554.2734 -7863.4937 8554.5967 c
-7863.6543 8554.9219 -7863.6016 8555.1387 -7864.0874 8554.9219 c
-7864.5737 8554.7051 -7864.4121 8555.2998 -7864.897 8555.084 c
-7865.3833 8554.8672 -7865.8687 8554.2197 -7865.6519 8553.9492 c
b-7857.6074 8559.0791 m
-7857.1206 8558.7559 -7855.8794 8559.5117 -7856.4727 8559.5117 c
-7857.0674 8559.5117 -7856.311 8560.2676 -7856.8521 8560.4834 c
-7857.3906 8560.6992 -7857.2832 8560.4297 -7857.6074 8560.6445 c
-7857.9297 8560.8613 -7858.3633 8561.2393 -7858.5239 8560.4297 c
-7858.6855 8559.6191 -7858.3633 8559.6191 -7857.9849 8559.3496 c
-7857.6074 8559.0791 -7857.6074 8559.0791 y
b-7872.2402 8559.3496 m
-7871.1074 8559.2422 -7871.8633 8559.998 -7871.269 8560.4834 c
-7870.6738 8560.9697 -7869.918 8561.6172 -7870.729 8561.4004 c
-7871.5391 8561.1855 -7872.9961 8561.6719 -7872.9434 8560.5381 c
-7872.8887 8559.4033 -7872.6328 8559.3867 -7872.2402 8559.3496 c
b-7866.5703 8567.6113 m
-7866.1016 8567.3438 -7866.6802 8567.7197 -7866.0303 8567.6113 c
-7865.3833 8567.5039 -7864.7886 8567.6113 -7865.2207 8567.8281 c
-7865.6519 8568.0439 -7866.3008 8568.1523 -7866.4634 8567.9893 c
-7866.625 8567.8281 -7866.9473 8567.8281 -7866.5703 8567.6113 c
b-7857.0674 8567.1797 m
-7857.4785 8566.1797 -7856.0962 8566.4238 -7855.4473 8566.7461 c
-7854.7998 8567.0723 -7853.8262 8566.4775 -7854.4209 8566.9102 c
-7855.0137 8567.3418 -7854.7998 8566.9102 -7855.3926 8567.2334 c
-7855.9873 8567.5566 -7856.6895 8568.0977 -7857.0674 8567.1797 c
b-7872.6738 8573.0664 m
-7872.7222 8572.0752 -7871.8086 8572.957 -7871.269 8573.0117 c
-7870.729 8573.0664 -7870.0801 8573.0664 -7870.2432 8573.2813 c
-7870.4038 8573.498 -7870.459 8573.498 -7871.1626 8573.7129 c
-7871.8633 8573.9297 -7872.6191 8574.1445 -7872.6738 8573.0664 c
b-7873.1582 8567.6113 m
-7874.0664 8567.9746 -7874.293 8567.8809 -7874.5625 8568.2051 c
-7874.834 8568.5293 -7875.1558 8569.2314 -7875.5352 8568.0977 c
-7875.9121 8566.9629 -7875.4282 8565.7764 -7875.0479 8565.9375 c
-7874.6714 8566.0996 -7874.293 8566.7461 -7873.8618 8566.9629 c
-7873.4297 8567.1797 -7872.6191 8567.3945 -7873.1582 8567.6113 c
bUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7803 8586 L
-7803 8481 L
-7884 8481 L
-7884 8586 L
nuuu0 O
0 0 0 1 k
-7865.8057 8498.4258 m
-7866.0742 8496.6621 -7867.1602 8495.291 -7868.5239 8495.3965 c
-7869.8862 8495.502 -7870.707 8497.0234 -7870.7432 8498.8066 c
-7870.748 8499.0693 -7870.6743 8500.2441 -7870.6304 8500.4775 C
-7870.6382 8500.582 -7870.6191 8500.6738 -7870.6104 8500.7803 c
-7870.5142 8502.0254 -7869.3574 8503.3604 -7867.9414 8503.25 c
-7866.5249 8503.1406 -7865.4897 8501.8613 -7865.6367 8500.4727 c
-7865.644 8500.4072 -7865.6958 8499.626 -7865.707 8499.5625 C
-7865.6816 8499.2852 -7865.7598 8498.7256 -7865.8057 8498.4258 c
f-7876.2646 8507.7334 m
-7876.9946 8515.916 -7871.5015 8515.1191 v
-7868.3682 8514.0186 -7869.4414 8511.1211 v
-7869.6426 8509.752 -7871.7847 8508.498 v
-7872.146 8508.25 -7872.7632 8507.1016 v
-7873.1294 8505.5977 -7874.5186 8505.2979 v
-7876.0762 8505.251 -7876.2646 8507.7334 v
f-7850.7646 8516.4971 m
F-7850.0762 8514.3408 m
-7850.7847 8513.1934 -7853.8848 8513.6279 Y
-7854.811 8513.6885 -7855.3799 8513.1113 Y
-7857.8394 8509.0918 -7861.0386 8509.8857 -7861.4082 8509.9932 C
-7861.4097 8509.9863 L
-7864.999 8510.6045 -7865.2666 8515.6035 V
-7865.4912 8516.3828 -7866.335 8516.7695 V
-7869.2695 8517.8613 -7869.3481 8519.208 V
-7869.8999 8521.1152 -7867.6006 8521.7422 V
-7865.6792 8522.2568 -7863.7886 8519.8945 V
-7862.6113 8518.6797 -7859.5762 8517.9395 V
-7859.5728 8517.9531 L
-7856.3594 8517.0459 -7854.6392 8517.5889 Y
-7851.8521 8518.7676 -7850.4063 8517.4014 Y
-7848.6826 8515.7559 -7850.0762 8514.3408 Y
f-7863.9834 8497.8789 m
-7864.5854 8496.2002 -7864.2822 8494.4775 -7863.0327 8493.9229 c
-7861.7842 8493.3672 -7860.3384 8494.3164 -7859.4585 8495.8672 c
-7859.3286 8496.0957 -7858.8359 8497.165 -7858.7632 8497.3906 C
-7858.7065 8497.4785 -7858.6792 8497.5684 -7858.6362 8497.667 c
-7858.1289 8498.8086 -7858.5122 8500.5303 -7859.8105 8501.1074 c
-7861.1089 8501.6855 -7862.6279 8501.0527 -7863.1582 8499.7617 c
-7863.1831 8499.7002 -7863.5078 8498.9883 -7863.5298 8498.9268 C
-7863.6831 8498.6963 -7863.8809 8498.166 -7863.9834 8497.8789 c
f-7849.7129 8500.9316 m
-7845.1802 8507.7822 -7850.3911 8509.6943 v
-7853.6714 8510.2168 -7854.103 8507.1572 v
-7854.5786 8505.8564 -7853.29 8503.7354 v
-7853.0903 8503.3447 -7853.0938 8502.04 v
-7853.4858 8500.5449 -7852.4082 8499.6182 v
-7851.0591 8498.8359 -7849.7129 8500.9316 v
fUu-7824.7358 8550.1074 m
-7824.3687 8548.3623 -7824.9048 8546.6963 -7826.2183 8546.3164 c
-7827.5322 8545.9375 -7828.8345 8547.0752 -7829.4937 8548.7324 c
-7829.5903 8548.9775 -7829.9326 8550.1025 -7829.9746 8550.3369 C
-7830.0176 8550.4326 -7830.0322 8550.5244 -7830.0625 8550.6279 c
-7830.4087 8551.8271 -7829.7935 8553.4805 -7828.4282 8553.875 c
-7827.063 8554.2695 -7825.645 8553.4365 -7825.2969 8552.085 c
-7825.2793 8552.0205 -7825.0552 8551.2705 -7825.0425 8551.207 C
-7824.9214 8550.9551 -7824.7983 8550.4053 -7824.7358 8550.1074 c
f-7838.2705 8554.6172 m
-7841.8242 8562.0244 -7836.3999 8563.2061 v
-7833.0801 8563.2754 -7833.0688 8560.1846 v
-7832.7778 8558.8311 -7834.3433 8556.9072 v
-7834.5942 8556.5459 -7834.7695 8555.2539 v
-7834.5854 8553.7188 -7835.7793 8552.9492 v
-7837.2222 8552.3594 -7838.2705 8554.6172 v
f-7817.4648 8571.7695 m
F-7816.063 8569.9912 m
-7816.3247 8568.6689 -7819.3799 8567.9883 Y
-7820.27 8567.7197 -7820.5986 8566.9795 Y
-7821.4922 8562.3535 -7824.7666 8561.9746 -7825.1494 8561.9453 C
-7825.1494 8561.9395 L
-7828.7271 8561.2588 -7830.731 8565.8467 V
-7831.2153 8566.4961 -7832.1416 8566.5625 V
-7835.272 8566.5557 -7835.8169 8567.7891 V
-7837.0039 8569.3809 -7835.0713 8570.7764 V
-7833.4526 8571.9316 -7830.853 8570.3818 V
-7829.3242 8569.6582 -7826.2222 8570.0293 V
-7826.2231 8570.042 L
-7822.896 8570.3213 -7821.4766 8571.4326 Y
-7819.2793 8573.5146 -7817.4463 8572.7432 Y
-7815.2554 8571.8057 -7816.063 8569.9912 Y
f-7822.8374 8550.2354 m
-7822.813 8548.4512 -7821.9258 8546.9453 -7820.5601 8546.8633 c
-7819.1943 8546.7803 -7818.1743 8548.1768 -7817.895 8549.9385 c
-7817.854 8550.1973 -7817.7666 8551.3711 -7817.7778 8551.6094 C
-7817.7559 8551.7109 -7817.7617 8551.8037 -7817.7559 8551.9121 c
-7817.6807 8553.1592 -7818.644 8554.6367 -7820.0625 8554.7217 c
-7821.4814 8554.8066 -7822.6826 8553.6826 -7822.7246 8552.2871 c
-7822.7271 8552.2217 -7822.7822 8551.4404 -7822.7798 8551.375 C
-7822.8433 8551.1045 -7822.8423 8550.54 -7822.8374 8550.2354 c
f-7811.0186 8557.5625 m
-7809.1777 8565.5684 -7814.7271 8565.5303 v
-7817.9834 8564.8691 -7817.3154 8561.8516 v
-7817.3032 8560.4668 -7815.353 8558.9326 v
-7815.0278 8558.6377 -7814.5742 8557.415 v
-7814.417 8555.876 -7813.083 8555.3877 v
-7811.5454 8555.1279 -7811.0186 8557.5625 v
fUU1 Ap
-7884 8586 m
-7884 8481 L
-7803 8481 L
-7803 8586 L
-7884 8586 L
nUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8543.918 m
-7885 8587 L
-7798.2217 8587 L
-7798.2217 8543.918 L
-7885 8543.918 L
nuu0 O
0 0 0 1 k
-7825.2217 8573.2363 m
-7825.2217 8581.0742 L
-7813.2217 8574.1445 L
-7801.2217 8567.2168 L
-7813.2217 8560.2891 L
-7825.2217 8553.3613 L
-7825.2217 8561.4824 L
-7883.9351 8547.7168 L
-7870.9878 8566.8027 L
-7885 8587 L
-7825.2217 8573.2363 L
f0 1 1 0.1 k
0 R
0 0 0 1 K
-7823.2217 8570.2363 m
-7823.2217 8578.0742 L
-7811.2217 8571.1445 L
-7799.2217 8564.2168 L
-7811.2217 8557.2891 L
-7823.2217 8550.3613 L
-7823.2217 8558.4824 L
-7881.9351 8544.7168 L
-7867.2754 8564.3594 L
-7881.9351 8584 L
-7823.2217 8570.2363 L
bUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7726.3994 8587 m
-7726.3994 8573.4199 L
-7885 8573.4199 L
-7885 8587 L
-7726.3994 8587 L
nuu0 O
0.285 0.228 0.171 0 k
-7741.0786 8585.4844 m
-7741.043 8586.6895 L
-7727.5103 8587.5176 -7726.8418 8586.2822 v
-7726.7441 8586.1016 -7726.647 8585.7148 -7726.561 8585.1934 C
-7728.584 8585.8242 -7738.291 8585.5713 -7741.0786 8585.4844 C
f0.44 0.352 0.264 0 k
-7741.4063 8574.0234 m
-7741.3711 8575.2676 L
-7738.4912 8575.0488 -7728.1914 8574.3164 -7726.543 8574.8652 C
-7726.7031 8574.2188 -7726.9199 8573.7646 -7727.2046 8573.6152 c
-7728.8306 8572.7656 -7741.4063 8574.0234 Y
f0.145 0.116 0.087 0 k
-7741.3711 8575.2676 m
-7741.0786 8585.4844 L
-7738.291 8585.5713 -7728.584 8585.8242 -7726.561 8585.1934 C
-7726.1519 8582.7773 -7725.9258 8577.3604 -7726.543 8574.8652 C
-7728.1914 8574.3164 -7738.4912 8575.0488 -7741.3711 8575.2676 C
fUu0.155 0.124 0.093 0 k
-7766.9375 8579.2734 m
-7765.897 8579.6563 L
-7747.0728 8575.1465 L
-7747.481 8574.3145 L
-7766.3633 8576.7246 L
-7767.252 8577.0059 L
-7767.6504 8576.8936 -7768.1934 8576.8242 V
-7767.6094 8577.2373 -7767.1426 8578.1406 -7766.9375 8579.2734 C
fu0.085 0.068 0.051 0 k
-7771.7993 8583.666 m
-7772.5977 8583.7217 -7769.749 8583.6641 Y
-7770.3481 8583.0176 -7770.771 8581.8203 -7770.8105 8580.4375 c
-7770.8169 8580.2246 -7770.8105 8580.0176 -7770.7993 8579.8135 C
-7771.041 8579.707 -7771.0918 8579.7734 -7771.6289 8579.5645 C
-7771 8583.6113 -7771.7993 8583.666 v
f0.305 0.244 0.183 0 k
-7770.3442 8576.8672 m
-7770.5527 8576.8105 -7770.4937 8578.9307 Y
-7769.4785 8579.7588 L
-7767.8359 8578.9434 L
-7766.9375 8579.2734 L
-7767.1426 8578.1406 -7767.6094 8577.2373 -7768.1934 8576.8242 C
-7768.6094 8576.7715 -7769.874 8576.7998 -7770.3442 8576.8672 C
fU0.115 0.092 0.069 0 k
-7766.9375 8579.2734 m
-7767.8359 8578.9434 L
-7769.4785 8579.7588 L
-7770.4937 8578.9307 L
-7770.793 8579.708 -7770.7993 8579.8135 V
-7769.5137 8580.3789 -7768.1831 8580.7402 -7766.8398 8580.9258 C
-7766.79 8580.7275 -7766.7842 8580.543 -7766.79 8580.3369 c
-7766.7998 8579.9717 -7766.8218 8579.6182 -7766.9375 8579.2734 C
f0.41 0.328 0.246 0 k
-7747.4512 8575.3965 m
-7749.377 8576.6426 -7758.3862 8582.0986 -7766.8398 8580.9258 C
-7766.9038 8582.0928 -7767.248 8583.0908 -7767.75 8583.6631 C
-7767.1895 8583.6621 L
-7746.7402 8586.7559 L
-7747.0366 8576.4258 L
-7747.0728 8575.1465 L
-7747.2046 8575.2373 -7747.4512 8575.3965 v
f0.395 0.316 0.237 0 k
-7770.8105 8580.4375 m
-7770.771 8581.8203 -7770.3481 8583.0176 -7769.749 8583.6641 C
-7767.6807 8583.6631 L
-7767.1782 8583.0908 -7766.8218 8582.0713 -7766.8398 8580.9258 C
-7768.1831 8580.7402 -7769.5137 8580.3789 -7770.7993 8579.8135 C
-7770.8105 8580.0176 -7770.8169 8580.2246 -7770.8105 8580.4375 c
fUu0 0 0 0.11 k
-7741.2642 8574.2012 m
-7740.2407 8574.0352 L
-7741.2642 8574.2012 L
-7741.2642 8574.2012 L
f0 0 0 0.34 k
-7747.481 8574.3145 m
-7747.0728 8575.1465 L
-7745.6714 8574.918 L
-7744.5234 8574.7314 L
-7742.6758 8574.4307 L
-7741.2642 8574.2012 L
-7740.2407 8574.0352 L
-7740.2954 8573.7168 -7740.3672 8573.498 -7740.4648 8573.4199 C
-7747.481 8574.3145 L
f0 0 0 0.32 k
-7745.8042 8579.207 m
-7746.041 8586.8613 L
-7740.7144 8587 L
-7739.7266 8583.5146 -7740.1816 8579.1543 V
-7745.8042 8579.207 L
fU0.025 0.02 0.015 0 k
-7739.3223 8576.3848 m
-7736.373 8576.9199 -7733.2402 8577.1602 -7730.3159 8576.3613 c
-7730.2856 8576.3496 -7730.2754 8576.3184 -7730.2871 8576.2969 c
-7730.2881 8576.2656 -7730.3198 8576.2559 -7730.3418 8576.2559 c
-7733.2422 8577.0645 -7736.375 8576.8242 -7739.3042 8576.2783 c
-7739.3262 8576.2793 -7739.3574 8576.291 -7739.3672 8576.3223 c
-7739.3662 8576.3438 -7739.355 8576.375 -7739.3223 8576.3848 c
-7739.3223 8576.3848 l
f-7737.8374 8575.3076 m
-7737.7295 8575.3789 -7737.6313 8575.4941 -7737.5234 8575.502 c
-7733.7886 8575.832 -7730.1631 8575.7813 -7726.4746 8575.6641 c
-7726.4526 8575.6641 -7726.4209 8575.6426 -7726.4214 8575.6211 c
-7726.4214 8575.5879 -7726.4551 8575.5684 -7726.4766 8575.5684 c
-7729.3223 8575.6816 -7732.1401 8575.6992 -7735.0039 8575.5352 c
-7735.9336 8575.4766 -7736.9082 8575.7402 -7737.7778 8575.2207 c
-7737.7993 8575.2109 -7737.8306 8575.2109 -7737.8506 8575.2334 c
-7737.8618 8575.2559 -7737.8594 8575.2871 -7737.8374 8575.3076 c
-7737.8374 8575.3076 l
f-7733.373 8577.3672 m
-7731.5098 8578.6797 -7729.3022 8579.374 -7727.1001 8579.8867 c
-7727.0679 8579.8965 -7727.0474 8579.8848 -7727.0366 8579.8535 c
-7727.0273 8579.8203 -7727.0488 8579.8008 -7727.0703 8579.79 c
-7729.2617 8579.2656 -7731.459 8578.6035 -7733.3105 8577.2803 c
-7733.3433 8577.2598 -7733.375 8577.2715 -7733.3848 8577.293 c
-7733.4058 8577.3145 -7733.3945 8577.3457 -7733.373 8577.3672 c
-7733.373 8577.3672 l
f-7738.9321 8584.0566 m
-7736.7295 8584.5703 -7734.5298 8585.0303 -7732.2798 8585.2754 c
-7732.2598 8585.2852 -7732.229 8585.2637 -7732.229 8585.2422 c
-7732.2183 8585.209 -7732.2407 8585.1777 -7732.2729 8585.1787 c
-7734.5122 8584.8809 -7736.7305 8584.5176 -7738.9126 8583.9502 c
-7738.9351 8583.9512 -7738.9673 8583.9629 -7738.9766 8583.9941 c
-7738.9751 8584.0156 -7738.9648 8584.0479 -7738.9321 8584.0566 c
-7738.9321 8584.0566 l
f-7738.439 8583.3604 m
-7736.3457 8584.1973 -7734.1016 8583.9297 -7731.9023 8583.9629 c
-7731.8706 8583.9609 -7731.8496 8583.9395 -7731.8506 8583.9082 c
-7731.8521 8583.875 -7731.873 8583.8555 -7731.8945 8583.8555 c
-7734.0928 8583.8438 -7736.3374 8584.0996 -7738.4209 8583.2529 c
-7738.4434 8583.2539 -7738.4746 8583.2656 -7738.4834 8583.2969 c
-7738.4834 8583.3184 -7738.4722 8583.3506 -7738.439 8583.3604 c
-7738.439 8583.3604 l
f-7737.707 8584.7051 m
-7736.3833 8584.752 -7735.1504 8584.5469 -7733.8271 8584.209 c
-7733.3594 8584.0996 -7732.9199 8584.2266 -7732.4609 8584.2129 c
-7731.897 8584.1973 l
-7731.874 8584.1963 -7731.8633 8584.1855 -7731.8535 8584.1738 c
-7731.834 8584.1523 -7731.8442 8584.1211 -7731.8662 8584.0996 c
-7732.0625 8583.9453 l
-7732.0742 8583.9453 -7732.085 8583.9355 -7732.0962 8583.9355 c
-7732.5 8583.9473 l
-7733.9551 8584.1914 -7735.457 8584.6719 -7736.8926 8584.0742 c
-7736.9258 8584.0645 -7736.957 8584.0859 -7736.9673 8584.1074 c
-7736.9673 8584.1396 -7736.9551 8584.1602 -7736.9336 8584.1709 c
-7735.647 8584.6992 -7734.1714 8584.4756 -7732.8818 8584.0547 c
-7732.0918 8584.043 L
-7732.124 8584.0332 L
-7731.9282 8584.1875 L
-7731.8984 8584.0898 L
-7732.4639 8584.1064 l
-7732.9321 8584.1406 -7733.3848 8583.9834 -7733.8398 8584.1035 c
-7735.1543 8584.4609 -7736.3975 8584.625 -7737.71 8584.5986 c
-7737.7422 8584.5996 -7737.7642 8584.6211 -7737.7617 8584.6533 c
-7737.7617 8584.6855 -7737.7402 8584.7061 -7737.707 8584.7051 c
-7737.707 8584.7051 l
f-7738.5718 8585.0605 m
-7735.8711 8586.2207 -7732.9023 8585.5703 -7730.1279 8585.1816 c
-7729.7832 8585.2891 l
-7729.7617 8585.2988 -7729.7417 8585.2871 -7729.7207 8585.2656 c
-7729.71 8585.2441 -7729.7217 8585.2129 -7729.7422 8585.2021 c
-7730.0801 8585.0098 l
-7732.7754 8584.3926 -7735.5391 8584.7813 -7738.271 8584.7852 c
-7738.3022 8584.7871 -7738.3232 8584.8086 -7738.3223 8584.8398 c
-7738.3198 8584.8721 -7738.2983 8584.8926 -7738.2681 8584.8926 c
-7735.6738 8584.9355 -7733.0303 8584.4434 -7730.4727 8585.0742 c
-7729.7954 8585.2891 L
-7729.7534 8585.1914 L
-7730.1406 8585.0859 l
-7732.9058 8585.4424 -7735.8418 8586.1348 -7738.5313 8584.9746 c
-7738.5537 8584.9648 -7738.585 8584.9648 -7738.5962 8584.998 c
-7738.6055 8585.0195 -7738.605 8585.0508 -7738.5718 8585.0605 c
-7738.5718 8585.0605 l
f-7735.6895 8578.3945 m
-7734.3945 8578.9004 -7732.9834 8578.6465 -7731.6802 8578.3438 c
-7731.647 8578.3418 -7731.6367 8578.3203 -7731.6382 8578.2891 c
-7731.6504 8578.2568 -7731.6714 8578.2461 -7731.7031 8578.248 c
-7732.998 8578.5303 -7734.377 8578.8154 -7735.6504 8578.2969 c
-7735.6826 8578.2871 -7735.7144 8578.2988 -7735.7246 8578.3311 c
-7735.7222 8578.3525 -7735.7114 8578.3848 -7735.6895 8578.3945 c
-7735.6895 8578.3945 l
f-7736.1401 8580.2207 m
-7734.2266 8580.6895 -7732.3145 8581.1035 -7730.355 8581.3242 c
-7730.3242 8581.334 -7730.3022 8581.3125 -7730.293 8581.2803 c
-7730.2954 8581.2598 -7730.3159 8581.2285 -7730.3374 8581.2285 c
-7732.2959 8581.0078 -7734.209 8580.582 -7736.1206 8580.1133 c
-7736.1426 8580.1152 -7736.1738 8580.126 -7736.1831 8580.1582 c
-7736.1831 8580.1797 -7736.1719 8580.2109 -7736.1401 8580.2207 c
-7736.1401 8580.2207 l
f-7736.9336 8582.6348 m
-7734.499 8583.4609 -7731.8647 8583.0547 -7729.3457 8583.0879 c
-7729.313 8583.0879 -7729.293 8583.0664 -7729.293 8583.0332 c
-7729.2954 8583.0117 -7729.3159 8582.9922 -7729.3481 8582.9922 c
-7731.8574 8582.916 -7734.481 8583.3848 -7736.8945 8582.5264 c
-7736.9282 8582.5273 -7736.959 8582.5391 -7736.9688 8582.5605 c
-7736.9678 8582.5918 -7736.9561 8582.624 -7736.9336 8582.6348 c
-7736.9336 8582.6348 l
f-7732.0542 8583.8496 m
-7730.6582 8584.5449 -7729.0503 8584.4033 -7727.5342 8584.4668 c
-7727.502 8584.4648 -7727.4824 8584.4434 -7727.4824 8584.4121 c
-7727.4834 8584.3906 -7727.5054 8584.3594 -7727.5366 8584.3594 c
-7729.0137 8584.2207 -7730.6489 8584.5234 -7732.0039 8583.7617 c
-7732.0366 8583.7529 -7732.0679 8583.7637 -7732.0786 8583.7861 c
-7732.0879 8583.8076 -7732.0767 8583.8398 -7732.0542 8583.8496 c
-7732.0542 8583.8496 l
f-7731.3418 8580.4248 m
-7730.3926 8580.3975 -7729.4336 8580.3701 -7728.4839 8580.3428 c
-7728.4526 8580.3418 -7728.4312 8580.3203 -7728.4336 8580.2881 c
-7728.4336 8580.2559 -7728.4551 8580.2354 -7728.4878 8580.2363 c
-7729.437 8580.2637 -7730.397 8580.291 -7731.3457 8580.3184 c
-7731.377 8580.3184 -7731.3975 8580.3418 -7731.3975 8580.373 c
-7731.397 8580.4043 -7731.374 8580.4258 -7731.3418 8580.4248 c
-7731.3418 8580.4248 l
f-7729.1592 8578.0361 m
-7728.6895 8578.0645 -7728.209 8578.0723 -7727.7383 8578.0918 c
-7727.7168 8578.0908 -7727.6855 8578.0684 -7727.6865 8578.0371 c
-7727.687 8578.0039 -7727.71 8577.9844 -7727.7417 8577.9844 c
-7728.2114 8577.9873 -7728.6816 8577.9375 -7729.1514 8577.9395 c
-7729.1831 8577.9297 -7729.2031 8577.9512 -7729.2134 8577.9844 c
-7729.2129 8578.0156 -7729.1914 8578.0371 -7729.1592 8578.0361 c
-7729.1592 8578.0361 l
f-7736.9702 8580.2344 m
-7736.5688 8580.5107 -7736.125 8580.6797 -7735.645 8580.751 c
-7735.6113 8580.7607 -7735.5918 8580.7383 -7735.5806 8580.7168 c
-7735.5703 8580.6855 -7735.5928 8580.6543 -7735.6152 8580.6543 c
-7736.0854 8580.5723 -7736.5176 8580.4023 -7736.9209 8580.1475 c
-7736.9521 8580.1377 -7736.9849 8580.1387 -7736.9946 8580.1709 c
-7737.0039 8580.1934 -7736.9922 8580.2246 -7736.9702 8580.2344 c
-7736.9702 8580.2344 l
f-7738.1904 8586.085 m
-7735.7344 8586.5273 -7733.2983 8587.001 -7730.7993 8586.7266 c
-7730.7778 8586.7266 -7730.7568 8586.7041 -7730.7578 8586.6719 c
-7730.7578 8586.6406 -7730.7798 8586.6191 -7730.8022 8586.6191 c
-7733.291 8586.873 -7735.7344 8586.4844 -7738.1719 8585.9775 c
-7738.1934 8585.9785 -7738.2256 8585.9902 -7738.2344 8586.0215 c
-7738.2344 8586.043 -7738.2222 8586.0752 -7738.1904 8586.085 c
-7738.1904 8586.085 l
f0.195 0.156 0.117 0 k
-7738.166 8574.6445 m
-7735.7969 8574.2676 -7733.4058 8574.3477 -7731.0298 8574.5898 c
-7730.998 8574.5879 -7730.9766 8574.5664 -7730.9766 8574.5352 c
-7730.9785 8574.5137 -7731 8574.4824 -7731.0215 8574.4824 c
-7733.4082 8574.2422 -7735.791 8574.1602 -7738.1694 8574.5391 c
-7738.2026 8574.5391 -7738.2222 8574.5605 -7738.2217 8574.5938 c
-7738.2207 8574.625 -7738.1992 8574.6465 -7738.166 8574.6445 c
-7738.166 8574.6445 l
f0.335 0.268 0.201 0 k
-7737.4351 8574.1113 m
-7734.9282 8574.1152 -7732.4146 8574.2773 -7729.918 8573.8965 c
-7729.8862 8573.8945 -7729.8647 8573.873 -7729.8662 8573.8418 c
-7729.8672 8573.8086 -7729.8896 8573.7891 -7729.9209 8573.7891 c
-7732.418 8574.1699 -7734.9297 8574.0293 -7737.4375 8574.0059 c
-7737.46 8574.0059 -7737.481 8574.0273 -7737.4785 8574.0596 c
-7737.4785 8574.0918 -7737.457 8574.1123 -7737.4351 8574.1113 c
-7737.4351 8574.1113 l
f0.205 0.164 0.123 0 k
-7738.9766 8574.3262 m
-7737.5039 8574.668 -7736.0078 8574.4023 -7734.5391 8574.2207 c
-7734.5078 8574.2207 -7734.4873 8574.1973 -7734.499 8574.166 c
-7734.5 8574.1348 -7734.5215 8574.1133 -7734.5537 8574.125 c
-7736.0103 8574.2842 -7737.4961 8574.583 -7738.9473 8574.2188 c
-7738.9785 8574.2207 -7739.0103 8574.2324 -7739.0098 8574.2637 c
-7739.019 8574.2852 -7738.998 8574.3164 -7738.9766 8574.3262 c
-7738.9766 8574.3262 l
f-7732.3535 8573.7949 m
-7731.1978 8573.9219 -7730.0273 8573.8145 -7728.8926 8573.5898 c
-7728.8711 8573.5781 -7728.8506 8573.5566 -7728.8618 8573.5244 c
-7728.8623 8573.5029 -7728.8945 8573.4824 -7728.916 8573.4941 c
-7730.0503 8573.7402 -7731.1914 8573.7939 -7732.3462 8573.6885 c
-7732.3794 8573.6895 -7732.3984 8573.7109 -7732.4087 8573.7324 c
-7732.4082 8573.7646 -7732.3862 8573.7852 -7732.3535 8573.7949 c
-7732.3535 8573.7949 l
f0.335 0.268 0.201 0 k
-7739.2681 8576.4473 m
-7737.9214 8577.1885 -7736.3066 8576.5977 -7734.855 8576.6416 c
-7734.8223 8576.6406 -7734.8022 8576.6191 -7734.8022 8576.5859 c
-7734.8042 8576.5654 -7734.8262 8576.5449 -7734.8574 8576.5449 c
-7736.2886 8576.4902 -7737.8823 8577.0801 -7739.2168 8576.3506 c
-7739.2383 8576.3398 -7739.2695 8576.3516 -7739.291 8576.374 c
-7739.3008 8576.3955 -7739.2886 8576.4277 -7739.2681 8576.4473 c
-7739.2681 8576.4473 l
f-7737.8945 8578.5645 m
-7735.6719 8579.0449 -7733.3896 8578.6162 -7731.1504 8578.5625 c
-7731.1177 8578.5615 -7731.0977 8578.5391 -7731.0977 8578.5078 c
-7731.1001 8578.4863 -7731.1318 8578.4668 -7731.1519 8578.4668 c
-7733.3833 8578.4775 -7735.6519 8578.9805 -7737.875 8578.457 c
-7737.8975 8578.457 -7737.9287 8578.4688 -7737.9375 8578.502 c
-7737.9375 8578.5225 -7737.9258 8578.5547 -7737.8945 8578.5645 c
-7737.8945 8578.5645 l
f-7732.0273 8575.1406 m
-7730.3496 8575.9688 -7728.499 8576.502 -7726.603 8576.3613 c
-7726.5718 8576.3613 -7726.5513 8576.3389 -7726.5527 8576.3066 c
-7726.5527 8576.2754 -7726.5742 8576.2539 -7726.6074 8576.2559 c
-7728.481 8576.416 -7730.3198 8575.8604 -7731.9873 8575.0547 c
-7732.0078 8575.0449 -7732.041 8575.0449 -7732.0503 8575.0781 c
-7732.061 8575.0996 -7732.061 8575.1309 -7732.0273 8575.1406 c
-7732.0273 8575.1406 l
fu0.5 0.85 1 0.45 k
-7885 8581.9082 m
-7885.0254 8582.4883 -7884.5664 8583.1875 -7883.167 8583.9902 C
-7882.8521 8584.0029 -7881.3945 8584.0234 -7879.0889 8584.0488 C
-7879.0889 8581.8223 L
-7881.1382 8581.8457 -7883.1177 8581.8867 -7885 8581.9082 C
f-7884.5088 8580.9688 m
-7879.0889 8580.8447 L
-7879.0889 8579.8145 L
-7882.644 8579.959 L
-7883.8145 8580.3301 -7884.5088 8580.9688 V
f0.5 0.85 1 0.32 k
-7879.0889 8580.8252 m
-7884.4746 8580.9434 L
-7884.7695 8581.2148 -7884.9849 8581.5566 -7885 8581.9277 C
-7883.1177 8581.9063 -7881.1382 8581.8848 -7879.0889 8581.8613 C
-7879.0889 8580.8252 L
f0.5 0.85 1 0.45 k
-7774.1504 8580.6172 m
-7852.3584 8581.541 -7879.1079 8581.8418 V
-7879.1079 8584.0488 L
-7862.8145 8584.2324 -7803.9902 8584.707 Y
-7769.749 8583.6641 L
-7770.457 8580.5684 L
-7774.1504 8580.6172 L
f0.5 0.85 1 0.12 k
-7879.1079 8579.8145 m
-7879.1079 8580.8447 L
-7770.4258 8579 L
-7770.3833 8576.8633 L
-7803.6553 8576.7129 L
-7879.1079 8579.8145 L
fu0.065 0.052 0.039 0 k
-7747.0728 8575.1465 m
-7747.0366 8576.4258 L
-7747.2954 8575.1172 L
-7765.897 8579.6563 L
-7766.9375 8579.2734 L
-7766.8794 8579.6055 -7766.8398 8579.957 -7766.8306 8580.3223 c
-7766.8242 8580.5283 -7766.8281 8580.7285 -7766.8398 8580.9258 C
-7758.3862 8582.0986 -7748.9634 8577.6719 -7747.0366 8576.4258 C
-7746.7402 8586.7559 L
-7746.041 8586.8613 L
-7745.8042 8579.207 L
-7740.1816 8579.1543 L
-7740.0898 8577.0137 -7740.0718 8575.0215 -7740.2407 8574.0352 C
-7747.0728 8575.1465 L
f0.4 0.7 1 0 k
-7770.457 8580.5879 m
-7770.4258 8578.9805 L
-7879.1079 8580.8252 L
-7879.1079 8581.8613 L
-7852.3584 8581.5605 -7770.457 8580.5879 Y
fUU0.025 0.02 0.015 0 k
-7734.7344 8583.0293 m
-7734.7344 8583.0625 -7734.7129 8583.082 -7734.6802 8583.082 c
-7731.6714 8583.1133 -7729.4214 8582.9453 -7726.415 8582.8594 C
-7726.4087 8582.7656 L
-7729.3262 8582.8701 -7731.7607 8583.0078 -7734.6841 8582.9746 C
-7734.7168 8582.9766 -7734.7358 8582.998 -7734.7344 8583.0293 C
f-7726.3994 8582.7656 m
-7726.4082 8582.7441 L
-7726.4087 8582.7656 L
-7726.4063 8582.7656 -7726.4033 8582.7656 -7726.3994 8582.7656 C
f-7730.4487 8581.4238 m
-7731.4458 8581.292 -7732.3394 8581.7656 -7733.2114 8582.1973 C
-7733.2441 8582.208 -7733.2534 8582.2402 -7733.2422 8582.2715 C
-7733.2305 8582.293 -7733.1982 8582.3027 -7733.1777 8582.291 c
-7732.3262 8581.8301 -7731.4312 8581.4199 -7730.4678 8581.5195 c
-7729.1079 8581.6621 -7727.9038 8582.375 -7726.5254 8582.4531 C
-7726.4463 8582.3594 L
-7728.04 8582.2656 -7728.8647 8581.623 -7730.4487 8581.4238 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8586 m
-7756.877 8586 L
-7756.877 8538.415 L
-7884 8538.415 L
-7884 8586 L
nu*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7857.793 8570.417 m
-7857.8232 8570.2676 L
-7859.9849 8564.3643 -7860.9438 8561.6377 -7861.2754 8560.2891 c
-7861.3657 8560.2891 L
-7861.6953 8561.6074 -7862.7754 8564.335 -7864.9673 8570.2676 c
-7864.9966 8570.417 L
-7857.793 8570.417 l
f1 D
-7868.1182 8578.9678 m
-7869.6191 8582.5371 -7870.3994 8584.709 -7868.1182 8584.917 c
-7868.1182 8585.9678 L
-7870.6992 8585.9375 -7873.5806 8585.917 -7876.3418 8585.917 c
-7880.0649 8585.917 -7882.5273 8585.9375 -7884 8585.9678 c
-7884 8584.917 L
-7882.1064 8584.709 -7881.0542 8582.5674 -7873.5513 8565.5029 c
-7861.6953 8538.415 L
-7859.8638 8538.415 L
-7848.1582 8565.5029 L
-7840.8047 8582.5078 -7839.7246 8584.709 -7837.8887 8584.917 c
-7837.8887 8585.9678 L
-7839.5142 8585.9375 -7841.916 8585.917 -7845.5767 8585.917 c
-7848.5488 8585.917 -7851.6694 8585.9375 -7854.7026 8585.9678 c
-7854.7026 8584.917 L
-7852.481 8584.709 -7853.3218 8582.5078 -7854.7617 8578.9678 C
-7868.1182 8578.9678 l
f*U
*u
0 D
-7813.0762 8554.0811 m
-7813.0762 8550.4717 -7815.3535 8548.0947 -7819.1294 8548.0947 c
-7820.2383 8548.0947 -7821.0767 8548.2158 -7821.5273 8548.2451 c
-7821.5273 8560.5479 L
-7820.8672 8560.6084 -7820.208 8560.6084 -7819.729 8560.6084 c
-7818.2002 8560.6084 -7816.7026 8560.127 -7815.6841 8559.4053 c
-7814.3945 8558.5332 -7813.0762 8556.7881 -7813.0762 8554.1416 C
-7813.0762 8554.0811 l
f1 D
-7832.0806 8558.3926 m
-7832.0806 8542.6445 -7832.0806 8540.4287 -7834.542 8540.2783 c
-7834.542 8539.3184 L
-7833.042 8539.2588 -7830.3174 8539.1992 -7827.5664 8539.1689 c
-7825.6538 8539.1084 -7822.3945 8539.0186 -7820.1479 8538.9775 c
-7816.582 8538.9775 -7813.585 8539.4258 -7811.0049 8540.2627 c
-7806.353 8541.8477 -7801.9702 8545.8525 -7801.9702 8553.6602 c
-7801.9702 8558.7432 -7804.4014 8562.3193 -7806.5034 8564.0605 c
-7807.583 8565.0215 -7808.8135 8565.832 -7809.7744 8566.3125 c
-7809.7744 8566.4629 L
-7807.5234 8569.4912 -7805.6025 8572.0625 -7799.3906 8580.6426 c
-7797.5 8583.0645 -7795.9102 8584.7383 -7794.7402 8584.9775 c
-7794.7402 8586 L
-7796.6602 8586 -7799 8585.8848 -7801.1294 8585.8848 c
-7803.3511 8585.8848 -7804.8521 8586 -7806.4424 8586 c
-7807.6729 8586 -7808.7241 8585.9404 -7809.5039 8585.2725 c
-7813.0151 8579.8477 -7816.9121 8573.7559 -7820.1182 8568.7139 c
-7820.5078 8568.7139 -7820.957 8568.7139 -7821.5273 8568.7139 c
-7821.5273 8571.2852 L
-7821.5273 8582.5264 -7821.437 8584.7686 -7819.1895 8584.9775 c
-7819.1895 8585.9697 L
-7820.6279 8585.9404 -7823.9194 8585.915 -7826.6992 8585.915 c
-7829.9287 8585.915 -7832.8921 8585.9404 -7834.5122 8585.9697 c
-7834.5122 8584.9775 L
-7832.0518 8584.7686 -7832.0806 8582.5264 -7832.0806 8565.5918 C
-7832.0806 8558.3926 l
f*U
*u
0 D
-7781.4561 8565.5928 m
-7781.4561 8582.4941 -7781.4561 8584.6484 -7784.2832 8584.9775 C
-7784.2832 8585.9697 l
-7782.3887 8585.9404 -7779.0542 8585.915 -7775.7822 8585.915 c
-7772.6294 8585.915 -7769.5688 8585.9404 -7767.2881 8585.9697 C
-7767.2881 8584.9775 l
-7770.2578 8584.9775 -7770.2881 8582.5244 -7770.2881 8565.5928 C
-7770.2881 8548.1514 L
-7762.8193 8548.1514 l
-7759.999 8548.1514 -7758.5298 8548.96 -7757.8994 8551.2627 C
-7756.9072 8551.2627 l
-7756.9072 8546.4697 -7756.877 8542.415 -7756.877 8539.1709 c
-7761.3486 8539.2012 -7766.748 8539.2314 -7772.0601 8539.2314 C
-7779.7446 8539.2314 l
-7784.5537 8539.2314 -7789.9966 8539.2012 -7794.9614 8539.1709 c
-7794.9614 8542.3848 -7794.9326 8546.4697 -7794.9326 8551.2627 C
-7793.9072 8551.2627 l
-7793.3657 8549.1094 -7791.771 8548.1514 -7788.9438 8548.1514 C
-7781.4561 8548.1514 l
-7781.4561 8565.5928 L
f*U
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7884.75 8563 m
-7884.75 8587 L
-7874.75 8587 L
-7874.75 8563 L
-7884.75 8563 L
n0 Ap
0 O
1 g
-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 c
-7877.5879 8565.2256 -7879.3198 8565.9346 -7880.7559 8567.0176 c
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 c
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.2319 8578.5996 -7883.3457 8580.0918 c
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
-7874.75 8565 L
f0 R
0 G
1 J 1 j 0.5 w-7874.75 8584.6816 m
-7877.7793 8583.7256 -7880.6074 8582.0674 -7883.3457 8580.0918 C
S-7874.75 8579.0488 m
-7877.8999 8576.6436 -7880.957 8573.9131 -7884.0942 8571.4639 C
S-7880.7559 8567.0176 m
-7878.6904 8568.1084 -7876.7017 8569.4668 -7874.75 8570.957 C
S-7875.6982 8565.0479 m
-7875.3809 8565.1309 -7875.063 8565.2148 -7874.75 8565.3145 C
S-7880.7559 8567.0176 m
-7879.3193 8565.9355 -7877.5879 8565.2256 -7875.6982 8565.0479 C
S-7884.0942 8571.4639 m
-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c
-7884.75 8576.8623 -7884.231 8578.5996 -7883.3457 8580.0918 C
S-7874.75 8565 m
-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 C
S-7880.7559 8567.0176 m
-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 C
S-7883.3457 8580.0918 m
-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C
SU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8569.9043 m
-7846.7305 8561.3408 L
-7885 8561.3408 L
-7885 8569.9043 L
-7846.7305 8569.9043 L
f-7846.7305 8573.0967 m
-7846.7305 8572.4229 L
-7885 8572.4229 L
-7885 8573.0967 L
-7846.7305 8573.0967 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7885 8548.7305 L
-7846.7305 8548.7305 L
-7846.7305 8587 L
-7885 8587 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8565.8262 m
-7846.7305 8574.3896 L
-7859.3408 8574.3896 L
-7859.3408 8587 L
-7867.9038 8587 L
-7867.9063 8565.8262 L
-7867.9038 8565.8262 L
-7867.9038 8565.8252 L
-7846.7305 8565.8262 L
f-7846.7305 8563.3076 m
-7870.4233 8563.3076 L
-7870.4233 8587 L
-7871.0967 8587 L
-7871.0977 8562.6328 L
-7846.7305 8562.6328 L
-7846.7305 8563.3076 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7885 8586.999 m
-7885 8548.7285 L
-7846.7305 8548.7285 L
-7846.7305 8586.999 L
-7885 8586.999 L
n0 O
1 0.14 0.09 0 k
-7846.7305 8561.3389 m
-7872.3896 8561.3389 L
-7872.3896 8586.999 L
-7863.8262 8587 L
-7863.8262 8569.9033 L
-7846.7305 8569.9033 L
-7846.7305 8561.3389 L
f-7846.7305 8572.4219 m
-7861.3081 8572.4219 L
-7861.3081 8587 L
-7860.6338 8587 L
-7860.6338 8573.0957 L
-7846.7305 8573.0957 L
-7846.7305 8572.4219 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.0625 8559.4609 m
-7884.6025 8559.4609 L
-7884.6025 8587 L
-7857.0625 8587 L
-7857.0625 8559.4609 L
n0 O
0 0.55 1 0.12 k
-7856.8418 8572.7002 m
-7885 8572.7002 L
-7885 8573.8252 L
-7856.8418 8573.8252 L
-7856.8418 8572.7002 L
fu0 0.55 1 0.3 k
-7883.9814 8560.5215 m
-7884.4102 8562.5254 -7883.1865 8566.1514 -7880.0874 8569.251 c
-7876.9878 8572.3496 -7873.3457 8573.6602 -7871.3594 8573.1455 C
-7871.3594 8573.1455 L
-7870.875 8571.1895 -7872.1519 8567.5117 -7875.25 8564.4141 c
-7878.3457 8561.3184 -7882.0122 8560.1064 -7883.9814 8560.5215 C
f0 0.39 0.7 0.12 k
-7883.9814 8585.9912 m
-7884.4102 8583.9883 -7883.1865 8580.3613 -7880.0874 8577.2617 c
-7876.9878 8574.1641 -7873.3457 8572.8535 -7871.3594 8573.3672 C
-7871.3594 8573.3672 L
-7870.875 8575.3242 -7872.1519 8579.001 -7875.25 8582.0996 c
-7878.3457 8585.1953 -7882.0122 8586.4063 -7883.9814 8585.9912 C
fUu0 0.55 1 0.3 k
-7870.1782 8585.9912 m
-7870.6074 8583.9883 -7869.3838 8580.3613 -7866.2842 8577.2617 c
-7863.1855 8574.1641 -7859.543 8572.8535 -7857.5576 8573.3672 C
-7857.5566 8573.3672 L
-7857.0718 8575.3242 -7858.3496 8579.001 -7861.4473 8582.0996 c
-7864.543 8585.1953 -7868.209 8586.4063 -7870.1782 8585.9912 C
f0 0.39 0.7 0.12 k
-7870.1782 8560.5215 m
-7870.6074 8562.5254 -7869.3838 8566.1514 -7866.2842 8569.251 c
-7863.1855 8572.3496 -7859.543 8573.6602 -7857.5576 8573.1455 C
-7857.5566 8573.1455 L
-7857.0718 8571.1895 -7858.3496 8567.5117 -7861.4473 8564.4141 c
-7864.543 8561.3184 -7868.209 8560.1064 -7870.1782 8560.5215 C
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.085 m
-7885 8559.085 L
-7885 8586.624 L
-7857.4609 8586.624 L
-7857.4609 8559.085 L
n0 O
0 0.55 1 0.12 k
-7871.7598 8577.3623 m
-7871.7598 8587 L
-7870.6343 8587 L
-7870.6343 8577.3623 L
-7871.7598 8577.3623 L
f0 0.55 1 0.3 k
-7875.4233 8572.876 m
-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c
-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C
-7857.5718 8572.874 L
-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c
-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7857.4609 8559.4609 m
-7885 8559.4609 L
-7885 8587 L
-7857.4609 8587 L
-7857.4609 8559.4609 L
n0 O
0 0.55 1 0.3 k
-7875.4233 8573.252 m
-7874.3096 8571.5313 -7870.8809 8569.833 -7866.4966 8569.833 c
-7862.1152 8569.833 -7858.6138 8571.4824 -7857.5718 8573.25 C
-7857.5718 8573.25 L
-7858.6138 8574.9766 -7862.1152 8576.6738 -7866.4966 8576.6738 c
-7870.875 8576.6738 -7874.3242 8574.9375 -7875.4233 8573.252 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7883.9521 8584.3125 m
-7776.7954 8584.3125 L
-7776.7954 8570.1855 L
-7883.9521 8570.1855 L
-7883.9521 8584.3125 L
nu0 O
0 0 0 1 k
-7882.2832 8583.623 m
-7882.8535 8586 -7882.8184 8582.0039 V
-7883.0479 8578.8027 L
-7883.6167 8576.4551 L
-7883.4502 8574.123 L
-7881.9502 8573.4551 -7865.2832 8572.123 V
-7858.6167 8570.7891 -7849.6167 8570.7891 V
-7784.3936 8571.4766 -7779.4912 8572.8848 v
-7820.3882 8570.875 -7822.9688 8571.5117 v
-7783.8569 8573.1602 -7780.8545 8574.4316 v
-7818.79 8572.5469 -7822.167 8574.1777 v
-7787.249 8575.9102 -7783.021 8577.5313 v
-7789.7217 8576.8828 -7791.5127 8577.082 v
-7788.3896 8577.5703 l
-7793.4194 8577.502 l
-7796.3218 8577.1289 l
-7788.4521 8578.2422 -7787.9033 8578.8086 v
-7784.3154 8578.1309 -7798.5186 8578.3848 v
-7832.1177 8574.4551 -7882.2832 8583.623 V
f/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7883.9502 8573.123 m
-7863.667 8571.2949 -7843.9727 8570.2207 v
-7801.1514 8570.502 -7796.5737 8570.9004 v
-7784.1631 8571.0313 -7776.7959 8572.0273 v
S/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7821.8369 8570.4082 m
-7825.2959 8570.0273 -7851.2607 8570.2793 Y
-7861.627 8570.1602 -7883.9502 8573.123 Y
S/BBAccumRotation (5.805971) XT
-7820.9873 8573.6641 m
-7790.3608 8574.582 -7783.6606 8575.2324 v
S/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7829.6201 8578.2051 m
-7794.3706 8579.6172 -7791.4058 8580.1406 v
S/BBAccumRotation (5.805971) XT
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7884 8585.9355 m
-7670.4009 8585.9355 L
-7670.4009 8578.1348 L
-7884 8578.1348 L
-7884 8585.9355 L
n0 O
0 0 0 1 k
-7884 8582.0352 m
-7873.9858 8584.5273 -7867.187 8585.875 -7855.2007 8585.9355 c
-7842.2183 8586 -7777.2002 8585.9355 y
-7712.1816 8586 -7699.2002 8585.9355 v
-7687.2129 8585.875 -7680.415 8584.5273 -7670.4009 8582.0352 C
-7680.415 8579.543 -7687.2129 8578.1953 -7699.2002 8578.1348 c
-7712.1816 8578.0693 -7777.2002 8578.1348 y
-7842.2183 8578.0693 -7855.2007 8578.1348 v
-7867.187 8578.1953 -7873.9858 8579.543 -7884 8582.0352 C
fU%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -
(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -
(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -
( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -
(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -
( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -
(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -
(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -
(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -
(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -
(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -
(tternOnPath Brush Tool/ Rope /) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Dog Tracks)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Fall Leaf)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -
(1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Ladybug)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -
(1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Push Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -
( 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Strawberry)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -
(-75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Twinkle Star )
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Arrow)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Paintbrush)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -
( 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Double Lines)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -
(0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Laurel)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -
(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rope )
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -
(0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
0 R
0 G
0 J 0 j 0.5 w 4 M []0 d0 XR
278.5 337.5 m
275.5654 412.5 l
S220.5 310.5 m
288 278.5 l
350 324 l
278.5 337.5 l
220.5 310.5 l
s0 O
1 g
1 w272.5 381 m
290.0654 381 l
290.5 327 l
282.5 327 l
282.5 374 l
269 377 l
F0 R
0 G
0.5 w211.5962 390.501 m
287.0654 376 l
355.7041 402.9131 l
275.5654 412.5 l
211.5962 390.501 l
su1 w220.5 310.5 m
248.0068 297.46 l
S0 O
0 g
247.3154 297.7881 m
246.9888 300.9336 l
247.0981 300.9492 l
250.3296 297.4805 l
251.5723 296.5176 252.8149 295.5547 254.0576 294.5918 c
252.5259 294.9443 250.9937 295.2969 249.4614 295.6484 c
244.7305 295.9551 l
244.667 296.0361 l
247.3154 297.7881 l
fU0 R
0 G
0.5 w288 278.5 m
287.0654 376 l
S350 324 m
355.7041 402.9131 l
Su1 w248.2671 323.4258 m
220.5 310.5 l
217 342 l
S0 O
0 g
217.0845 341.2393 m
214.5801 339.3086 l
214.5093 339.3926 l
215.7622 343.9658 l
215.9282 345.5283 216.0942 347.0918 216.2607 348.6553 c
216.7656 347.167 217.271 345.6777 217.7764 344.1895 c
220.0024 340.0039 l
219.9668 339.9072 l
217.0845 341.2393 l
fU247.5737 323.1025 m
244.9438 324.8594 l
245.0015 324.9541 l
249.7344 325.2266 l
251.2686 325.5684 252.8032 325.9102 254.3379 326.252 c
253.0884 325.2979 251.8389 324.3438 250.5898 323.3896 c
247.334 319.9434 l
247.231 319.9463 l
247.5737 323.1025 l
f0 R
0 G
0.5 w220.5 310.5 m
S220.5 310.5 m
211.5962 390.501 l
S*u
0 O
0 g
1 w250.9199 288.5 m
250.0239 288.5 L
248.9839 290.0762 L
247.9761 288.5 L
247.0879 288.5 L
248.5601 290.6523 L
247.1602 292.6836 L
248.064 292.6836 L
249.0317 291.2119 L
250 292.6836 L
250.8638 292.6836 L
249.4478 290.6523 L
250.9199 288.5 l
f*U
*u
221.647 344.4727 m
224.2148 344.4727 L
224.2148 343.8887 L
220.7109 343.8887 L
220.7109 344.4404 L
223.231 347.4883 L
220.9028 347.4883 L
220.9028 348.0723 L
224.1431 348.0723 L
224.1431 347.4971 L
221.647 344.4727 l
f*U
*u
254.3857 320.8594 m
255.1621 320.8594 L
254.6738 319.4922 254.1938 318.124 253.6582 316.7559 c
252.9941 315.0596 252.9219 314.9639 252.0181 314.9639 c
251.9141 314.9639 251.834 314.9961 251.7222 315.0273 c
251.7222 315.668 L
251.8101 315.6357 251.9541 315.5957 252.146 315.5957 c
252.5142 315.5957 252.5542 315.7002 252.8901 316.5635 c
251.3379 320.8594 L
252.1382 320.8594 L
253.25 317.4521 L
253.2661 317.4521 L
254.3857 320.8594 l
f*U
u*u
182.4199 305 m
181.5239 305 L
180.4839 306.5762 L
179.4761 305 L
178.5879 305 L
180.0601 307.1523 L
178.6602 309.1836 L
179.564 309.1836 L
180.5317 307.7119 L
181.5 309.1836 L
182.3638 309.1836 L
180.9478 307.1523 L
182.4199 305 l
f*U
*u
184.168 302.8857 m
182.9561 302.8857 182.7222 304.1758 182.7222 305.0518 c
182.7222 305.9277 182.9561 307.2178 184.168 307.2178 c
185.3799 307.2178 185.6143 305.9277 185.6143 305.0518 c
185.6143 304.1758 185.3799 302.8857 184.168 302.8857 c
f1 D
184.168 306.7441 m
183.562 306.7441 183.2861 306.1084 183.2861 305.0518 c
183.2861 303.9961 183.562 303.3604 184.168 303.3604 c
184.7739 303.3604 185.0498 303.9961 185.0498 305.0518 c
185.0498 306.1084 184.7739 306.7441 184.168 306.7441 c
f*U
*u
0 D
186.5322 305.8477 m
187.3638 305.8477 L
187.3638 305.0645 L
187.3638 303.9756 186.6919 303.8477 186.5322 303.8242 c
186.5322 304.1924 L
186.8682 304.2236 186.9561 304.624 186.9561 305 c
186.5322 305 L
186.5322 305.8477 l
f*U
*u
193.4199 309.1836 m
194.1958 309.1836 L
193.708 307.8164 193.228 306.4482 192.6919 305.0801 c
192.0278 303.3838 191.9561 303.2881 191.0518 303.2881 c
190.9478 303.2881 190.8682 303.3203 190.7559 303.3516 c
190.7559 303.9922 L
190.8438 303.96 190.9878 303.9199 191.1802 303.9199 c
191.5479 303.9199 191.5879 304.0244 191.9238 304.8877 c
190.3721 309.1836 L
191.1719 309.1836 L
192.2842 305.7764 L
192.2998 305.7764 L
193.4199 309.1836 l
f*U
*u
195.9521 302.8857 m
194.7402 302.8857 194.5059 304.1758 194.5059 305.0518 c
194.5059 305.9277 194.7402 307.2178 195.9521 307.2178 c
197.1641 307.2178 197.3979 305.9277 197.3979 305.0518 c
197.3979 304.1758 197.1641 302.8857 195.9521 302.8857 c
f1 D
195.9521 306.7441 m
195.3462 306.7441 195.0698 306.1084 195.0698 305.0518 c
195.0698 303.9961 195.3462 303.3604 195.9521 303.3604 c
196.5581 303.3604 196.834 303.9961 196.834 305.0518 c
196.834 306.1084 196.5581 306.7441 195.9521 306.7441 c
f*U
*u
0 D
198.3159 305.8477 m
199.1479 305.8477 L
199.1479 305.0645 L
199.1479 303.9756 198.4761 303.8477 198.3159 303.8242 c
198.3159 304.1924 L
198.6519 304.2236 198.7397 304.624 198.7397 305 c
198.3159 305 L
198.3159 305.8477 l
f*U
*u
203.252 305.584 m
205.8198 305.584 L
205.8198 305 L
202.3159 305 L
202.3159 305.5518 L
204.8359 308.5996 L
202.5078 308.5996 L
202.5078 309.1836 L
205.748 309.1836 L
205.748 308.6084 L
203.252 305.584 l
f*U
*u
207.7358 302.8857 m
206.5239 302.8857 206.29 304.1758 206.29 305.0518 c
206.29 305.9277 206.5239 307.2178 207.7358 307.2178 c
208.9482 307.2178 209.1821 305.9277 209.1821 305.0518 c
209.1821 304.1758 208.9482 302.8857 207.7358 302.8857 c
f1 D
207.7358 306.7441 m
207.1299 306.7441 206.854 306.1084 206.854 305.0518 c
206.854 303.9961 207.1299 303.3604 207.7358 303.3604 c
208.3418 303.3604 208.6182 303.9961 208.6182 305.0518 c
208.6182 306.1084 208.3418 306.7441 207.7358 306.7441 c
f*U
*u
0 D
180.8838 301.3643 m
180.2041 300.084 179.7959 299.3164 179.7959 297.3955 c
179.7959 296.0762 180.252 295.0996 180.8921 293.8438 c
180.4199 293.8438 L
179.5879 295.0918 179.0439 296.0918 179.0439 297.5879 c
179.0439 298.9961 179.5322 300.1318 180.396 301.3643 C
180.8838 301.3643 l
f*U
*u
184.4121 295.5 m
184.4121 296.1084 L
184.396 296.124 L
184.1001 295.6357 183.7397 295.3799 183.0679 295.3799 c
182.4521 295.3799 181.708 295.6758 181.708 296.6758 c
181.708 299.6836 L
182.4121 299.6836 L
182.4121 296.9082 L
182.4121 296.2197 182.7637 295.9883 183.2197 295.9883 c
184.1079 295.9883 184.3721 296.7725 184.3721 297.3799 c
184.3721 299.6836 L
185.0757 299.6836 L
185.0757 295.5 L
184.4121 295.5 l
f*U
*u
186.3081 296.3477 m
187.1401 296.3477 L
187.1401 295.5645 L
187.1401 294.4756 186.4678 294.3477 186.3081 294.3242 c
186.3081 294.6924 L
186.644 294.7236 186.7319 295.124 186.7319 295.5 c
186.3081 295.5 L
186.3081 296.3477 l
f*U
*u
191.0039 299.6836 m
191.772 299.6836 L
190.1797 295.5 L
189.4277 295.5 L
187.8999 299.6836 L
188.7158 299.6836 L
189.8037 296.2764 L
189.8198 296.2764 L
191.0039 299.6836 l
f*U
*u
191.8921 296.3477 m
192.7241 296.3477 L
192.7241 295.5645 L
192.7241 294.4756 192.0522 294.3477 191.8921 294.3242 c
191.8921 294.6924 L
192.228 294.7236 192.3159 295.124 192.3159 295.5 c
191.8921 295.5 L
191.8921 296.3477 l
f*U
*u
195.4678 295.5 m
194.7402 295.5 L
193.5322 299.6836 L
194.2998 299.6836 L
195.1001 296.3965 L
195.1162 296.3965 L
195.9238 299.6836 L
196.708 299.6836 L
197.5239 296.3965 L
197.54 296.3965 L
198.3882 299.6836 L
199.0918 299.6836 L
197.876 295.5 L
197.1479 295.5 L
196.2998 298.7402 L
196.2842 298.7402 L
195.4678 295.5 l
f*U
*u
199.4761 293.8438 m
200.1558 295.124 200.564 295.8916 200.564 297.8115 c
200.564 299.1318 200.1079 300.1084 199.4678 301.3643 c
199.9399 301.3643 L
200.772 300.1162 201.3159 299.1162 201.3159 297.6201 c
201.3159 296.2119 200.8281 295.0762 199.9639 293.8438 C
199.4761 293.8438 l
f*U
*u
206.2197 298.0361 m
202.1719 298.0361 L
202.1719 298.6201 L
206.2197 298.6201 L
206.2197 298.0361 l
f206.2197 296.4199 m
202.1719 296.4199 L
202.1719 297.0039 L
206.2197 297.0039 L
206.2197 296.4199 l
f*U
*u
208.916 301.3643 m
208.2358 300.084 207.8276 299.3164 207.8276 297.3955 c
207.8276 296.0762 208.2837 295.0996 208.9238 293.8438 c
208.4517 293.8438 L
207.6196 295.0918 207.0757 296.0918 207.0757 297.5879 c
207.0757 298.9961 207.564 300.1318 208.4277 301.3643 C
208.916 301.3643 l
f*U
*u
211.4199 295.3477 m
209.8037 295.3477 209.4917 297.0684 209.4917 298.2363 c
209.4917 299.4043 209.8037 301.124 211.4199 301.124 c
213.0356 301.124 213.3477 299.4043 213.3477 298.2363 c
213.3477 297.0684 213.0356 295.3477 211.4199 295.3477 c
f1 D
211.4199 300.4922 m
210.6118 300.4922 210.2437 299.6436 210.2437 298.2363 c
210.2437 296.8281 210.6118 295.9805 211.4199 295.9805 c
212.2275 295.9805 212.5957 296.8281 212.5957 298.2363 c
212.5957 299.6436 212.2275 300.4922 211.4199 300.4922 c
f*U
*u
0 D
214.3398 296.3477 m
215.1719 296.3477 L
215.1719 295.5645 L
215.1719 294.4756 214.5 294.3477 214.3398 294.3242 c
214.3398 294.6924 L
214.6758 294.7236 214.7637 295.124 214.7637 295.5 c
214.3398 295.5 L
214.3398 296.3477 l
f*U
*u
218.0918 295.3477 m
216.4756 295.3477 216.1636 297.0684 216.1636 298.2363 c
216.1636 299.4043 216.4756 301.124 218.0918 301.124 c
219.7075 301.124 220.0195 299.4043 220.0195 298.2363 c
220.0195 297.0684 219.7075 295.3477 218.0918 295.3477 c
f1 D
218.0918 300.4922 m
217.2837 300.4922 216.916 299.6436 216.916 298.2363 c
216.916 296.8281 217.2837 295.9805 218.0918 295.9805 c
218.8999 295.9805 219.2676 296.8281 219.2676 298.2363 c
219.2676 299.6436 218.8999 300.4922 218.0918 300.4922 c
f*U
*u
0 D
221.0117 296.3477 m
221.8438 296.3477 L
221.8438 295.5645 L
221.8438 294.4756 221.1719 294.3477 221.0117 294.3242 c
221.0117 294.6924 L
221.3477 294.7236 221.4355 295.124 221.4355 295.5 c
221.0117 295.5 L
221.0117 296.3477 l
f*U
*u
224.7637 295.3477 m
223.1479 295.3477 222.8359 297.0684 222.8359 298.2363 c
222.8359 299.4043 223.1479 301.124 224.7637 301.124 c
226.3799 301.124 226.6919 299.4043 226.6919 298.2363 c
226.6919 297.0684 226.3799 295.3477 224.7637 295.3477 c
f1 D
224.7637 300.4922 m
223.9556 300.4922 223.5879 299.6436 223.5879 298.2363 c
223.5879 296.8281 223.9556 295.9805 224.7637 295.9805 c
225.5718 295.9805 225.9399 296.8281 225.9399 298.2363 c
225.9399 299.6436 225.5718 300.4922 224.7637 300.4922 c
f*U
*u
0 D
227.2676 293.8438 m
227.9478 295.124 228.356 295.8916 228.356 297.8115 c
228.356 299.1318 227.8999 300.1084 227.2598 301.3643 c
227.7319 301.3643 L
228.564 300.1162 229.1079 299.1162 229.1079 297.6201 c
229.1079 296.2119 228.6196 295.0762 227.7559 293.8438 C
227.2676 293.8438 l
f*U
*u
179.6758 285.0801 m
179.6758 284.7598 179.6758 284.4805 179.5962 284.1602 c
178.8999 284.1602 L
178.9238 284.3682 178.9961 284.6162 178.9961 284.8564 c
178.9561 288.2402 L
178.9478 288.7275 179.124 289.3359 179.9639 289.7998 c
180.188 289.9277 180.436 290.0479 181.0039 289.96 c
181.4839 289.8877 181.8359 289.5762 182.0039 289.3604 c
182.3481 288.9199 182.396 288.5361 182.4199 288.1035 c
182.436 287.8242 182.356 287.2959 182.1079 286.832 c
181.8521 286.3604 181.4678 286.0801 181.2119 285.9756 c
180.876 285.8398 180.6118 285.8164 180.3159 285.8965 c
179.9082 286.0078 179.748 286.208 179.6758 286.3203 C
179.6758 285.0801 l
f1 D
179.6519 286.9199 m
179.6519 286.752 180.0039 286.1123 180.6841 286.208 c
180.9878 286.248 181.1719 286.3516 181.332 286.5361 c
181.5161 286.7363 181.6519 287.0645 181.6919 287.4238 c
181.748 287.9121 181.6519 288.3516 181.4521 288.7363 c
181.292 289.0479 180.9639 289.4404 180.4521 289.5361 c
180.2197 289.584 180.0361 289.5283 179.9082 289.416 c
179.7002 289.2236 179.5962 289.0078 179.604 288.6875 C
179.6519 286.9199 l
f*U
*u
0 D
184.5601 283.8857 m
183.3481 283.8857 183.1138 285.1758 183.1138 286.0518 c
183.1138 286.9277 183.3481 288.2178 184.5601 288.2178 c
185.772 288.2178 186.0059 286.9277 186.0059 286.0518 c
186.0059 285.1758 185.772 283.8857 184.5601 283.8857 c
f1 D
184.5601 287.7441 m
183.9541 287.7441 183.6777 287.1084 183.6777 286.0518 c
183.6777 284.9961 183.9541 284.3604 184.5601 284.3604 c
185.166 284.3604 185.4419 284.9961 185.4419 286.0518 c
185.4419 287.1084 185.166 287.7441 184.5601 287.7441 c
f*U
*u
0 D
187.896 283.8857 m
186.6841 283.8857 186.4502 285.1758 186.4502 286.0518 c
186.4502 286.9277 186.6841 288.2178 187.896 288.2178 c
189.1079 288.2178 189.3418 286.9277 189.3418 286.0518 c
189.3418 285.1758 189.1079 283.8857 187.896 283.8857 c
f1 D
187.896 287.7441 m
187.29 287.7441 187.0142 287.1084 187.0142 286.0518 c
187.0142 284.9961 187.29 284.3604 187.896 284.3604 c
188.502 284.3604 188.7778 284.9961 188.7778 286.0518 c
188.7778 287.1084 188.502 287.7441 187.896 287.7441 c
f*U
*u
0 D
191.2319 283.8857 m
190.02 283.8857 189.7861 285.1758 189.7861 286.0518 c
189.7861 286.9277 190.02 288.2178 191.2319 288.2178 c
192.4438 288.2178 192.6777 286.9277 192.6777 286.0518 c
192.6777 285.1758 192.4438 283.8857 191.2319 283.8857 c
f1 D
191.2319 287.7441 m
190.626 287.7441 190.3501 287.1084 190.3501 286.0518 c
190.3501 284.9961 190.626 284.3604 191.2319 284.3604 c
191.8379 284.3604 192.1138 284.9961 192.1138 286.0518 c
192.1138 287.1084 191.8379 287.7441 191.2319 287.7441 c
f*U
Uu*u
0 D
295.5933 273.9473 m
294.6973 273.9473 L
293.6572 275.5234 L
292.6494 273.9473 L
291.7612 273.9473 L
293.2334 276.0996 L
291.8335 278.1309 L
292.7373 278.1309 L
293.7051 276.6592 L
294.6733 278.1309 L
295.5371 278.1309 L
294.1211 276.0996 L
295.5933 273.9473 l
f*U
*u
297.8271 271.9473 m
297.2632 271.9473 L
297.2632 274.9414 L
296.2793 274.9414 L
296.2793 275.3613 L
296.9634 275.4092 297.2451 275.4756 297.4136 276.165 c
297.8271 276.165 L
297.8271 271.9473 l
f*U
*u
299.7051 274.7949 m
300.5371 274.7949 L
300.5371 274.0117 L
300.5371 272.9229 299.8652 272.7949 299.7051 272.7715 c
299.7051 273.1396 L
300.0415 273.1709 300.1294 273.5713 300.1294 273.9473 c
299.7051 273.9473 L
299.7051 274.7949 l
f*U
*u
306.5933 278.1309 m
307.3691 278.1309 L
306.8813 276.7637 306.4014 275.3955 305.8652 274.0273 c
305.2012 272.3311 305.1294 272.2354 304.2251 272.2354 c
304.1211 272.2354 304.0415 272.2676 303.9292 272.2988 c
303.9292 272.9395 L
304.0171 272.9072 304.1611 272.8672 304.3535 272.8672 c
304.7212 272.8672 304.7612 272.9717 305.0972 273.835 c
303.5454 278.1309 L
304.3452 278.1309 L
305.4575 274.7236 L
305.4731 274.7236 L
306.5933 278.1309 l
f*U
*u
309.125 271.833 m
307.9131 271.833 307.6797 273.123 307.6797 273.999 c
307.6797 274.875 307.9131 276.165 309.125 276.165 c
310.3369 276.165 310.5713 274.875 310.5713 273.999 c
310.5713 273.123 310.3369 271.833 309.125 271.833 c
f1 D
309.125 275.6914 m
308.5195 275.6914 308.2432 275.0557 308.2432 273.999 c
308.2432 272.9434 308.5195 272.3076 309.125 272.3076 c
309.7314 272.3076 310.0078 272.9434 310.0078 273.999 c
310.0078 275.0557 309.7314 275.6914 309.125 275.6914 c
f*U
*u
0 D
311.4893 274.7949 m
312.3213 274.7949 L
312.3213 274.0117 L
312.3213 272.9229 311.6494 272.7949 311.4893 272.7715 c
311.4893 273.1396 L
311.8252 273.1709 311.9131 273.5713 311.9131 273.9473 c
311.4893 273.9473 L
311.4893 274.7949 l
f*U
*u
316.4258 274.5313 m
318.9932 274.5313 L
318.9932 273.9473 L
315.4893 273.9473 L
315.4893 274.499 L
318.0098 277.5469 L
315.6816 277.5469 L
315.6816 278.1309 L
318.9209 278.1309 L
318.9209 277.5557 L
316.4258 274.5313 l
f*U
*u
320.9092 271.833 m
319.6973 271.833 319.4629 273.123 319.4629 273.999 c
319.4629 274.875 319.6973 276.165 320.9092 276.165 c
322.1211 276.165 322.3555 274.875 322.3555 273.999 c
322.3555 273.123 322.1211 271.833 320.9092 271.833 c
f1 D
320.9092 275.6914 m
320.3037 275.6914 320.0273 275.0557 320.0273 273.999 c
320.0273 272.9434 320.3037 272.3076 320.9092 272.3076 c
321.5156 272.3076 321.791 272.9434 321.791 273.999 c
321.791 275.0557 321.5156 275.6914 320.9092 275.6914 c
f*U
*u
0 D
294.0571 270.3115 m
293.3774 269.0313 292.9692 268.2637 292.9692 266.3428 c
292.9692 265.0234 293.4253 264.0469 294.0654 262.791 c
293.5933 262.791 L
292.7612 264.0391 292.2173 265.0391 292.2173 266.5352 c
292.2173 267.9434 292.7051 269.0791 293.5693 270.3115 C
294.0571 270.3115 l
f*U
*u
297.5854 264.4473 m
297.5854 265.0557 L
297.5693 265.0713 L
297.2734 264.583 296.9131 264.3271 296.2412 264.3271 c
295.6255 264.3271 294.8813 264.623 294.8813 265.623 c
294.8813 268.6309 L
295.5854 268.6309 L
295.5854 265.8555 L
295.5854 265.167 295.9375 264.9355 296.3931 264.9355 c
297.2813 264.9355 297.5454 265.7197 297.5454 266.3271 c
297.5454 268.6309 L
298.249 268.6309 L
298.249 264.4473 L
297.5854 264.4473 l
f*U
*u
299.4814 265.2949 m
300.3135 265.2949 L
300.3135 264.5117 L
300.3135 263.4229 299.6411 263.2949 299.4814 263.2715 c
299.4814 263.6396 L
299.8174 263.6709 299.9053 264.0713 299.9053 264.4473 c
299.4814 264.4473 L
299.4814 265.2949 l
f*U
*u
304.1772 268.6309 m
304.9453 268.6309 L
303.353 264.4473 L
302.6011 264.4473 L
301.0732 268.6309 L
301.8892 268.6309 L
302.9771 265.2236 L
302.9932 265.2236 L
304.1772 268.6309 l
f*U
*u
305.0654 265.2949 m
305.8975 265.2949 L
305.8975 264.5117 L
305.8975 263.4229 305.2256 263.2949 305.0654 263.2715 c
305.0654 263.6396 L
305.4014 263.6709 305.4893 264.0713 305.4893 264.4473 c
305.0654 264.4473 L
305.0654 265.2949 l
f*U
*u
308.6416 264.4473 m
307.9131 264.4473 L
306.7056 268.6309 L
307.4736 268.6309 L
308.2734 265.3438 L
308.2891 265.3438 L
309.0977 268.6309 L
309.8809 268.6309 L
310.6973 265.3438 L
310.7129 265.3438 L
311.5615 268.6309 L
312.2656 268.6309 L
311.0488 264.4473 L
310.3213 264.4473 L
309.4736 267.6875 L
309.457 267.6875 L
308.6416 264.4473 l
f*U
*u
312.6494 262.791 m
313.3291 264.0713 313.7373 264.8389 313.7373 266.7588 c
313.7373 268.0791 313.2813 269.0557 312.6416 270.3115 c
313.1133 270.3115 L
313.9453 269.0635 314.4893 268.0635 314.4893 266.5674 c
314.4893 265.1592 314.001 264.0234 313.1377 262.791 C
312.6494 262.791 l
f*U
*u
319.3936 266.9834 m
315.3447 266.9834 L
315.3447 267.5674 L
319.3936 267.5674 L
319.3936 266.9834 l
f319.3936 265.3672 m
315.3447 265.3672 L
315.3447 265.9512 L
319.3936 265.9512 L
319.3936 265.3672 l
f*U
*u
322.0889 270.3115 m
321.4092 269.0313 321.001 268.2637 321.001 266.3428 c
321.001 265.0234 321.457 264.0469 322.0977 262.791 c
321.625 262.791 L
320.793 264.0391 320.249 265.0391 320.249 266.5352 c
320.249 267.9434 320.7373 269.0791 321.6016 270.3115 C
322.0889 270.3115 l
f*U
*u
325.2412 264.4473 m
324.4893 264.4473 L
324.4893 268.4395 L
323.1768 268.4395 L
323.1768 268.999 L
324.0889 269.0635 324.4648 269.1514 324.6895 270.0713 c
325.2412 270.0713 L
325.2412 264.4473 l
f*U
*u
327.5127 265.2949 m
328.3447 265.2949 L
328.3447 264.5117 L
328.3447 263.4229 327.6729 263.2949 327.5127 263.2715 c
327.5127 263.6396 L
327.8496 263.6709 327.9375 264.0713 327.9375 264.4473 c
327.5127 264.4473 L
327.5127 265.2949 l
f*U
*u
331.2646 264.2949 m
329.6494 264.2949 329.3369 266.0156 329.3369 267.1836 c
329.3369 268.3516 329.6494 270.0713 331.2646 270.0713 c
332.8809 270.0713 333.1934 268.3516 333.1934 267.1836 c
333.1934 266.0156 332.8809 264.2949 331.2646 264.2949 c
f1 D
331.2646 269.4395 m
330.457 269.4395 330.0889 268.5908 330.0889 267.1836 c
330.0889 265.7754 330.457 264.9277 331.2646 264.9277 c
332.0732 264.9277 332.4414 265.7754 332.4414 267.1836 c
332.4414 268.5908 332.0732 269.4395 331.2646 269.4395 c
f*U
*u
0 D
334.1855 265.2949 m
335.0176 265.2949 L
335.0176 264.5117 L
335.0176 263.4229 334.3447 263.2949 334.1855 263.2715 c
334.1855 263.6396 L
334.5215 263.6709 334.6094 264.0713 334.6094 264.4473 c
334.1855 264.4473 L
334.1855 265.2949 l
f*U
*u
337.9375 264.2949 m
336.3213 264.2949 336.0088 266.0156 336.0088 267.1836 c
336.0088 268.3516 336.3213 270.0713 337.9375 270.0713 c
339.5527 270.0713 339.8652 268.3516 339.8652 267.1836 c
339.8652 266.0156 339.5527 264.2949 337.9375 264.2949 c
f1 D
337.9375 269.4395 m
337.1289 269.4395 336.7607 268.5908 336.7607 267.1836 c
336.7607 265.7754 337.1289 264.9277 337.9375 264.9277 c
338.7451 264.9277 339.1133 265.7754 339.1133 267.1836 c
339.1133 268.5908 338.7451 269.4395 337.9375 269.4395 c
f*U
*u
0 D
340.4414 262.791 m
341.1211 264.0713 341.5293 264.8389 341.5293 266.7588 c
341.5293 268.0791 341.0732 269.0557 340.4336 270.3115 c
340.9053 270.3115 L
341.7373 269.0635 342.2813 268.0635 342.2813 266.5674 c
342.2813 265.1592 341.793 264.0234 340.9287 262.791 C
340.4414 262.791 l
f*U
*u
292.8491 254.0273 m
292.8491 253.707 292.8491 253.4277 292.7695 253.1074 c
292.0732 253.1074 L
292.0972 253.3154 292.1694 253.5635 292.1694 253.8037 c
292.1294 257.1875 L
292.1211 257.6748 292.2974 258.2832 293.1372 258.7471 c
293.3613 258.875 293.6094 258.9951 294.1772 258.9072 c
294.6572 258.835 295.0093 258.5234 295.1772 258.3076 c
295.5215 257.8672 295.5693 257.4834 295.5933 257.0508 c
295.6094 256.7715 295.5293 256.2432 295.2813 255.7793 c
295.0254 255.3076 294.6411 255.0273 294.3853 254.9229 c
294.0493 254.7871 293.7852 254.7637 293.4893 254.8438 c
293.0815 254.9551 292.9214 255.1553 292.8491 255.2676 C
292.8491 254.0273 l
f1 D
292.8252 255.8672 m
292.8252 255.6992 293.1772 255.0596 293.8574 255.1553 c
294.1611 255.1953 294.3452 255.2988 294.5054 255.4834 c
294.6895 255.6836 294.8252 256.0117 294.8652 256.3711 c
294.9214 256.8594 294.8252 257.2988 294.6255 257.6836 c
294.4653 257.9951 294.1372 258.3877 293.6255 258.4834 c
293.3936 258.5313 293.2095 258.4756 293.0815 258.3633 c
292.8735 258.1709 292.7695 257.9551 292.7773 257.6348 C
292.8252 255.8672 l
f*U
*u
0 D
298.2192 252.9473 m
297.6553 252.9473 L
297.6553 255.9414 L
296.6714 255.9414 L
296.6714 256.3613 L
297.3555 256.4092 297.6372 256.4756 297.8052 257.165 c
298.2192 257.165 L
298.2192 252.9473 l
f*U
*u
301.0693 252.833 m
299.8574 252.833 299.6235 254.123 299.6235 254.999 c
299.6235 255.875 299.8574 257.165 301.0693 257.165 c
302.2813 257.165 302.5151 255.875 302.5151 254.999 c
302.5151 254.123 302.2813 252.833 301.0693 252.833 c
f1 D
301.0693 256.6914 m
300.4634 256.6914 300.1875 256.0557 300.1875 254.999 c
300.1875 253.9434 300.4634 253.3076 301.0693 253.3076 c
301.6753 253.3076 301.9512 253.9434 301.9512 254.999 c
301.9512 256.0557 301.6753 256.6914 301.0693 256.6914 c
f*U
*u
0 D
304.4053 252.833 m
303.1934 252.833 302.9595 254.123 302.9595 254.999 c
302.9595 255.875 303.1934 257.165 304.4053 257.165 c
305.6172 257.165 305.8516 255.875 305.8516 254.999 c
305.8516 254.123 305.6172 252.833 304.4053 252.833 c
f1 D
304.4053 256.6914 m
303.7993 256.6914 303.5234 256.0557 303.5234 254.999 c
303.5234 253.9434 303.7993 253.3076 304.4053 253.3076 c
305.0112 253.3076 305.2871 253.9434 305.2871 254.999 c
305.2871 256.0557 305.0112 256.6914 304.4053 256.6914 c
f*U
Uu*u
0 D
356.5938 317.4473 m
355.6982 317.4473 L
354.6582 319.0234 L
353.6494 317.4473 L
352.7617 317.4473 L
354.2334 319.5996 L
352.834 321.6309 L
353.7383 321.6309 L
354.7061 320.1592 L
355.6738 321.6309 L
356.5381 321.6309 L
355.1221 319.5996 L
356.5938 317.4473 l
f*U
*u
358.8281 315.4473 m
358.2637 315.4473 L
358.2637 318.4414 L
357.2803 318.4414 L
357.2803 318.8613 L
357.9639 318.9092 358.2461 318.9756 358.4141 319.665 c
358.8281 319.665 L
358.8281 315.4473 l
f*U
*u
360.7061 318.2949 m
361.5381 318.2949 L
361.5381 317.5117 L
361.5381 316.4229 360.8662 316.2949 360.7061 316.2715 c
360.7061 316.6396 L
361.042 316.6709 361.1299 317.0713 361.1299 317.4473 c
360.7061 317.4473 L
360.7061 318.2949 l
f*U
*u
367.5938 321.6309 m
368.3701 321.6309 L
367.8818 320.2637 367.4014 318.8955 366.8662 317.5273 c
366.2021 315.8311 366.1299 315.7354 365.2256 315.7354 c
365.1221 315.7354 365.042 315.7676 364.9297 315.7988 c
364.9297 316.4395 L
365.0176 316.4072 365.1621 316.3672 365.3535 316.3672 c
365.7217 316.3672 365.7617 316.4717 366.0977 317.335 c
364.5459 321.6309 L
365.3457 321.6309 L
366.458 318.2236 L
366.4736 318.2236 L
367.5938 321.6309 l
f*U
*u
370.6123 315.4473 m
370.0479 315.4473 L
370.0479 318.4414 L
369.0635 318.4414 L
369.0635 318.8613 L
369.748 318.9092 370.0303 318.9756 370.1982 319.665 c
370.6123 319.665 L
370.6123 315.4473 l
f*U
*u
372.4902 318.2949 m
373.3223 318.2949 L
373.3223 317.5117 L
373.3223 316.4229 372.6494 316.2949 372.4902 316.2715 c
372.4902 316.6396 L
372.8262 316.6709 372.9141 317.0713 372.9141 317.4473 c
372.4902 317.4473 L
372.4902 318.2949 l
f*U
*u
377.4258 318.0313 m
379.9941 318.0313 L
379.9941 317.4473 L
376.4902 317.4473 L
376.4902 317.999 L
379.0098 321.0469 L
376.6816 321.0469 L
376.6816 321.6309 L
379.9219 321.6309 L
379.9219 321.0557 L
377.4258 318.0313 l
f*U
*u
381.9102 315.333 m
380.6982 315.333 380.4639 316.623 380.4639 317.499 c
380.4639 318.375 380.6982 319.665 381.9102 319.665 c
383.1221 319.665 383.3555 318.375 383.3555 317.499 c
383.3555 316.623 383.1221 315.333 381.9102 315.333 c
f1 D
381.9102 319.1914 m
381.3037 319.1914 381.0273 318.5557 381.0273 317.499 c
381.0273 316.4434 381.3037 315.8076 381.9102 315.8076 c
382.5156 315.8076 382.792 316.4434 382.792 317.499 c
382.792 318.5557 382.5156 319.1914 381.9102 319.1914 c
f*U
*u
0 D
355.0576 313.8115 m
354.3779 312.5313 353.9697 311.7637 353.9697 309.8428 c
353.9697 308.5234 354.4258 307.5469 355.0654 306.291 c
354.5938 306.291 L
353.7617 307.5391 353.2178 308.5391 353.2178 310.0352 c
353.2178 311.4434 353.7061 312.5791 354.5693 313.8115 C
355.0576 313.8115 l
f*U
*u
358.5859 307.9473 m
358.5859 308.5557 L
358.5693 308.5713 L
358.2734 308.083 357.9141 307.8271 357.2422 307.8271 c
356.626 307.8271 355.8818 308.123 355.8818 309.123 c
355.8818 312.1309 L
356.5859 312.1309 L
356.5859 309.3555 L
356.5859 308.667 356.9375 308.4355 357.3936 308.4355 c
358.2813 308.4355 358.5459 309.2197 358.5459 309.8271 c
358.5459 312.1309 L
359.25 312.1309 L
359.25 307.9473 L
358.5859 307.9473 l
f*U
*u
360.4814 308.7949 m
361.3135 308.7949 L
361.3135 308.0117 L
361.3135 306.9229 360.6416 306.7949 360.4814 306.7715 c
360.4814 307.1396 L
360.8174 307.1709 360.9053 307.5713 360.9053 307.9473 c
360.4814 307.9473 L
360.4814 308.7949 l
f*U
*u
365.1777 312.1309 m
365.9453 312.1309 L
364.3535 307.9473 L
363.6016 307.9473 L
362.0742 312.1309 L
362.8896 312.1309 L
363.9775 308.7236 L
363.9941 308.7236 L
365.1777 312.1309 l
f*U
*u
366.0654 308.7949 m
366.8975 308.7949 L
366.8975 308.0117 L
366.8975 306.9229 366.2256 306.7949 366.0654 306.7715 c
366.0654 307.1396 L
366.4023 307.1709 366.4902 307.5713 366.4902 307.9473 c
366.0654 307.9473 L
366.0654 308.7949 l
f*U
*u
369.6416 307.9473 m
368.9141 307.9473 L
367.7061 312.1309 L
368.4736 312.1309 L
369.2734 308.8438 L
369.29 308.8438 L
370.0977 312.1309 L
370.8818 312.1309 L
371.6982 308.8438 L
371.7139 308.8438 L
372.5615 312.1309 L
373.2656 312.1309 L
372.0498 307.9473 L
371.3223 307.9473 L
370.4736 311.1875 L
370.458 311.1875 L
369.6416 307.9473 l
f*U
*u
373.6494 306.291 m
374.3301 307.5713 374.7373 308.3389 374.7373 310.2588 c
374.7373 311.5791 374.2813 312.5557 373.6416 313.8115 c
374.1133 313.8115 L
374.9453 312.5635 375.4893 311.5635 375.4893 310.0674 c
375.4893 308.6592 375.002 307.5234 374.1377 306.291 C
373.6494 306.291 l
f*U
*u
380.3936 310.4834 m
376.3457 310.4834 L
376.3457 311.0674 L
380.3936 311.0674 L
380.3936 310.4834 l
f380.3936 308.8672 m
376.3457 308.8672 L
376.3457 309.4512 L
380.3936 309.4512 L
380.3936 308.8672 l
f*U
*u
383.0898 313.8115 m
382.4092 312.5313 382.002 311.7637 382.002 309.8428 c
382.002 308.5234 382.458 307.5469 383.0977 306.291 c
382.626 306.291 L
381.7939 307.5391 381.25 308.5391 381.25 310.0352 c
381.25 311.4434 381.7373 312.5791 382.6016 313.8115 C
383.0898 313.8115 l
f*U
*u
386.2412 307.9473 m
385.4893 307.9473 L
385.4893 311.9395 L
384.1777 311.9395 L
384.1777 312.499 L
385.0898 312.5635 385.4658 312.6514 385.6895 313.5713 c
386.2412 313.5713 L
386.2412 307.9473 l
f*U
*u
388.5137 308.7949 m
389.3457 308.7949 L
389.3457 308.0117 L
389.3457 306.9229 388.6738 306.7949 388.5137 306.7715 c
388.5137 307.1396 L
388.8496 307.1709 388.9375 307.5713 388.9375 307.9473 c
388.5137 307.9473 L
388.5137 308.7949 l
f*U
*u
392.9141 307.9473 m
392.1611 307.9473 L
392.1611 311.9395 L
390.8496 311.9395 L
390.8496 312.499 L
391.7617 312.5635 392.1377 312.6514 392.3613 313.5713 c
392.9141 313.5713 L
392.9141 307.9473 l
f*U
*u
395.1855 308.7949 m
396.0176 308.7949 L
396.0176 308.0117 L
396.0176 306.9229 395.3457 306.7949 395.1855 306.7715 c
395.1855 307.1396 L
395.5215 307.1709 395.6094 307.5713 395.6094 307.9473 c
395.1855 307.9473 L
395.1855 308.7949 l
f*U
*u
398.9375 307.7949 m
397.3213 307.7949 397.0098 309.5156 397.0098 310.6836 c
397.0098 311.8516 397.3213 313.5713 398.9375 313.5713 c
400.5537 313.5713 400.8652 311.8516 400.8652 310.6836 c
400.8652 309.5156 400.5537 307.7949 398.9375 307.7949 c
f1 D
398.9375 312.9395 m
398.1299 312.9395 397.7617 312.0908 397.7617 310.6836 c
397.7617 309.2754 398.1299 308.4277 398.9375 308.4277 c
399.7451 308.4277 400.1133 309.2754 400.1133 310.6836 c
400.1133 312.0908 399.7451 312.9395 398.9375 312.9395 c
f*U
*u
0 D
401.4414 306.291 m
402.1221 307.5713 402.5293 308.3389 402.5293 310.2588 c
402.5293 311.5791 402.0732 312.5557 401.4336 313.8115 c
401.9053 313.8115 L
402.7373 312.5635 403.2813 311.5635 403.2813 310.0674 c
403.2813 308.6592 402.7939 307.5234 401.9297 306.291 C
401.4414 306.291 l
f*U
*u
353.8496 297.5273 m
353.8496 297.207 353.8496 296.9277 353.7695 296.6074 c
353.0742 296.6074 L
353.0977 296.8154 353.1699 297.0635 353.1699 297.3037 c
353.1299 300.6875 L
353.1221 301.1748 353.2979 301.7832 354.1377 302.2471 c
354.3613 302.375 354.6094 302.4951 355.1777 302.4072 c
355.6582 302.335 356.0098 302.0234 356.1777 301.8076 c
356.5215 301.3672 356.5693 300.9834 356.5938 300.5508 c
356.6094 300.2715 356.5293 299.7432 356.2822 299.2793 c
356.0254 298.8076 355.6416 298.5273 355.3857 298.4229 c
355.0498 298.2871 354.7861 298.2637 354.4902 298.3438 c
354.082 298.4551 353.9219 298.6553 353.8496 298.7676 C
353.8496 297.5273 l
f1 D
353.8262 299.3672 m
353.8262 299.1992 354.1777 298.5596 354.8574 298.6553 c
355.1621 298.6953 355.3457 298.7988 355.5059 298.9834 c
355.6895 299.1836 355.8262 299.5117 355.8662 299.8711 c
355.9219 300.3594 355.8262 300.7988 355.626 301.1836 c
355.4658 301.4951 355.1377 301.8877 354.626 301.9834 c
354.3936 302.0313 354.21 301.9756 354.082 301.8633 c
353.874 301.6709 353.7695 301.4551 353.7773 301.1348 C
353.8262 299.3672 l
f*U
*u
0 D
359.2197 296.4473 m
358.6563 296.4473 L
358.6563 299.4414 L
357.6719 299.4414 L
357.6719 299.8613 L
358.3555 299.9092 358.6377 299.9756 358.8057 300.665 c
359.2197 300.665 L
359.2197 296.4473 l
f*U
*u
362.5557 296.4473 m
361.9922 296.4473 L
361.9922 299.4414 L
361.0078 299.4414 L
361.0078 299.8613 L
361.6914 299.9092 361.9736 299.9756 362.1416 300.665 c
362.5557 300.665 L
362.5557 296.4473 l
f*U
*u
365.4063 296.333 m
364.1934 296.333 363.96 297.623 363.96 298.499 c
363.96 299.375 364.1934 300.665 365.4063 300.665 c
366.6182 300.665 366.8516 299.375 366.8516 298.499 c
366.8516 297.623 366.6182 296.333 365.4063 296.333 c
f1 D
365.4063 300.1914 m
364.7998 300.1914 364.5234 299.5557 364.5234 298.499 c
364.5234 297.4434 364.7998 296.8076 365.4063 296.8076 c
366.0117 296.8076 366.2881 297.4434 366.2881 298.499 c
366.2881 299.5557 366.0117 300.1914 365.4063 300.1914 c
f*U
Uu*u
0 D
293.5933 367.9473 m
292.6973 367.9473 L
291.6572 369.5234 L
290.6494 367.9473 L
289.7612 367.9473 L
291.2334 370.0996 L
289.8335 372.1309 L
290.7373 372.1309 L
291.7051 370.6592 L
292.6733 372.1309 L
293.5371 372.1309 L
292.1211 370.0996 L
293.5933 367.9473 l
f*U
*u
295.8271 365.9473 m
295.2632 365.9473 L
295.2632 368.9414 L
294.2793 368.9414 L
294.2793 369.3613 L
294.9634 369.4092 295.2451 369.4756 295.4136 370.165 c
295.8271 370.165 L
295.8271 365.9473 l
f*U
*u
297.7051 368.7949 m
298.5371 368.7949 L
298.5371 368.0117 L
298.5371 366.9229 297.8652 366.7949 297.7051 366.7715 c
297.7051 367.1396 L
298.0415 367.1709 298.1294 367.5713 298.1294 367.9473 c
297.7051 367.9473 L
297.7051 368.7949 l
f*U
*u
304.5933 372.1309 m
305.3691 372.1309 L
304.8813 370.7637 304.4014 369.3955 303.8652 368.0273 c
303.2012 366.3311 303.1294 366.2354 302.2251 366.2354 c
302.1211 366.2354 302.0415 366.2676 301.9292 366.2988 c
301.9292 366.9395 L
302.0171 366.9072 302.1611 366.8672 302.3535 366.8672 c
302.7212 366.8672 302.7612 366.9717 303.0972 367.835 c
301.5454 372.1309 L
302.3452 372.1309 L
303.4575 368.7236 L
303.4731 368.7236 L
304.5933 372.1309 l
f*U
*u
307.125 365.833 m
305.9131 365.833 305.6792 367.123 305.6792 367.999 c
305.6792 368.875 305.9131 370.165 307.125 370.165 c
308.3369 370.165 308.5713 368.875 308.5713 367.999 c
308.5713 367.123 308.3369 365.833 307.125 365.833 c
f1 D
307.125 369.6914 m
306.5195 369.6914 306.2432 369.0557 306.2432 367.999 c
306.2432 366.9434 306.5195 366.3076 307.125 366.3076 c
307.7314 366.3076 308.0078 366.9434 308.0078 367.999 c
308.0078 369.0557 307.7314 369.6914 307.125 369.6914 c
f*U
*u
0 D
309.4893 368.7949 m
310.3213 368.7949 L
310.3213 368.0117 L
310.3213 366.9229 309.6494 366.7949 309.4893 366.7715 c
309.4893 367.1396 L
309.8252 367.1709 309.9131 367.5713 309.9131 367.9473 c
309.4893 367.9473 L
309.4893 368.7949 l
f*U
*u
314.4258 368.5313 m
316.9932 368.5313 L
316.9932 367.9473 L
313.4893 367.9473 L
313.4893 368.499 L
316.0098 371.5469 L
313.6816 371.5469 L
313.6816 372.1309 L
316.9209 372.1309 L
316.9209 371.5557 L
314.4258 368.5313 l
f*U
*u
319.3955 365.9473 m
318.8311 365.9473 L
318.8311 368.9414 L
317.8477 368.9414 L
317.8477 369.3613 L
318.5313 369.4092 318.8135 369.4756 318.9814 370.165 c
319.3955 370.165 L
319.3955 365.9473 l
f*U
*u
292.0571 364.3115 m
291.3774 363.0313 290.9692 362.2637 290.9692 360.3428 c
290.9692 359.0234 291.4253 358.0469 292.0654 356.791 c
291.5933 356.791 L
290.7612 358.0391 290.2173 359.0391 290.2173 360.5352 c
290.2173 361.9434 290.7051 363.0791 291.5693 364.3115 C
292.0571 364.3115 l
f*U
*u
295.5854 358.4473 m
295.5854 359.0557 L
295.5693 359.0713 L
295.2734 358.583 294.9131 358.3271 294.2412 358.3271 c
293.6255 358.3271 292.8813 358.623 292.8813 359.623 c
292.8813 362.6309 L
293.5854 362.6309 L
293.5854 359.8555 L
293.5854 359.167 293.9375 358.9355 294.3931 358.9355 c
295.2813 358.9355 295.5454 359.7197 295.5454 360.3271 c
295.5454 362.6309 L
296.249 362.6309 L
296.249 358.4473 L
295.5854 358.4473 l
f*U
*u
297.4814 359.2949 m
298.3135 359.2949 L
298.3135 358.5117 L
298.3135 357.4229 297.6411 357.2949 297.4814 357.2715 c
297.4814 357.6396 L
297.8174 357.6709 297.9053 358.0713 297.9053 358.4473 c
297.4814 358.4473 L
297.4814 359.2949 l
f*U
*u
302.1772 362.6309 m
302.9453 362.6309 L
301.353 358.4473 L
300.6011 358.4473 L
299.0732 362.6309 L
299.8892 362.6309 L
300.9771 359.2236 L
300.9932 359.2236 L
302.1772 362.6309 l
f*U
*u
303.0654 359.2949 m
303.8975 359.2949 L
303.8975 358.5117 L
303.8975 357.4229 303.2256 357.2949 303.0654 357.2715 c
303.0654 357.6396 L
303.4014 357.6709 303.4893 358.0713 303.4893 358.4473 c
303.0654 358.4473 L
303.0654 359.2949 l
f*U
*u
306.6416 358.4473 m
305.9136 358.4473 L
304.7056 362.6309 L
305.4731 362.6309 L
306.2734 359.3438 L
306.2896 359.3438 L
307.0977 362.6309 L
307.8809 362.6309 L
308.6973 359.3438 L
308.7129 359.3438 L
309.5615 362.6309 L
310.2656 362.6309 L
309.0488 358.4473 L
308.3213 358.4473 L
307.4736 361.6875 L
307.457 361.6875 L
306.6416 358.4473 l
f*U
*u
310.6494 356.791 m
311.3291 358.0713 311.7373 358.8389 311.7373 360.7588 c
311.7373 362.0791 311.2813 363.0557 310.6416 364.3115 c
311.1133 364.3115 L
311.9453 363.0635 312.4893 362.0635 312.4893 360.5674 c
312.4893 359.1592 312.001 358.0234 311.1377 356.791 C
310.6494 356.791 l
f*U
*u
317.3936 360.9834 m
313.3447 360.9834 L
313.3447 361.5674 L
317.3936 361.5674 L
317.3936 360.9834 l
f317.3936 359.3672 m
313.3447 359.3672 L
313.3447 359.9512 L
317.3936 359.9512 L
317.3936 359.3672 l
f*U
*u
320.0889 364.3115 m
319.4092 363.0313 319.001 362.2637 319.001 360.3428 c
319.001 359.0234 319.457 358.0469 320.0977 356.791 c
319.625 356.791 L
318.793 358.0391 318.249 359.0391 318.249 360.5352 c
318.249 361.9434 318.7373 363.0791 319.6016 364.3115 C
320.0889 364.3115 l
f*U
*u
323.2412 358.4473 m
322.4893 358.4473 L
322.4893 362.4395 L
321.1768 362.4395 L
321.1768 362.999 L
322.0889 363.0635 322.4648 363.1514 322.6895 364.0713 c
323.2412 364.0713 L
323.2412 358.4473 l
f*U
*u
325.5127 359.2949 m
326.3447 359.2949 L
326.3447 358.5117 L
326.3447 357.4229 325.6729 357.2949 325.5127 357.2715 c
325.5127 357.6396 L
325.8496 357.6709 325.9375 358.0713 325.9375 358.4473 c
325.5127 358.4473 L
325.5127 359.2949 l
f*U
*u
329.2646 358.2949 m
327.6494 358.2949 327.3369 360.0156 327.3369 361.1836 c
327.3369 362.3516 327.6494 364.0713 329.2646 364.0713 c
330.8809 364.0713 331.1934 362.3516 331.1934 361.1836 c
331.1934 360.0156 330.8809 358.2949 329.2646 358.2949 c
f1 D
329.2646 363.4395 m
328.457 363.4395 328.0889 362.5908 328.0889 361.1836 c
328.0889 359.7754 328.457 358.9277 329.2646 358.9277 c
330.0732 358.9277 330.4414 359.7754 330.4414 361.1836 c
330.4414 362.5908 330.0732 363.4395 329.2646 363.4395 c
f*U
*u
0 D
332.1855 359.2949 m
333.0176 359.2949 L
333.0176 358.5117 L
333.0176 357.4229 332.3447 357.2949 332.1855 357.2715 c
332.1855 357.6396 L
332.5215 357.6709 332.6094 358.0713 332.6094 358.4473 c
332.1855 358.4473 L
332.1855 359.2949 l
f*U
*u
336.585 358.4473 m
335.833 358.4473 L
335.833 362.4395 L
334.5215 362.4395 L
334.5215 362.999 L
335.4336 363.0635 335.8096 363.1514 336.0332 364.0713 c
336.585 364.0713 L
336.585 358.4473 l
f*U
*u
338.4414 356.791 m
339.1211 358.0713 339.5293 358.8389 339.5293 360.7588 c
339.5293 362.0791 339.0732 363.0557 338.4336 364.3115 c
338.9053 364.3115 L
339.7373 363.0635 340.2813 362.0635 340.2813 360.5674 c
340.2813 359.1592 339.793 358.0234 338.9287 356.791 C
338.4414 356.791 l
f*U
*u
290.8491 348.0273 m
290.8491 347.707 290.8491 347.4277 290.7695 347.1074 c
290.0732 347.1074 L
290.0972 347.3154 290.1694 347.5635 290.1694 347.8037 c
290.1294 351.1875 L
290.1211 351.6748 290.2974 352.2832 291.1372 352.7471 c
291.3613 352.875 291.6094 352.9951 292.1772 352.9072 c
292.6572 352.835 293.0093 352.5234 293.1772 352.3076 c
293.5215 351.8672 293.5693 351.4834 293.5933 351.0508 c
293.6094 350.7715 293.5293 350.2432 293.2813 349.7793 c
293.0254 349.3076 292.6411 349.0273 292.3853 348.9229 c
292.0493 348.7871 291.7852 348.7637 291.4893 348.8438 c
291.0815 348.9551 290.9214 349.1553 290.8491 349.2676 C
290.8491 348.0273 l
f1 D
290.8252 349.8672 m
290.8252 349.6992 291.1772 349.0596 291.8574 349.1553 c
292.1611 349.1953 292.3452 349.2988 292.5054 349.4834 c
292.6895 349.6836 292.8252 350.0117 292.8652 350.3711 c
292.9214 350.8594 292.8252 351.2988 292.6255 351.6836 c
292.4653 351.9951 292.1372 352.3877 291.6255 352.4834 c
291.3936 352.5313 291.2095 352.4756 291.0815 352.3633 c
290.8735 352.1709 290.7695 351.9551 290.7773 351.6348 C
290.8252 349.8672 l
f*U
*u
0 D
296.2192 346.9473 m
295.6553 346.9473 L
295.6553 349.9414 L
294.6714 349.9414 L
294.6714 350.3613 L
295.3555 350.4092 295.6372 350.4756 295.8052 351.165 c
296.2192 351.165 L
296.2192 346.9473 l
f*U
*u
299.0693 346.833 m
297.8574 346.833 297.6235 348.123 297.6235 348.999 c
297.6235 349.875 297.8574 351.165 299.0693 351.165 c
300.2813 351.165 300.5151 349.875 300.5151 348.999 c
300.5151 348.123 300.2813 346.833 299.0693 346.833 c
f1 D
299.0693 350.6914 m
298.4634 350.6914 298.1875 350.0557 298.1875 348.999 c
298.1875 347.9434 298.4634 347.3076 299.0693 347.3076 c
299.6753 347.3076 299.9512 347.9434 299.9512 348.999 c
299.9512 350.0557 299.6753 350.6914 299.0693 350.6914 c
f*U
*u
0 D
302.8911 346.9473 m
302.3271 346.9473 L
302.3271 349.9414 L
301.3433 349.9414 L
301.3433 350.3613 L
302.0273 350.4092 302.3091 350.4756 302.4775 351.165 c
302.8911 351.165 L
302.8911 346.9473 l
f*U
Uu*u
362.0938 401.9473 m
361.1982 401.9473 L
360.1582 403.5234 L
359.1494 401.9473 L
358.2617 401.9473 L
359.7334 404.0991 L
358.334 406.1313 L
359.2383 406.1313 L
360.2061 404.6592 L
361.1738 406.1313 L
362.0381 406.1313 L
360.6221 404.0991 L
362.0938 401.9473 l
f*U
*u
364.3281 399.9473 m
363.7637 399.9473 L
363.7637 402.9414 L
362.7803 402.9414 L
362.7803 403.3613 L
363.4639 403.4092 363.7461 403.4751 363.9141 404.1655 c
364.3281 404.1655 L
364.3281 399.9473 l
f*U
*u
366.2061 402.7954 m
367.0381 402.7954 L
367.0381 402.0112 L
367.0381 400.9233 366.3662 400.7954 366.2061 400.7715 c
366.2061 401.1392 L
366.542 401.1714 366.6299 401.5713 366.6299 401.9473 c
366.2061 401.9473 L
366.2061 402.7954 l
f*U
*u
373.0938 406.1313 m
373.8701 406.1313 L
373.3818 404.7632 372.9014 403.395 372.3662 402.0273 c
371.7021 400.3311 371.6299 400.2354 370.7256 400.2354 c
370.6221 400.2354 370.542 400.2671 370.4297 400.2993 c
370.4297 400.9395 L
370.5176 400.9072 370.6621 400.8672 370.8535 400.8672 c
371.2217 400.8672 371.2617 400.9712 371.5977 401.8354 c
370.0459 406.1313 L
370.8457 406.1313 L
371.958 402.7231 L
371.9736 402.7231 L
373.0938 406.1313 l
f*U
*u
376.1123 399.9473 m
375.5479 399.9473 L
375.5479 402.9414 L
374.5635 402.9414 L
374.5635 403.3613 L
375.248 403.4092 375.5303 403.4751 375.6982 404.1655 c
376.1123 404.1655 L
376.1123 399.9473 l
f*U
*u
377.9902 402.7954 m
378.8223 402.7954 L
378.8223 402.0112 L
378.8223 400.9233 378.1494 400.7954 377.9902 400.7715 c
377.9902 401.1392 L
378.3262 401.1714 378.4141 401.5713 378.4141 401.9473 c
377.9902 401.9473 L
377.9902 402.7954 l
f*U
*u
382.9258 402.5313 m
385.4941 402.5313 L
385.4941 401.9473 L
381.9902 401.9473 L
381.9902 402.499 L
384.5098 405.5474 L
382.1816 405.5474 L
382.1816 406.1313 L
385.4219 406.1313 L
385.4219 405.5552 L
382.9258 402.5313 l
f*U
*u
387.8955 399.9473 m
387.332 399.9473 L
387.332 402.9414 L
386.3477 402.9414 L
386.3477 403.3613 L
387.0322 403.4092 387.3135 403.4751 387.4814 404.1655 c
387.8955 404.1655 L
387.8955 399.9473 l
f*U
*u
360.5576 398.311 m
359.8779 397.0313 359.4697 396.2632 359.4697 394.3428 c
359.4697 393.0234 359.9258 392.0469 360.5654 390.791 c
360.0938 390.791 L
359.2617 392.0391 358.7178 393.0391 358.7178 394.5352 c
358.7178 395.9434 359.2061 397.0791 360.0693 398.311 C
360.5576 398.311 l
f*U
*u
364.0859 392.4473 m
364.0859 393.0557 L
364.0693 393.0713 L
363.7734 392.583 363.4141 392.3271 362.7422 392.3271 c
362.126 392.3271 361.3818 392.623 361.3818 393.623 c
361.3818 396.6313 L
362.0859 396.6313 L
362.0859 393.8555 L
362.0859 393.167 362.4375 392.9355 362.8936 392.9355 c
363.7813 392.9355 364.0459 393.7197 364.0459 394.3271 c
364.0459 396.6313 L
364.75 396.6313 L
364.75 392.4473 L
364.0859 392.4473 l
f*U
*u
365.9814 393.2949 m
366.8135 393.2949 L
366.8135 392.5117 L
366.8135 391.4229 366.1416 391.2949 365.9814 391.2715 c
365.9814 391.6396 L
366.3174 391.6709 366.4053 392.0713 366.4053 392.4473 c
365.9814 392.4473 L
365.9814 393.2949 l
f*U
*u
370.6777 396.6313 m
371.4453 396.6313 L
369.8535 392.4473 L
369.1016 392.4473 L
367.5742 396.6313 L
368.3896 396.6313 L
369.4775 393.2236 L
369.4941 393.2236 L
370.6777 396.6313 l
f*U
*u
371.5654 393.2949 m
372.3975 393.2949 L
372.3975 392.5117 L
372.3975 391.4229 371.7256 391.2949 371.5654 391.2715 c
371.5654 391.6396 L
371.9023 391.6709 371.9902 392.0713 371.9902 392.4473 c
371.5654 392.4473 L
371.5654 393.2949 l
f*U
*u
375.1416 392.4473 m
374.4141 392.4473 L
373.2061 396.6313 L
373.9736 396.6313 L
374.7734 393.3438 L
374.79 393.3438 L
375.5977 396.6313 L
376.3818 396.6313 L
377.1982 393.3438 L
377.2139 393.3438 L
378.0615 396.6313 L
378.7656 396.6313 L
377.5498 392.4473 L
376.8223 392.4473 L
375.9736 395.687 L
375.958 395.687 L
375.1416 392.4473 l
f*U
*u
379.1494 390.791 m
379.8301 392.0713 380.2373 392.8389 380.2373 394.7588 c
380.2373 396.0791 379.7813 397.0552 379.1416 398.311 c
379.6133 398.311 L
380.4453 397.063 380.9893 396.0635 380.9893 394.5674 c
380.9893 393.1592 380.502 392.0234 379.6377 390.791 C
379.1494 390.791 l
f*U
*u
385.8936 394.9834 m
381.8457 394.9834 L
381.8457 395.5674 L
385.8936 395.5674 L
385.8936 394.9834 l
f385.8936 393.3672 m
381.8457 393.3672 L
381.8457 393.9512 L
385.8936 393.9512 L
385.8936 393.3672 l
f*U
*u
388.5898 398.311 m
387.9092 397.0313 387.502 396.2632 387.502 394.3428 c
387.502 393.0234 387.958 392.0469 388.5977 390.791 c
388.126 390.791 L
387.2939 392.0391 386.75 393.0391 386.75 394.5352 c
386.75 395.9434 387.2373 397.0791 388.1016 398.311 C
388.5898 398.311 l
f*U
*u
391.7412 392.4473 m
390.9893 392.4473 L
390.9893 396.4395 L
389.6777 396.4395 L
389.6777 396.999 L
390.5898 397.063 390.9658 397.1514 391.1895 398.0713 c
391.7412 398.0713 L
391.7412 392.4473 l
f*U
*u
394.0137 393.2949 m
394.8457 393.2949 L
394.8457 392.5117 L
394.8457 391.4229 394.1738 391.2949 394.0137 391.2715 c
394.0137 391.6396 L
394.3496 391.6709 394.4375 392.0713 394.4375 392.4473 c
394.0137 392.4473 L
394.0137 393.2949 l
f*U
*u
398.4141 392.4473 m
397.6611 392.4473 L
397.6611 396.4395 L
396.3496 396.4395 L
396.3496 396.999 L
397.2617 397.063 397.6377 397.1514 397.8613 398.0713 c
398.4141 398.0713 L
398.4141 392.4473 l
f*U
*u
400.6855 393.2949 m
401.5176 393.2949 L
401.5176 392.5117 L
401.5176 391.4229 400.8457 391.2949 400.6855 391.2715 c
400.6855 391.6396 L
401.0215 391.6709 401.1094 392.0713 401.1094 392.4473 c
400.6855 392.4473 L
400.6855 393.2949 l
f*U
*u
405.0859 392.4473 m
404.334 392.4473 L
404.334 396.4395 L
403.0215 396.4395 L
403.0215 396.999 L
403.9336 397.063 404.3096 397.1514 404.5332 398.0713 c
405.0859 398.0713 L
405.0859 392.4473 l
f*U
*u
406.9414 390.791 m
407.6221 392.0713 408.0293 392.8389 408.0293 394.7588 c
408.0293 396.0791 407.5732 397.0552 406.9336 398.311 c
407.4053 398.311 L
408.2373 397.063 408.7813 396.0635 408.7813 394.5674 c
408.7813 393.1592 408.2939 392.0234 407.4297 390.791 C
406.9414 390.791 l
f*U
*u
359.3496 382.0273 m
359.3496 381.707 359.3496 381.4277 359.2695 381.1074 c
358.5742 381.1074 L
358.5977 381.3154 358.6699 381.5635 358.6699 381.8037 c
358.6299 385.1875 L
358.6221 385.6748 358.7979 386.2832 359.6377 386.7471 c
359.8613 386.875 360.1094 386.9951 360.6777 386.9072 c
361.1582 386.835 361.5098 386.5234 361.6777 386.3076 c
362.0215 385.8672 362.0693 385.4834 362.0938 385.0508 c
362.1094 384.7715 362.0293 384.2432 361.7822 383.7793 c
361.5254 383.3076 361.1416 383.0273 360.8857 382.9229 c
360.5498 382.7871 360.2861 382.7637 359.9902 382.8438 c
359.582 382.9551 359.4219 383.1553 359.3496 383.2676 C
359.3496 382.0273 l
f1 D
359.3262 383.8672 m
359.3262 383.6992 359.6777 383.0596 360.3574 383.1553 c
360.6621 383.1953 360.8457 383.2988 361.0059 383.4834 c
361.1895 383.6836 361.3262 384.0117 361.3662 384.3711 c
361.4219 384.8594 361.3262 385.2988 361.126 385.6836 c
360.9658 385.9951 360.6377 386.3877 360.126 386.4834 c
359.8936 386.5313 359.71 386.4756 359.582 386.3633 c
359.374 386.1709 359.2695 385.9551 359.2773 385.6348 C
359.3262 383.8672 l
f*U
*u
0 D
364.7197 380.9473 m
364.1563 380.9473 L
364.1563 383.9414 L
363.1719 383.9414 L
363.1719 384.3613 L
363.8555 384.4092 364.1377 384.4756 364.3057 385.165 c
364.7197 385.165 L
364.7197 380.9473 l
f*U
*u
368.0557 380.9473 m
367.4922 380.9473 L
367.4922 383.9414 L
366.5078 383.9414 L
366.5078 384.3613 L
367.1914 384.4092 367.4736 384.4756 367.6416 385.165 c
368.0557 385.165 L
368.0557 380.9473 l
f*U
*u
371.3916 380.9473 m
370.8281 380.9473 L
370.8281 383.9414 L
369.8438 383.9414 L
369.8438 384.3613 L
370.5273 384.4092 370.8096 384.4756 370.9775 385.165 c
371.3916 385.165 L
371.3916 380.9473 l
f*U
Uu*u
248.1899 359.9473 m
247.2939 359.9473 L
246.2539 361.5234 L
245.2456 359.9473 L
244.3579 359.9473 L
245.8296 362.0996 L
244.4297 364.1309 L
245.334 364.1309 L
246.3018 362.6592 L
247.27 364.1309 L
248.1338 364.1309 L
246.7178 362.0996 L
248.1899 359.9473 l
f*U
*u
249.938 357.833 m
248.7256 357.833 248.4917 359.123 248.4917 359.999 c
248.4917 360.875 248.7256 362.165 249.938 362.165 c
251.1499 362.165 251.3838 360.875 251.3838 359.999 c
251.3838 359.123 251.1499 357.833 249.938 357.833 c
f1 D
249.938 361.6914 m
249.332 361.6914 249.0557 361.0557 249.0557 359.999 c
249.0557 358.9434 249.332 358.3076 249.938 358.3076 c
250.5439 358.3076 250.8198 358.9434 250.8198 359.999 c
250.8198 361.0557 250.5439 361.6914 249.938 361.6914 c
f*U
*u
0 D
252.3018 360.7949 m
253.1338 360.7949 L
253.1338 360.0117 L
253.1338 358.9229 252.4619 358.7949 252.3018 358.7715 c
252.3018 359.1396 L
252.6377 359.1709 252.7256 359.5713 252.7256 359.9473 c
252.3018 359.9473 L
252.3018 360.7949 l
f*U
*u
259.1899 364.1309 m
259.9658 364.1309 L
259.4775 362.7637 258.9976 361.3955 258.4619 360.0273 c
257.7979 358.3311 257.7256 358.2354 256.8218 358.2354 c
256.7178 358.2354 256.6377 358.2676 256.5259 358.2988 c
256.5259 358.9395 L
256.6138 358.9072 256.7578 358.8672 256.9497 358.8672 c
257.3179 358.8672 257.3579 358.9717 257.6938 359.835 c
256.1416 364.1309 L
256.9419 364.1309 L
258.0537 360.7236 L
258.0698 360.7236 L
259.1899 364.1309 l
f*U
*u
262.208 357.9473 m
261.644 357.9473 L
261.644 360.9414 L
260.6597 360.9414 L
260.6597 361.3613 L
261.3438 361.4092 261.626 361.4756 261.7939 362.165 c
262.208 362.165 L
262.208 357.9473 l
f*U
*u
264.0859 360.7949 m
264.918 360.7949 L
264.918 360.0117 L
264.918 358.9229 264.2456 358.7949 264.0859 358.7715 c
264.0859 359.1396 L
264.4219 359.1709 264.5098 359.5713 264.5098 359.9473 c
264.0859 359.9473 L
264.0859 360.7949 l
f*U
*u
269.022 360.5313 m
271.5898 360.5313 L
271.5898 359.9473 L
268.0859 359.9473 L
268.0859 360.499 L
270.606 363.5469 L
268.2778 363.5469 L
268.2778 364.1309 L
271.5176 364.1309 L
271.5176 363.5557 L
269.022 360.5313 l
f*U
*u
273.5059 357.833 m
272.2939 357.833 272.0601 359.123 272.0601 359.999 c
272.0601 360.875 272.2939 362.165 273.5059 362.165 c
274.7178 362.165 274.9517 360.875 274.9517 359.999 c
274.9517 359.123 274.7178 357.833 273.5059 357.833 c
f1 D
273.5059 361.6914 m
272.8999 361.6914 272.624 361.0557 272.624 359.999 c
272.624 358.9434 272.8999 358.3076 273.5059 358.3076 c
274.1118 358.3076 274.3877 358.9434 274.3877 359.999 c
274.3877 361.0557 274.1118 361.6914 273.5059 361.6914 c
f*U
*u
0 D
226.4063 356.3115 m
225.7261 355.0313 225.3179 354.2637 225.3179 352.3428 c
225.3179 351.0234 225.7739 350.0469 226.4141 348.791 c
225.9419 348.791 L
225.1099 350.0391 224.5659 351.0391 224.5659 352.5352 c
224.5659 353.9434 225.0542 355.0791 225.918 356.3115 C
226.4063 356.3115 l
f*U
*u
229.9341 350.4473 m
229.9341 351.0557 L
229.918 351.0713 L
229.6221 350.583 229.2622 350.3271 228.5898 350.3271 c
227.9741 350.3271 227.23 350.623 227.23 351.623 c
227.23 354.6309 L
227.9341 354.6309 L
227.9341 351.8555 L
227.9341 351.167 228.2861 350.9355 228.7422 350.9355 c
229.6299 350.9355 229.894 351.7197 229.894 352.3271 c
229.894 354.6309 L
230.5981 354.6309 L
230.5981 350.4473 L
229.9341 350.4473 l
f*U
*u
231.8301 351.2949 m
232.6621 351.2949 L
232.6621 350.5117 L
232.6621 349.4229 231.9902 349.2949 231.8301 349.2715 c
231.8301 349.6396 L
232.166 349.6709 232.2539 350.0713 232.2539 350.4473 c
231.8301 350.4473 L
231.8301 351.2949 l
f*U
*u
236.5259 354.6309 m
237.2939 354.6309 L
235.7021 350.4473 L
234.9502 350.4473 L
233.4219 354.6309 L
234.2378 354.6309 L
235.3262 351.2236 L
235.3418 351.2236 L
236.5259 354.6309 l
f*U
*u
237.4141 351.2949 m
238.2461 351.2949 L
238.2461 350.5117 L
238.2461 349.4229 237.5742 349.2949 237.4141 349.2715 c
237.4141 349.6396 L
237.75 349.6709 237.8379 350.0713 237.8379 350.4473 c
237.4141 350.4473 L
237.4141 351.2949 l
f*U
*u
240.9902 350.4473 m
240.2622 350.4473 L
239.0542 354.6309 L
239.8223 354.6309 L
240.6221 351.3438 L
240.6382 351.3438 L
241.4463 354.6309 L
242.23 354.6309 L
243.0459 351.3438 L
243.062 351.3438 L
243.9102 354.6309 L
244.6143 354.6309 L
243.3979 350.4473 L
242.6699 350.4473 L
241.8223 353.6875 L
241.8062 353.6875 L
240.9902 350.4473 l
f*U
*u
244.998 348.791 m
245.6782 350.0713 246.0859 350.8389 246.0859 352.7588 c
246.0859 354.0791 245.6299 355.0557 244.9902 356.3115 c
245.4619 356.3115 L
246.2939 355.0635 246.8379 354.0635 246.8379 352.5674 c
246.8379 351.1592 246.3501 350.0234 245.4858 348.791 C
244.998 348.791 l
f*U
*u
251.7417 352.9834 m
247.6938 352.9834 L
247.6938 353.5674 L
251.7417 353.5674 L
251.7417 352.9834 l
f251.7417 351.3672 m
247.6938 351.3672 L
247.6938 351.9512 L
251.7417 351.9512 L
251.7417 351.3672 l
f*U
*u
254.438 356.3115 m
253.7578 355.0313 253.3501 354.2637 253.3501 352.3428 c
253.3501 351.0234 253.8062 350.0469 254.4458 348.791 c
253.9741 348.791 L
253.1421 350.0391 252.5981 351.0391 252.5981 352.5352 c
252.5981 353.9434 253.0859 355.0791 253.9497 356.3115 C
254.438 356.3115 l
f*U
*u
256.9419 350.2949 m
255.3257 350.2949 255.0137 352.0156 255.0137 353.1836 c
255.0137 354.3516 255.3257 356.0713 256.9419 356.0713 c
258.5576 356.0713 258.8696 354.3516 258.8696 353.1836 c
258.8696 352.0156 258.5576 350.2949 256.9419 350.2949 c
f1 D
256.9419 355.4395 m
256.1338 355.4395 255.7656 354.5908 255.7656 353.1836 c
255.7656 351.7754 256.1338 350.9277 256.9419 350.9277 c
257.75 350.9277 258.1177 351.7754 258.1177 353.1836 c
258.1177 354.5908 257.75 355.4395 256.9419 355.4395 c
f*U
*u
0 D
259.8618 351.2949 m
260.6938 351.2949 L
260.6938 350.5117 L
260.6938 349.4229 260.022 349.2949 259.8618 349.2715 c
259.8618 349.6396 L
260.1978 349.6709 260.2856 350.0713 260.2856 350.4473 c
259.8618 350.4473 L
259.8618 351.2949 l
f*U
*u
264.2617 350.4473 m
263.5098 350.4473 L
263.5098 354.4395 L
262.1978 354.4395 L
262.1978 354.999 L
263.1099 355.0635 263.4858 355.1514 263.71 356.0713 c
264.2617 356.0713 L
264.2617 350.4473 l
f*U
*u
266.5337 351.2949 m
267.3657 351.2949 L
267.3657 350.5117 L
267.3657 349.4229 266.6938 349.2949 266.5337 349.2715 c
266.5337 349.6396 L
266.8701 349.6709 266.958 350.0713 266.958 350.4473 c
266.5337 350.4473 L
266.5337 351.2949 l
f*U
*u
270.2856 350.2949 m
268.6699 350.2949 268.3579 352.0156 268.3579 353.1836 c
268.3579 354.3516 268.6699 356.0713 270.2856 356.0713 c
271.9019 356.0713 272.2139 354.3516 272.2139 353.1836 c
272.2139 352.0156 271.9019 350.2949 270.2856 350.2949 c
f1 D
270.2856 355.4395 m
269.478 355.4395 269.1099 354.5908 269.1099 353.1836 c
269.1099 351.7754 269.478 350.9277 270.2856 350.9277 c
271.0938 350.9277 271.4619 351.7754 271.4619 353.1836 c
271.4619 354.5908 271.0938 355.4395 270.2856 355.4395 c
f*U
*u
0 D
272.79 348.791 m
273.4697 350.0713 273.8779 350.8389 273.8779 352.7588 c
273.8779 354.0791 273.4219 355.0557 272.7817 356.3115 c
273.2539 356.3115 L
274.0859 355.0635 274.6299 354.0635 274.6299 352.5674 c
274.6299 351.1592 274.1421 350.0234 273.2778 348.791 C
272.79 348.791 l
f*U
*u
261.9497 340.0273 m
261.9497 339.707 261.9497 339.4277 261.8696 339.1074 c
261.1738 339.1074 L
261.1978 339.3154 261.27 339.5635 261.27 339.8037 c
261.23 343.1875 L
261.2217 343.6748 261.3979 344.2832 262.2378 344.7471 c
262.4619 344.875 262.71 344.9951 263.2778 344.9072 c
263.7578 344.835 264.1099 344.5234 264.2778 344.3076 c
264.6216 343.8672 264.6699 343.4834 264.6938 343.0508 c
264.71 342.7715 264.6299 342.2432 264.3818 341.7793 c
264.126 341.3076 263.7417 341.0273 263.4858 340.9229 c
263.1499 340.7871 262.8857 340.7637 262.5898 340.8438 c
262.1816 340.9551 262.022 341.1553 261.9497 341.2676 C
261.9497 340.0273 l
f1 D
261.9258 341.8672 m
261.9258 341.6992 262.2778 341.0596 262.958 341.1553 c
263.2617 341.1953 263.4458 341.2988 263.606 341.4834 c
263.79 341.6836 263.9258 342.0117 263.9658 342.3711 c
264.022 342.8594 263.9258 343.2988 263.7256 343.6836 c
263.5659 343.9951 263.2378 344.3877 262.7256 344.4834 c
262.4937 344.5313 262.3101 344.4756 262.1816 344.3633 c
261.9736 344.1709 261.8696 343.9551 261.8779 343.6348 C
261.9258 341.8672 l
f*U
*u
0 D
266.834 338.833 m
265.6221 338.833 265.3877 340.123 265.3877 340.999 c
265.3877 341.875 265.6221 343.165 266.834 343.165 c
268.0459 343.165 268.2798 341.875 268.2798 340.999 c
268.2798 340.123 268.0459 338.833 266.834 338.833 c
f1 D
266.834 342.6914 m
266.228 342.6914 265.9517 342.0557 265.9517 340.999 c
265.9517 339.9434 266.228 339.3076 266.834 339.3076 c
267.4399 339.3076 267.7158 339.9434 267.7158 340.999 c
267.7158 342.0557 267.4399 342.6914 266.834 342.6914 c
f*U
*u
0 D
270.6558 338.9473 m
270.0918 338.9473 L
270.0918 341.9414 L
269.1079 341.9414 L
269.1079 342.3613 L
269.792 342.4092 270.0737 342.4756 270.2417 343.165 c
270.6558 343.165 L
270.6558 338.9473 l
f*U
*u
273.5059 338.833 m
272.2939 338.833 272.0601 340.123 272.0601 340.999 c
272.0601 341.875 272.2939 343.165 273.5059 343.165 c
274.7178 343.165 274.9517 341.875 274.9517 340.999 c
274.9517 340.123 274.7178 338.833 273.5059 338.833 c
f1 D
273.5059 342.6914 m
272.8999 342.6914 272.624 342.0557 272.624 340.999 c
272.624 339.9434 272.8999 339.3076 273.5059 339.3076 c
274.1118 339.3076 274.3877 339.9434 274.3877 340.999 c
274.3877 342.0557 274.1118 342.6914 273.5059 342.6914 c
f*U
Uu*u
0 D
248.5938 428.9473 m
247.6978 428.9473 L
246.6577 430.5234 L
245.6499 428.9473 L
244.7617 428.9473 L
246.2339 431.0991 L
244.834 433.1313 L
245.7378 433.1313 L
246.7056 431.6592 L
247.6738 433.1313 L
248.5376 433.1313 L
247.1216 431.0991 L
248.5938 428.9473 l
f*U
*u
250.3418 426.8335 m
249.1299 426.8335 248.896 428.123 248.896 428.9995 c
248.896 429.8755 249.1299 431.1655 250.3418 431.1655 c
251.5537 431.1655 251.7881 429.8755 251.7881 428.9995 c
251.7881 428.123 251.5537 426.8335 250.3418 426.8335 c
f1 D
250.3418 430.6914 m
249.7358 430.6914 249.46 430.0552 249.46 428.9995 c
249.46 427.9434 249.7358 427.3071 250.3418 427.3071 c
250.9478 427.3071 251.2236 427.9434 251.2236 428.9995 c
251.2236 430.0552 250.9478 430.6914 250.3418 430.6914 c
f*U
*u
0 D
252.7061 429.7954 m
253.5376 429.7954 L
253.5376 429.0112 L
253.5376 427.9233 252.8657 427.7954 252.7061 427.7715 c
252.7061 428.1392 L
253.042 428.1714 253.1299 428.5713 253.1299 428.9473 c
252.7061 428.9473 L
252.7061 429.7954 l
f*U
*u
259.5938 433.1313 m
260.3696 433.1313 L
259.8818 431.7632 259.4019 430.395 258.8657 429.0273 c
258.2017 427.3311 258.1299 427.2354 257.2256 427.2354 c
257.1216 427.2354 257.042 427.2671 256.9297 427.2993 c
256.9297 427.9395 L
257.0176 427.9072 257.1616 427.8672 257.354 427.8672 c
257.7217 427.8672 257.7617 427.9712 258.0977 428.8354 c
256.5459 433.1313 L
257.3457 433.1313 L
258.458 429.7231 L
258.4736 429.7231 L
259.5938 433.1313 l
f*U
*u
262.6118 426.9473 m
262.0479 426.9473 L
262.0479 429.9414 L
261.064 429.9414 L
261.064 430.3613 L
261.748 430.4092 262.0298 430.4751 262.1978 431.1655 c
262.6118 431.1655 L
262.6118 426.9473 l
f*U
*u
264.4897 429.7954 m
265.3218 429.7954 L
265.3218 429.0112 L
265.3218 427.9233 264.6499 427.7954 264.4897 427.7715 c
264.4897 428.1392 L
264.8257 428.1714 264.9136 428.5713 264.9136 428.9473 c
264.4897 428.9473 L
264.4897 429.7954 l
f*U
*u
269.4258 429.5313 m
271.9937 429.5313 L
271.9937 428.9473 L
268.4897 428.9473 L
268.4897 429.499 L
271.0098 432.5474 L
268.6816 432.5474 L
268.6816 433.1313 L
271.9219 433.1313 L
271.9219 432.5552 L
269.4258 429.5313 l
f*U
*u
274.396 426.9473 m
273.832 426.9473 L
273.832 429.9414 L
272.8477 429.9414 L
272.8477 430.3613 L
273.5317 430.4092 273.814 430.4751 273.9819 431.1655 c
274.396 431.1655 L
274.396 426.9473 l
f*U
*u
247.0576 425.311 m
246.3779 424.0313 245.9697 423.2632 245.9697 421.3433 c
245.9697 420.0234 246.4258 419.0474 247.0659 417.7915 c
246.5938 417.7915 L
245.7617 419.0391 245.2178 420.0391 245.2178 421.5352 c
245.2178 422.9434 245.7061 424.0791 246.5698 425.311 C
247.0576 425.311 l
f*U
*u
250.5859 419.4473 m
250.5859 420.0552 L
250.5698 420.0713 L
250.2739 419.5835 249.9136 419.3271 249.2417 419.3271 c
248.626 419.3271 247.8818 419.623 247.8818 420.623 c
247.8818 423.6313 L
248.5859 423.6313 L
248.5859 420.8555 L
248.5859 420.1675 248.9375 419.9351 249.3936 419.9351 c
250.2817 419.9351 250.5459 420.7192 250.5459 421.3271 c
250.5459 423.6313 L
251.2495 423.6313 L
251.2495 419.4473 L
250.5859 419.4473 l
f*U
*u
252.4819 420.2954 m
253.314 420.2954 L
253.314 419.5112 L
253.314 418.4233 252.6416 418.2954 252.4819 418.2715 c
252.4819 418.6392 L
252.8179 418.6714 252.9058 419.0713 252.9058 419.4473 c
252.4819 419.4473 L
252.4819 420.2954 l
f*U
*u
257.1777 423.6313 m
257.9458 423.6313 L
256.3535 419.4473 L
255.6016 419.4473 L
254.0737 423.6313 L
254.8896 423.6313 L
255.9775 420.2231 L
255.9937 420.2231 L
257.1777 423.6313 l
f*U
*u
258.0659 420.2954 m
258.8979 420.2954 L
258.8979 419.5112 L
258.8979 418.4233 258.2261 418.2954 258.0659 418.2715 c
258.0659 418.6392 L
258.4019 418.6714 258.4897 419.0713 258.4897 419.4473 c
258.0659 419.4473 L
258.0659 420.2954 l
f*U
*u
261.6416 419.4473 m
260.9141 419.4473 L
259.7061 423.6313 L
260.4736 423.6313 L
261.2739 420.3433 L
261.29 420.3433 L
262.0977 423.6313 L
262.8818 423.6313 L
263.6978 420.3433 L
263.7139 420.3433 L
264.562 423.6313 L
265.2656 423.6313 L
264.0498 419.4473 L
263.3218 419.4473 L
262.4736 422.687 L
262.458 422.687 L
261.6416 419.4473 l
f*U
*u
265.6499 417.7915 m
266.3296 419.0713 266.7378 419.8394 266.7378 421.7593 c
266.7378 423.0791 266.2817 424.0552 265.6416 425.311 c
266.1138 425.311 L
266.9458 424.063 267.4897 423.0635 267.4897 421.5674 c
267.4897 420.1592 267.002 419.0234 266.1377 417.7915 C
265.6499 417.7915 l
f*U
*u
272.3936 421.9834 m
268.3457 421.9834 L
268.3457 422.5674 L
272.3936 422.5674 L
272.3936 421.9834 l
f272.3936 420.3672 m
268.3457 420.3672 L
268.3457 420.9512 L
272.3936 420.9512 L
272.3936 420.3672 l
f*U
*u
275.0898 425.311 m
274.4097 424.0313 274.0015 423.2632 274.0015 421.3433 c
274.0015 420.0234 274.4575 419.0474 275.0977 417.7915 c
274.6255 417.7915 L
273.7935 419.0391 273.2495 420.0391 273.2495 421.5352 c
273.2495 422.9434 273.7378 424.0791 274.6016 425.311 C
275.0898 425.311 l
f*U
*u
277.5938 419.2954 m
275.9775 419.2954 275.6655 421.0151 275.6655 422.1831 c
275.6655 423.3511 275.9775 425.0713 277.5938 425.0713 c
279.2095 425.0713 279.5215 423.3511 279.5215 422.1831 c
279.5215 421.0151 279.2095 419.2954 277.5938 419.2954 c
f1 D
277.5938 424.4395 m
276.7856 424.4395 276.4175 423.5913 276.4175 422.1831 c
276.4175 420.7754 276.7856 419.9272 277.5938 419.9272 c
278.4014 419.9272 278.7695 420.7754 278.7695 422.1831 c
278.7695 423.5913 278.4014 424.4395 277.5938 424.4395 c
f*U
*u
0 D
280.5137 420.2954 m
281.3457 420.2954 L
281.3457 419.5112 L
281.3457 418.4233 280.6738 418.2954 280.5137 418.2715 c
280.5137 418.6392 L
280.8496 418.6714 280.9375 419.0713 280.9375 419.4473 c
280.5137 419.4473 L
280.5137 420.2954 l
f*U
*u
284.9136 419.4473 m
284.1616 419.4473 L
284.1616 423.4395 L
282.8496 423.4395 L
282.8496 423.999 L
283.7617 424.063 284.1377 424.1514 284.3618 425.0713 c
284.9136 425.0713 L
284.9136 419.4473 l
f*U
*u
287.1855 420.2954 m
288.0176 420.2954 L
288.0176 419.5112 L
288.0176 418.4233 287.3457 418.2954 287.1855 418.2715 c
287.1855 418.6392 L
287.5215 418.6714 287.6094 419.0713 287.6094 419.4473 c
287.1855 419.4473 L
287.1855 420.2954 l
f*U
*u
291.5854 419.4473 m
290.8335 419.4473 L
290.8335 423.4395 L
289.5215 423.4395 L
289.5215 423.999 L
290.4336 424.063 290.8096 424.1514 291.0337 425.0713 c
291.5854 425.0713 L
291.5854 419.4473 l
f*U
*u
293.4414 417.7915 m
294.1216 419.0713 294.5298 419.8394 294.5298 421.7593 c
294.5298 423.0791 294.0737 424.0552 293.4336 425.311 c
293.9058 425.311 L
294.7378 424.063 295.2817 423.0635 295.2817 421.5674 c
295.2817 420.1592 294.7935 419.0234 293.9297 417.7915 C
293.4414 417.7915 l
f*U
*u
245.8496 409.0273 m
245.8496 408.7075 245.8496 408.4272 245.77 408.1074 c
245.0737 408.1074 L
245.0977 408.3154 245.1699 408.5635 245.1699 408.8032 c
245.1299 412.187 L
245.1216 412.6753 245.2979 413.2832 246.1377 413.7471 c
246.3618 413.875 246.6099 413.9951 247.1777 413.9072 c
247.6577 413.8354 248.0098 413.5234 248.1777 413.3071 c
248.522 412.8672 248.5698 412.4834 248.5938 412.0513 c
248.6099 411.7715 248.5298 411.2432 248.2817 410.7793 c
248.0259 410.3071 247.6416 410.0273 247.3857 409.9233 c
247.0498 409.7871 246.7856 409.7632 246.4897 409.8433 c
246.082 409.9551 245.9219 410.1553 245.8496 410.2671 C
245.8496 409.0273 l
f1 D
245.8257 410.8672 m
245.8257 410.6992 246.1777 410.0591 246.8579 410.1553 c
247.1616 410.1953 247.3457 410.2993 247.5059 410.4834 c
247.6899 410.6831 247.8257 411.0112 247.8657 411.3711 c
247.9219 411.8594 247.8257 412.2993 247.626 412.6831 c
247.4658 412.9951 247.1377 413.3872 246.626 413.4834 c
246.3936 413.5313 246.21 413.4751 246.082 413.3633 c
245.874 413.1714 245.77 412.9551 245.7778 412.6353 C
245.8257 410.8672 l
f*U
*u
0 D
250.7339 407.8335 m
249.522 407.8335 249.2876 409.123 249.2876 409.9995 c
249.2876 410.8755 249.522 412.1655 250.7339 412.1655 c
251.9458 412.1655 252.1797 410.8755 252.1797 409.9995 c
252.1797 409.123 251.9458 407.8335 250.7339 407.8335 c
f1 D
250.7339 411.6914 m
250.1279 411.6914 249.8516 411.0552 249.8516 409.9995 c
249.8516 408.9434 250.1279 408.3071 250.7339 408.3071 c
251.3398 408.3071 251.6157 408.9434 251.6157 409.9995 c
251.6157 411.0552 251.3398 411.6914 250.7339 411.6914 c
f*U
*u
0 D
254.5557 407.9473 m
253.9917 407.9473 L
253.9917 410.9414 L
253.0078 410.9414 L
253.0078 411.3613 L
253.6919 411.4092 253.9736 411.4751 254.1416 412.1655 c
254.5557 412.1655 L
254.5557 407.9473 l
f*U
*u
257.8916 407.9473 m
257.3276 407.9473 L
257.3276 410.9414 L
256.3438 410.9414 L
256.3438 411.3613 L
257.0278 411.4092 257.3096 411.4751 257.478 412.1655 c
257.8916 412.1655 L
257.8916 407.9473 l
f*U
Uu*u
181.6895 394.9473 m
180.7935 394.9473 L
179.7534 396.5234 L
178.7451 394.9473 L
177.8574 394.9473 L
179.3291 397.0991 L
177.9292 399.1313 L
178.8335 399.1313 L
179.8013 397.6592 L
180.7695 399.1313 L
181.6333 399.1313 L
180.2173 397.0991 L
181.6895 394.9473 l
f*U
*u
183.4375 392.833 m
182.2256 392.833 181.9912 394.123 181.9912 394.999 c
181.9912 395.8755 182.2256 397.1655 183.4375 397.1655 c
184.6494 397.1655 184.8833 395.8755 184.8833 394.999 c
184.8833 394.123 184.6494 392.833 183.4375 392.833 c
f1 D
183.4375 396.6914 m
182.8315 396.6914 182.5552 396.0552 182.5552 394.999 c
182.5552 393.9434 182.8315 393.3076 183.4375 393.3076 c
184.0435 393.3076 184.3193 393.9434 184.3193 394.999 c
184.3193 396.0552 184.0435 396.6914 183.4375 396.6914 c
f*U
*u
0 D
185.8013 395.7954 m
186.6333 395.7954 L
186.6333 395.0112 L
186.6333 393.9229 185.9614 393.7949 185.8013 393.7715 c
185.8013 394.1396 L
186.1372 394.1709 186.2251 394.5713 186.2251 394.9473 c
185.8013 394.9473 L
185.8013 395.7954 l
f*U
*u
192.6895 399.1313 m
193.4653 399.1313 L
192.9775 397.7632 192.4971 396.395 191.9614 395.0273 c
191.2974 393.3311 191.2251 393.2354 190.3213 393.2354 c
190.2173 393.2354 190.1372 393.2676 190.0254 393.2988 c
190.0254 393.9395 L
190.1133 393.9072 190.2573 393.8672 190.4492 393.8672 c
190.8174 393.8672 190.8574 393.9717 191.1934 394.835 c
189.6411 399.1313 L
190.4414 399.1313 L
191.5532 395.7231 L
191.5693 395.7231 L
192.6895 399.1313 l
f*U
*u
195.2212 392.833 m
194.0093 392.833 193.7754 394.123 193.7754 394.999 c
193.7754 395.8755 194.0093 397.1655 195.2212 397.1655 c
196.4336 397.1655 196.6675 395.8755 196.6675 394.999 c
196.6675 394.123 196.4336 392.833 195.2212 392.833 c
f1 D
195.2212 396.6914 m
194.6152 396.6914 194.3394 396.0552 194.3394 394.999 c
194.3394 393.9434 194.6152 393.3076 195.2212 393.3076 c
195.8271 393.3076 196.1035 393.9434 196.1035 394.999 c
196.1035 396.0552 195.8271 396.6914 195.2212 396.6914 c
f*U
*u
0 D
197.5854 395.7954 m
198.4175 395.7954 L
198.4175 395.0112 L
198.4175 393.9229 197.7451 393.7949 197.5854 393.7715 c
197.5854 394.1396 L
197.9214 394.1709 198.0093 394.5713 198.0093 394.9473 c
197.5854 394.9473 L
197.5854 395.7954 l
f*U
*u
202.5215 395.5313 m
205.0894 395.5313 L
205.0894 394.9473 L
201.5854 394.9473 L
201.5854 395.499 L
204.1055 398.5474 L
201.7773 398.5474 L
201.7773 399.1313 L
205.0171 399.1313 L
205.0171 398.5552 L
202.5215 395.5313 l
f*U
*u
207.4912 392.9473 m
206.9272 392.9473 L
206.9272 395.9414 L
205.9434 395.9414 L
205.9434 396.3613 L
206.6274 396.4092 206.9092 396.4751 207.0771 397.1655 c
207.4912 397.1655 L
207.4912 392.9473 l
f*U
*u
159.9058 391.3115 m
159.2256 390.0313 158.8174 389.2637 158.8174 387.3428 c
158.8174 386.0234 159.2734 385.0469 159.9136 383.791 c
159.4414 383.791 L
158.6094 385.0391 158.0654 386.0391 158.0654 387.5352 c
158.0654 388.9434 158.5537 390.0791 159.4175 391.3115 C
159.9058 391.3115 l
f*U
*u
163.4336 385.4473 m
163.4336 386.0557 L
163.4175 386.0713 L
163.1216 385.583 162.7617 385.3271 162.0894 385.3271 c
161.4736 385.3271 160.7295 385.623 160.7295 386.623 c
160.7295 389.6309 L
161.4336 389.6309 L
161.4336 386.8555 L
161.4336 386.167 161.7856 385.9355 162.2417 385.9355 c
163.1294 385.9355 163.3936 386.7197 163.3936 387.3271 c
163.3936 389.6309 L
164.0977 389.6309 L
164.0977 385.4473 L
163.4336 385.4473 l
f*U
*u
165.3296 386.2949 m
166.1616 386.2949 L
166.1616 385.5117 L
166.1616 384.4229 165.4897 384.2949 165.3296 384.2715 c
165.3296 384.6396 L
165.6655 384.6709 165.7534 385.0713 165.7534 385.4473 c
165.3296 385.4473 L
165.3296 386.2949 l
f*U
*u
170.0254 389.6309 m
170.7935 389.6309 L
169.2017 385.4473 L
168.4497 385.4473 L
166.9214 389.6309 L
167.7373 389.6309 L
168.8257 386.2236 L
168.8413 386.2236 L
170.0254 389.6309 l
f*U
*u
170.9136 386.2949 m
171.7456 386.2949 L
171.7456 385.5117 L
171.7456 384.4229 171.0737 384.2949 170.9136 384.2715 c
170.9136 384.6396 L
171.2495 384.6709 171.3374 385.0713 171.3374 385.4473 c
170.9136 385.4473 L
170.9136 386.2949 l
f*U
*u
174.4897 385.4473 m
173.7617 385.4473 L
172.5537 389.6309 L
173.3218 389.6309 L
174.1216 386.3438 L
174.1377 386.3438 L
174.9458 389.6309 L
175.7295 389.6309 L
176.5454 386.3438 L
176.5615 386.3438 L
177.4097 389.6309 L
178.1138 389.6309 L
176.8975 385.4473 L
176.1694 385.4473 L
175.3218 388.6875 L
175.3057 388.6875 L
174.4897 385.4473 l
f*U
*u
178.4976 383.791 m
179.1777 385.0713 179.5854 385.8389 179.5854 387.7588 c
179.5854 389.0791 179.1294 390.0557 178.4897 391.3115 c
178.9614 391.3115 L
179.7935 390.0635 180.3374 389.0635 180.3374 387.5674 c
180.3374 386.1592 179.8496 385.0234 178.9854 383.791 C
178.4976 383.791 l
f*U
*u
185.2412 387.9834 m
181.1934 387.9834 L
181.1934 388.5674 L
185.2412 388.5674 L
185.2412 387.9834 l
f185.2412 386.3672 m
181.1934 386.3672 L
181.1934 386.9512 L
185.2412 386.9512 L
185.2412 386.3672 l
f*U
*u
187.9375 391.3115 m
187.2573 390.0313 186.8496 389.2637 186.8496 387.3428 c
186.8496 386.0234 187.3057 385.0469 187.9453 383.791 c
187.4736 383.791 L
186.6416 385.0391 186.0977 386.0391 186.0977 387.5352 c
186.0977 388.9434 186.5854 390.0791 187.4492 391.3115 C
187.9375 391.3115 l
f*U
*u
190.4414 385.2949 m
188.8252 385.2949 188.5132 387.0156 188.5132 388.1836 c
188.5132 389.3516 188.8252 391.0713 190.4414 391.0713 c
192.0571 391.0713 192.3691 389.3516 192.3691 388.1836 c
192.3691 387.0156 192.0571 385.2949 190.4414 385.2949 c
f1 D
190.4414 390.4395 m
189.6333 390.4395 189.2656 389.5908 189.2656 388.1836 c
189.2656 386.7754 189.6333 385.9277 190.4414 385.9277 c
191.2495 385.9277 191.6172 386.7754 191.6172 388.1836 c
191.6172 389.5908 191.2495 390.4395 190.4414 390.4395 c
f*U
*u
0 D
193.3613 386.2949 m
194.1934 386.2949 L
194.1934 385.5117 L
194.1934 384.4229 193.5215 384.2949 193.3613 384.2715 c
193.3613 384.6396 L
193.6973 384.6709 193.7852 385.0713 193.7852 385.4473 c
193.3613 385.4473 L
193.3613 386.2949 l
f*U
*u
197.1133 385.2949 m
195.4976 385.2949 195.1855 387.0156 195.1855 388.1836 c
195.1855 389.3516 195.4976 391.0713 197.1133 391.0713 c
198.7295 391.0713 199.0415 389.3516 199.0415 388.1836 c
199.0415 387.0156 198.7295 385.2949 197.1133 385.2949 c
f1 D
197.1133 390.4395 m
196.3052 390.4395 195.9375 389.5908 195.9375 388.1836 c
195.9375 386.7754 196.3052 385.9277 197.1133 385.9277 c
197.9214 385.9277 198.2896 386.7754 198.2896 388.1836 c
198.2896 389.5908 197.9214 390.4395 197.1133 390.4395 c
f*U
*u
0 D
200.0332 386.2949 m
200.8652 386.2949 L
200.8652 385.5117 L
200.8652 384.4229 200.1934 384.2949 200.0332 384.2715 c
200.0332 384.6396 L
200.3691 384.6709 200.4575 385.0713 200.4575 385.4473 c
200.0332 385.4473 L
200.0332 386.2949 l
f*U
*u
204.4336 385.4473 m
203.6812 385.4473 L
203.6812 389.4395 L
202.3691 389.4395 L
202.3691 389.999 L
203.2813 390.0635 203.6572 390.1514 203.8813 391.0713 c
204.4336 391.0713 L
204.4336 385.4473 l
f*U
*u
206.2896 383.791 m
206.9692 385.0713 207.3774 385.8389 207.3774 387.7588 c
207.3774 389.0791 206.9214 390.0557 206.2813 391.3115 c
206.7534 391.3115 L
207.5854 390.0635 208.1294 389.0635 208.1294 387.5674 c
208.1294 386.1592 207.6416 385.0234 206.7773 383.791 C
206.2896 383.791 l
f*U
*u
195.4492 375.0273 m
195.4492 374.707 195.4492 374.4277 195.3691 374.1074 c
194.6733 374.1074 L
194.6973 374.3154 194.7695 374.5635 194.7695 374.8037 c
194.7295 378.1875 L
194.7212 378.6748 194.8975 379.2832 195.7373 379.7471 c
195.9614 379.875 196.2095 379.9951 196.7773 379.9072 c
197.2573 379.835 197.6094 379.5234 197.7773 379.3076 c
198.1211 378.8672 198.1694 378.4834 198.1934 378.0508 c
198.2095 377.7715 198.1294 377.2432 197.8813 376.7793 c
197.6255 376.3076 197.2412 376.0273 196.9854 375.9229 c
196.6494 375.7871 196.3853 375.7637 196.0894 375.8438 c
195.6812 375.9551 195.5215 376.1553 195.4492 376.2676 C
195.4492 375.0273 l
f1 D
195.4253 376.8672 m
195.4253 376.6992 195.7773 376.0596 196.4575 376.1553 c
196.7612 376.1953 196.9453 376.2988 197.1055 376.4834 c
197.2896 376.6836 197.4253 377.0117 197.4653 377.3711 c
197.5215 377.8594 197.4253 378.2988 197.2251 378.6836 c
197.0654 378.9951 196.7373 379.3877 196.2256 379.4834 c
195.9932 379.5313 195.8096 379.4756 195.6812 379.3633 c
195.4731 379.1709 195.3691 378.9551 195.3774 378.6348 C
195.4253 376.8672 l
f*U
*u
0 D
200.3335 373.833 m
199.1211 373.833 198.8872 375.123 198.8872 375.999 c
198.8872 376.875 199.1211 378.165 200.3335 378.165 c
201.5454 378.165 201.7793 376.875 201.7793 375.999 c
201.7793 375.123 201.5454 373.833 200.3335 373.833 c
f1 D
200.3335 377.6914 m
199.7275 377.6914 199.4512 377.0557 199.4512 375.999 c
199.4512 374.9434 199.7275 374.3076 200.3335 374.3076 c
200.9395 374.3076 201.2153 374.9434 201.2153 375.999 c
201.2153 377.0557 200.9395 377.6914 200.3335 377.6914 c
f*U
*u
0 D
203.6694 373.833 m
202.4575 373.833 202.2231 375.123 202.2231 375.999 c
202.2231 376.875 202.4575 378.165 203.6694 378.165 c
204.8813 378.165 205.1152 376.875 205.1152 375.999 c
205.1152 375.123 204.8813 373.833 203.6694 373.833 c
f1 D
203.6694 377.6914 m
203.0635 377.6914 202.7871 377.0557 202.7871 375.999 c
202.7871 374.9434 203.0635 374.3076 203.6694 374.3076 c
204.2754 374.3076 204.5513 374.9434 204.5513 375.999 c
204.5513 377.0557 204.2754 377.6914 203.6694 377.6914 c
f*U
*u
0 D
207.4912 373.9473 m
206.9272 373.9473 L
206.9272 376.9414 L
205.9434 376.9414 L
205.9434 377.3613 L
206.6274 377.4092 206.9092 377.4756 207.0771 378.165 c
207.4912 378.165 L
207.4912 373.9473 l
f*U
U1 Ap
0 R
0 G
0.5 w423.5 244 m
136.5 244 L
136.5 440.5 L
423.5 440.5 L
423.5 244 L
sLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
