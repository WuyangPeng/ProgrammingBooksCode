<html>

<head>
<title>Figure</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<script language="JavaScript">
  	var posi=0,posn=0;
	var nums=new Array(
		2,4,3,1,4,8,2,1,1,2,1,2,1,2,3,2,3,1,6,1,2,1,3,2,1,4,1,4,1,2,1,7,4,5,4,3,1,3,9,4,3,4,2,1,7,3,5,3
		);
	var images=new Array(
		"02_02","04_02","05_39","05_50","05_52","05_53","05_55","05_61","06_28",
		"06_36","06_37","06_38","06_40","06_41","07_05","07_06","07_09","07_10","07_11","07_20","07_21","07_23","07_24",
		"07_25","08_13","08_16","10_01","10_03","10_04","10_05","10_06","10_07","10_08","11_07","11_08",
		"11_10","11_12","12_01","12_06","13_02","13_08","13_17","13_21","16_06","19_05","19_07",
		"19_12","19_24"
		);
	var texts=new Array(
		"An example of an implicit function modelling system. (1) An object (based on famous Salvador Dali painting); (2) Point generators - the radius of each sphere is the influence of each generator. (Courtesy of Agata Opalach)",
		"Building a simple landscape and car track. (1) A height field; (2) Ground texture; (3) Vertex colour texture; (4) A view of the rendered landscape.",
		"FFD applied to a polygon mesh object. (1) Wireframe of the object; (2) The object rendered with trivariate patch grid shown as semi-transparent gray boxes; (3) moving the control points in the patch causes the object model to deform in an appropriate manner.",
		"Parametric patch rendering at different levels of uniform subdivision (128, 512, 2048 and 8192 polygons). (Courtesy of Steve Maddock)",
		"Quake3 level rendered showing only lightmaps. (1) Low LOD, Shaded; (2) High LOD, Shaded; (3) Low LOD, Wireframe; (4) High LOD; Wireframe.",
		"Rendered imagery for uniform subdivision. (1)/(2),(3)/(4) Two levels of uniform subdivision (Wireframe/Textured); (5)/(4),(7)/(8) Two levels of non-uniform subdivision.",
		"No subdivision in the cross-section. The arch is completely flat. Despite this when viewed from the front it still looks curved.",
		"Three objects (shown as solid rendered) after three levels of butterfly subdivision.",
		"The 'traditional' way of illustrating Phong shading. Ka and Kd are constant throughout Ks is increasing from left to right and the exponent is increasing from top to bottom. The model attempts to increase 'shininess' by increasing the exponent. This make the extent of the specular highlight smaller, which could also be interpreted as the reflection of a light source of varying size. (The light is a point source)",
		"An office scene, together with a wireframe visualization, that has been shaded using the constant ambient term only.",
		"The same scene using flat shading. Flat shading shows the polygonal nature of the surfaces due to discontinuities in intensity.",
		"Main defects in Gouraud interpolation. (1) Colour image. The two defects in this image (described in detail in the text) are: Mach banding and the interpolation artefact on the back wall; (2) New wireframe triangulation necessary to eliminate the interpolation artefact.",
		"The same scene using Phong shading. A glaring defect in Phong interpolation is demonstrated in this figure. Here the reflected light from the wall light and the image of the light have become separated due to the nature of the interpolation.",
		"Stylised Rendering - using a colour LUT/one-dimensional texture map to imitate cartoon style rendering. (Car model created by Henrique Vidinha)",
		"Examples of two-part texture mapping with a solid of revolution. The intermediate surfaces are: (1) a plane; (2) a cylinder; (3) a sphere.",
		"Interactively tuning a texture mapping. (1) Polygon mesh superimposed on mapped object; (2) Interaction can be achieved by picking and dragging vertices on an orthographic projection.",
		"Agglomerating part maps into a single texture map. (1) the single map; (2)/(3) Two views of the object. (Texture map created by Marina Morato and model created by Henrique Vidinha)",
		"Recursive teapot. (Courtesy of Steve Maddock)",
		"Bump mapping. (1) a bump mapped object; (2) the bump map; (3) a bump mapped object from a procedurally generated height field; (4) combining bump and colour mapping; (5) the bump map; (6) the colour map.",
		"Imitating marble - the classic example of a three-dimensional procedural texture.",
		"Modelling and simulating flame using a turbulence function. (1) unturbulated flame; (2) turbulated flame.",
		"The office scene with 'traditional' two-dimensional texture.",
		"The same scene with shadow and environment mapping (the teapot) added. (1) the scene; (2) the shadow map; (3) the environment map.",
		"This is a comparison between generating reflections. (1) using environment mapping; (2) using ray tracing.",
		"Mip-map used in Figure 7.10. (Courtesy of Steve Maddock)",
		"A set of comparison images showing the increase in quality available from mip-mapping. (1) uses no filtering; (2) uses simple neighbourhood filtering where the four closest pixels are linearly interpolated to give the final value; (3) mip-mapping with a single map; (4) mip-mapping by linearly interpolating between two maps (tri-linear interpolation).",
		"A frame rendered using a light map derived from radiosity solution. The original solution took approximately 1 hour to calculate. (Courtesy of Mark Eastlick)",
		"Partially updating light maps. A door opening sequence shows static objects - behind the door - being appropriately re-lit as the door opens.",
		"A moving light illuminates a nearby static object.",
		"A spherical fog object implemented by finding those polygons enclosed by the sphere then finding if the fog map pixels from those polygons to the camera intersects the fog sphere. (1) Vieweing the fog sphere; (2) Vieweing from inside the fog sphere",
		"The same technique as Figure 10.5 but this time the fog object is a box.",
		"Showing the separate components in an image. (1) texture map applied with no filtering; (2) texture applied with mip-map filtering; (3) light map with no filtering; (4) light map with linear filtering; (5) mip-mapped filtered texture map and filtered light map multiplied; (6) fog map with linear filtering; (7) mip-mapped filtered texture map with linear filtered light map and fog map multiplied.",
		"The different atmospheres engendered by using different options for dynamic objects. (1) scene using ambient light only for dynamic object; (2) scene using Gouraud shading for dynamic object; (3) ambient light for dynamic object together with a contribution from the dynamic (missile) object; (4) Gouraud shading for the dynamic object together with the missile contribuition.",
		"Shadows and static objects. Shadows for static objects are pre-calculated as part of the light map. (1) The light with the shadow calculation applied; (2) as the previous image but this time texture filtering is applied; (3) shows the texture map applied; (4) the texture map blended with the image in 1; (5) the texture map blended with the image in 2.",
		"Comparing texture filtered shadows with explicitly generated soft shadows. (1) No soft shadows, no texture filtering; (2) No soft shadows, texture filtering; (3) Soft shadows, no texture filtering; (4) Soft shadows, texture filtering.",
		"Showing the visual discrepancies of different options for fast shadow generation for moving objects. (1) Using Zequal produces cropping and Z-buffer artefacts; (2) Discrepancies in 1 are partially alleviated by 'floating' the shadow polygon above the hit surface - cropping still occurs. (3) Z-buffer comparisons are avoided by using a ray intersect between the camera and the hit surface.",
		"A shadow calculated by firing a ray from the light source through each vertex of five bounding boxes. Note that because the 5 bounding boxes are processed separately they will generate shadow polygons that may separate and overlap depending on the nature of the receiving surface.",
		"Showing a simple multi-pass technique for planar reflections. (1) the stencil mask for the mirror; (2) the scene rendered 'into' the mirror; (3) the scene rendered and the component from 2 added.",
		"A simple multi-texture effect - adding 'grain' to texture. (1) shows a simple detail map made up of a random dark pattern on a white background; (2) shows a scene using conventional texture - no detail phase added; (3) shows the detail only added to the previous image; (4) shows the previous image using tri-linear filtering. Compared to the previous image we can see that for deep mip-map levels the default turns to almost solid white (as we would expect); (5) shows the scene with detail added and should be compared with 2; (6)/(8) two views without detail textures; (7)/(9) the same scenes with detail added.",
		"An example of manual modelling of a dynamic character. (1) Wireframe view; (2)/(3)/(4) Three frames from a running sequence. (Courtesy of Conseqüência Animação/ZNP, www.consequencia.com)",
		"Showing the effect of using equal parametric intervals in conjunction with a pursuit strategy. (1) a multi-segment Bézier curve shown superimposed on a track; (2) the grey object is travelling at uniform velocity in parametric space equal intervals make it speed up and slow down (as can be seen from the unequal spacing between the grey spheres). The pursuit strategy then causes the car to overshoot.",
		"Four frames in a particle explosion. This is a fairly standard implementation of a particle system based on a single emitter.",
		"Simple characterization using an articulated structure - the flamboyant gait was animated using forward kinematics.",
		"Typical motion of the simple car model shown as superimposed frames.",
		"A dynamic billboard built from two orthogonal planes. (1) build a 1/2 cross-section; (2) construct a full cross-section (mirror); (3) select a row from the previous image and rotate to construct the other cross-section; (4) two orthogonal cross-sections shown in perspective; (5) three emplacements of the billboard - the axis of the long cross-section is aligned with the view vector; (6) the same image viewed from the camera; (7) the billboards in action. (Created by Marcos Bezerra)",
		"The ubiquitous lens flare effect (light halos). (1) no halos; (2) lights with halo billboards; (3) halo texture.",
		"(1) A simple scene; (2) The corresponding Z-buffer image; (3) Artefacts due to translation (only) in this case are holes (cyan) caused by missing information and image folding; (4) Artefacts due to rotation (only) are holes caused by increasing the projected area of surfaces (note how these form coherent patterns); (5) Artefacts caused by both rotation and translation.",
		"QuickTime® VR system. (1) Overlapping frames from a rotating camera; (2) Stitched into a cylindrical panoramic image; (3) A section of which is warped into a planar polygon. (Courtesy of Guy Brown)"
		 );

	function changeimage(dir)
	{
		switch(dir)
		{
			case -2:
				if (location.search!="")
				{
					for (var i=0;i<images.length;i++)
					{
						if (images[i]==location.search.substring(1))
						{
							posi=i;
							posn=0;
							break;
						}
					}
				}
				else
				{
					posi=0;
					posn=0;
				}
				break;

			case -1:
				posi=0;
				posn=0;
				break;

			case 0:
				if (posi==0)
					posi=images.length-1;
				else
					posi--;
				posn=0;
				break;

			case 1:
				if (posi==images.length-1)
					posi=0;
				else
					posi++;
				posn=0;
				break;

			case 2:
				if (posn==0)
					posn=nums[posi]-1;
				else
					posn--;
				break;

			case 3:
				if (posn==nums[posi]-1)
					posn=0;
				else
					posn++;
				break;
		}
		if (nums[posi]==1)
		   document.all.imagem.src="Fig"+images[posi]+".JPG";
		else 
		{
			var str=String.fromCharCode(posn+97);
			document.all.imagem.src="Fig"+images[posi]+str+".JPG";
			}
		text.innerHTML =
			"<font face='Arial' size='3'><b>Figure "+images[posi].slice(0,2)+"."+images[posi].slice(3,5)+" ("+(posn+1)+"/"+nums[posi]+")</b></font> " + 
			"<font face='Arial' size='3'><a href='javascript:changeimage(0);' onClick='return true;'><b>|<</b></a> | <a href='javascript:changeimage(2);' onClick='return true;'><b><<</b></a> | <a href='javascript:changeimage(3);' onClick='return true;'><b>>></b></a> | <a href='javascript:changeimage(1);' onClick='return true;'><b>>|</b></a></font><br>" +
			"<font face='Arial' size='2'><br>"+texts[posi]+"</font>";
		}
</script>
<base target="_self">
</head>

<body onload="javascript:changeimage(-2);">
<p id="text">
</p>
<p><img name="imagem" border=2></p>
</body>
</html>
