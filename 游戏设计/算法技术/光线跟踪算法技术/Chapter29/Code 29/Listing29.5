RGBColorSV_Matte::shade(ShadeRec& sr) {	Vector3D 	wo 			= -sr.ray.d;	RGBColor 	L 			= ambient_brdf->rho(sr, wo) * sr.w.ambient_ptr->L(sr);	int 		num_lights 	= sr.w.lights.size();					for (int j = 0; j < num_lights; j++) {		Light* light_ptr = sr.w.lights[j];		Vector3D wi = light_ptr->compute_direction(sr);		wi.normalize();		float ndotwi = sr.normal * wi;		float ndotwo = sr.normal * wo;				if (ndotwi > 0.0 && ndotwo > 0.0) {			bool in_shadow = false;					if (sr.w.lights[j]->casts_shadows()) {				Ray shadow_ray(sr.hitPoint, wi);				in_shadow = light_ptr->in_shadow(shadow_ray, sr.w.objects);			}					if (!in_shadow)				L += diffuse_brdf->f(sr, wo, wi) * light_ptr->L(sr) * light_ptr->G(sr) * ndotwi;		}	}			return (L);}