class SV_Lambertian: public BRDF {	public:			// constructors, etc ...			virtual RGBColor		rho(const ShadeRec& sr, const Vector3D& wo) const;			virtual RGBColor		f(const ShadeRec& sr, const Vector3D& wo, const Vector3D& wi) const;		virtual RGBColor		sample_f(const ShadeRec& sr, const Vector3D& wo, const Vector3D& wi) const;		private:			float		kd;		Texture* 	cd;};	RGBColorSV_Lambertian::rho(const ShadeRec& sr, const Vector3D& wo) const {	return (kd * cd->get_color(sr));}	RGBColorSV_Lambertian::f(const ShadeRec& sr, const Vector3D& wo, const Vector3D& wi) const {	return (kd * cd->get_color(sr) * invPI);}