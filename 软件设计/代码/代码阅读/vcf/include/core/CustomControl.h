/**
*Copyright (c) 2000-2001, Jim Crafton
*All rights reserved.
*Redistribution and use in source and binary forms, with or without
*modification, are permitted provided that the following conditions
*are met:
*	Redistributions of source code must retain the above copyright
*	notice, this list of conditions and the following disclaimer.
*
*	Redistributions in binary form must reproduce the above copyright
*	notice, this list of conditions and the following disclaimer in 
*	the documentation and/or other materials provided with the distribution.
*
*THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
*AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
*A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS
*OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
*EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
*PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
*PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
*LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
*NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
*SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*NB: This software will not save the world.
*/

/* Generated by Together */


#ifndef CUSTOMCONTROL_H
#define CUSTOMCONTROL_H




namespace VCF{

class CustomControlPeer;

#define CUSTOMCONTROL_CLASSID			"ED88C0A4-26AB-11d4-B539-00C04F0196DA"

class APPKIT_API CustomControl : public Control {
public:
	BEGIN_CLASSINFO(CustomControl, "VCF::CustomControl", "VCF::Control", CUSTOMCONTROL_CLASSID )
	END_CLASSINFO(CustomControl)

	CustomControl();
	
	CustomControl( const bool& useHeavyweightPeer );

	virtual ~CustomControl();

	virtual void paint(GraphicsContext * context);

	void init();

	virtual bool isLightWeight();

	/**
	*does this control allow the background of it's parent to show through ?
	*Currently only applicable to lightweight controls
	*/
	bool isTransparent();
	/**
	*sets whether or not the controls paints a background and covers it's parent
	*/
	void setTransparent( const bool& transparent );

private:
    CustomControlPeer * m_customControlPeer;     
	bool m_isLightweight;	
	bool m_isTransparent;
};

};

#endif //CUSTOMCONTROL_H