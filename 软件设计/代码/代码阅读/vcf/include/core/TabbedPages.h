/**
*Copyright (c) 2000-2001, Jim Crafton
*All rights reserved.
*Redistribution and use in source and binary forms, with or without
*modification, are permitted provided that the following conditions
*are met:
*	Redistributions of source code must retain the above copyright
*	notice, this list of conditions and the following disclaimer.
*
*	Redistributions in binary form must reproduce the above copyright
*	notice, this list of conditions and the following disclaimer in 
*	the documentation and/or other materials provided with the distribution.
*
*THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
*AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
*A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS
*OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
*EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
*PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
*PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
*LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
*NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
*SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*NB: This software will not save the world.
*/

/* Generated by Together */

#ifndef TABBEDPAGES_H
#define TABBEDPAGES_H


namespace VCF{

#define TABBEDPAGES_CLASSID		"4A9D66D6-3B26-11d4-B54C-00C04F0196DA"

class APPKIT_API TabbedPages : public CustomControl, public AbstractContainer{
public:
	BEGIN_CLASSINFO(TabbedPages, "VCF::TabbedPages", "VCF::CustomControl", TABBEDPAGES_CLASSID );
	END_CLASSINFO(TabbedPages);
	
	TabbedPages();

	virtual ~TabbedPages();

	void init();

	virtual void paint( GraphicsContext* context );

	TabModel* getModel();

	void setTabModel( TabModel* model );

	void onTabPageAdded( TabModelEvent* event );

	void onTabPageRemoved( TabModelEvent* event );

	void onTabPageSelected( TabModelEvent* event );

	TabPage* addNewPage( const String& caption );
	
	virtual void resizeChildren();

	virtual void mouseDown( MouseEvent* event );

	virtual void mouseMove( MouseEvent* event );

	virtual void mouseUp( MouseEvent* event );

	ulong32 getBorderWidth();

	void setBorderWidth( const ulong32& borderWidth );
	
private:
	TabModel* m_model;
	Rect m_tabAreaBounds;
	Basic3DBorder m_activePageBorder;
	ulong32 m_borderWidth;
	ulong32 m_tabHeight;
};

};
#endif //TABBEDPAGES_H