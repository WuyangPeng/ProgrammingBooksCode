/* Generated by Together */


#ifndef LISTVIEWPEER_H
#define LISTVIEWPEER_H



namespace VCF{

class ListItem;




/** @interface */

class APPKIT_API ListviewPeer : public ControlPeer {
public:    
	virtual ~ListviewPeer(){};

    virtual void addItem( ListItem * item ) = 0;

    virtual void insertItem( const unsigned long& index, ListItem * item ) = 0;

	virtual void clear() = 0;	

	virtual void deleteItem( ListItem* item ) = 0;

	virtual void setFocusedItem(ListItem * item) = 0;

	virtual void selectItem(ListItem * item) = 0;

	virtual Rect* getItemRect( ListItem* item ) = 0;

	virtual bool isItemSelected(ListItem* item) = 0;

	virtual ListItem* isPtOverItem(Point* point) = 0;

	virtual ListItem* getFocusedItem() = 0;

	virtual ListItem* getSelectedItem() = 0;	

	virtual Enumerator<ListItem*>* getSelectedItems() = 0;

	virtual void rangeSelect( Rect* selectionRect ) = 0;

	virtual void addHeaderColumn( const String& columnName ) = 0;

	virtual void insertHeaderColumn( const unsigned long& index, const String& columnName ) = 0;

	virtual void deleteHeaderColumn( const unsigned long& index ) = 0;

	virtual IconStyleType getIconStyle() = 0;

	virtual void setIconStyle( const IconStyleType& iconStyle ) = 0;

	virtual bool getAllowsMultiSelect() = 0;

	virtual void setAllowsMultiSelect( const bool& allowsMultiSelect ) = 0;

	virtual IconAlignType getIconAlignment() = 0;

	virtual void setIconAlignment( const IconAlignType& iconAlignType ) = 0;

	virtual bool getAllowLabelEditing() = 0;

	virtual void setAllowLabelEditing( const bool& allowLabelEditing ) = 0;
};

}
#endif //LISTVIEWPEER_H