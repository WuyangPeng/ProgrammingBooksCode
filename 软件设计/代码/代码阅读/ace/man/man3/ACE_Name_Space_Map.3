.TH ACE_Name_Space_Map 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Name_Space_Map \- This class serves as a Proxy that ensures our process always has the appropriate allocator in place for every operation that accesses or updates the Map Manager. 
.SH SYNOPSIS
.br
.PP
\fC#include <Local_Name_Space_T.h>\fR
.PP
Inherits \fBACE_Hash_Map_Manager\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Name_Space_Map\fR (ALLOCATOR *alloc)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "int \fBbind\fR (const \fBACE_NS_String\fR &, const \fBACE_NS_Internal\fR &, ALLOCATOR *alloc)"
.br
.ti -1c
.RI "int \fBunbind\fR (const \fBACE_NS_String\fR &, \fBACE_NS_Internal\fR &, ALLOCATOR *alloc)"
.br
.ti -1c
.RI "int \fBrebind\fR (const \fBACE_NS_String\fR &, const \fBACE_NS_Internal\fR &, \fBACE_NS_String\fR &, \fBACE_NS_Internal\fR &, ALLOCATOR *alloc)"
.br
.ti -1c
.RI "int \fBfind\fR (const \fBACE_NS_String\fR &, \fBACE_NS_Internal\fR &, ALLOCATOR *alloc)"
.br
.ti -1c
.RI "int \fBclose\fR (ALLOCATOR *alloc)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class ALLOCATOR>  template class ACE_Name_Space_Map
This class serves as a Proxy that ensures our process always has the appropriate allocator in place for every operation that accesses or updates the Map Manager.
.PP
.PP
 We need this class because otherwise the ALLOCATOR pointer will be stored in the Map_Manager that resides within shared memory. Naturally, this will cause horrible problems since only the first process to set that pointer will be guaranteed the address of the ALLOCATOR is meaningful! 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classALLOCATOR> ACE_Name_Space_Map<ALLOCATOR>::ACE_Name_Space_Map<ALLOCATOR> (ALLOCATOR * alloc)
.PP
Constructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classALLOCATOR> int ACE_Name_Space_Map<ALLOCATOR>::bind (const \fBACE_NS_String\fR &, const \fBACE_NS_Internal\fR &, ALLOCATOR * alloc)
.PP
.SS template<classALLOCATOR> int ACE_Name_Space_Map<ALLOCATOR>::close (ALLOCATOR * alloc)
.PP
.SS template<classALLOCATOR> int ACE_Name_Space_Map<ALLOCATOR>::find (const \fBACE_NS_String\fR &, \fBACE_NS_Internal\fR &, ALLOCATOR * alloc)
.PP
.SS template<classALLOCATOR> int ACE_Name_Space_Map<ALLOCATOR>::rebind (const \fBACE_NS_String\fR &, const \fBACE_NS_Internal\fR &, \fBACE_NS_String\fR &, \fBACE_NS_Internal\fR &, ALLOCATOR * alloc)
.PP
.SS template<classALLOCATOR> int ACE_Name_Space_Map<ALLOCATOR>::unbind (const \fBACE_NS_String\fR &, \fBACE_NS_Internal\fR &, ALLOCATOR * alloc)
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.