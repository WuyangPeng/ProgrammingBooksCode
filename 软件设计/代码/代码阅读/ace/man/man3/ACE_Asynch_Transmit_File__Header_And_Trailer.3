.TH ACE_Asynch_Transmit_File::Header_And_Trailer 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Asynch_Transmit_File::Header_And_Trailer \- The class defines a data structure that contains pointers to data to send before and after the file data is sent. 
.SH SYNOPSIS
.br
.PP
\fC#include <Asynch_IO.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBHeader_And_Trailer\fR (\fBACE_Message_Block\fR *header = 0, u_long header_bytes = 0, \fBACE_Message_Block\fR *trailer = 0, u_long trailer_bytes = 0)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "virtual \fB~Header_And_Trailer\fR (void)"
.br
.RI "\fIDestructor.\fR"
.ti -1c
.RI "void \fBheader_and_trailer\fR (\fBACE_Message_Block\fR *header = 0, u_long header_bytes = 0, \fBACE_Message_Block\fR *trailer = 0, u_long trailer_bytes = 0)"
.br
.RI "\fIThis method allows all the member to be set in one fell swoop.\fR"
.ti -1c
.RI "\fBACE_Message_Block\fR* \fBheader\fR (void) const"
.br
.RI "\fIHeader which goes before the file data.\fR"
.ti -1c
.RI "void \fBheader\fR (\fBACE_Message_Block\fR *message_block)"
.br
.ti -1c
.RI "u_long \fBheader_bytes\fR (void) const"
.br
.RI "\fISize of the header data.\fR"
.ti -1c
.RI "void \fBheader_bytes\fR (u_long bytes)"
.br
.ti -1c
.RI "\fBACE_Message_Block\fR* \fBtrailer\fR (void) const"
.br
.RI "\fITrailer which goes after the file data.\fR"
.ti -1c
.RI "void \fBtrailer\fR (\fBACE_Message_Block\fR *message_block)"
.br
.ti -1c
.RI "u_long \fBtrailer_bytes\fR (void) const"
.br
.RI "\fISize of the trailer data.\fR"
.ti -1c
.RI "void \fBtrailer_bytes\fR (u_long bytes)"
.br
.ti -1c
.RI "\fBACE_LPTRANSMIT_FILE_BUFFERS\fR \fBtransmit_buffers\fR (void)"
.br
.RI "\fIConversion routine.\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "\fBACE_Message_Block\fR* \fBheader_\fR"
.br
.RI "\fIHeader data.\fR"
.ti -1c
.RI "u_long \fBheader_bytes_\fR"
.br
.RI "\fISize of header data.\fR"
.ti -1c
.RI "\fBACE_Message_Block\fR* \fBtrailer_\fR"
.br
.RI "\fITrailer data.\fR"
.ti -1c
.RI "u_long \fBtrailer_bytes_\fR"
.br
.RI "\fISize of trailer data.\fR"
.ti -1c
.RI "\fBACE_TRANSMIT_FILE_BUFFERS\fR \fBtransmit_buffers_\fR"
.br
.RI "\fITarget data structure.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
The class defines a data structure that contains pointers to data to send before and after the file data is sent.
.PP
.PP
 This class provides a wrapper over TRANSMIT_FILE_BUFFERS and provided a consistent use of ACE_Message_Blocks. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Asynch_Transmit_File::Header_And_Trailer::Header_And_Trailer (\fBACE_Message_Block\fR * header = 0, u_long header_bytes = 0, \fBACE_Message_Block\fR * trailer = 0, u_long trailer_bytes = 0)
.PP
Constructor.
.PP
.SS ACE_Asynch_Transmit_File::Header_And_Trailer::~Header_And_Trailer (void)\fC [virtual]\fR
.PP
Destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Asynch_Transmit_File::Header_And_Trailer::header (\fBACE_Message_Block\fR * message_block)
.PP
.SS \fBACE_Message_Block\fR * ACE_Asynch_Transmit_File::Header_And_Trailer::header (void) const
.PP
Header which goes before the file data.
.PP
.SS void ACE_Asynch_Transmit_File::Header_And_Trailer::header_and_trailer (\fBACE_Message_Block\fR * header = 0, u_long header_bytes = 0, \fBACE_Message_Block\fR * trailer = 0, u_long trailer_bytes = 0)
.PP
This method allows all the member to be set in one fell swoop.
.PP
.SS void ACE_Asynch_Transmit_File::Header_And_Trailer::header_bytes (u_long bytes)
.PP
.SS u_long ACE_Asynch_Transmit_File::Header_And_Trailer::header_bytes (void) const
.PP
Size of the header data.
.PP
.SS void ACE_Asynch_Transmit_File::Header_And_Trailer::trailer (\fBACE_Message_Block\fR * message_block)
.PP
.SS \fBACE_Message_Block\fR * ACE_Asynch_Transmit_File::Header_And_Trailer::trailer (void) const
.PP
Trailer which goes after the file data.
.PP
.SS void ACE_Asynch_Transmit_File::Header_And_Trailer::trailer_bytes (u_long bytes)
.PP
.SS u_long ACE_Asynch_Transmit_File::Header_And_Trailer::trailer_bytes (void) const
.PP
Size of the trailer data.
.PP
.SS \fBACE_LPTRANSMIT_FILE_BUFFERS\fR ACE_Asynch_Transmit_File::Header_And_Trailer::transmit_buffers (void)
.PP
Conversion routine.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS \fBACE_Message_Block\fR * ACE_Asynch_Transmit_File::Header_And_Trailer::header_\fC [protected]\fR
.PP
Header data.
.PP
.SS u_long ACE_Asynch_Transmit_File::Header_And_Trailer::header_bytes_\fC [protected]\fR
.PP
Size of header data.
.PP
.SS \fBACE_Message_Block\fR * ACE_Asynch_Transmit_File::Header_And_Trailer::trailer_\fC [protected]\fR
.PP
Trailer data.
.PP
.SS u_long ACE_Asynch_Transmit_File::Header_And_Trailer::trailer_bytes_\fC [protected]\fR
.PP
Size of trailer data.
.PP
.SS \fBACE_TRANSMIT_FILE_BUFFERS\fR ACE_Asynch_Transmit_File::Header_And_Trailer::transmit_buffers_\fC [protected]\fR
.PP
Target data structure.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.