.TH ACE_Thread_Exit_Maybe 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Thread_Exit_Maybe \- A version of \fBACE_Thread_Exit\fR that is created dynamically under the hood if the flag is set to TRUE. 
.SH SYNOPSIS
.br
.PP
\fC#include <Thread_Exit.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Thread_Exit_Maybe\fR (int flag = 0)"
.br
.RI "\fIDon't create an \fBACE_Thread_Exit\fR instance by default.\fR"
.ti -1c
.RI "\fB~ACE_Thread_Exit_Maybe\fR (void)"
.br
.RI "\fIDestroys the underlying \fBACE_Thread_Exit\fR instance if it exists.\fR"
.ti -1c
.RI "\fBACE_Thread_Exit\fR* \fBoperator->\fR (void) const"
.br
.RI "\fIDelegates to underlying instance.\fR"
.ti -1c
.RI "\fBACE_Thread_Exit\fR* \fBinstance\fR (void) const"
.br
.RI "\fIReturns the underlying instance.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "\fBACE_Thread_Exit\fR* \fBinstance_\fR"
.br
.RI "\fIHolds the underlying instance.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
A version of \fBACE_Thread_Exit\fR that is created dynamically under the hood if the flag is set to TRUE.
.PP
.PP
 Allows the appearance of a "smart pointer", but is not always created. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Thread_Exit_Maybe::ACE_Thread_Exit_Maybe (int flag = 0)
.PP
Don't create an \fBACE_Thread_Exit\fR instance by default.
.PP
.SS ACE_Thread_Exit_Maybe::~ACE_Thread_Exit_Maybe (void)
.PP
Destroys the underlying \fBACE_Thread_Exit\fR instance if it exists.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS \fBACE_Thread_Exit\fR * ACE_Thread_Exit_Maybe::instance (void) const
.PP
Returns the underlying instance.
.PP
.SS \fBACE_Thread_Exit\fR * ACE_Thread_Exit_Maybe::operator-> (void) const
.PP
Delegates to underlying instance.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS \fBACE_Thread_Exit\fR * ACE_Thread_Exit_Maybe::instance_\fC [private]\fR
.PP
Holds the underlying instance.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.