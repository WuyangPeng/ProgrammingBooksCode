.TH ACE_FILE 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_FILE \- Defines the core methods of the  abstraction. 
.SH SYNOPSIS
.br
.PP
\fC#include <FILE.h>\fR
.PP
Inherits \fBACE_IO_SAP\fR.
.PP
Inherited by \fBACE_FILE_IO\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "int \fBclose\fR (void)"
.br
.RI "\fIClose the  handle without removing the  from the file system.\fR"
.ti -1c
.RI "int \fBremove\fR (void)"
.br
.RI "\fIClose and remove the  from the file system.\fR"
.ti -1c
.RI "int \fBunlink\fR (void)"
.br
.RI "\fIRemove the  from the file system without closing the  handle.\fR"
.ti -1c
.RI "int \fBget_info\fR (\fBACE_FILE_Info\fR *finfo)"
.br
.RI "\fIGet information on this .\fR"
.ti -1c
.RI "int \fBget_info\fR (\fBACE_FILE_Info\fR &finfo)"
.br
.RI "\fIGet information on this .\fR"
.ti -1c
.RI "int \fBtruncate\fR (off_t length)"
.br
.RI "\fISet filesize to length byte.\fR"
.ti -1c
.RI "off_t \fBseek\fR (off_t offset, int whence = SEEK_CUR)"
.br
.ti -1c
.RI "off_t \fBposition\fR (long offset, int startpos)"
.br
.ti -1c
.RI "off_t \fBtell\fR (void)"
.br
.RI "\fIReturn an offset for the file handle.\fR"
.ti -1c
.RI "off_t \fBposition\fR (void)"
.br
.RI "\fISame as <tell>, but <position> is deprecated.\fR"
.ti -1c
.RI "int \fBdisable\fR (int signum) const"
.br
.ti -1c
.RI "int \fBget_local_addr\fR (\fBACE_Addr\fR &) const"
.br
.RI "\fIReturn the local endpoint address in the referenced . Returns 0 if successful, else -1.\fR"
.ti -1c
.RI "int \fBget_remote_addr\fR (\fBACE_Addr\fR &) const"
.br
.RI "\fIReturn the same thing as <get_local_addr>.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_FILE\fR (void)"
.br
.RI "\fIEnsure that this class is only created by the .\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "\fBACE_FILE_Addr\fR \fBaddr_\fR"
.br
.RI "\fIFile we are "connected" with...\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines the core methods of the  abstraction.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_FILE::ACE_FILE (void)\fC [protected]\fR
.PP
Ensure that this class is only created by the .
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_FILE::close (void)
.PP
Close the  handle without removing the  from the file system.
.PP
.SS int ACE_FILE::disable (int signum) const
.PP
Disable signal <signum> This is here to prevent Win32 from disabling SPIPE using socket calls 
.PP
Reimplemented from \fBACE_IO_SAP\fR.
.SS void ACE_FILE::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_IO_SAP\fR.
.PP
Reimplemented in \fBACE_FILE_IO\fR.
.SS int ACE_FILE::get_info (\fBACE_FILE_Info\fR & finfo)
.PP
Get information on this .
.PP
.SS int ACE_FILE::get_info (\fBACE_FILE_Info\fR * finfo)
.PP
Get information on this .
.PP
.SS int ACE_FILE::get_local_addr (\fBACE_Addr\fR &) const
.PP
Return the local endpoint address in the referenced . Returns 0 if successful, else -1.
.PP
.SS int ACE_FILE::get_remote_addr (\fBACE_Addr\fR &) const
.PP
Return the same thing as <get_local_addr>.
.PP
.SS off_t ACE_FILE::position (void)
.PP
Same as <tell>, but <position> is deprecated.
.PP
.SS off_t ACE_FILE::position (long offset, int startpos)
.PP
.SS int ACE_FILE::remove (void)
.PP
Close and remove the  from the file system.
.PP
.SS off_t ACE_FILE::seek (off_t offset, int whence = SEEK_CUR)
.PP
Sets the file pointer as follows: o If <whence> is <SEEK_SET>, the pointer is set to <offset> bytes.
.PP
o If <whence> is <SEEK_CUR>, the pointer is set to its current location plus <offset>.
.PP
o If <whence> is <SEEK_END>, the pointer is set to the size of the file plus offset. Same as <seek>, but <position> is deprecated. 
.SS off_t ACE_FILE::tell (void)
.PP
Return an offset for the file handle.
.PP
.SS int ACE_FILE::truncate (off_t length)
.PP
Set filesize to length byte.
.PP
.SS int ACE_FILE::unlink (void)
.PP
Remove the  from the file system without closing the  handle.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_FILE::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_IO_SAP\fR.
.PP
Reimplemented in \fBACE_FILE_IO\fR.
.SS \fBACE_FILE_Addr\fR ACE_FILE::addr_\fC [protected]\fR
.PP
File we are "connected" with...
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.