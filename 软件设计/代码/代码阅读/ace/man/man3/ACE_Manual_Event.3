.TH ACE_Manual_Event 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Manual_Event \- Manual Events. 
.SH SYNOPSIS
.br
.PP
\fC#include <Synch.h>\fR
.PP
Inherits \fBACE_Event\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Manual_Event\fR (int initial_state = 0, int type = USYNC_THREAD, const char *name = 0, void *arg = 0)"
.br
.RI "\fIconstructor which will create manual event.\fR"
.ti -1c
.RI "\fBACE_Manual_Event\fR (int initial_state, int type, const wchar_t *name, void *arg = 0)"
.br
.RI "\fIconstructor which will create manual event (wchar_t version).\fR"
.ti -1c
.RI "\fB~ACE_Manual_Event\fR (void)"
.br
.RI "\fIDefault dtor.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Manual Events.
.PP
.PP
 Specialization of Event mechanism which wakes up all waiting threads on <signal>. Note that this only provides <USYNC_PROCESS> support on Win32 machines. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Manual_Event::ACE_Manual_Event (int initial_state = 0, int type = USYNC_THREAD, const char * name = 0, void * arg = 0)
.PP
constructor which will create manual event.
.PP
.SS ACE_Manual_Event::ACE_Manual_Event (int initial_state, int type, const wchar_t * name, void * arg = 0)
.PP
constructor which will create manual event (wchar_t version).
.PP
.SS ACE_Manual_Event::~ACE_Manual_Event (void)
.PP
Default dtor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Manual_Event::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_Event\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Manual_Event::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_Event\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.