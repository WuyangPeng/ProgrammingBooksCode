.TH ACE_Map_Entry 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Map_Entry \- An entry in the Map. 
.SH SYNOPSIS
.br
.PP
\fC#include <Map_Manager.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fB~ACE_Map_Entry\fR (void)"
.br
.RI "\fIWe need this destructor to keep some compilers from complaining. It's just a no-op, however.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.ti -1c
.RI "ACE_UINT32 \fBnext\fR (void) const"
.br
.RI "\fIGet/Set next entry.\fR"
.ti -1c
.RI "void \fBnext\fR (ACE_UINT32 n)"
.br
.ti -1c
.RI "ACE_UINT32 \fBprev\fR (void) const"
.br
.RI "\fIGet/Set prev entry.\fR"
.ti -1c
.RI "void \fBprev\fR (ACE_UINT32 p)"
.br
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "EXT_ID \fBext_id_\fR"
.br
.RI "\fIKey used to look up an entry.\fR"
.ti -1c
.RI "INT_ID \fBint_id_\fR"
.br
.RI "\fIThe contents of the entry itself.\fR"
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.ti -1c
.RI "ACE_UINT32 \fBnext_\fR"
.br
.RI "\fIKeeps track of the next entry.\fR"
.ti -1c
.RI "ACE_UINT32 \fBprev_\fR"
.br
.RI "\fIKeeps track of the previous entry.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class EXT_ID, class INT_ID>  template class ACE_Map_Entry
An entry in the Map.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classEXT_ID, classINT_ID> ACE_Map_Entry<EXT_ID, INT_ID>::~ACE_Map_Entry<EXT_ID, INT_ID> (void)
.PP
We need this destructor to keep some compilers from complaining. It's just a no-op, however.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classEXT_ID, classINT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const
.PP
Dump the state of an object.
.PP
.SS template<classEXT_ID, classINT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::next (ACE_UINT32 n)
.PP
.SS template<classEXT_ID, classINT_ID> ACE_UINT32 ACE_Map_Entry<EXT_ID, INT_ID>::next (void) const
.PP
Get/Set next entry.
.PP
.SS template<classEXT_ID, classINT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::prev (ACE_UINT32 p)
.PP
.SS template<classEXT_ID, classINT_ID> ACE_UINT32 ACE_Map_Entry<EXT_ID, INT_ID>::prev (void) const
.PP
Get/Set prev entry.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classEXT_ID, classINT_ID> ACE_Map_Entry<EXT_ID, INT_ID>::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
.SS template<classEXT_ID, classINT_ID> EXT_ID ACE_Map_Entry<EXT_ID, INT_ID>::ext_id_
.PP
Key used to look up an entry.
.PP
.SS template<classEXT_ID, classINT_ID> INT_ID ACE_Map_Entry<EXT_ID, INT_ID>::int_id_
.PP
The contents of the entry itself.
.PP
.SS template<classEXT_ID, classINT_ID> ACE_UINT32 ACE_Map_Entry<EXT_ID, INT_ID>::next_
.PP
Keeps track of the next entry.
.PP
.SS template<classEXT_ID, classINT_ID> ACE_UINT32 ACE_Map_Entry<EXT_ID, INT_ID>::prev_
.PP
Keeps track of the previous entry.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.