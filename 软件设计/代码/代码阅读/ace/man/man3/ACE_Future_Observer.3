.TH ACE_Future_Observer 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Future_Observer \- ACE_Future_Observer<T>. 
.SH SYNOPSIS
.br
.PP
\fC#include <Future.h>\fR
.PP
Inherited by \fBACE_Future_Set\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "virtual \fB~ACE_Future_Observer\fR (void)"
.br
.ti -1c
.RI "virtual void \fBupdate\fR (const \fBACE_Future\fR<T> &future) = 0"
.br
.RI "\fICalled by the \fBACE_Future\fR in which we are subscribed to when its value is written to.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_Future_Observer\fR (void)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class T>  template class ACE_Future_Observer
ACE_Future_Observer<T>.
.PP
.PP
 An ACE_Future_Observer object implements an object that is subscribed with an \fBACE_Future\fR object so that it may be notified when the value of the \fBACE_Future\fR object is written to by a writer thread. It uses the Observer pattern 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classT> virtual ACE_Future_Observer<T>::~ACE_Future_Observer<T> (void)\fC [virtual]\fR
.PP
.SS template<classT> ACE_Future_Observer<T>::ACE_Future_Observer<T> (void)\fC [protected]\fR
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classT> void ACE_Future_Observer<T>::update (const \fBACE_Future\fR< T >& future)\fC [pure virtual]\fR
.PP
Called by the \fBACE_Future\fR in which we are subscribed to when its value is written to.
.PP
Reimplemented in \fBACE_Future_Set\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classT> ACE_Future_Observer<T>::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented in \fBACE_Future_Set\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.