.TH ACE_IO_Cntl_Msg 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_IO_Cntl_Msg \- Data format for IOCTL messages. 
.SH SYNOPSIS
.br
.PP
\fC#include <IO_Cntl_Msg.h>\fR
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef u_short \fBACE_IO_Cntl_Cmds\fR"
.br
.ti -1c
.RI "enum { \fBSET_LWM\fR = 1, \fBGET_LWM\fR = 2, \fBSET_HWM\fR = 3, \fBGET_HWM\fR = 4, \fBMOD_LINK\fR = 5, \fBMOD_UNLINK\fR = 6 }"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_IO_Cntl_Msg\fR (\fBACE_IO_Cntl_Cmds\fR c)"
.br
.RI "\fIInitialize the control message.\fR"
.ti -1c
.RI "\fBACE_IO_Cntl_Cmds\fR \fBcmd\fR (void)"
.br
.RI "\fIGet command.\fR"
.ti -1c
.RI "void \fBcmd\fR (\fBACE_IO_Cntl_Cmds\fR c)"
.br
.RI "\fISet command.\fR"
.ti -1c
.RI "size_t \fBcount\fR (void)"
.br
.RI "\fIGet count.\fR"
.ti -1c
.RI "void \fBcount\fR (size_t c)"
.br
.RI "\fISet count.\fR"
.ti -1c
.RI "int \fBerror\fR (void)"
.br
.RI "\fIGet error.\fR"
.ti -1c
.RI "void \fBerror\fR (int e)"
.br
.RI "\fISet error.\fR"
.ti -1c
.RI "int \fBrval\fR (void)"
.br
.RI "\fIGet return value.\fR"
.ti -1c
.RI "void \fBrval\fR (int r)"
.br
.RI "\fISet return value.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "\fBACE_IO_Cntl_Cmds\fR \fBcmd_\fR"
.br
.RI "\fICommand.\fR"
.ti -1c
.RI "size_t \fBcount_\fR"
.br
.RI "\fICount.\fR"
.ti -1c
.RI "int \fBerror_\fR"
.br
.RI "\fIError.\fR"
.ti -1c
.RI "int \fBrval_\fR"
.br
.RI "\fIReturn value.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Data format for IOCTL messages.
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS typedef u_short ACE_IO_Cntl_Msg::ACE_IO_Cntl_Cmds
.PP
.SH MEMBER ENUMERATION DOCUMENTATION
.PP 
.SS anonymous enum
.PP
\fBEnumeration values:\fR
.in +1c
.TP
\fB\fISET_LWM\fR \fRSet the low water mark.
.TP
\fB\fIGET_LWM\fR \fRGet the low water mark.
.TP
\fB\fISET_HWM\fR \fRSet the high water mark.
.TP
\fB\fIGET_HWM\fR \fRGet the high water mark.
.TP
\fB\fIMOD_LINK\fR \fRLink modules.
.TP
\fB\fIMOD_UNLINK\fR \fRUnlink modules.
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_IO_Cntl_Msg::ACE_IO_Cntl_Msg (\fBACE_IO_Cntl_Cmds\fR c)\fC [inline]\fR
.PP
Initialize the control message.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_IO_Cntl_Msg::cmd (\fBACE_IO_Cntl_Cmds\fR c)\fC [inline]\fR
.PP
Set command.
.PP
.SS \fBACE_IO_Cntl_Cmds\fR ACE_IO_Cntl_Msg::cmd (void)\fC [inline]\fR
.PP
Get command.
.PP
.SS void ACE_IO_Cntl_Msg::count (size_t c)\fC [inline]\fR
.PP
Set count.
.PP
.SS size_t ACE_IO_Cntl_Msg::count (void)\fC [inline]\fR
.PP
Get count.
.PP
.SS void ACE_IO_Cntl_Msg::dump (void) const
.PP
Dump the state of an object.
.PP
.SS void ACE_IO_Cntl_Msg::error (int e)\fC [inline]\fR
.PP
Set error.
.PP
.SS int ACE_IO_Cntl_Msg::error (void)\fC [inline]\fR
.PP
Get error.
.PP
.SS void ACE_IO_Cntl_Msg::rval (int r)\fC [inline]\fR
.PP
Set return value.
.PP
.SS int ACE_IO_Cntl_Msg::rval (void)\fC [inline]\fR
.PP
Get return value.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_IO_Cntl_Msg::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
.SS \fBACE_IO_Cntl_Cmds\fR ACE_IO_Cntl_Msg::cmd_\fC [private]\fR
.PP
Command.
.PP
.SS size_t ACE_IO_Cntl_Msg::count_\fC [private]\fR
.PP
Count.
.PP
.SS int ACE_IO_Cntl_Msg::error_\fC [private]\fR
.PP
Error.
.PP
.SS int ACE_IO_Cntl_Msg::rval_\fC [private]\fR
.PP
Return value.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.