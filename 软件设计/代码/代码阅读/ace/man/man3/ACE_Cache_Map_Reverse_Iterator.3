.TH ACE_Cache_Map_Reverse_Iterator 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Cache_Map_Reverse_Iterator \- Defines a reverse iterator for the Cache_Map_Manager. 
.SH SYNOPSIS
.br
.PP
\fC#include <Cache_Map_Manager_T.h>\fR
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef \fBACE_Reference_Pair\fR<KEY, VALUE> \fBvalue_type\fR"
.br
.RI "\fIThe actual value mapped to the key in the cache. The  are used by the strategy and is transperant to the cache user.\fR"
.ti -1c
.RI "typedef \fBACE_Pair\fR<VALUE, ATTRIBUTES> \fBCACHE_VALUE\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Cache_Map_Reverse_Iterator\fR (const REVERSE_IMPLEMENTATION &iterator_impl)"
.br
.ti -1c
.RI "\fBACE_Cache_Map_Reverse_Iterator\fR (const ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> &rhs)"
.br
.RI "\fICopy constructor.\fR"
.ti -1c
.RI "\fB~ACE_Cache_Map_Reverse_Iterator\fR (void)"
.br
.ti -1c
.RI "ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>& \fBoperator=\fR (const ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> &rhs)"
.br
.RI "\fIAssignment operator.\fR"
.ti -1c
.RI "int \fBoperator==\fR (const ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> &rhs) const"
.br
.RI "\fIComparision operators.\fR"
.ti -1c
.RI "int \fBoperator!=\fR (const ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> &rhs) const"
.br
.ti -1c
.RI "\fBACE_Reference_Pair\fR<KEY, VALUE> \fBoperator *\fR (void) const"
.br
.RI "\fIReturns a reference to the internal element <this> is pointing to.\fR"
.ti -1c
.RI "ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>& \fBoperator++\fR (void)"
.br
.RI "\fIPrefix advance.\fR"
.ti -1c
.RI "ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> \fBoperator++\fR (int)"
.br
.RI "\fIPostfix advance.\fR"
.ti -1c
.RI "ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>& \fBoperator--\fR (void)"
.br
.RI "\fIPrefix reverse.\fR"
.ti -1c
.RI "ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> \fBoperator--\fR (int)"
.br
.RI "\fIPostfix reverse.\fR"
.ti -1c
.RI "REVERSE_IMPLEMENTATION& \fBiterator_implementation\fR (void)"
.br
.RI "\fIReturns the iterator of the internal map in the custody of the Cache_Map_Manager.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "REVERSE_IMPLEMENTATION \fBreverse_iterator_implementation_\fR"
.br
.RI "\fIThe actual iterator which iterates internally on the map belonging to the Cache_Map_Manager.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class KEY, class VALUE, class REVERSE_IMPLEMENTATION, class CACHING_STRATEGY, class ATTRIBUTES>  template class ACE_Cache_Map_Reverse_Iterator
Defines a reverse iterator for the Cache_Map_Manager.
.PP
.PP
 Implementation to be provided by the reverse iterator of the map managed by thr Cache_Map_manager. 
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> typedef \fBACE_Pair\fR<VALUE, ATTRIBUTES> ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::CACHE_VALUE
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> typedef \fBACE_Reference_Pair\fR<KEY, VALUE> ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::value_type
.PP
The actual value mapped to the key in the cache. The  are used by the strategy and is transperant to the cache user.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> (const REVERSE_IMPLEMENTATION & iterator_impl)
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> (const ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& rhs)
.PP
Copy constructor.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::~ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES> (void)
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> void ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::dump (void) const
.PP
Dump the state of an object.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> REVERSE_IMPLEMENTATION & ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::iterator_implementation (void)
.PP
Returns the iterator of the internal map in the custody of the Cache_Map_Manager.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> \fBACE_Reference_Pair\fR< KEY,VALUE > ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator * (void) const
.PP
Returns a reference to the internal element <this> is pointing to.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> int ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator!= (const ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& rhs) const
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES > ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator++ (int)
.PP
Postfix advance.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator++ (void)
.PP
Prefix advance.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES > ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator-- (int)
.PP
Postfix reverse.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator-- (void)
.PP
Prefix reverse.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator= (const ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& rhs)
.PP
Assignment operator.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> int ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::operator== (const ACE_Cache_Map_Reverse_Iterator< KEY,VALUE,REVERSE_IMPLEMENTATION,CACHING_STRATEGY,ATTRIBUTES >& rhs) const
.PP
Comparision operators.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
.SS template<classKEY, classVALUE, classREVERSE_IMPLEMENTATION, classCACHING_STRATEGY, classATTRIBUTES> REVERSE_IMPLEMENTATION ACE_Cache_Map_Reverse_Iterator<KEY, VALUE, REVERSE_IMPLEMENTATION, CACHING_STRATEGY, ATTRIBUTES>::reverse_iterator_implementation_\fC [protected]\fR
.PP
The actual iterator which iterates internally on the map belonging to the Cache_Map_Manager.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.