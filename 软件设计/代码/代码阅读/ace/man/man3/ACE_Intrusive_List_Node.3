.TH ACE_Intrusive_List_Node 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Intrusive_List_Node \- Implement the requirements for \fBACE_Intrusive_List\fR. 
.SH SYNOPSIS
.br
.PP
\fC#include <Intrusive_List_Node.h>\fR
.PP
.SS Public Methods

.PP
.RI "\fBAccesors and modifiers to the next and previous pointers\fR"
.br

.in +1c
.in +1c
.ti -1c
.RI "T* \fBprev\fR (void) const"
.br
.ti -1c
.RI "void \fBprev\fR (T *)"
.br
.ti -1c
.RI "T* \fBnext\fR (void) const"
.br
.ti -1c
.RI "void \fBnext\fR (T *)"
.br
.in -1c
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_Intrusive_List_Node\fR (void)"
.br
.RI "\fIConstructor.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "T* \fBprev_\fR"
.br
.RI "\fIHead and tail of the list.\fR"
.ti -1c
.RI "T* \fBnext_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class T>  template class ACE_Intrusive_List_Node
Implement the requirements for \fBACE_Intrusive_List\fR.
.PP
.PP
 The class should be used as follows:
.PP
class My_Object : public ACE_Intrusive_List_Node_Node<My_Object> {
.br
 ....
.br
 };
.br

.PP
However, \fBACE\fR is supported on platforms that would surely get confused using such templates, the class is provided as a helper for our lucky users that only need portability to modern C++ compilers. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classT> ACE_Intrusive_List_Node<T>::ACE_Intrusive_List_Node<T> (void)\fC [protected]\fR
.PP
Constructor.
.PP
The constructor is protected, because only derived classes should be instantiated. 
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classT> void ACE_Intrusive_List_Node<T>::next (T *)
.PP
.SS template<classT> T * ACE_Intrusive_List_Node<T>::next (void) const
.PP
.SS template<classT> void ACE_Intrusive_List_Node<T>::prev (T *)
.PP
.SS template<classT> T * ACE_Intrusive_List_Node<T>::prev (void) const
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classT> T * ACE_Intrusive_List_Node<T>::next_\fC [private]\fR
.PP
.SS template<classT> T * ACE_Intrusive_List_Node<T>::prev_\fC [private]\fR
.PP
Head and tail of the list.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.