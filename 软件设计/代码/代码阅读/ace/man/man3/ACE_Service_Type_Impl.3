.TH ACE_Service_Type_Impl 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Service_Type_Impl \- The abstract base class of the hierarchy that defines the contents of the . The subclasses of this class allow the configuration of , , and . 
.SH SYNOPSIS
.br
.PP
\fC#include <Service_Types.h>\fR
.PP
Inherited by \fBACE_Module_Type\fR, \fBACE_Service_Object_Type\fR, and \fBACE_Stream_Type\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Service_Type_Impl\fR (void *object, const \fBACE_TCHAR\fR *s_name, u_int flags = 0, \fBACE_Service_Object_Exterminator\fR gobbler = 0)"
.br
.ti -1c
.RI "virtual \fB~ACE_Service_Type_Impl\fR (void)"
.br
.ti -1c
.RI "virtual int \fBsuspend\fR (void) const = 0"
.br
.ti -1c
.RI "virtual int \fBresume\fR (void) const = 0"
.br
.ti -1c
.RI "virtual int \fBinit\fR (int argc, \fBACE_TCHAR\fR *argv[]) const = 0"
.br
.ti -1c
.RI "virtual int \fBfini\fR (void) const"
.br
.ti -1c
.RI "virtual int \fBinfo\fR (\fBACE_TCHAR\fR **str, size_t len) const = 0"
.br
.ti -1c
.RI "void* \fBobject\fR (void) const"
.br
.RI "\fIThe pointer to the service.\fR"
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBname\fR (void) const"
.br
.RI "\fIGet the name of the service.\fR"
.ti -1c
.RI "void \fBname\fR (const \fBACE_TCHAR\fR *)"
.br
.RI "\fISet the name of the service.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBname_\fR"
.br
.RI "\fIName of the service.\fR"
.ti -1c
.RI "void* \fBobj_\fR"
.br
.RI "\fIPointer to object that implements the service. This actually points to an , , or .\fR"
.ti -1c
.RI "\fBACE_Service_Object_Exterminator\fR \fBgobbler_\fR"
.br
.RI "\fIDestroy function to deallocate obj_.\fR"
.ti -1c
.RI "u_int \fBflags_\fR"
.br
.RI "\fIFlags that control serivce behavior (particularly deletion).\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
The abstract base class of the hierarchy that defines the contents of the . The subclasses of this class allow the configuration of , , and .
.PP
.PP
 This class provides the root of the implementation hierarchy of the "Bridge" pattern. It maintains a pointer to the appropriate type of service implementation, i.e., , , or . 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Service_Type_Impl::ACE_Service_Type_Impl (void * object, const \fBACE_TCHAR\fR * s_name, u_int flags = 0, \fBACE_Service_Object_Exterminator\fR gobbler = 0)
.PP
.SS virtual ACE_Service_Type_Impl::~ACE_Service_Type_Impl (void)\fC [virtual]\fR
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Service_Type_Impl::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented in \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SS virtual int ACE_Service_Type_Impl::fini (void) const\fC [virtual]\fR
.PP
Reimplemented in \fBACE_Service_Object_Type\fR, \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SS virtual int ACE_Service_Type_Impl::info (\fBACE_TCHAR\fR ** str, size_t len) const\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Service_Object_Type\fR, \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SS virtual int ACE_Service_Type_Impl::init (int argc, \fBACE_TCHAR\fR * argv[]) const\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Service_Object_Type\fR, \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SS void ACE_Service_Type_Impl::name (const \fBACE_TCHAR\fR *)
.PP
Set the name of the service.
.PP
.SS const \fBACE_TCHAR\fR * ACE_Service_Type_Impl::name (void) const
.PP
Get the name of the service.
.PP
.SS void * ACE_Service_Type_Impl::object (void) const
.PP
The pointer to the service.
.PP
.SS virtual int ACE_Service_Type_Impl::resume (void) const\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Service_Object_Type\fR, \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SS virtual int ACE_Service_Type_Impl::suspend (void) const\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Service_Object_Type\fR, \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Service_Type_Impl::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented in \fBACE_Module_Type\fR, and \fBACE_Stream_Type\fR.
.SS u_int ACE_Service_Type_Impl::flags_\fC [protected]\fR
.PP
Flags that control serivce behavior (particularly deletion).
.PP
.SS \fBACE_Service_Object_Exterminator\fR ACE_Service_Type_Impl::gobbler_\fC [protected]\fR
.PP
Destroy function to deallocate obj_.
.PP
.SS const \fBACE_TCHAR\fR * ACE_Service_Type_Impl::name_\fC [protected]\fR
.PP
Name of the service.
.PP
.SS void * ACE_Service_Type_Impl::obj_\fC [protected]\fR
.PP
Pointer to object that implements the service. This actually points to an , , or .
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.