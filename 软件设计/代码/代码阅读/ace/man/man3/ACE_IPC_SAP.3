.TH ACE_IPC_SAP 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_IPC_SAP \- Defines the member functions for the base class of the ACE_IPC_SAP abstraction. 
.SH SYNOPSIS
.br
.PP
\fC#include <IPC_SAP.h>\fR
.PP
Inherited by \fBACE_FIFO\fR, \fBACE_SOCK\fR, \fBACE_SPIPE\fR, and \fBACE_TLI\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fB~ACE_IPC_SAP\fR (void)"
.br
.RI "\fIDefault dtor.\fR"
.ti -1c
.RI "int \fBcontrol\fR (int cmd, void *) const"
.br
.RI "\fIInterface for <ioctl>.\fR"
.ti -1c
.RI "int \fBenable\fR (int value) const"
.br
.ti -1c
.RI "int \fBdisable\fR (int value) const"
.br
.ti -1c
.RI "ACE_HANDLE \fBget_handle\fR (void) const"
.br
.RI "\fIGet the underlying handle.\fR"
.ti -1c
.RI "void \fBset_handle\fR (ACE_HANDLE handle)"
.br
.RI "\fISet the underlying handle.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_IPC_SAP\fR (void)"
.br
.RI "\fIDefault constructor.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "ACE_HANDLE \fBhandle_\fR"
.br
.RI "\fIUnderlying I/O handle.\fR"
.in -1c
.SS Static Private Attributes

.in +1c
.ti -1c
.RI "\fBpid_t\fR \fBpid_\fR"
.br
.RI "\fICache the process ID.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines the member functions for the base class of the ACE_IPC_SAP abstraction.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_IPC_SAP::~ACE_IPC_SAP (void)
.PP
Default dtor.
.PP
.SS ACE_IPC_SAP::ACE_IPC_SAP (void)\fC [protected]\fR
.PP
Default constructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_IPC_SAP::control (int cmd, void * val) const
.PP
Interface for <ioctl>.
.PP
Reimplemented in \fBACE_UPIPE_Stream\fR.
.SS int ACE_IPC_SAP::disable (int signum) const
.PP
Disable asynchronous I/O (ACE_SIGIO), urgent data (ACE_SIGURG), non-blocking I/O (ACE_NONBLOCK), or close-on-exec (ACE_CLOEXEC), which is passed as the <value>. 
.PP
Reimplemented in \fBACE_SPIPE\fR.
.SS void ACE_IPC_SAP::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented in \fBACE_FIFO\fR, \fBACE_FIFO_Recv\fR, \fBACE_FIFO_Recv_Msg\fR, \fBACE_FIFO_Send\fR, \fBACE_FIFO_Send_Msg\fR, \fBACE_LSOCK_Acceptor\fR, \fBACE_LSOCK_CODgram\fR, \fBACE_LSOCK_Dgram\fR, \fBACE_LSOCK_Stream\fR, \fBACE_MEM_Acceptor\fR, \fBACE_MEM_IO\fR, \fBACE_MEM_Stream\fR, \fBACE_SOCK\fR, \fBACE_SOCK_Acceptor\fR, \fBACE_SOCK_CODgram\fR, \fBACE_SOCK_Dgram\fR, \fBACE_SOCK_Dgram_Bcast\fR, \fBACE_SOCK_Dgram_Mcast\fR, \fBACE_SOCK_IO\fR, \fBACE_SOCK_Stream\fR, \fBACE_SPIPE\fR, \fBACE_SPIPE_Acceptor\fR, \fBACE_SPIPE_Stream\fR, \fBACE_TLI\fR, \fBACE_TLI_Acceptor\fR, \fBACE_TLI_Stream\fR, \fBACE_UPIPE_Acceptor\fR, and \fBACE_UPIPE_Stream\fR.
.SS int ACE_IPC_SAP::enable (int value) const
.PP
Enable asynchronous I/O (ACE_SIGIO), urgent data (ACE_SIGURG), non-blocking I/O (ACE_NONBLOCK), or close-on-exec (ACE_CLOEXEC), which is passed as the <value>. 
.SS ACE_HANDLE ACE_IPC_SAP::get_handle (void) const
.PP
Get the underlying handle.
.PP
Reimplemented in \fBACE_LSOCK_CODgram\fR, \fBACE_LSOCK_Dgram\fR, \fBACE_LSOCK_Stream\fR, and \fBACE_UPIPE_Stream\fR.
.SS void ACE_IPC_SAP::set_handle (ACE_HANDLE fd)
.PP
Set the underlying handle.
.PP
Reimplemented in \fBACE_LSOCK_CODgram\fR, \fBACE_LSOCK_Dgram\fR, and \fBACE_LSOCK_Stream\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_IPC_SAP::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented in \fBACE_FIFO\fR, \fBACE_FIFO_Recv\fR, \fBACE_FIFO_Recv_Msg\fR, \fBACE_FIFO_Send\fR, \fBACE_FIFO_Send_Msg\fR, \fBACE_LSOCK_Acceptor\fR, \fBACE_LSOCK_CODgram\fR, \fBACE_LSOCK_Dgram\fR, \fBACE_LSOCK_Stream\fR, \fBACE_MEM_Acceptor\fR, \fBACE_MEM_IO\fR, \fBACE_MEM_Stream\fR, \fBACE_SOCK\fR, \fBACE_SOCK_Acceptor\fR, \fBACE_SOCK_CODgram\fR, \fBACE_SOCK_Dgram\fR, \fBACE_SOCK_Dgram_Bcast\fR, \fBACE_SOCK_Dgram_Mcast\fR, \fBACE_SOCK_IO\fR, \fBACE_SOCK_Stream\fR, \fBACE_SPIPE\fR, \fBACE_SPIPE_Acceptor\fR, \fBACE_SPIPE_Stream\fR, \fBACE_TLI\fR, \fBACE_TLI_Acceptor\fR, \fBACE_TLI_Stream\fR, \fBACE_UPIPE_Acceptor\fR, and \fBACE_UPIPE_Stream\fR.
.SS ACE_HANDLE ACE_IPC_SAP::handle_\fC [private]\fR
.PP
Underlying I/O handle.
.PP
.SS \fBpid_t\fR ACE_IPC_SAP::pid_\fC [static, private]\fR
.PP
Cache the process ID.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.