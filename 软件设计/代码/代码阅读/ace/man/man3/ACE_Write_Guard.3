.TH ACE_Write_Guard 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Write_Guard \- This class is similar to class , though it acquires/releases a write lock automatically (naturally, the  it is instantiated with must support the appropriate API). 
.SH SYNOPSIS
.br
.PP
\fC#include <Synch_T.h>\fR
.PP
Inherits \fBACE_Guard< ACE_LOCK >\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Write_Guard\fR (ACE_LOCK &m)"
.br
.RI "\fIImplicitly and automatically acquire a write lock.\fR"
.ti -1c
.RI "\fBACE_Write_Guard\fR (ACE_LOCK &m, int block)"
.br
.RI "\fIImplicitly and automatically acquire (or try to acquire) a write lock.\fR"
.ti -1c
.RI "int \fBacquire_write\fR (void)"
.br
.RI "\fIExplicitly acquire the write lock.\fR"
.ti -1c
.RI "int \fBacquire\fR (void)"
.br
.RI "\fIExplicitly acquire the write lock.\fR"
.ti -1c
.RI "int \fBtryacquire_write\fR (void)"
.br
.RI "\fIConditionally acquire the write lock (i.e., won't block).\fR"
.ti -1c
.RI "int \fBtryacquire\fR (void)"
.br
.RI "\fIConditionally acquire the write lock (i.e., won't block).\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class ACE_LOCK>  template class ACE_Write_Guard
This class is similar to class , though it acquires/releases a write lock automatically (naturally, the  it is instantiated with must support the appropriate API).
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classACE_LOCK> ACE_Write_Guard<ACE_LOCK>::ACE_Write_Guard<ACE_LOCK> (ACE_LOCK & m)
.PP
Implicitly and automatically acquire a write lock.
.PP
.SS template<classACE_LOCK> ACE_Write_Guard<ACE_LOCK>::ACE_Write_Guard<ACE_LOCK> (ACE_LOCK & m, int block)
.PP
Implicitly and automatically acquire (or try to acquire) a write lock.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classACE_LOCK> int ACE_Write_Guard<ACE_LOCK>::acquire (void)
.PP
Explicitly acquire the write lock.
.PP
Reimplemented from \fBACE_Guard\fR.
.SS template<classACE_LOCK> int ACE_Write_Guard<ACE_LOCK>::acquire_write (void)
.PP
Explicitly acquire the write lock.
.PP
.SS template<classACE_LOCK> void ACE_Write_Guard<ACE_LOCK>::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_Guard\fR.
.SS template<classACE_LOCK> int ACE_Write_Guard<ACE_LOCK>::tryacquire (void)
.PP
Conditionally acquire the write lock (i.e., won't block).
.PP
Reimplemented from \fBACE_Guard\fR.
.SS template<classACE_LOCK> int ACE_Write_Guard<ACE_LOCK>::tryacquire_write (void)
.PP
Conditionally acquire the write lock (i.e., won't block).
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.