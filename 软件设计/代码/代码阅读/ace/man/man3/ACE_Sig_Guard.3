.TH ACE_Sig_Guard 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Sig_Guard \- Hold signals in MASK for duration of a C++ statement block. Note that a "0" for mask causes all signals to be held. 
.SH SYNOPSIS
.br
.PP
\fC#include <Signal.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Sig_Guard\fR (\fBACE_Sig_Set\fR *mask = 0)"
.br
.RI "\fIBlock out signals in <mask>. Default is to block all signals!\fR"
.ti -1c
.RI "\fB~ACE_Sig_Guard\fR (void)"
.br
.RI "\fIRestore blocked signals.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "\fBACE_Sig_Set\fR \fBomask_\fR"
.br
.RI "\fIOriginal signal mask.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Hold signals in MASK for duration of a C++ statement block. Note that a "0" for mask causes all signals to be held.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Sig_Guard::ACE_Sig_Guard (\fBACE_Sig_Set\fR * mask = 0)
.PP
Block out signals in <mask>. Default is to block all signals!
.PP
.SS ACE_Sig_Guard::~ACE_Sig_Guard (void)
.PP
Restore blocked signals.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Sig_Guard::dump (void) const
.PP
Dump the state of an object.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Sig_Guard::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
.SS \fBACE_Sig_Set\fR ACE_Sig_Guard::omask_\fC [private]\fR
.PP
Original signal mask.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.