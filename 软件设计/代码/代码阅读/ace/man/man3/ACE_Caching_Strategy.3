.TH ACE_Caching_Strategy 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Caching_Strategy \- This class is an abstract base class for a caching strategy. 
.SH SYNOPSIS
.br
.PP
\fC#include <Caching_Strategies_T.h>\fR
.PP
Inherited by \fBACE_Caching_Strategy_Adapter\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "virtual \fB~ACE_Caching_Strategy\fR (void)"
.br
.RI "\fIDestructor.\fR"
.ti -1c
.RI "virtual ATTRIBUTES \fBattributes\fR (void) = 0"
.br
.RI "\fIAccessor method for the timer attributes.\fR"
.ti -1c
.RI "virtual double \fBpurge_percent\fR (void) = 0"
.br
.ti -1c
.RI "virtual void \fBpurge_percent\fR (double percentage) = 0"
.br
.ti -1c
.RI "virtual int \fBnotify_bind\fR (int result, const ATTRIBUTES &attr) = 0"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs bind method call.\fR"
.ti -1c
.RI "virtual int \fBnotify_find\fR (int result, ATTRIBUTES &attr) = 0"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs find method call.\fR"
.ti -1c
.RI "virtual int \fBnotify_unbind\fR (int result, const ATTRIBUTES &attr) = 0"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs unbind method call.\fR"
.ti -1c
.RI "virtual int \fBnotify_trybind\fR (int result, ATTRIBUTES &attr) = 0"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs trybind method call.\fR"
.ti -1c
.RI "virtual int \fBnotify_rebind\fR (int result, const ATTRIBUTES &attr) = 0"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs rebind method call.\fR"
.ti -1c
.RI "virtual CACHING_UTILITY& \fBcaching_utility\fR (void) = 0"
.br
.RI "\fIPurge the cache.\fR"
.ti -1c
.RI "virtual void \fBdump\fR (void) const = 0"
.br
.RI "\fIDumps the state of the object.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class ATTRIBUTES, class CACHING_UTILITY>  template class ACE_Caching_Strategy
This class is an abstract base class for a caching strategy.
.PP
.PP
 This class consists of all the interfaces a caching strategy should have and is used in association with the ACE_Caching_Strategy_Adaptor. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classATTRIBUTES, classCACHING_UTILITY> ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::~ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY> (void)\fC [virtual]\fR
.PP
Destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classATTRIBUTES, classCACHING_UTILITY> ATTRIBUTES ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::attributes (void)\fC [pure virtual]\fR
.PP
Accessor method for the timer attributes.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> CACHING_UTILITY & ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::caching_utility (void)\fC [pure virtual]\fR
.PP
Purge the cache.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> void ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::dump (void) const\fC [pure virtual]\fR
.PP
Dumps the state of the object.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_bind (int result, const ATTRIBUTES & attr)\fC [pure virtual]\fR
.PP
This method acts as a notification about the CONTAINERs bind method call.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_find (int result, ATTRIBUTES & attr)\fC [pure virtual]\fR
.PP
This method acts as a notification about the CONTAINERs find method call.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_rebind (int result, const ATTRIBUTES & attr)\fC [pure virtual]\fR
.PP
This method acts as a notification about the CONTAINERs rebind method call.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_trybind (int result, ATTRIBUTES & attr)\fC [pure virtual]\fR
.PP
This method acts as a notification about the CONTAINERs trybind method call.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_unbind (int result, const ATTRIBUTES & attr)\fC [pure virtual]\fR
.PP
This method acts as a notification about the CONTAINERs unbind method call.
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> virtual void ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::purge_percent (double percentage)\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.
.SS template<classATTRIBUTES, classCACHING_UTILITY> virtual double ACE_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::purge_percent (void)\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Caching_Strategy_Adapter\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.