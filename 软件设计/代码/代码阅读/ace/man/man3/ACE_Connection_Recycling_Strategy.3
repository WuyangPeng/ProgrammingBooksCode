.TH ACE_Connection_Recycling_Strategy 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Connection_Recycling_Strategy \- Defines the interface for a connection recycler. 
.SH SYNOPSIS
.br
.PP
\fC#include <Strategies.h>\fR
.PP
Inherited by \fBACE_Cached_Connect_Strategy\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "virtual \fB~ACE_Connection_Recycling_Strategy\fR (void)"
.br
.RI "\fIVirtual Destructor.\fR"
.ti -1c
.RI "virtual int \fBpurge\fR (const void *recycling_act) = 0"
.br
.RI "\fIRemove from cache.\fR"
.ti -1c
.RI "virtual int \fBcache\fR (const void *recycling_act) = 0"
.br
.RI "\fIAdd to cache.\fR"
.ti -1c
.RI "virtual int \fBrecycle_state\fR (const void *recycling_act, \fBACE_Recyclable_State\fR new_state) = 0"
.br
.ti -1c
.RI "virtual \fBACE_Recyclable_State\fR \fBrecycle_state\fR (const void *recycling_act) const = 0"
.br
.RI "\fIGet/Set <recycle_state>.\fR"
.ti -1c
.RI "virtual int \fBmark_as_closed\fR (const void *recycling_act) = 0"
.br
.RI "\fIMark as closed.\fR"
.ti -1c
.RI "virtual int \fBmark_as_closed_i\fR (const void *recycling_act) = 0"
.br
.RI "\fIMark as closed.(non-locking version).\fR"
.ti -1c
.RI "virtual int \fBcleanup_hint\fR (const void *recycling_act, void **act_holder = 0) = 0"
.br
.RI "\fICleanup hint and reset <*act_holder> to zero if .\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_Connection_Recycling_Strategy\fR (void)"
.br
.RI "\fIDefault ctor.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines the interface for a connection recycler.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Connection_Recycling_Strategy::~ACE_Connection_Recycling_Strategy (void)\fC [virtual]\fR
.PP
Virtual Destructor.
.PP
.SS ACE_Connection_Recycling_Strategy::ACE_Connection_Recycling_Strategy (void)\fC [protected]\fR
.PP
Default ctor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_Connection_Recycling_Strategy::cache (const void * recycling_act)\fC [pure virtual]\fR
.PP
Add to cache.
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy\fR.
.SS int ACE_Connection_Recycling_Strategy::cleanup_hint (const void * recycling_act, void ** act_holder = 0)\fC [pure virtual]\fR
.PP
Cleanup hint and reset <*act_holder> to zero if .
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy\fR.
.SS int ACE_Connection_Recycling_Strategy::mark_as_closed (const void * recycling_act)\fC [pure virtual]\fR
.PP
Mark as closed.
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy\fR.
.SS int ACE_Connection_Recycling_Strategy::mark_as_closed_i (const void * recycling_act)\fC [pure virtual]\fR
.PP
Mark as closed.(non-locking version).
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy_Ex\fR, and \fBACE_Cached_Connect_Strategy\fR.
.SS int ACE_Connection_Recycling_Strategy::purge (const void * recycling_act)\fC [pure virtual]\fR
.PP
Remove from cache.
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy\fR.
.SS \fBACE_Recyclable_State\fR ACE_Connection_Recycling_Strategy::recycle_state (const void * recycling_act) const\fC [pure virtual]\fR
.PP
Get/Set <recycle_state>.
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy\fR.
.SS virtual int ACE_Connection_Recycling_Strategy::recycle_state (const void * recycling_act, \fBACE_Recyclable_State\fR new_state)\fC [pure virtual]\fR
.PP
Reimplemented in \fBACE_Cached_Connect_Strategy\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.