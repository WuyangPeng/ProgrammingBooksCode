.TH ACE_Configuration_ExtId 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Configuration_ExtId \- External ID for the section and value hash. 
.SH SYNOPSIS
.br
.PP
\fC#include <Configuration.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Configuration_ExtId\fR (void)"
.br
.RI "\fIdefeault ctor.\fR"
.ti -1c
.RI "ACE_EXPLICIT \fBACE_Configuration_ExtId\fR (const \fBACE_TCHAR\fR* name)"
.br
.RI "\fInamed constructor.\fR"
.ti -1c
.RI "\fBACE_Configuration_ExtId\fR (const ACE_Configuration_ExtId& rhs)"
.br
.RI "\fIcopy ctor.\fR"
.ti -1c
.RI "\fB~ACE_Configuration_ExtId\fR (void)"
.br
.RI "\fIdestructor.\fR"
.ti -1c
.RI "ACE_Configuration_ExtId& \fBoperator=\fR (const ACE_Configuration_ExtId& rhs)"
.br
.RI "\fIassignment operator.\fR"
.ti -1c
.RI "int \fBoperator==\fR (const ACE_Configuration_ExtId &rhs) const"
.br
.RI "\fIEquality comparison operator(must match name_).\fR"
.ti -1c
.RI "int \fBoperator!=\fR (const ACE_Configuration_ExtId &rhs) const"
.br
.RI "\fIInequality comparison operator.\fR"
.ti -1c
.RI "void \fBfree\fR (\fBACE_Allocator\fR *alloc)"
.br
.RI "\fIFrees the name of the value. needed since we don't know the allocator name_ was created in.\fR"
.ti -1c
.RI "u_long \fBhash\fR (void) const"
.br
.RI "\fI<hash> function is required in order for this class to be usable by \fBACE_Hash_Map_Manager\fR.\fR"
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBname\fR (void)"
.br
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBname_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
External ID for the section and value hash.
.PP
.PP
 Contains a pointer to the section or value name. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Configuration_ExtId::ACE_Configuration_ExtId (void)
.PP
defeault ctor.
.PP
.SS ACE_EXPLICIT ACE_Configuration_ExtId::ACE_Configuration_ExtId (const \fBACE_TCHAR\fR * name)
.PP
named constructor.
.PP
.SS ACE_Configuration_ExtId::ACE_Configuration_ExtId (const ACE_Configuration_ExtId & rhs)
.PP
copy ctor.
.PP
.SS ACE_Configuration_ExtId::~ACE_Configuration_ExtId (void)
.PP
destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Configuration_ExtId::free (\fBACE_Allocator\fR * alloc)
.PP
Frees the name of the value. needed since we don't know the allocator name_ was created in.
.PP
.SS u_long ACE_Configuration_ExtId::hash (void) const
.PP
<hash> function is required in order for this class to be usable by \fBACE_Hash_Map_Manager\fR.
.PP
.SS const \fBACE_TCHAR\fR* ACE_Configuration_ExtId::name (void)
.PP
.SS int ACE_Configuration_ExtId::operator!= (const ACE_Configuration_ExtId & rhs) const
.PP
Inequality comparison operator.
.PP
.SS ACE_Configuration_ExtId & ACE_Configuration_ExtId::operator= (const ACE_Configuration_ExtId & rhs)
.PP
assignment operator.
.PP
.SS int ACE_Configuration_ExtId::operator== (const ACE_Configuration_ExtId & rhs) const
.PP
Equality comparison operator(must match name_).
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS const \fBACE_TCHAR\fR * ACE_Configuration_ExtId::name_
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.