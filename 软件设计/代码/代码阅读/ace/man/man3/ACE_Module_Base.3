.TH ACE_Module_Base 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Module_Base \- Workaround HP/C++ compiler bug with enums in templates. 
.SH SYNOPSIS
.br
.PP
\fC#include <Module.h>\fR
.PP
Inherited by \fBACE_Module\fR.
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "enum { \fBM_DELETE_NONE\fR = 0, \fBM_DELETE_READER\fR = 1, \fBM_DELETE_WRITER\fR = 2, \fBM_DELETE\fR = 3 }"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Workaround HP/C++ compiler bug with enums in templates.
.PP
.PP
 Certain C++ compilers, e.g., the HP/UX 10.x and 9.x compilers, seem to fail if enums are defined inside a template, hence we have to move them into a base class. 
.PP
.SH MEMBER ENUMERATION DOCUMENTATION
.PP 
.SS anonymous enum
.PP
\fBEnumeration values:\fR
.in +1c
.TP
\fB\fIM_DELETE_NONE\fR \fRIndicates that <close> should not delete any Tasks.
.TP
\fB\fIM_DELETE_READER\fR \fRIndicates that <close> should delete the writer Task.
.TP
\fB\fIM_DELETE_WRITER\fR \fRIndicates that <close> should delete the reader Task.
.TP
\fB\fIM_DELETE\fR \fRIndicates that <close> deletes the Tasks.
.PP
Don't change this value without updating the same enum in class \fBACE_Stream\fR... The <M_DELETE_READER> and <M_DELETE_WRITER> flags may be or'ed together. 


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.