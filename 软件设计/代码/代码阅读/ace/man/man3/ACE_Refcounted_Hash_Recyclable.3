.TH ACE_Refcounted_Hash_Recyclable 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Refcounted_Hash_Recyclable \- 
.SH SYNOPSIS
.br
.PP
\fC#include <Strategies_T.h>\fR
.PP
Inherits \fBACE_Refcountable\fR, \fBACE_Hashable\fR, and \fBACE_Recyclable\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Refcounted_Hash_Recyclable\fR (void)"
.br
.RI "\fIDefault constructor.\fR"
.ti -1c
.RI "\fBACE_Refcounted_Hash_Recyclable\fR (const T &t, int refcount = 0, \fBACE_Recyclable_State\fR state = ACE_RECYCLABLE_UNKNOWN)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "virtual \fB~ACE_Refcounted_Hash_Recyclable\fR (void)"
.br
.RI "\fIDestructor.\fR"
.ti -1c
.RI "int \fBoperator==\fR (const ACE_Refcounted_Hash_Recyclable<T> &rhs) const"
.br
.RI "\fICompares two instances.\fR"
.ti -1c
.RI "int \fBoperator!=\fR (const ACE_Refcounted_Hash_Recyclable<T> &rhs) const"
.br
.ti -1c
.RI "T& \fBsubject\fR ()"
.br
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "u_long \fBhash_i\fR (void) const"
.br
.RI "\fIComputes and returns hash value.\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "T \fBt_\fR"
.br
.in -1c
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classT> ACE_Refcounted_Hash_Recyclable<T>::ACE_Refcounted_Hash_Recyclable<T> (void)
.PP
Default constructor.
.PP
.SS template<classT> ACE_Refcounted_Hash_Recyclable<T>::ACE_Refcounted_Hash_Recyclable<T> (const T & t, int refcount = 0, \fBACE_Recyclable_State\fR state = ACE_RECYCLABLE_UNKNOWN)
.PP
Constructor.
.PP
.SS template<classT> ACE_Refcounted_Hash_Recyclable<T>::~ACE_Refcounted_Hash_Recyclable<T> (void)\fC [virtual]\fR
.PP
Destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classT> u_long ACE_Refcounted_Hash_Recyclable<T>::hash_i (void) const\fC [protected, virtual]\fR
.PP
Computes and returns hash value.
.PP
Reimplemented from \fBACE_Hashable\fR.
.SS template<classT> int ACE_Refcounted_Hash_Recyclable<T>::operator!= (const ACE_Refcounted_Hash_Recyclable< T >& rhs) const
.PP
.SS template<classT> int ACE_Refcounted_Hash_Recyclable<T>::operator== (const ACE_Refcounted_Hash_Recyclable< T >& rhs) const
.PP
Compares two instances.
.PP
.SS template<classT> T& ACE_Refcounted_Hash_Recyclable<T>::subject ()
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classT> T ACE_Refcounted_Hash_Recyclable<T>::t_\fC [protected]\fR
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.