.TH ACE_Malloc 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Malloc \- 
.SH SYNOPSIS
.br
.PP
\fC#include <Malloc_T.h>\fR
.PP
Inherits \fBACE_Malloc_T< ACE_MEM_POOL_2,ACE_LOCK,ACE_Control_Block >\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Malloc\fR (const \fBACE_TCHAR\fR *pool_name = 0)"
.br
.ti -1c
.RI "\fBACE_Malloc\fR (const \fBACE_TCHAR\fR *pool_name, const \fBACE_TCHAR\fR *lock_name, const ACE_MEM_POOL_OPTIONS *options = 0)"
.br
.ti -1c
.RI "\fBACE_Malloc\fR (const \fBACE_TCHAR\fR *pool_name, const \fBACE_TCHAR\fR *lock_name, const void *options = 0)"
.br
.RI "\fIThis is necessary to work around template bugs with certain C++ compilers.\fR"
.in -1c
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<ACE_MEM_POOL_1, classACE_LOCK> ACE_Malloc<, ACE_LOCK>::ACE_Malloc<, ACE_LOCK> (const \fBACE_TCHAR\fR * pool_name = 0)
.PP
Initialize ACE_Malloc. This constructor passes <pool_name> to initialize the memory pool, and uses  to automatically extract out the name used for the underlying lock name (if necessary). 
.SS template<ACE_MEM_POOL_1, classACE_LOCK> ACE_Malloc<, ACE_LOCK>::ACE_Malloc<, ACE_LOCK> (const \fBACE_TCHAR\fR * pool_name, const \fBACE_TCHAR\fR * lock_name, const ACE_MEM_POOL_OPTIONS * options = 0)
.PP
Initialize ACE_Malloc. This constructor passes <pool_name> to initialize the memory pool, and uses <lock_name> to automatically extract out the name used for the underlying lock name (if necessary). In addition, <options> is passed through to initialize the underlying memory pool. 
.SS template<ACE_MEM_POOL_1, classACE_LOCK> ACE_Malloc<, ACE_LOCK>::ACE_Malloc<, ACE_LOCK> (const \fBACE_TCHAR\fR * pool_name, const \fBACE_TCHAR\fR * lock_name, const void * options = 0)
.PP
This is necessary to work around template bugs with certain C++ compilers.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.