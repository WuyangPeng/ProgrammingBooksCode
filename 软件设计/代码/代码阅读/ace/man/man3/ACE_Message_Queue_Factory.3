.TH ACE_Message_Queue_Factory 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Message_Queue_Factory \- ACE_Message_Queue_Factory is a static factory class template which provides a separate factory method for each of the major kinds of priority based message dispatching: static, earliest deadline first (EDF), and minimum laxity first (MLF). 
.SH SYNOPSIS
.br
.PP
\fC#include <Message_Queue_T.h>\fR
.PP
.SS Static Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Message_Queue\fR<ACE_SYNCH_USE>* \fBcreate_static_message_queue\fR (size_t hwm = ACE_Message_Queue_Base::DEFAULT_HWM, size_t lwm = ACE_Message_Queue_Base::DEFAULT_LWM, \fBACE_Notification_Strategy\fR * = 0)"
.br
.RI "\fIfactory method for a statically prioritized \fBACE_Message_Queue\fR.\fR"
.ti -1c
.RI "\fBACE_Dynamic_Message_Queue\fR<ACE_SYNCH_USE>* \fBcreate_deadline_message_queue\fR (size_t hwm = ACE_Message_Queue_Base::DEFAULT_HWM, size_t lwm = ACE_Message_Queue_Base::DEFAULT_LWM, \fBACE_Notification_Strategy\fR * = 0, u_long static_bit_field_mask = 0x3FFUL, u_long static_bit_field_shift = 10, u_long dynamic_priority_max = 0x3FFFFFUL, u_long dynamic_priority_offset = 0x200000UL)"
.br
.RI "\fIfactory method for a dynamically prioritized (by time to deadline) \fBACE_Dynamic_Message_Queue\fR.\fR"
.ti -1c
.RI "\fBACE_Dynamic_Message_Queue\fR<ACE_SYNCH_USE>* \fBcreate_laxity_message_queue\fR (size_t hwm = ACE_Message_Queue_Base::DEFAULT_HWM, size_t lwm = ACE_Message_Queue_Base::DEFAULT_LWM, \fBACE_Notification_Strategy\fR * = 0, u_long static_bit_field_mask = 0x3FFUL, u_long static_bit_field_shift = 10, u_long dynamic_priority_max = 0x3FFFFFUL, u_long dynamic_priority_offset = 0x200000UL)"
.br
.RI "\fIfactory method for a dynamically prioritized (by laxity) \fBACE_Dynamic_Message_Queue\fR.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<ACE_SYNCH_DECL>  template class ACE_Message_Queue_Factory
ACE_Message_Queue_Factory is a static factory class template which provides a separate factory method for each of the major kinds of priority based message dispatching: static, earliest deadline first (EDF), and minimum laxity first (MLF).
.PP
.PP
 The \fBACE_Dynamic_Message_Queue\fR class assumes responsibility for releasing the resources of the strategy with which it was constructed: the user of a message queue constructed by any of these factory methods is only responsible for ensuring destruction of the message queue itself. 
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<ACE_SYNCH_DECL> \fBACE_Dynamic_Message_Queue\fR< ACE_SYNCH_USE >* ACE_Message_Queue_Factory<>::create_deadline_message_queue (size_t hwm = ACE_Message_Queue_Base::DEFAULT_HWM, size_t lwm = ACE_Message_Queue_Base::DEFAULT_LWM, \fBACE_Notification_Strategy\fR * = 0, u_long static_bit_field_mask = 0x3FFUL, u_long static_bit_field_shift = 10, u_long dynamic_priority_max = 0x3FFFFFUL, u_long dynamic_priority_offset = 0x200000UL)\fC [static]\fR
.PP
factory method for a dynamically prioritized (by time to deadline) \fBACE_Dynamic_Message_Queue\fR.
.PP
.SS template<ACE_SYNCH_DECL> \fBACE_Dynamic_Message_Queue\fR< ACE_SYNCH_USE >* ACE_Message_Queue_Factory<>::create_laxity_message_queue (size_t hwm = ACE_Message_Queue_Base::DEFAULT_HWM, size_t lwm = ACE_Message_Queue_Base::DEFAULT_LWM, \fBACE_Notification_Strategy\fR * = 0, u_long static_bit_field_mask = 0x3FFUL, u_long static_bit_field_shift = 10, u_long dynamic_priority_max = 0x3FFFFFUL, u_long dynamic_priority_offset = 0x200000UL)\fC [static]\fR
.PP
factory method for a dynamically prioritized (by laxity) \fBACE_Dynamic_Message_Queue\fR.
.PP
.SS template<ACE_SYNCH_DECL> \fBACE_Message_Queue\fR< ACE_SYNCH_USE >* ACE_Message_Queue_Factory<>::create_static_message_queue (size_t hwm = ACE_Message_Queue_Base::DEFAULT_HWM, size_t lwm = ACE_Message_Queue_Base::DEFAULT_LWM, \fBACE_Notification_Strategy\fR * = 0)\fC [static]\fR
.PP
factory method for a statically prioritized \fBACE_Message_Queue\fR.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.