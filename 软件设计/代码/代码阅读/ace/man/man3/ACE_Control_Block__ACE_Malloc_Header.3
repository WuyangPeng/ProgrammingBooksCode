.TH ACE_Control_Block::ACE_Malloc_Header 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Control_Block::ACE_Malloc_Header \- This is the control block header. It's used by  to keep track of each chunk of data when it's in the free list or in use. 
.SH SYNOPSIS
.br
.PP
\fC#include <Malloc.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Malloc_Header\fR (void)"
.br
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of the object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "ACE_Malloc_Header* \fBnext_block_\fR"
.br
.RI "\fIPoints to next block if on free list.\fR"
.ti -1c
.RI "size_t \fBsize_\fR"
.br
.RI "\fISize of this header control block.\fR"
.ti -1c
.RI "long \fBpadding_\fR [ACE_MALLOC_PADDING_SIZE < 1 ? 1 : ACE_MALLOC_PADDING_SIZE]"
.br
.in -1c
.SS Static Public Methods

.in +1c
.ti -1c
.RI "void \fBinit_ptr\fR (ACE_Malloc_Header **ptr, ACE_Malloc_Header *init, void *base_addr)"
.br
.RI "\fIInitialize a malloc header pointer.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
This is the control block header. It's used by  to keep track of each chunk of data when it's in the free list or in use.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Control_Block::ACE_Malloc_Header::ACE_Malloc_Header (void)
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Control_Block::ACE_Malloc_Header::dump (void) const
.PP
Dump the state of the object.
.PP
.SS void ACE_Control_Block::ACE_Malloc_Header::init_ptr (ACE_Malloc_Header ** ptr, ACE_Malloc_Header * init, void * base_addr)\fC [static]\fR
.PP
Initialize a malloc header pointer.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Malloc_Header * ACE_Control_Block::ACE_Malloc_Header::next_block_
.PP
Points to next block if on free list.
.PP
.SS long ACE_Control_Block::ACE_Malloc_Header::padding_[ACE_MALLOC_PADDING_SIZE< 1?1:ACE_MALLOC_PADDING_SIZE]
.PP
.SS size_t ACE_Control_Block::ACE_Malloc_Header::size_
.PP
Size of this header control block.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.