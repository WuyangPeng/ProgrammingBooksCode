.TH ACE_DEV_Addr 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_DEV_Addr \- Defines device address family address format. 
.SH SYNOPSIS
.br
.PP
\fC#include <DEV_Addr.h>\fR
.PP
Inherits \fBACE_Addr\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_DEV_Addr\fR (void)"
.br
.RI "\fIDefault constructor.\fR"
.ti -1c
.RI "\fBACE_DEV_Addr\fR (const ACE_DEV_Addr &sa)"
.br
.RI "\fICopy constructor.\fR"
.ti -1c
.RI "int \fBset\fR (const ACE_DEV_Addr &sa)"
.br
.RI "\fIActs like a copy constructor.\fR"
.ti -1c
.RI "ACE_EXPLICIT \fBACE_DEV_Addr\fR (const \fBACE_TCHAR\fR *devname)"
.br
.RI "\fICreate a ACE_DEV_Addr from a device name.\fR"
.ti -1c
.RI "void \fBset\fR (const \fBACE_TCHAR\fR *devname)"
.br
.RI "\fICreate a \fBACE_Addr\fR from a \fBACE_DEV\fR pathname.\fR"
.ti -1c
.RI "ACE_DEV_Addr& \fBoperator=\fR (const ACE_DEV_Addr &)"
.br
.RI "\fIAssignment operator.\fR"
.ti -1c
.RI "virtual void* \fBget_addr\fR (void) const"
.br
.RI "\fIReturn a pointer to the address.\fR"
.ti -1c
.RI "virtual int \fBaddr_to_string\fR (\fBACE_TCHAR\fR *addr, size_t) const"
.br
.RI "\fITransform the current address into string format.\fR"
.ti -1c
.RI "int \fBoperator==\fR (const ACE_DEV_Addr &SAP) const"
.br
.RI "\fICompare two addresses for equality.\fR"
.ti -1c
.RI "int \fBoperator!=\fR (const ACE_DEV_Addr &SAP) const"
.br
.RI "\fICompare two addresses for inequality.\fR"
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBget_path_name\fR (void) const"
.br
.RI "\fIReturn the path name used for the rendezvous point.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "\fBACE_TCHAR\fR \fBdevname_\fR [MAXNAMLEN + 1]"
.br
.RI "\fIName of the device.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines device address family address format.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_DEV_Addr::ACE_DEV_Addr (void)
.PP
Default constructor.
.PP
.SS ACE_DEV_Addr::ACE_DEV_Addr (const ACE_DEV_Addr & sa)
.PP
Copy constructor.
.PP
.SS ACE_EXPLICIT ACE_DEV_Addr::ACE_DEV_Addr (const \fBACE_TCHAR\fR * devname)
.PP
Create a ACE_DEV_Addr from a device name.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_DEV_Addr::addr_to_string (\fBACE_TCHAR\fR * addr, size_t) const\fC [virtual]\fR
.PP
Transform the current address into string format.
.PP
.SS void ACE_DEV_Addr::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_Addr\fR.
.SS void * ACE_DEV_Addr::get_addr (void) const\fC [virtual]\fR
.PP
Return a pointer to the address.
.PP
Reimplemented from \fBACE_Addr\fR.
.SS const \fBACE_TCHAR\fR * ACE_DEV_Addr::get_path_name (void) const
.PP
Return the path name used for the rendezvous point.
.PP
.SS int ACE_DEV_Addr::operator!= (const ACE_DEV_Addr & SAP) const
.PP
Compare two addresses for inequality.
.PP
.SS ACE_DEV_Addr & ACE_DEV_Addr::operator= (const ACE_DEV_Addr &)
.PP
Assignment operator.
.PP
.SS int ACE_DEV_Addr::operator== (const ACE_DEV_Addr & SAP) const
.PP
Compare two addresses for equality.
.PP
.SS void ACE_DEV_Addr::set (const \fBACE_TCHAR\fR * devname)
.PP
Create a \fBACE_Addr\fR from a \fBACE_DEV\fR pathname.
.PP
.SS int ACE_DEV_Addr::set (const ACE_DEV_Addr & sa)
.PP
Acts like a copy constructor.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_DEV_Addr::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_Addr\fR.
.SS \fBACE_TCHAR\fR ACE_DEV_Addr::devname_[MAXNAMLEN+1]\fC [private]\fR
.PP
Name of the device.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.