<!doctype linuxdoc system>

<article>
<title> README for XFree86 3.1.2 on FreeBSD 2.0.5
<author>Rich Murphey, David Dawes</author>
<date>1995年7月24日</date>
<trans>Takefumi Tsukada(塚田 剛文)
<abstract>
この文書はXFree86 3.1.2に含まれる、README.FreeBSDを日本語訳したものです。
内容に関してはほとんど修正していませんので古い内容も残っています。
</abstract>
<toc>

<sect>XFree86とは
<p>XFree86は、数々のバージョンのインテルベースのUNIXをサポートする、X11R6の
移植物です。その起源はX11R5と共に配布されたXサーバであるX386 1.2に遡ること
ができます。本リリースは多くのバグFIXだけでなく、多くの新機能・性能改善
により構成されています。本リリースは、XコンソーシアムのX11R6に対するソース
パッチとして、また、多くのアーキテクチャ用にバイナリコードとして入手可能で
す。

著作権告知については、<url url="COPYRIGHT.html" name="Copyright Notice">
を参照して下さい。

XFree86のソースコードは以下のanonymous FTPサイトより入手可能です。

<url name="ftp.XFree86.org:/pub/XFree86/current"
url="ftp://ftp.XFree86.org/pub/XFree86/current">

XFree86のFreeBSD用バイナリコードは以下のanonymous FTPサイトより入手可
能です。

<url name="ftp.XFree86.org:/pub/XFree86/current/binaries/FreeBSD-2.0.5"
url="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/FreeBSD-2.0.5">
<p>
<url name="XFree86.cdrom.com:/pub/XFree86/current/binaries/FreeBSD-2.0.5"
url="ftp://XFree86.cdrom.com/pub/XFree86/current/binaries/FreeBSD-2.0.5">


このファイルに関して、コメントや提案がある場合には、
<em/Rich-Murphey@Rice.edu/ または、<em/XFree86@XFree86.org/
にE-Mailを送って下さい。それを反映させることができるでしょう。

<sect>バイナリコードのインストール
<p>
ディスク容量を節約したい場合は、まず、展開するアーカイブを選択します。どれを
展開すべきかわからず、かつ、52Mバイト以上ののディスク容量がある場合は、全て
展開するのが確実です。

最低限、<tt/X312*.tgz/のうち、'必須アーカイブ'に加え、少なくとも一つ、
使用するVGAカードに適合するXサーバを展開することが必要です。最低限必
要な実行用バイナリのみをインストールする場合、9Mバイトのディスク容量が必要
です。

<descrip>
<tag/必須アーカイブ(6.7Mb):/

<descrip>
<tag/X312bin.tgz/
	全ての実行可能なXのクライアントアプリケーションソフトと共有ライブラリ
<tag/X312fnts.tgz/
	75 dpiフォント他
<tag/X312lib.tgz/
	実行時に必要なデータファィル
</descrip>
<tag/カスタマイズ済みの定義ファイルがない場合必要なアーカイブ:

<descrip>
<tag/X312xicf.tgz/
	xinit実行時に参照されるカスタマイズ用定義ファイル
<tag/X312xdcf.tgz/
	xdm実行時に参照されるカスタマイズ用定義ファイル
</descrip>

<tag/サーバアーカイブ(少なくとも一つ選択) (~2.3Mb):/

<descrip>
<tag/X3128514.tgz/
	IBM 8514 および完全互換チップ用8-bitカラーサーバ
<tag/X312AGX.tgz/
	AGX,XGAボード用 8,16-bitカラーサーバ
<tag/X312Ma32.tgz/
	ATI Mach32ボード用 8,16-bitカラーサーバ
<tag/X312Ma64.tgz/
	ATI Mach64ボード用 8,16,24-bitカラーサーバ
<tag/X312Ma8.tgz/
	ATI Mach8ボード用 8-bitカラーサーバ
<tag/X312Mono.tgz/
	VGA,Super-VGA,Hercules,その他のボード用1-bitモノクロサーバ
<tag/X312P9K.tgz/
	Weitek P9000ボード(Diamond Viper)用 8,16,24-bitカラーサーバ
<tag/X312S3.tgz/
	S3 ボード(&num;9 GXE,Actix GE32,SPEA Mercury,STB Pegasus)用 8,16,24-bitカラーサーバ
<tag/X312SVGA.tgz/
	Super-VGAカード用 8-bitカラーサーバ
<tag/X312VG16.tgz/
	VGA,Super-VGAカード用 4-bitカラーサーバ
<tag/X312W32.tgz/
	ET4000/W32,/W32i,W32pカード用 8-bitカラーサーバ
<tag/X312nest.tgz/
	他のdisplay上でクライアントwindowとして動作するネスト（いれ子）サーバ
</descrip>

<tag/ オプショナル:/
<descrip>

<tag/X312doc.tgz/
     (.5Mb) READMEs

<tag/X312man.tgz/
     (1.7Mb) man pages
<tag/X312f100.tgz/
     (1.8Mb)100dpiフォント
<tag/X312fscl.tgz/
     (1.6Mb)Speedo,Type1 フォント
<tag/X312fnon.tgz/
     (3.3Mb)日本語、中国語、その他の非英語用フォント
<tag/X312fcyr.tgz/
     (.4Mb)キリル文字フォント
<tag/X312fsrv.tgz/
     (.3Mb)フォントサーバとそのman page
<tag/X312prog.tgz/
     (3.9Mb)コンパイル時にのみ必要なconfig,lib*.a,*.hファイル
<tag/X312link.tgz/
     (7.8Mb)Xサーバの再構成キット
<tag/X312pex.tgz/
     (.5Mb)PEXアプリケーションで必要なPEX フォント,共有ライブラリ
<tag/X312lbx.tgz/
     (.2Mb)狭帯域X proxy サーバとそのライブラリ
</descrip>
</descrip>

独立したxdmアーカイブは無くなったことに注意して下さい。FreeBSD-2.0や
それ以降では、これを共有ライブラリで扱っているため、xdmバイナリ自身には
desは含まれず、独立したtarアーカイブとして提供する必要が無くなりました。

<sect1>フルインストール
<p>
<enum>
<item>  いくつかの実行可能ファイルはset-user-idされるのでアーカイブを展開する
	ために必ずrootでログインしなければなりません。rootでなく通常ユーザで
	展開するとサーバは異常終了する可能性があります。また、Xサーバは特別な
	パーミッション（ファイル属性）を必要とするので``<tt/umask/''の値を
	<tt/022/ に設定しなければなりません。
<tscreen><verb>
 % su
 # umask 022
</verb></tscreen>

<item>  <tt>/usr</tt>パーティションに52Mb以上の空き容量がある場合、
	``<tt>cd /usr</tt>''として、３にスキップして下さい。無い場合は、
	他のパーティションにディレクトリを作り、<tt>/usr</tt>の中へシ
	ンボリックリンクをはります。

<tscreen><verb>
 # cd /usr/local
 # mkdir X11R6
 # ln -s /usr/local/X11R6 /usr/X11R6
</verb></tscreen>

<item>全アーカイブを展開

shを使っている場合（rootは多くの場合こちら）:

<tscreen><verb>
 # for i in X312*.tgz; do
 #   tar -xzf $i
 # done
</verb></tscreen>

またはcshを使っている場合:(訳注:現在のFreeBSDではrootも標準でcsh)

<tscreen><verb>
 % foreach i (X312*.tgz)
 %   tar -xzf $i
 % end
</verb></tscreen>


<item> 	使用しているビデオボードに適合するサーバを指し示すように``<tt/X/''
	という名前でシンボリックリンクを作成します。それぞれのサーバがどの
	ビデオチップをサポートするかは、<em/XF86_*/ のman pagesに示されて
	います。たとえば、ET4000ベースのカードの場合は、XF86_SVGAサーバを
	使用します。


<tscreen><verb>
 # cd /usr/X11R6/bin; rm X; ln -s XF86_SVGA X
</verb></tscreen>
</enum>

<sect1>最小インストール
<p>
最初に上記の1,2を実行します。そして、必須アーカイブを展開します。

<tscreen><verb>
 # for i in bin fnts lib xicf; do
 #   tar -xzf  X312$i.tgz
 # done
</verb></tscreen>

使用しているvgaカードに適合するサーバアーカイブを展開します。
それぞれのサーバがどのビデオチップをサポートするかは、サーバののman pages
<tt>X11R6/man/man1/XF86_*</tt>示されています。たとえば、ET4000ベースのカ
ードの場合は、XF86_SVGAサーバを使用します。

<tscreen><verb>
 # tar -xzf X312SVGA.tgz
 # cd /usr/X11R6/bin; rm X; ln -s XF86_SVGA X
</verb></tscreen>

<sect1>フルインストール、または最小インストール後にすること:
<p>
まだ行われていない場合は、shのために<tt>/etc/profile</tt>内のデフォルトの
パスに、また、cshのために<tt>/etc/csh.login</tt>に/usr/X11R6/binを追加します。

<tscreen><verb>
 # echo 'set path = ($path /usr/X11R6/bin)' >>/etc/csh.login
 # echo 'PATH=$PATH:/usr/X11R6/bin' >>/etc/profile
</verb></tscreen>

または、Xを使用する全ユーザのシェルの``path''変数に<tt>/usr/X11R6/bin</tt>
が入るようにします。

その後リブートするか、rootになって共有ライブラリが<tt/ld.so/のキャッシュに
入るように<tt/ldconfig/を実行します。

<tscreen><verb>
 # ldconfig /usr/lib /usr/local/lib /usr/X11R6/lib
</verb></tscreen>

設定済みの<tt>X11R6/lib/X11/xinit/xinitrc</tt>または、
<tt>X11R6/lib/X11/xdm/* </tt>がある場合、<tt/xinit-config/または
<tt/xdm-config/のアーカイブを省略するか、別にの場所に展開し、必要な設定に応
じてマージします。

<tt/fscl/と<tt/f100/アーカイブはオプショナルで、ディスク容量を節約したい場合
には省略可能です。また、オプショナルな<tt/link/アーカイブはXサーバのリコンフ
ィグやカスタマイズを可能にします。オプショナルな<tt/prog/アーカイブは、Ｘの
アプリケーションソフトを作成したりコンパイルする場合にのみ必要です。オプショ
ナルな<tt/pex/アーカイブはpexクライアントや3Dグラフィックアプリケーションソ
フトの作成のためのライブラリを含みます。

<quote>
<bf/Note:/ フォントファィルはuncompressする必要はありませんが、もし、それらを
uncompressする場合は、該当するディレクトリで、<tt/mkfontdir/を実行しなけれ
ばなりません。それを行わないと、``<tt/could not open dfault font 'fixed'/ ''
とメッセージを出力して、サーバは異常終了します。
</quote>

標準的なFreeBSD 1.1.5システムで使用する場合、この章の残りの部分を省略
できます。それ以外の場合、login process(getty)が動作している、予備の
仮想コンソールがあるか確認します。まず、いくつの仮想コンソールがあるか
確認します。

<tscreen><verb>
 % dmesg|grep sc
 sc0 at 0x60-0x6f irq 1 on motherboard
 sc0: VGA color <8 virtual consoles>
</verb></tscreen>

そして、gettyが有効化されていない<tt/ttyv?/デバイスが少なくとも１つあるか、
<tt>/etc/ttys</tt>を確認します。FreeBSD 1.1.5では、最初の3つが``on''で最後の1
つが``off''になっていて、3つだけgettyが実行されています。


<tscreen><verb>
 % grep ttyv /etc/ttys
 ttyv0	"/usr/libexec/getty Pc"	cons25	on secure
 ttyv1	"/usr/libexec/getty Pc" cons25	on secure
 ttyv2	"/usr/libexec/getty Pc" cons25	on secure
 ttyv3	"/usr/libexec/getty Pc" cons25	off secure
</verb></tscreen>

カーネルに少なくとも4つの仮想端末(VT)があり、3つだけgettyが実行されてい
る場合、これはたいへん適当な設定です。仮想端末が不足している場合、
<tt>/etc/ttys</tt>で``on''から``off''に変更し、gettyを1つ無効化するか、
下記で説明するように、より多くの仮想端末(VT)を使えるように新たなカーネル
を構成します。

<sect>ディスプレイマネージャ(xdm)のインストール
<p>
ディスプレイマネージャによって、PCをX端末のように使用することができます。
ディスプレイマネージャは、X下で動作するログインスクリーンを提供します。

最も簡単に、ブート時にディスプレイマネージャを自動的に起動するには、
使用されていない仮想端末に対して、<tt>/etc/ttys</tt>に以下の1行を追加し
ます。

<tscreen><verb>
 ttyv4	"/usr/X11R6/bin/xdm -nodaemon" xterm	on secure
</verb></tscreen>

<tt>/usr/X11R6/bin/X</tt>が使用しているビデオカードに適合するXサーバへのシ
ンボリックリンクになっていることを確認するか、または、
<tt>/usr/X11R6/lib/X11/xdm</tt>内の Xserversというファィルで、Xサーバのパス
名を指定する必要があります。

<tt>/etc/ttys</tt>の変更は、リブートするか、``<tt/kill -HUP 1/''としてinitd
に対して強制的に<tt>/etc/ttys</tt>の再読込を行わせないと効果がありません。
また、rootでログインし、コンソール上で手動により``<tt/xdm -nodaemon/''とし
てディスプレイマネージャをテストすることもできます。

<sect>ハードウエアに合わせたXの設定
<p>
どんなモニタ、ビデオカード、マウスで使用するか、<tt/XF86Config/でXサーバに
指示します。使用する正確なハードウエアを指示できるように<tt/XF86Config/
を<em/必ず/作成する必要があります。

XFree86-3.1は新しいファイルフォーマットを使用しています。<em/XF86Config/の
man pageと、一般的な内容の<url url=INSTALL.html name=INSTALL>ファイルを説
明書として参照して下さい。

XF86Configを生成する``xf86config''を使用することを強くお勧めします。
（訳注：PC98では``xf86config''を使用しないでサンプルのXF86Config.98を参照して
下さい。）

XFree86 2.x用の<tt/Xconfig/がある場合、reconfigを使用してその一部分を新しい
フォーマットに変換できます。

<tscreen><verb>
 # reconfig <Xconfig >XF86Config
</verb></tscreen>

そして、<em/XF86Config(4)/のman pageやテンプレートとして<tt/XF86Config.eg/
を参照して残りの部分を完成させます。

ハードウエアの損傷から保護するため、現在では一般ユーザのホームディレ
クトリの<tt/XF86Config/ファイルを読まず、<tt>/etc/XF86Config</tt>,
<tt>/usr/X11R6/lib/X11/XF86Config.</tt><em>hostname</em>,
<tt>/usr/X11R6/lib/X11/XF86Config</tt> になければなりません。

使用ハードウエアの以下の情報が必要です。
<itemize>
<item>マウスのタイプ、ボーレート、使用する/devのエントリ
<item>ビデオカードの使用チップセット(例:ET4000,S3,etc)
<item>モニタの同期周波数
</itemize>

マウスがどのデバイスに接続されているか知る最も簡単な方法は、``<tt/cat/''や
``<tt/kermit/''を使用して、マウスの出力を調べることです。マウスを接続し、
マウスを動かしたりクリックしたときに出力があるか確かめます。

<tscreen><verb>
 % cat < /dev/tty00
</verb></tscreen>

正しいマウスのデバイスがわからない場合は、``<tt/dmesg|grep sio/''として、
ブート時に認識されたデバイスのリストを取得します。

<tscreen><verb>
 % dmesg|grep sio
 sio0 at 0x3f8-0x3ff irq 4 on isa
</verb></tscreen>

そして、そのデバイスに適合する<tt>/dev</tt>エントリをさらに確認します。
エントリが無い場合は、<tt>/dev/MAKEDEV</tt>スクリプトを使って作ります。

<tscreen><verb>
 % cd /dev
 % sh MAKEDEV tty00
</verb></tscreen>

モニタ上の画面の大きさや位置を完全に調整するには、モニタの説明書から、
同期周波数に関する情報を入手する必要があります。

<sect>Xの実行
<p>
Xを実行するには、最小8Mbのメモリがあることを推奨します。サーバとウインドウマネ
ージャ、ディスプレイマネージャ、1つのxtermで、約8Mbの仮想メモリを使用します。

かりに常駐する部分のサイズは小さいとしても、8Mb のシステムではgcc 
のように数Mバイトを期待しているようなアプリケーションに十分なスペースは
残りません。

R6のサーバは4Mbのメモリでも動作する可能性はありますが、X下でのコンパイルには、
定常的なページングにより5,10倍の時間がかかります。

新しいユーザがXウィンドウを起動する最も簡単な方法は、
``<tt>startx >&amp; startx.log</tt>''と入力することです。エラーメッセージは
リダイレクトしないと、サーバがスクリーン上に上書きし、見えなくなってしまい
ます。

Xウィンドウから抜けるには、コンソールとして動作しているxterm中で``<tt/exit/''
と入力します。<em/xinit/,<em/startx/のman pageを参照し、ホームディレクトリ
に、<tt/.xinitrc/,<tt/.xserverrc/,<tt/.twmrc/のファイルを作成することで、
Xをカスタマイズできます。

<sect>Xサーバ用カーネルの再構築
<p>

FreeBSD-2.0,2.0.5のGENERICカーネルは、全く修正することなしにXFree86をサポート
しています。何らGENERICカーネルの変更や、特別なカーネルを構築する必要はありま
せん。
一般的な、BSDカーネルの構築に関する説明は、
<url name="smm.02.config.ps.Z" 
url="ftp://gatekeeper.dec.com/pub/BSD/manuals/smm.02.config.ps.Z">
にあります。これは、システム管理マニュアルのカーネル構築に関する章で、そのま
ま印刷できるポストスクリプト出力です。

カーネルコンフィグレーションファイルを削減したい場合でも、
(<tt>/usr/src/sys/i386/conf/GENERIC</tt>中にある)以下のような2行を消してはい
けません。どちらもXサポートのために必要です。

<tscreen><verb>
 options		XSERVER			#Xserver
 options		UCONSOLE		#X Console support
</verb></tscreen>

FreeBSD 2.0,2.0.5のGENERICカーネルでは、デフォルトでsysconsドライバが
設定されています。カーネルを再構築する場合、
<tt>/usr/src/sys/i386/conf/GENERIC</tt>の中にある以下のような行が必要
です。

<tscreen><verb>
 device		sc0	at isa? port "IO_KBD" tty irq 1 vector scintr
</verb></tscreen>

仮想端末の数は、NCONS オプションで指定できます。

<tscreen><verb>
 options		"NCONS=4"		#4 virtual consoles
</verb></tscreen>

この行がない場合はデフォルトの12になります。3章の終わりに記述したようにgetty
の数より多くの仮想端末が必要で、4が合理的な最小値です。

サーバは、pccons,syscons,pcvtなどいくつかのコンソールドライバをサポートします。
sysconsは、FreeBSD 1.1.5とそれ以降でデフォルトです。これらは実行時に検出される
ので、特にサーバに設定する必要はありません。

pcvtコンソールドライバはFreeBSD 1.0.2以降の<tt>/usr/port/util/pcvt</tt>にバン
ドルされています。また、以下からFTPで入手できます。

<url name="FreeBSD.cdrom.com:/pub/FreeBSD/FreeBSD-1.1/ports/util/pcvt"
url="ftp://FreeBSD.cdrom.com/pub/FreeBSD/FreeBSD-1.1/ports/util/pcvt">

<url url="ftp://FreeBSD.cdrom.com/pub/FreeBSD/FreeBSD-1.1/ports/util/pcvt/README.FreeBSD" name="README.FreeBSD"> を参照して下さい。

これには完全なインストール手順が示してあります。

XFree86サーバは、MIT-SHM extensionをサポートしています。GENERICカーネルは、
これをサポートしていないので、これらを使用したい場合は、SYSV共有メモリサポート
を有効にして構築します。それには、カーネルコンフィグレーションファイルに
以下の行を加えます。

<tscreen><verb>
 options		SYSVSHM			# System V shared memory
 options		SYSVSEM			# System V semaphores
 options		SYSVMSG			# System V message queues
</verb></tscreen>

SoundBlaster 16をIRQ 2(9)で使用する場合、sb16_dsp.cにパッチが必要です。
そうしないとSoundBlasterを有効にしたカーネルは、IRQ9が存在しないとエラーを
出し、Xサーバがロックアップしてしまいます。

IOアドレスが重なるので、S3カードとシリアルポートのCOM4の両方を単一システム
上で使用することはできません。

<sect>XFree86の再構築
<p>
Xサーバリンクキットは、最小限のディスク容量でXサーバの構築を可能にします。
単に展開して、<tt/xf86sire.def/を適当に変更し、``<tt>./mkmf'</tt>',
``<tt>make</tt>''としてリンクします。詳しくは、
<url name=README.LinkKit url=LinkKit.html> を参照して下さい。

ソースツリーは、コンパイル前に約114Mb、``<tt/make World/''後はさらに100Mbの
ディスク容量が必要です。コンパイル前に、<tt>xc/config/cf</tt>内の
<tt>xf86site.def</tt>,<tt>site.def</tt>を編集し、配布物を設定します。
デフォルトでコンフィグファィルは共有ライブラリを構築するように設定されてい
ます。共有ライブラリがサポートされないFreeBSDのバージョンを使用している場
合は、以下の行を<tt>site.def</tt>に追加します。

<tscreen><verb>
 #define BuildBsdSharedLibs		NO
</verb></tscreen>

また、使用しているシステムがSYSV共有メモリをサポートしてない場合（たとえば、
<tt>&lt;sys/shm.h&gt;</tt>ヘッダーがない場合）、以下の行を<tt/site.def/に
追加して、MIT-SHM extensionを無効にしてください。

<tscreen><verb>
 #define HasShm				NO
</verb></tscreen>

FreeBSD-1.1以降でコンパイルする場合、<tt>xc/config/cf/FreeBSD.cf</tt>を編集
して、OSバージョンのパラメータを正しく設定します。そして、以下のように入力し
ます。

<tscreen><verb>
 make World
</verb></tscreen>

旧バージョンのFreeBSD(1.1より前)で使用する場合、以下のように入力します。

<tscreen><verb>
 make World BOOTSTRAPCFLAGS=-D__FreeBSD__
</verb></tscreen>


<sect>他のXクライアントの構築
<p>
新しいクライアント(X アプリケーション)を構築する最も簡単な方法は、
<tt/Imakefile/がその中に含まれている場合、<tt/xmkmf/を使うことです。
``<tt/xmkmf -a/'' と入力し、Makefileを作成し、``<tt/make/''と入力します。
新しくman pageを追加したときはかならず、
``<tt>makewhatis /usr/X11R6/man</tt>''を実行して<tt/whatis.db/をアップ
デートします。

FreeBSD 1.0以前のシステムでは、コンパイル中、ccの``Virtual memory exhausted''
というメッセージを避けるために、データとスタックサイズの制限を引き上げます。
(cshでは``<tt/limit datasize 32M/'',``<tt/limit stacksize 16M/''と入力します。)
FreeBSD 2.0以降では、デフォルトが十分大きいので、これらの必要はありません。

<bf/Note:/ XFree86 2.1とFreeBSD 1.1から、<bf/__386BSD__/のシンボルはコンパイ
ラでもXのコンフィグファイルでも定義されていません。クライアントをBSDシステム
に移植する場合、完全にBSD仕様のコードになるようにシンボル <bf/BSD/を使用して
下さい。このシンボルの値で、異なったBSDリリースを識別することができます。た
とえば、Net-2やそれ以降のリリースに依存するの場合には以下のように使用できます。

<tscreen>
#if (BSD >= 199103)
</tscreen>

このシンボル<bf/BSD/が正しく定義されるように、これが必要なソースの中で
<<tt>&lt;sys/param.h&gt;</tt>
をインクルードするようにします。XFree86 3.1.1以降、*BSDシステムでは、シンボル
<bf/CSRG_BASED/が定義されていることに注意して下さい。これは、
<tt>&lt;sys/param.h&gt;</tt> のインクルードを保護するために使われます。

実際には特定のi386 BSD派生OSに依存したコードでは、

FreeBSD用に<bf/__FreeBSD__/、  NetBSD用に<bf/__NetBSD__/、
386BSD用に<bf/__386BSD__/、BSD/386用に<bf/__bsdi__/
が使われています。

<sect>謝辞
<p>
以下の方々に感謝いたします。

 <itemize>
<item> <bf/Pace Willison/  (最初に*BSDへ対応)
<item> <bf/Amancio Hasty/ (386BSDカーネルとS3チップセットへの対応)
<item> <bf/David Greenman, Nate Williams, Jordan Hubbard/
	(FreeBSDカーネルへの対応)
<item> <bf/Rod Grimes/, <bf/Jordan Hubbard/,<bf/Jack Velte/ 
	(Walnut Creek Cdromの機材の利用)
<item> <bf/Orest Zborowski/, <bf/Simon Cooper/ ,<bf/Dirk Hohndel/
	(Linuxの配布物からアイデアの提供)
</itemize>

<p>また、日本語訳にあたりアドバイスをいただいたFreeBSD PC98移植チーム
の方々に感謝いたします。日本語訳に関するコメントは
<em/&lt;tsuka@kawalab.dnj.ynu.ac.jp&gt;/までお願いします。
<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/FreeBSD.sgml,v 3.1 1997/01/26 04:34:17 dawes Exp $
</verb>
</article>

