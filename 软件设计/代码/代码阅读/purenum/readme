------------------
Purenum 0.4e alpha
------------------
README
------------------


See 'purenum.txt' for detailed info about Purenum.

To quickly try out Purenum type the following:

 # make final
 # ./testinteger

The makefile assumes that g++, the GNU C++ compiler, is in your path.
You should see output looking much like this:


# make final

[ temporary files removed ]
[ final product files removed ]
integer.o
testinteger.o
testinteger
testprimes.o
testprimes
array.o
testarray.o
testarray
[ final product files stripped ]
[ temporary files removed ]

# ./testinteger

class Int (Purenum 0.4e alpha)
biggest possible integer on this hardware is 4294967295

Int created from string "5000000000" is 5000000000
Int incremented is 5000000001
Int incremented is 5000000002
Int decremented is 5000000001
Int plus itself is 10000000002

Int reinitialized from unsigned int 1234567890 is 1234567890
Int multiplied by 10 is 12345678900
Int divided by 2 is 6172839450
Int divided by 5 is 1234567890

Int reinitialized from string "4294967296" is 4294967296
Int squared is 18446744073709551616
Int divided by 10000000000 is 1844674407

Int from "333333333322222222221111111111" is 333333333322222222221111111111
Int multiplied by 2 is 666666666644444444442222222222
Int squared is 444444444414814814812345679012148148148162962962963950617284

# make

Usage: make <option>
       make final ------ compile for product release (optimizations on)
       make debug ------ compile for development (debugging on)
       make what  ------ report all the things this makefile can build
       make tar   ------ make a tar of this entire directory
       make gprof ------ compile final plus gprof information
       make clean ------ clean up temporary files

