%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: opencl.dvi
%%Pages: 20
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips opencl.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.10.14:0303
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (opencl.dvi)
@start
%DVIPSBitmapFont: Fa cmsy10 10 1
/Fa 1 1 df<007FB81280B912C0A26C17803204799641> 0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmti10 10 30
/Fb 30 122 df<EA03C0EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013
C01201EA038013005A120E5A5A5A5A5A0D197A8819> 44 D<120EEA3F80127F12FFA313
00127E123C0909778819> 46 D<EC03F8EC0FFE91383C0F809138F007C0903901E003E0
D903C013F09038078001020013F8130E131E90391C6000FCEB3870EC30011370A213F013
E0EC70030001016013F813C014E0ECC00701C114F0903881800F018314E09039C7001FC0
01FEEB3F80D80078140090C7127E5D4A5A4A5AEC07C0EC1F80023EC7FC14FCEB01F0EB07
C0495A011EC8FC137C4914C0484813015B485A4848130348C71380000E1407001E140F48
EC1F00D83FF85B397FFFC07E39783FFFFCEA700FD8F0075BD8E0015B6D13C0021FC7FC26
3A79B72A> 50 D<133C137E13FF5AA313FE13FCEA00701300B2120EEA3F80127F12FFA3
1300127E123C102477A319> 58 D<EE01C01603A21607160FA2161F83163FA2167F16FF
16EF150116CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C01403
1580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791
C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E> 65
D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC
4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B00
0317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816
707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6C
EB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B> 67
D<0107B8FCA3903A000FF000034BEB007F183E141F181E5DA2143FA25D181C147FA29238
000380A24A130718004A91C7FC5E13015E4A133E167E49B512FEA25EECF8000107147C16
3C4A1338A2010F147818E04A13701701011F16C016004A14031880013F150718004A5CA2
017F151E173E91C8123C177C4915FC4C5A4914070001ED7FF0B8FCA25F38397BB838> 69
D<0103B5D8F80FB512E0A390260007F8C7381FE0004B5DA2020F153F615DA2021F157F96
C7FC5DA2023F5D605DA2027F14016092C7FCA24A1403605CA249B7FC60A202FCC7120701
03150F605CA20107151F605CA2010F153F605CA2011F157F95C8FC5CA2013F5D5F5CA201
7F14015F91C7FC491403007FD9FE01B512F8B55BA243397CB83E> 72
D<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FE
A25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001
034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2
137FA291CAFCA25BA25B1201B512FCA337397BB838> 80 D<0007B812E0A25AD9F800EB
001F01C049EB07C0485AD900011403121E001C5C003C17801403123800785C0070160714
0700F01700485CA2140FC792C7FC5DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25C
A21301A25CA21303A25CA21307A25CA2130FA25CEB3FF0007FB512F8B6FCA2333971B83B
> 84 D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC0
01001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680
143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0
222677A42A> 97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0
F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300
A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C
5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926> I<147F903803FFC090
380FC1E090381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F0
91C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03
C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426> I<ED01F815FFA3150316
F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90
383E03FF017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F0100
5BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF07
6C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77B92A> I<147F903803FF
C090380FC1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC
07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0
003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426> I<ED
07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5D
A4141F5D010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA41303
5CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278
EA3FC0EA0F80264C82BA19> I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807
C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F
1207491400A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB
3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801
F8387C07E0381FFF80D803FEC8FC24367CA426> I<EB03F0EA01FFA3EA00075CA3130F5C
A3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F14
00485A16C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001
131C15F8163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801
E38048903800FF000038143C263B7BB92A> I<EB01C0EB07E014F0130F14E01307EB0380
90C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212
015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E
6C5AEA07F8EA01E0143879B619> I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA313
3F91C8FCA35B017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C
13E0EBF83891383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7
F8380FE1FCEBC07E147F80001F809039801F81C0A21583003F013F138001001303A21507
481500007E133EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926> 107
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915> I<D801E001FEEB
07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C
383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E
5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA800113
1C18F8033F153C00070403133849020013F0A24B1570000F17E049017E15F019E003FEEC
E1C0001FEE01E34949903800FF000007C70038143C3E2679A444> I<D801E013FE3A07F8
03FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C00070811480
4A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F8380
160316070007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE000
07C7EA0780292679A42F> I<147F903803FFC090380FC1F090381F00F8017E137C5B4848
137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115
FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F0
3803FFC0C648C7FC202677A42A> I<9039078007C090391FE03FF090393CF0787C903938
F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA2
5CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7
FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512
C0A3293580A42A> I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F803838
3FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA3
12075BA3120F5BA3121F5BA3123F90C9FC120E212679A423> 114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422> I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C> I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D> I<13F0D803FCEB01C0D8071EEB03E0D80E1F13
07121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012015B
5D0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE038
007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03
E06C485A383C1F80D80FFEC8FCEA03F0233679A428> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 2
/Fc 2 111 df<121C127FEAFF80A5EA7F00121C0909798817> 58
D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00
705B00605BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E12
0349010F133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE070000
1FEC0F0E49EB07FC0007C7EA01F02C267EA432> 110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsl10 10 22
/Fd 22 122 df<ED07F8ED7FFF913901FC0780913907E001C091391FC000E091383F0007
027E130F5C0101141F5C13034AEB0FC0EE030093C7FC13075CA5130F5CEE1F800007B7FC
A33A001FC0007F4AEB3F00A45E133F91C7127EA416FE5B017E5CA4150113FE495CA41503
1201495CA400031407B500E1B512C0A202C114802B3B7EBA2E> 12
D<14FF010713E090381F01F8903878007C01F8137E01FE7F0001801680A35BEA007090C7
FCA4EC0FFF49B5FC90390FFC3F00EB7FC03801FE00EA03F848485B485A4848137E485A00
7F150690C7FC15FE48ECFC0C481301A21403007F9038077C18140E3A3F801C7E303A1FC0
F83FF03A07FFE01FC0C69038000F8027277CA52A> 97 D<137FEA1FFF5BA212011200A3
5BA512015BA512035BEC1FC0EC7FF89038F1E03E9038F7801F3A07FE000F8049EB07C049
14E04913034914F0A2000F15F8491301A41503121F5BA41507003F15F090C7FC16E0150F
16C0151F481580ED3F005D6D137E007D5C3979C001F039F0E007E039E0781F8026C01FFE
C7FC380007F0253B78B92E> I<EC7F80903803FFF090380FC07C90383F000E017C131F49
137F000114FF485A485A120F484813FE153848481300A248C8FCA35A5AA75A7EA2151C12
7E15386C143015706C6C13E0000FEB01C03907C007803903F03E003800FFF8EB1FC02027
7AA525> I<EE3F80ED0FFF1700A2150082A3167EA416FEA25EA41501A25E147F903803FF
E190380FC0F190383F003B017C131F48486D5A48481307120749130348481307121F495C
123F90C7FC5A150F5A485DA4151FA2485DA46C143F127E4BC7FC123E003F5C6C5B6C6C48
7F3A07C00F7FFC3803E03C2600FFF05B90261FC07EC7FC293B7AB92E> I<147F903803FF
E090380F81F090383E00FC49137C48487F4848133F0007805B48481480121F5B123FA248
C7FCA3B71200A248C9FCA65A7EA2007E140EA25D6C14186C14386D5B6C6C485A3907E003
802601F01FC7FC38007FFCEB1FE021277BA525> I<157F913801FFC0913807C1E091381F
87F0EC3F0F147E14FCA2D901F813E0ED07C04948C7FCA413075CA5130F5CA20007B512E0
A326001FC0C7FC5CA5133F91C8FCA55B137EA513FE5BA512015BA4487EB512F0A3243B7E
BA19> I<EE07E091391FE01FF091397FF87878903A01F03FE0F8903907E01F80D90FC014
F090261F800F1360D93F00EBC000A2017E1307150F13FE5BA44B5AA2017C49C7FC153E6D
5B013F5B90387F83F09038E7FFC0D9E0FEC8FC4848C9FCA57F7F90B512E015FE6C6E7E6D
8048B67E3A07C0003FF0D81F80130748C76C7E003E140148140012FC5AA315015E4B5A00
7C1407007E4A5A6C023FC7FCD80F80137E3903F007F8C6B512C0D91FFCC8FC2D387FA52A
> I<EB01FC137F5CA213071303A35CA513075CA5130F5CED3FC0EDFFF09138C3C0F89138
CF007CD91FDC137E5C02F0133E4A133F5C5E4948137EA291C7FCA316FE5B017E5CA41501
13FE495CA415031201495CA400031407B500E1B512C0A202C114802A3A7EB92E> I<EB01
C0EB07F0130F14F8A214F0A214E0EB038090C7FCAAEB0FC0EA03FFA3EA003FEB1F80A513
3F1400A55B137EA513FE5BA512015BA41203B512C0A315387EB717> I<EB01FC137F5CA2
13071303A35CA513075CA5130F5CA2923807FFF0A217E0011F6D1300028013F816E01680
4BC7FC151E013F13384A5A4A5AEC03801407140F90387F3FC0EB7E7FECE7E090387F87F0
1403017E7FEBFE0101FC7F140081157E811201496D7E82A282486C80B500E0B5FCA25C2C
3A7EB92C> 107 D<14FC137F14F8A213071303A314F0A5130714E0A5130F14C0A5131F14
80A5133F1400A55B137EA513FE5BA512015BA41203B512E014C0A2163A7EB917> I<9039
0FC03FC0D803FFEBFFF0489038C3C0F89138CF007C26003FDC137E6D5A02F0133E4A133F
5C5E4948137EA291C7FCA316FE5B017E5CA4150113FE495CA415031201495CA400031407
B500E1B512C0A202C114802A257EA42E> 110 D<EC3FC0903801FFF8903807C07C90381F
001F017CEB0F8049EB07C0485A4848EB03E0120749EB01F0485A001F15F8A248C7FCA25A
A2007E140312FEA416F015075A16E0150F16C07E007EEC1F801600003E143E003F5C6C5C
6C6C485A3907C007E03901F81F802600FFFEC7FCEB1FF025277BA52A> I<903901F80FE0
017FEB3FFC01FFEBF03F9139FBC00F80902607FF0013C06D48EB07E04AEB03F05C4A14F8
1601010715FC5CA5130F5CA41603011F15F85CEE07F0A2EE0FE0A2013FEC1FC01780163F
6EEB7F0016FE9138E001F890397F7003F090397E3C0FC0DA0FFFC7FCEC03F891C9FC13FE
A25BA41201A25BA2487EB512E0A32E3581A42E> I<90381F807C3903FF81FF489038878F
80EC8E1F39003F9C3FEB1F3814709138601F00ECE0044AC7FC133F5CA291C8FCA35B137E
A513FE5BA512015BA4487EB512F0A321257EA421> 114 D<903803FE0C90380FFF9C9038
3E01FCEBF0004848137C4848133C1538485AA215181538487E1530D807F0130013FCEBFF
E06C13FC14FFC614806D13C0011F13E01300EC0FF01407003013031401A31238007814E0
A3007CEB03C0EC0780127EB4EB1F0038F3C07C38E1FFF038C03F801E277DA521> I<1306
A4130EA2130C131CA2133C137C13FC5B12031207001FB5FCB6FCA23803F8005BA512075B
A5120F5BA5001F130C1380A4141C003F131813007E1438EB80301470380FC0E03807C1C0
3803FF8038007E00183479B220> I<D801F8EB03F0007F14FF00FF5BA20007EB000F6C48
EB07E0A4150F12074914C0A4151F120F491480A4153F121F491400A35DA2003F5C90C75A
14017E14036D487E000F011E13F83807E0782601FFF013F03A007F80FC00252679A42E>
I<3A7FFFC01FFFB51280A23A07FC0007F86C48EB03E04914C06D1480000115001506A25D
7F00005C153815306D5B137E5DA24A5AEB3F0392C7FC5C1406148C131F1498A214F0130F
5C5CA25C130791C8FCA2282579A32C> I<B53A8FFFF01FFFA3260FF80090380007F86C48
017EEB03E018C00003EE0180033E1303180017066C6C137F5F15DF5FEC019F01FC6E5A00
00EB031F030F5B1406020E5C140CD97E1CEBC180141891263807C3C7FC1430026013C601
7F14E6D93FC013EC1503028013F8A202005B7F011E5C1501011C5C5E382579A33C> I<90
B538803FFE5A150026000FF8EB0FF06D48EB07C017801700010314065EA26E5B01011438
16305E8001005CA24B5A1503027E90C7FC1506A25D147F6E5A1538153015E0141F5DA25D
140F92C8FC140EA2140CA25C143814305CA2003E5B127E38FE018049C9FC5BEAFC0EEA70
1C1378EA3FE0EA0F802F3580A32C> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx12 12 51
/Fe 51 122 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010F
EB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280
B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E> 12
D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F> 46
D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>
49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD81F
806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9
FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC
0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C140149
140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038> I<ECFFF0010713FF011F14C0
017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C07FA66C5A
6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF16
C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF0487E
A2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFEEBFFFE6C
B612F800015D6C6C14C0011F49C7FC010113E02D427BC038> I<163FA25E5E5D5DA25D5D
5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB01F0EB03
E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12FCB91280
A5C8000F90C7FCAC027FB61280A531417DC038> I<0007150301E0143F01FFEB07FF91B6
FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF14
F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0A3
17F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E003F4A13
80D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC0101
13C02D427BC038> I<4AB47E021F13F0027F13FC49B6FC01079038807F8090390FFC001F
D93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE7F80EE1E00
003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9F01FFC9039
FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127FA5123FA217
F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038E01FFC6DB5
5A011F5C010714C0010191C7FC9038003FF02D427BC038> I<121E121F13FC90B712FEA4
5A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D15014B5A00F84A
5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2147F5D14FF
A25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238> I<EE1F80A24C7EA24C7EA34C
7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC80
4B7E02018115F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E
80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA2494882
84011F8491C97E4984133E017E82B6020FB612F0A54C457CC455> 65
D<B9FC18F018FE727E19E026003FFCC700077F05017F716C7E727E727EA2721380A37213
C0A74E1380A24E1300A24E5A4E5A4E5A4D5B05075B94B5128091B700FCC7FC18F018FF19
E002FCC7000113F8716C7EF01FFE727E7213801AC07213E0A27213F0A31AF8A71AF0A260
1AE0604E13C0604E138095B5120005075BBA12F86119C04EC7FC18E045447CC350> I<DC
FFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA
3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F4849161F5A
4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2123F
A27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E
6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7FC02
0715FC020115F0DA001F1480030001F8C8FC44467AC451> I<B9FC18F018FE727E19E026
003FFEC7001F13F805017F9438003FFF060F7F727F727F727F84737E737EA2737EA2737E
A21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B4E
5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356> I<BA12F8A4
85D8001F90C71201EF003F180F180318011800A2197E193EA3191EA21778A285A405F890
C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2F103C0A494C7FC
1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443447DC34A>
I<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E01803A31801A3EE
01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F16071603A31601A6
93C9FCAFB712F0A53C447CC346> I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803
023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E494881
4948814948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801
A34994C8FC12FFAD057FB612F0127F7FA3003FDC0001EBF000A27F7EA26C7FA26C7F807E
6C7F6C7F6D7E6D6C5D6D6C7E6D6D5C6D01F05C010101FE143F6D903AFFF001FF9F023F90
B6120F0207EDFC030201EDF000DA001F02C01330030001FCC9FC4C467AC458> I<B7D880
03B612FEA526003FFEC9EBF800B3A791B9FCA54AC9FCB3AAB7D88003B612FEA54F447CC3
58> I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A> I<B76C0103B512F8A5
26003FFEC93807E0004F5A4F5A077EC7FC614E5A4E5A4E5AF01F804EC8FC187E604D5AEF
07F0EF0FC04D5A4DC9FC177E4C5AEE03F04C5A4C5A4C7EEE7FF04C7E5D4B7F4B7F4B7FED
3F3FDB7E1F7F03FC806E486C7F4B7E4B6C7F0380804B6C7F4A7F717E84717F83717F8571
7F83717F85717F187F727E86727F84727F86727F84B76C90B612FCA54E447CC358> 75
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A> 77
D<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F
82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F
707F717E7113807113C019E0837113F07113F87113FC7113FE19FF847213F884848484A2
8484197F193F191FA2190F1907B61603190119001A78A24F447CC358> I<923807FFC092
B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C049
90C76C7FD91FFC6E6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0
A24890C96C13E0A24819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D
17FFA3003F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C
6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D
90B65A023F15F8020715C002004AC8FC030713C047467AC454> I<B9FC18F018FE727E19
E0D8001F90C7000F7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380
A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A54344
7DC34D> I<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E
727EA28684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC
18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F7313
1F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC3
54> 82 D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801F
FF3907FC00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA2
7FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C82
6C826C6C81011F810107811300020F80140003077FED007F82040F1380828212F082A282
A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB6
5AD8FC1F92C7FCD8F80714FC48C614F0480107138031467AC43E> I<003FBA12E0A59026
FE000FEB8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A4
00F819F8481978A5C81700B3B3A20107B8FCA545437CC24E> I<B76C010FB512F8A52600
3FFEC93803E000B3B3A9011F17076280190F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D
6D1403DA7FFC4A5A6EB4EC3FF0020F9039F003FFE06E90B61280020193C8FC6E6C14FC03
0F14E09226007FFEC9FC4D457CC356> I<B76C027FB5FCA5D8003F0180C9EAFC006D6D4B
5AA26D6D4B5A6D6D4B5A816D4D5A6D6D4B5A816D4DC7FC6E6C157E826E5E6E6D495A826E
4B5A6E6D495A6E7F4E5A6E6D495A6E7F4EC8FC6F6C137E6F1380606FEBC1F86F13E1EFF3
F06FEBF7E06F13FF606F5C8195C9FC705A163FB3A592B77EA550447EC355> 89
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36> 97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E> I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
> I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E> I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33> I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522> I<DAFFE0137E
010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC4848
903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C
495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F
7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0140748
48020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B
07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38> I<EB7F
C0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F91
39DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E> I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520> I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0
004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF
91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163F
B60003B512F8A535457DC43B> 107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457C
C420> I<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E48
80913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D
013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7C
AC5E> I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00
0390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>
I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA
3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A4
6C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7
FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38> I<90397FC00FF8B590B57E
02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A
6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913
806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB6
7EA536407DAC3E> I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE00
0313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7D
AC2E> 114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C712
1F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C80
0003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15
C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC
232F7CAD2C> I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B512
80B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F
006DB5FC6D13FC01015B9038003FE023407EBE2C> I<D97FC049B4FCB50103B5FCA50003
EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F14
07010313FE9026007FF0EBFC00372E7CAC3E> I<B6903803FFFCA5000101E09038003E00
6C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7
FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA3
6E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B> I<B5D8FE1FB539801FFFF0A50001
9027C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F
6F5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E1580
6D902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039
000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C
4C2C7EAB51> I<B500FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D6C49C7
FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E
6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49487E02
C08049486C7F49C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B> I<B69038
03FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E130301
0F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8
023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D
001F1303D83F805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A
6C5B000790CAFCEA01FC36407EAB3B> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmtt10 10 85
/Ff 85 126 df<121C127FEAFF80B1EA7F00AF123EC7FCA8121C127FA2EAFF80A3EA7F00
A2121C09346FB32C> 33 D<003C131E007F137F481480A66C1400A6007E7FA6003E133E
A3003C131E001C131C191977B32C> I<010F133C90381F807EA8013F13FE4A5AA4007FB6
12F0B712F8A4003F15F03A007E01F800A5EBFE0301FC5BA6003FB612F0B712F8A46C15F0
3A01F807E000A30003130F01F05BA86C486C5A25337DB22C> I<EB01C0497EA6EB0FFC90
387FFF8048B512E00007804880391FFBEFFC393FC3E1FE903803E07F007E80127C00FC15
8012F8157FA300FCEC3F00A2007E91C7FC127FEA3FC313FBEA1FFF6C13FC6C13FF000114
C06C6C7F011F13F801037F14E7ECE1FEECE07F81001880007E1580150F12FFA312FE151F
1600007E5C007F143ED83F8313FE9038C3E1FC391FFBEFF86CB55A6C5C6C5CC691C7FCEB
1FF8EB03E0A66D5A21417BB92C> I<D807801307D81FE0EB0F80151F487E486C133F1600
007C5CD8FCFC137EEAF87C15FE5D14015DA21403D8FCFC5BEA7CF8007F13075D383FF00F
D81FE05BA23807801FC75B143F92C7FCA25C147E14FE5CA213015CA213035C13075CA213
0F5C131FEC800FED3FC0013FEB7FE0140049EBFFF0017E13F9A2D9FE0113F801FC13F0A2
120113F8120313F015F90007010013F05B000F14FF49EB7FE0A20007EC3FC06C48EB0F00
25417DB92C> I<EB0FC0EB3FE0497E497E80EA01F8EBF07C147E0003133E13E0A5147E14
7C9138FC3FF89039F0F87FFCEA01F1EBF3F001F7EB3FF89138E01F009038FFC03F6CEB80
3EA2EC007E49137C485A486C13FC00075CEBFF01D80FDF5B381F9F81383F8F8390380FC3
E0387E07E75D38FC03F7EB01FF5D6D1410ED007C80A26CEBFF80D87E0113C0D87F03EBE0
FC3A3F87F7F1F89038FFE3FF6C01C113F06C13806C9038007FC0D801FCEB1F8026357EB3
2C> I<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A5B12075B
120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA26C7E7F12
077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438164272B9
2C> 40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F14C013
0FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714E0A2EB
0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270164279
B92C> I<EB0380497EA60020140800F8143E00FE14FE00FF13C1EBC7C7EBE7CF003FB512
F8000F14E0000314806C140038007FFCA248B5FC481480000F14E0003F14F839FFE7CFFE
EBC7C7EB07C100FE13C000F8143E0020140800001400A66D5A1F247AAA2C> I<147814FC
AF007FB612F0B712F8A46C15F0C700FCC7FCAF147825267DAB2C> I<EA0F80EA1FE0EA3F
F0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1FE0EA7FC0EAFF8013
0012FC12700E17718A2C> I<007FB6FCB71280A46C150021067B9B2C> I<121FEA3F80EA
7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C> I<1507ED0F80151FA2153F16005D15
7E15FE5D14015D14035DA214075D140F5D141F5D143F92C7FC5C147E14FE5CA213015C13
035C13075C130F5C131F5CA2133F91C8FC5B137E13FE5B12015B12035B12075BA2120F5B
121F5B123F90C9FC5A127E12FE5AA25A127821417BB92C> I<EB03F8EB0FFE90383FFF80
497F90B57E3901FE0FF03903F803F848486C7EEBE0004848137EA248487FA248C7EA1F80
A2003E140F007E15C0A3007C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F
00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FC
EB03F823357CB32C> I<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF139FEA
7C1F1200B3AE007FB512E0B612F0A36C14E01C3477B32C> I<EB0FF890387FFF8048B512
E00007804814FC391FF80FFE393FE001FF903880007F48C7EA3F80007E141F00FE15C015
0F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F16005D15FE4A5A14034A5A4A
5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03C04848
EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C> I<EB0FFC90387FFF8048B512E0
000714F84880391FF807FEEBC0004848137F6D7F1680151FA26C5A6CC7FCC8FC153F1600
5D15FE14014A5AEC1FF890381FFFF0495BA215F86D7F90380007FEEC00FF81ED3F80ED1F
C0150FA216E01507A2123C127EB4FC150F16C0A248141F007FEC3F806DEB7F006C6C5B39
1FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC23357CB32C> I<EC07F04A7E141F14
3FA2147EA214FCEB01F8A2EB03F0EB07E0A2EB0FC0EB1F80A2EB3F00137EA25B485AA248
5A5B1207485AA2485A48C7FCA2127E5AB712FC16FEA36C15FCC8EAF800AA91387FFFF091
B512F8A36E13F027347EB32C> I<000FB512FE4880A35D0180C8FCADEB83FE90389FFF80
90B512E015F8819038FE03FE9038F000FF01C07F49EB3F8090C7121F6C15C0C8120FA2ED
07E0A4123C127EB4FC150F16C0A248141F007EEC3F80007FEC7F006C6C5B6D485A391FF8
0FFC6CB55A6C5C000114C06C6C90C7FCEB0FF823347CB22C> I<EC3FC0903801FFF80107
7F011F7F497F90387FE07F9039FF003F804848137FEA03F8485A5B000FEC3F004848131E
4990C7FC123F90C9FCA25A127EEB03FE90381FFF80D8FC7F13E000FDB57EB67E9038FE07
FC9038F001FE9038C0007F49EB3F8090C7121F16C048140F16E01507A3127EA47E150F6D
14C0001F141F6D1480000F143F6DEB7F003907F801FE3903FE07FC6CB55A6C5C6D5B011F
1380D907FCC7FC23357CB32C> I<1278B712C016E0A316C000FCC7EA3F80ED7F0015FE00
785CC712014A5A4A5A5D140F5D4A5A143F92C7FC5C147E14FE5C13015CA2495AA213075C
A3495AA4495AA5133F91C8FCAA131E23357CB32C> I<EB07FC90383FFF8090B512E00003
14F84880390FFC07FE391FF001FF9038C0007F4848EB3F8090C7121F4815C0007E140FA5
6CEC1F80A26C6CEB3F006D5B390FF001FE3903FC07F86CB55A6C6C13C0D907FCC7FC9038
7FFFC048B512F03903FC07F8390FF001FE391FC0007F497F48C7EA1F80007EEC0FC0A248
EC07E0A7007EEC0FC0A2007F141F6C6CEB3F806C6CEB7F009038F001FF390FFC07FE6CB5
5A6C5CC614E0013F1380D907FCC7FC23357CB32C> I<EB07FCEB3FFF90B512C048804880
3907FC07F8390FF001FC48486C7ED83F80137E157F48C77E007EEC1F8012FE5AED0FC0A4
16E0A37E127E007F141F7E6D133F6C6C137F390FF001FF3807FC0F6CB6FC6C14F76C14C7
013F130FD90FF813C090C7FCA2151F1680153F1600000F5C486C137E486C13FE4A5A4A5A
14079038801FF0391FE07FE090B55A6C91C7FC6C5B000113F838007FC023357CB32C> I<
121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCAE121FEA3F80EA7FC0EAFFE0A5
EA7FC0EA3F80EA1F000B2470A32C> I<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA
0F80C7FCAEEA0F80EA1FC0EA3FE0127F13F0A4123F121F120F1201120313E01207EA0FC0
A2EA3F80EA7F005A5A12F812700C3071A32C> I<1507ED1F80153F15FF14034A1300EC1F
FC4A5AECFFE0491380010790C7FCEB0FFCEB3FF8EB7FE048485A4890C8FCEA0FFEEA1FF8
EA7FF0EAFFC05BA27FEA7FF0EA1FF8EA0FFEEA03FF6C13C06C6C7EEB3FF8EB0FFC6DB4FC
01017F6D13E0EC3FF86E7EEC07FF6E13801400153F151FED0700212A7BAD2C> I<007FB6
12F0B712F8A4003F15F0CAFCA8003FB612F0B712F8A46C15F025147DA22C> I<127012FC
7E6C7E13E06C7EEA1FFC6C7E3803FF80C67FEB7FF0EB1FF8EB0FFEEB03FF6D13C06D6C7E
EC3FF8EC0FFC6EB4FC0201138080A25C02071300EC0FFCEC3FF8EC7FE049485A4990C7FC
EB0FFEEB1FF8EB7FF0EBFFC000035BD80FFEC8FC485AEA7FF0485A138048C9FC5A127021
2A7BAD2C> I<EC7F80903803FFE0010F7F013F7F497F9038FFC0FE3901FE007FD803F87F
4848EB1F809038E00FCF390FC03FFF48484813C091B5FCEA3F01393E03F87F903907F03F
E0007EEBE01F397C0FC00FEC8007A2EAFC1F00F8EB0003A900FCEB8007D87C0F14C0A2EC
C00F3A7E07E01F80003EEBF03F903903F87F00393F01FFFED81F805B6E5A6C6C6C5A3907
E00FC09039F00007C06C6CEB0FE0D801FE131F3900FFC0FF6DB512C06D1480010FEBFE00
010313F89038007FC023337CB22C> 64 D<14FE497EA4497FA214EFA2130781A214C7A2
010F7FA314C390381F83F0A590383F01F8A490387E00FCA549137E90B512FEA34880A290
38F8003FA34848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E2734
7EB32C> I<007FB512E015F8B612FE6C8016C03903F0003FED0FE0ED07F01503A2ED01F8
A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0001FE0ED07F0ED
03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0007FB612E016C0B712
806CECFE0015F027337FB22C> I<02FF13700107EBE0F84913F9013F13FD4913FFEBFF81
3901FE007F4848131FD807F0130F1507485A491303485A150148C7FCA25A007EEC00F016
00A212FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C13036D14F06C6C130716E0D8
03FC131F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13F00100138025357DB32C
> I<007FB5FCB612C015F0816C803907E003FEEC00FFED7F80153FED1FC0ED0FE0A21507
16F0150316F81501A4ED00FCACED01F8A3150316F0A2150716E0150FED1FC0153FED7F80
EDFF00EC03FE007FB55AB65A5D15C06C91C7FC26337EB22C> I<007FB612F0B712F8A37E
3903F00001A7ED00F01600A4EC01E04A7EA490B5FCA5EBF003A46E5A91C8FCA5163C167E
A8007FB612FEB7FCA36C15FC27337EB22C> I<007FB612F8B712FCA37ED803F0C7FCA716
781600A515F04A7EA490B5FCA5EBF001A46E5A92C7FCAD387FFFE0B5FC805C7E26337EB2
2C> I<903901FC038090390FFF87C04913EF017F13FF90B6FC4813073803FC01497E4848
137F4848133F49131F121F5B003F140F90C7FCA2127EED078092C7FCA212FE5AA8913803
FFF84A13FCA27E007E6D13F89138000FC0A36C141FA27F121F6D133F120F6D137F6C7E6C
6C13FF6D5A3801FF076C90B5FC6D13EF011F13CF6DEB0780D901FCC7FC26357DB32C> I<
D87FFEEBFFFCB54813FEA36C486C13FCD807E0EB0FC0B190B6FCA59038E0000FB3D87FFE
EBFFFCB54813FEA36C486C13FC27337EB22C> I<007FB512F8B612FCA36C14F839000FC0
00B3B3A5007FB512F8B612FCA36C14F81E3379B22C> I<D87FFCEB7FF8486CEBFFFCA36C
48EB7FF8D807C0EB1F80153FED7F00157E5D4A5A14034A5A5D4A5A4A5A143F4AC7FC147E
5CEBC1F813C3EBC7FCA2EBCFFEEBDFBEEBFFBF141F01FE7F496C7E13F86E7EEBF00301E0
7FEBC001816E7EA2157E153E153F811680ED0FC0A2ED07E0D87FFCEB1FFC486CEB3FFEA3
6C48EB1FFC27337EB22C> 75 D<387FFFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8
007FB6FCB7FCA36C15F025337DB22C> I<D87FE0EB0FFC486CEB1FFEA26D133F007F15FC
000F15E001BC137BA4019E13F3A3EB9F01A2018F13E3A21483A2018713C314C7A2018313
83A214EFA201811303A214FFEB80FEA3147C14381400ACD87FF0EB1FFC486CEB3FFEA36C
48EB1FFC27337EB22C> I<D87FF0EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013
DEA213DF13CFA2148013C714C0A213C314E0A213C114F0A213C014F8A2147CA3143EA214
1E141FA2140F1587A2140715C7A2140315E71401A215F71400A215FFD87FFC137F487E15
3FA26C48EB1F8027337EB22C> I<EB7FFF0003B512E0000F14F848804880EBE003EB8000
48C7127FA2007E80A300FE158048141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEB
F00790B5FC6C5C6C5C000314E0C66C90C7FC21357BB32C> I<007FB512C0B612F88115FF
6C15802603F00013C0153FED0FE0ED07F0A2150316F81501A6150316F01507A2ED0FE0ED
3FC015FF90B61280160015FC5D15C001F0C8FCB0387FFF80B57EA36C5B25337EB22C> I<
387FFFFCB67E15E015F86C803907E007FE1401EC007F6F7E151FA26F7EA64B5AA2153F4B
C7FCEC01FE140790B55A5D15E081819038E007FCEC01FE1400157F81A8160FEE1F80A5D8
7FFEEB1FBFB5ECFF00815E6C486D5AC8EA01F029347EB22C> 82
D<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC003497E48C7FC007E147F
00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFCEBFFC06C13FC0003EBFF
C06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1FC0A2ED0FE0A200781407
12FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90B55A5D00F914F0D8F83F
13C0D8700790C7FC23357CB32C> I<007FB612FCB712FEA43AFC007E007EA70078153CC7
1400B3AF90383FFFFCA2497F6D5BA227337EB22C> I<3B7FFF803FFFC0B56C4813E0A36C
496C13C03B03F00001F800B3AF6D130300015DA26D130700005D6D130F017F495A6D6C48
5AECE0FF6DB5C7FC6D5B010313F86D5B9038003F802B3480B22C> I<D87FFCEB7FFC486C
EBFFFEA36C48EB7FFCD80FC0EB07E06D130F000715C0A36D131F00031580A36D133F0001
1500A36D5B0000147EA4017E5BA46D485AA490381F83F0A4010F5B14C7A301075BA214EF
A201035BA214FFA26D90C7FCA46D5A27347EB22C> I<D87FF0EB07FF486C491380A36C48
6D1300001FC8127CA46C6C5CA76C6C495AA4143E147FA33A03E0FF83E0A214F7A201E113
C3A3000101E35BA201F113C701F313E7A314C1A200005DA201F713F71480A301FF13FF01
7F91C7FC4A7EA4013E133E29347FB22C> I<3A3FFF03FFE0484913F0148714076C6D13E0
3A01F800FE007F0000495A13FE017E5BEB7F03013F5B1487011F5B14CF010F5B14FF6D5B
A26D90C7FCA26D5AA26D5AA2497EA2497EA2497F81EB0FCF81EB1FC7EC87F0EB3F83EC03
F8EB7F01017E7FEBFE00497F0001147E49137F000380491480151FD87FFEEBFFFC6D5AB5
14FE6C15FC497E27337EB22C> I<D87FFCEB7FFC486CEBFFFEA36C48EB7FFCD807F0EB0F
C0151F000315806D133F12016DEB7F0012006D137E017E13FE017F5BEB3F01EC81F8131F
EC83F0EB0FC314C7903807E7E0A201035B14EF6DB45AA292C7FC7F5C147EB0903807FFE0
497FA36D5B27337EB22C> I<003FB612C04815E0A4007EC7EA1FC0ED3F80A2ED7F00157E
15FE4A5A003C5CC712034A5AA24A5A4A5AA24A5A4AC7FCA214FE495AA2495A495AA2495A
495AA2495A49C8FCA213FE485AA24848EB03C049EB07E01207485A5B121F485AA248C7FC
B7FCA46C15C023337CB22C> I<387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA3
6C13FC17416FB92C> I<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17
417DB92C> 93 D<007FB6FCB71280A46C150021067B7D2C> 95 D<3801FFF0000713FE00
1F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5
FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6C
B612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C> 97
D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138801F
E091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036D
EB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027337F
B22C> I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E4848
131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE
03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C> I<EC0FFE4A7EA380EC003F
AAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC007E
80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE
6C143FEB3FFC90390FF01FFC27337DB22C> I<EB03FE90381FFFC0017F13F048B57E4880
3907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FC
A416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13
FF000190B512806C1500013F13FC010F13F00101138023247CA32C> I<EC0FF8EC3FFE91
B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26
000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C> I<ED03F8903907F80FFC90391F
FE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0001300
001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7
FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848
C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB
0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C> I<EA
7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02
807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C> I<1307
EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512
FCB612FEA36C14FC1F3479B32C> I<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091C7FCA7
48B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414005CEB01FEEBFFFC6C
5B5C001F5B000790C7FC1A467CB32C> I<EA7FE0487EA3127F1201AA91381FFFF04A13F8
A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5
FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0FFFC
B500E113FEA36C01C013FC27337EB22C> I<387FFFE0B57EA37EEA0003B3B3A5007FB612
80B712C0A36C158022337BB22C> I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF
13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380B33B7F
FC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C> I<397FF01F
E039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA2
5BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C> I<EB07FCEB1FFF017F13C0
48B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F007EEC0F
C0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A
3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C> I<397FF01FE039FF
F8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03F85BED
01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138
E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA3
2C> I<903903FC078090391FFF0FC0017F13CF48B512EF4814FF3807FE07380FF0014848
7E49137F4848133F90C7FC48141F127E150F5AA87E007E141FA26C143F7F6C6C137F6D13
FF380FF0033807FC0F6CB6FC6C14EF6C6C138F6D130FEB07F890C7FCAD0203B5FC4A1480
A36E140029367DA32C> I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7F
E1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C2624
7EA32C> I<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0
007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE00
78147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F81480
39701FFC0020247AA32C> I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03
C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7E
AD2C> I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE
03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C> I<3A7FFF01FFFCB514FE14
8314016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2
017E13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D
90C7FCA26D5A147C27247EA32C> I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB
01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3
CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C> I<
3A3FFF03FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83EC
87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF809038
07CFC0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FFFC
1483B514FE6C15FC140127247EA32C> I<3A7FFF01FFFCB5008113FE148314816C010113
FC3A03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13FC6D
5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143E
A2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C
5A6C5AEA07E027367EA32C> I<003FB612E04815F0A4007EC7EA1FE0ED3FC0ED7F80EDFF
004A5A003C495AC7485A4A5A4A5A4A5A4A5A4AC7FCEB01FC495AEB0FF0495A495A495A49
C8FC4848EB01E04848EB03F0485A485A485A485A485AB7FCA46C15E024247DA32C> I<15
FF02071380141F147F91B512004913C04AC7FCEB03F85CB31307EB1FE013FF007F5BB55A
49C8FC6D7E6C7FC67F131FEB07F01303B380EB01FEECFFC06D13FF6E1380141F14070200
130021417BB92C> I<EA7FC0EAFFF813FE6D7E6C7FC67F131FEB07F01303B380EB01FEEC
FFC06D13FF6E1380141F147F91B512004913C04AC7FCEB03F85CB31307EB1FE013FF007F
5BB55A49C8FC13F8EA7FC021417BB92C> 125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr10 10 83
/Fg 83 124 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30> 11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E> I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E> I<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C131C00001300A4
0001130101801380A20003130301001300485B00061306000E130E485B485B485B006013
601A197DB92A> 34 D<030C1303031E497EA2033E130FA2033C91C7FCA2037C5BA20378
131EA303F8133EA24B133CA20201147CA24B1378A2020314F8A24B5BA302071301007FB9
1280BA12C0A26C1880C7271F0007C0C7FC021E5CA3023E130FA2023C91C8FCA2027C5BA2
0278131EA302F8133E007FB91280BA12C0A26C1880280003E000F8C8FC4A5BA301071301
A202805BA2010F1303A202005BA2491307A2011E5CA3013E130FA2013C91C9FCA2017C5B
A20178131EA20130130C3A4A7BB945> I<141FEC7FC0903801F0E0903803C06001071370
90380F803090381F00381518A25BA2133E133F15381530A215705D5D140190381F838092
CAFC1487148E02DC49B51280EB0FF85C4A9039003FF8000107ED0FC06E5D71C7FC6E140E
010F150CD91DFC141C01391518D970FE143801E015302601C07F1470D803805D00076D6C
5BD80F00EBC00148011F5C4890380FE003003E6E48C8FC007E903807F8060203130E00FE
6E5A6E6C5A1400ED7F706C4B13036F5A6F7E6C6C6D6C5B7013066C6C496C130E6DD979FE
5B281FF001F07F133C3C07F80FE03FC0F86CB539800FFFF0C69026FE000313C0D91FF0D9
007FC7FC393E7DBB41> 38 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2
120313005A1206120E5A5A5A12600A1979B917> I<146014E0EB01C0EB0380EB0700130E
131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67E
A3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00
E01460135278BD20> I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C13
3C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2
133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20> I<EB
0380497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FB
BF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F839
7F8383FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BBD2A> I<15301578
B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41> I<121C127FEAFF
80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817
> I<B512FCA516057F941C> I<121C127FEAFF80A5EA7F00121C0909798817> I<150C15
1E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407A21580140FA21500
5CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5B
A2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5A
A2121E123EA2123C127CA2127812F8A25A12601F537BBD2A> I<EB03F8EB1FFF90387E0F
C09038F803E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0
A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C
6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A> I<EB01C013031307131F
13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A> I<EB0FF0EB7FFE48B57E
3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA5
6CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A
495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A48
5CB6FCA321387CB72A> I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E
0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB
1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F8048
7EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF000
01B512C06C6C90C7FCEB0FF8233A7DB72A> I<1538A2157815F8A2140114031407A2140F
141F141B14331473146314C313011483EB030313071306130C131C131813301370136013
C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B5
12F8A325397EB82A> I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC
38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7E
C87EA28181A21680A4123E127F487EA490C71300485C12E000605C12700030495A00385C
6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A> I<EC
3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485A
A2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E
07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C
7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC0
6D90C7FCEB03FC233A7DB72A> I<12301238123E003FB612E0A316C05A168016000070C7
12060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA2
14F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A> I<
EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E
141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C0
6C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C1380
481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C0
12781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D9
07FCC7FC233A7DB72A> I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48
486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F00
1F147FA26C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090C7
FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F
807FC7FC3807FFFC000113F038003FC0233A7DB72A> I<121C127FEAFF80A5EA7F00121C
C7FCB2121C127FEAFF80A5EA7F00121C092479A317> I<121C127FEAFF80A5EA7F00121C
C7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A12
60093479A317> I<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F0003013030070
14F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00147E
147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A010EC7FC1E
3B7CBA27> 63 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C
1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249
C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E070
7E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E> 65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B> I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C> I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F> I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839> I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836> I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41> I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E> I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E
> I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F00
5B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B> I<B649B5
FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E
5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E1470
4A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F
8484486D497FB6011FEBFF80A339397DB841> I<B612E0A3000101C0C8FC6C90C9FCB3AD
1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>
I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9
C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C
1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED
1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB8
4C> I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2
EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E015
3FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA2
16071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E
> I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F0
49C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E049
150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED
1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A
6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7B
BA41> I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC
17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16
F091C9FCB3A5487FB6FCA330397DB839> I<B612FEEDFFE016F8000190388007FE6C90C7
6C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC
91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F
1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D> 82
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C> I<B69038
07FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F
17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381F
FFF8020713E09138007F80373B7DB83E> I<B500FC91387FFF80A30003018091380FFC00
6C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F
5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383F
C006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C
5AA36FC9FCA3153EA2151CA3393B7EB83E> I<B5D8FC07B5D8F001B5FCA3000790278000
1FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E
6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D
5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D
913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0F
FCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7E
B855> I<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7FC013FEC01F06D6C5C
5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB8018163891387FC0306E6C5A16E0
6E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E15DF9138019FF09138
038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A6D7E14E04A6D7E4948
6D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE822607FF80010713E0
B500E0013FEBFF80A339397EB83E> I<B500FE91383FFFE0A3000301E0913807FE00C649
EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C141C17186D6C1438
17306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890C8FC1606913807FC0E160C
913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E023FB512C0A33B397FB83E>
I<003FB7FCA39039FC0001FE01C0130349495A003EC7FC003C4A5A5E0038141F00784A5A
12704B5A5E006014FF4A90C7FCA24A5A5DC712074A5AA24A5A5D143F4A5AA24A5A92C8FC
5B495AA2495A5C130F4948EB0180A2495A5C137F495A16034890C7FC5B1203485AEE0700
485A495C001F5D48485C5E4848495A49130FB8FCA329397BB833> I<EAFFF8A4EAF000B3
B3B3B3A3EAFFF8A40D5378BD17> I<3901800180000313033907000700000E130E485B00
18131800381338003013300070137000601360A200E013E0485BA400CE13CE39FF80FF80
6D13C0A3007F137FA2393F803F80390E000E001A1974B92A> I<EAFFF8A4EA0078B3B3B3
B3A3EAFFF8A40D537FBD17> I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C
7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC012
3F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781F
F03A03FFF00FE03A007F8007C026277DA52A> 97 D<EA03F012FFA3120F1203B0EC1FE0
EC7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00
FCA216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC0
9039C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E> I<EB03FC90381FFF8090
387E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00
F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13
706C6C13E039007C07C090381FFF00EB07F81F277DA525> I<ED0FC0EC03FFA3EC003F15
0FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F
123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEF
F03A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E> I<EB07F8EB1FFF90
387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A15
3F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D
131CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525> I<147E90
3803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3
D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19> I<ED03F090390FF00FF890393FFC3C3C
9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C48
5AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB5
12C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F84814
00A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC3900
7FFFF0010790C7FC26387EA52A> I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F90
39F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3
293A7EB92E> I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA
487EB512C0A312387EB717> I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F8
13FFA313071301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFE
EA03F8154984B719> I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C
15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E81
14076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>
I<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917> I<2703F00FF0EB1FE000
FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013
CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA3
40257EA445> I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E> I<EB03FE90380FFF
8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815
E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D
131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>
I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB
03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB
0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328
357EA42E> I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007147748
48133749133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C
6C137F6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FC
A328357DA42C> I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE
9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421> I<EBFF03000313
E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C
13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C1307
7EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521> I<1318A51338A31378A313
F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E1300
6D5AEB0FFEEB01F81A347FB220> I<D803F0EB07E000FFEB01FFA3000FEB001F00031407
B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03
FC07E00029267EA42E> I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D1480
00011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001
075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C> I<B53A1F
FFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB
0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F83
1430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133F
A2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C> I<B538807FFFA33A03FE
003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB
03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB060149
6C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C
> I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E
5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214
FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0E
EA701C6C5AEA1FF0EA0FC027357EA32C> I<003FB512FCA2EB8003D83E0013F8003CEB07
F00038EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A49
5A495AA290387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7
127C48EB03FC90B5FCA21F247EA325> I<B81280A2290280962A> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx10 10 54
/Fh 54 123 df<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF
8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390
C7FCB3ABB5D8FC3F13FFA4303A7EB935> 12 D<141C143C14F8EB01F0EB03E01307EB0F
C0EB1F8014005B137E13FE5B12015B1203A2485AA2120F5B121FA25B123FA4485AA512FF
B1127FA56C7EA4121F7FA2120F7F1207A26C7EA212017F12007F137E7F7F1480EB0FC0EB
07E01303EB01F0EB00F8143C141C165377BD25> 40 D<12E07E127C7E7E7F6C7E6C7E12
037F6C7E7F12007F137E137FA2EB3F80A214C0131F14E0A2130F14F0A4EB07F8A514FCB1
14F8A5EB0FF0A414E0131FA214C0133F1480A2EB7F00A2137E13FE5B12015B485A5B1207
485A485A90C7FC123E5A12F05A16537BBD25> I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7F
F0A2EA3FE0EA0F800D0D798C1B> 46 D<49B4FC010F13E0017F13FC9038FF83FE4848C6
7E4848EB7F804848EB3FC04848EB1FE0A2001F15F0A24848EB0FF8A3007F15FCA500FF15
FEB3007F15FCA4003F15F8A26D131F001F15F0A2000F15E06D133F000715C06C6CEB7F80
6C6CEBFF003900FF83FE6DB45A011F13F0010190C7FC27387CB630> 48
D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630> I<EB
0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C05AD9C001
13E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C04A138016
004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A013EC712F8
4914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630> I<EB03FF011F13F0
017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001FC14F0121F7FA56C
4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC092C7FC15F0903800
07FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC0487E487E487EA416FC
A249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806CB61200000114FC6C
6C13F0010790C7FC27387CB630> I<ED07C0150FA2151F153F157F15FFA25C5C5C5CA214
1E5C147C5C5C495A495A1307495A5C131E5B137C5B5B485A485A1207485A90C7FC121E5A
127C5AB81280A4C70001EBC000AA0103B61280A429377DB630> I<001C15C0D81F801307
01F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB07FE90383FFFE090
B512F89038FC07FC9038E003FFD98001138090C713C0120EC813E0157F16F0A216F8A212
06EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C5B6C491380D9C007
1300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB630> I<EC0FF8ECFF
FE0103EBFF8090390FF80FC090393FE003E090397FC001F09038FF000F48EC1FF8484813
3F485A120F5B121FA2003FEC1FF0ED0FE04990C7FC127FA21408EC7FF039FFF1FFFC01F3
13FFD9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA5127FA5123F
16FCA26C7E16F8000F143F6C6C14F0ED7FE06C6C14C03A01FF81FF806C90B51200013F13
FC010F13F00101138027387CB630> I<123C123EEA3FE090B71280A41700485D5E5E5EA2
5E007CC7EA0FC000784A5A4BC7FC00F8147E48147C15FC4A5A4A5AC7485A5D140F4A5A14
3F92C8FC5C147E14FE1301A2495AA31307A2130F5CA2131FA5133FA96D5A6D5A6D5A293A
7BB830> I<EB03FF011F13E0017F13F83901FF03FE4848C67E4848EB7F80484814C0001F
EC3FE0123F49EB1FF0127F16F8A212FF16FCA516FEA5007F143FA3123F157F6C7E000F14
FF6C6C5A3903FE03DF6CB5129F6C6C131FD91FFC13FCEB00201400A216F8D80FE0133F48
7E486C14F0A216E0157F16C0EDFF80495A6C4848130090388007FE390FE01FF86CB55A6C
14C0C691C7FCEB1FF027387CB630> 57 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2
EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579
A41B> I<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A2
02078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7F
A20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151F
A2017E82017C8101FE83B500F80107B61280A4413A7DB948> 65
D<B812C017FC17FF18C028007FF000037F04007F717E717E171F84A2717EA74D5AA26017
3F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF8002F0C713F0EF3FF8717E717E717E19
807113C0A319E0A719C0A25F4D138019005FEF7FFE4C485AB912F018C095C7FC17F03B39
7DB844> I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F49
01C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F
485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C
1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0F
E06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945> I<
B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C183CA4180016
7CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183EA2183C18
7CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F> 69
D<B912C0A43A007FF800039338007FE0171F170F1707A21703A21701A318F0EE7800A418
00A216F8A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C
> I<B6D8FC03B612F0A426007FF8C70001EBE000B3A391B8FCA402F8C71201B3A6B6D8FC
03B612F0A444397DB84B> 72 D<B612FCA439007FF800B3B3ADB612FCA41E397DB824> I
<B600FC0103B512C0A426007FF8C8381FE00019804EC7FC18FEEF01F84D5A4D5A4D5AEF
3F80057EC8FC5F4C5A4C5AEE0FE0EE1F804CC9FC167E5EED03F84B7E4B7E4B7E4B7F5D02
F9B57EDAFBF77FDAFFE37F15C103807F4A487F4A6D7E4A133F707E707F8482707F707F84
82717E717E8483717F717F858385B600FC017FEBFFE0A443397DB84B> 75
D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FC
A431397DB839> I<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA20179
6D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C141E
A36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA29238
03FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE0700
54397DB85B> I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC
010113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A2
48486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D
001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6D
B401075B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB9
48> 79 D<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717EA2
84A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF70
7F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390FFF
87C071EBFF8005011400CBEA1FFC443A7DB848> 82 D<D907FF130E013FEBE01E90B5EA
F83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8FC
167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F0
6C816C81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA3163F
A27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8F8
3F5CD8F00749C7FC39E0007FF02A3B7BB935> I<003FB91280A4D9F800EBF003D87FC092
38007FC049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3
AE010FB7FCA43B387DB742> I<B6D8E01FB500FC90383FFFFCA4000101F0C7D83FFCC8EA
7E006C71153C171F6E197C017F701578836E7014F8013F6F5E6E1801011F4B6D5CA26E18
036D4B6D5CA26D6D496D495A173C6F170F6D037C6D91C7FCEF787F6F5F6D4B6C6C131E81
6D02016E5BEFE01F03F8177C027F01036E13784D7E03FCEE80F8023F49486C5C15FE021F
010FEDC1E04D7E03FF16C36E49EDE3C0041E7F049E15F76E01BC6D5C04FC15FF6E95C8FC
4C80A26E5F4C143F6E5F4C141FA2037F5E4C140FA26F486E5AA2031F5E93C812036F5E5E
3A7EB863> 87 D<007FB5D8F803B512F8A4C66C48C7D80FF0C7FC6D6C5D6D5E6F495A6D
6D49C8FC7F6D6D137E6F5B6DEBF8016D5D6F485A6E6C485A023F130FDA1FFF5BEE9F806E
01FFC9FC805E6E5B6E5B80826F7E153F826F7F5D4B7F92B57EA2DA01F97FDA03F17F03F0
7F913807E07FDA0FC07F021F6D7E4B7E4A486C7F027E8102FE6D7F4A7F49488149486D7F
0107804A6E7E49488149486E7E013F81017F83B60107B61280A441397DB848> I<EB3FFE
0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8
FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF
6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA4
2E> 97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013804A
EB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E133F
6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C00390
C7FC2F3A7EB935> I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485A
EA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E
15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA4
2A> I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB00
1FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C
6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935> I<9038
03FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B
003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14
F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA4
2C> I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A2481381A2
4813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D> I<16
1FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F
15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE
48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F8
6C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495A
D81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530> I<13FFB5
FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05C
A25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935> I<EA01F0EA07FC487EA2487EA56C5A
A26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B> I<13FFB5FCA412
077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A
141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5
D8F83F13F8A42D3A7EB932> 107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>
I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F0
3FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291
C75BB3A3B5D8FC1FB50083B512F0A44C257DA451> I<01FEEB7FC000FF903803FFF8020F
13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC
3F13FFA430257DA435> I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE04848
6D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D13
07001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029
257DA430> I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800007496C13
C06C0180EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E13
7F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FC
ACB512FCA42F357EA435> I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000
075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>
114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15
787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F903800
7FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8
140038E01FF81F257DA426> I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA30003
90C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB4
25> I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13
FF90387FFFFC011F13F00103138030257DA435> I<B539F001FFF8A4000390C7EA3F0016
1E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC0701
0F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5A
A22D257EA432> I<B500F1B538803FFFA43D07FE000FF80003E06C6C010715C082028015
076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF01E7F5B17C0DAF83E
147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF10107EDF9E002FF
14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E147C023C143C4025
7EA445> I<B539F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B6D6C485A
6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E90
3801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F00016E7EB5
90383FFFF8A42D257EA432> I<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E
137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791
C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C141E
003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA1F
FCEA07F02D357EA432> I<003FB612C0A3D9F0031380EB800749481300003E5C003C495A
007C133F5D0078495A14FF5D495B5BC6485B92C7FC495A131F5C495A017FEB03C0EBFFF0
14E04813C05AEC80074813005A49EB0F80485A003F141F4848133F9038F001FFB7FCA322
257DA42A> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx12 14.4 32
/Fi 32 122 df<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7
FCB3B3B3A6007FB712FEA52F4E76CD43> 49 D<EC3FFE0103B512E0010F14FC013F14FF
90B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F0
1680486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218
C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A
48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F8014
0749C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43> I<91
380FFFC091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848C76C7ED8
03F86E7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C75AD801FC
1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016FCEEFF80
DA000713E0030113F89238007FFE707E7013807013C018E07013F0A218F8A27013FCA218
FEA2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C4816E001
F04A13C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D011F158001
0302FCC7FCD9001F1380374F7ACD43> I<177C17FEA2160116031607160FA2161F163F16
7FA216FF5D5DA25D5DED1FBFED3F3F153E157C15FCEC01F815F0EC03E01407EC0FC01580
EC1F005C147E147C5C1301495A495A5C495A131F49C7FC133E5B13FC485A5B485A120748
5A485A90C8FC123E127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4F7CCE43> I<D803
80150ED807E0157E01FEEC03FED9FFF0137F91B65A5F5F5F5F5F94C7FC5E5E16F016C093
C8FC15F801E190C9FC01E0CAFCABEC0FFF027F13F001E3B512FE01E76E7E9026FFF8077F
DAC0017F49C713F8496E7E49143F4981496E7E6C481680C9FC18C08218E0A418F0A3EA0F
E0487E487E487E487EA418E0A35B6C484A13C05B491680003EC85A003F17006C6C4A5A6D
5D6C6C4A5AD807F8495BD803FE01075B2701FFC03F5B6C90B65A013F4AC7FC6D14F80103
14C09026007FF8C8FC344F79CD43> I<ED0FFF92B512E0020780021F14FC91397FFE03FE
903A01FFF0007F4901C0EB3F804990C7121F4948EC7FC0494814FF49484913E049485B01
FF5C485BA2485B5AA2486F13C04A6D1380486F1300177E94C7FC5AA291CAFC5AA2150891
3801FFF8020713FFB54814C04A14F04AC66C7E023C6D7E4A6D7E4A6D7E7013804A15C0A2
4A15E07013F05C18F8A491C714FCA37EA67EA46C17F880A27E18F06C5D18E06C6D15C07E
6E4913806C6D15006D6C495A6D6CEB7FFC6DB448485A6D90B55A010315C0010092C7FC02
3F13FC020713C0364F7ACD43> I<BA12C019FEF1FFC01AF01AFCD8000701F0C7000313FF
DE007F7F737F070F7F737F878587858785A287A84F5BA263616361634F5B4F5B077F90C7
FC4E485A060713F892B812E097C8FC861AF003F0C7000313FE9539003FFF80070F13E073
7F07017F87737F747E1C807413C0A27413E0A31CF0A386A362A31CE0A2621CC0A2501380
97B5FC1C004F5B19074F5B073F13F04EB55ABC128098C7FC1AF81AC007F8C8FC54527CD1
60> 66 D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA
803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848
C9FC4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B48
1A3FA24849181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B
0F6C6D1980A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A
6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203
903AFFE001FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479
D261> I<BB12FEA5D8000701F8C700077FF0007F191F190785858586861B80A21A1FA31A
0FA41BC006F81307A497C7FCA31701A317031707170F177F92B6FCA59238F8007F170F17
0717031701A31700A795C9FCB3B812F8A54A517CD055> 70 D<B812C0A5D8000701F8C7
FCB3B3B3B2B812C0A52A527CD132> 73 D<B812F8A5D8000701F8CAFCB3B3A91A7CA41A
FC1AF8A51901A31903A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0
A546527CD151> 76 D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EF
A202EF6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C
1778A26F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151E
A26F6D5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D
131EA2706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3
715BA2715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180> I<00
3FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F49193F90
C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A55351
7BD05E> 84 D<B700FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9EBF8006F71
EE0FC06D7161876F1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC6D666F4B80
1F016D66704A806E525A88704A17076E059F5F70021F80080F160F6E6570023F806EDC3E
074CC8FC8870027E5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F6C16FC6E74
5B70010317016E4C6D5D060716C00580496D14036F63DDC00F16E04F6D14076F07F05BDD
E01F170F6F92C76C5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6FF1FE3EDDFC
FC177E6F4A6E147C1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E817061A295C9
7E7061A270487090CAFCA37048705AA24D1601040360A27048705A84537DD18B> 87
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641> 97
D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002F301017F
913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727EA285A285
84A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA
87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C7000313C04154
7BD24B> I<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001
FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A48
92C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC
3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC
020113E033387CB63C> I<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91
B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980
485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C
6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9
003F13F8020301C049C7FC41547CD24B> I<913803FFC0023F13FC49B6FC010715C04901
817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191
C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01
F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE
903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D> I<ED3FFC02
03B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A49
5AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB5
12FEA52E547CD329> I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90
267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813
E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A
6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFC
A2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848
C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18
006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F
03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543> I<EB3FF0B5FCA51203C6FCB3A4EE1F
FC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3
C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B> I<137F497E
000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3
A6B612E0A51B547BD325> I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>
108 D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092
271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780
137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A
5EB3ACB6D8F807B6D8C03FB512FEA567367BB570> I<D93FF0EB1FFCB591B512C0030314
F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F
8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B> I<913801FFE0021F13FE
91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F
48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F18
80A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD9
3FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643
> I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3
E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AA
B612FCA52F367CB537> 114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF8
1307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13
FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F
030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001
F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C38
7CB635> I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FC
B8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC
6DEBFFF86D6C5B021F5B020313802A4D7ECB34> I<D93FF8913801FFC0B50207B5FCA500
03ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFF
C0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B> I<B6
00F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F13
016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F
147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA2
6F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C137C48
6C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035B
C690CBFC404D7DB447> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr12 12 26
/Fj 26 122 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F8
5B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA312
7EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB
03C01301EB00E014701438141C140C166476CA26> 40 D<12C07E12707E7E7E120F6C7E
6C7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A2
1301A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3
EB1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647B
CA26> I<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113801203
13005A1206120E5A5A5A12600B1D78891B> 44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA
1E000A0A78891B> 46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F80
49130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815
FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E000
0315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28
447CC131> 48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E00
7FB6FCA3204278C131> I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C
7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F
1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A
4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B48
5A4848143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131> I<ED1FFC4A
B512C0913907E003F0021EC7123C0278140FD901E0EC03C0D90380EC00E0010FC9127801
1C161C4982498249707E4916010001844848D90FF06D7E90C7D83FFC146048DAFC0F1470
000E902703F003C07F000C902707C000E01318001CD91F800170131C0018013F6E130C00
3891C76C130E0030017E91380FF00614FE00704902071307D8600183A2495AA200E01980
4848481601AB6C6C7E1260A26D7E1903D87000180000306D140F147E00386D141F00186E
013F5B001C011F02771306000CD907C09038E3F80E000E902703F003C35B6C903B00FC0F
00FC386CDA3FFCEB7FF06DD90FF0EB0FC06C6C90CBFC12007F13707F7F010FEF1F80D903
80167FD901E0923803FE00D90078ED1FF0021E913801FF80DA07E0D97FF8C7FC0201B6C8
FCDA001F13C041477BC54C> 64 D<010FB512FEA3D9000313806E130080B3B3AB123F48
7E487EA44A5A13801300006C495A00705C6C13076C5C6C495A6CEB1F802603E07FC7FC38
00FFFCEB1FE027467BC332> 74 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830A41870
1860A518E0A3EF01C0A217031707A2170F173F177FEE01FF48486C011F1380B9FCA33444
7CC33D> 76 D<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC0F
C049486E7E49486E7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707EA2
4848707EA2000F84491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C13
00A4003F606D1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A000060
017F4CC7FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FC
DA1F8013FC913907F007F00201B512C09126001FFCC9FC41487BC54C> 79
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31> 97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436> I<EC7F809038
03FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F12
0F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C
6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FF
F001001380242E7DAC2B> I<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C
90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5A
AB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F01
1C13FE90380FC0F8903803FFE09026007F0013002F467DC436> I<EB01FE903807FFC090
381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E015
07A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F1560
6D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE001
0090C7FC242E7DAC2B> I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07
F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5
D8F83F13FEA32F457DC436> 104 D<143C14FFA2491380A46D1300A2143C91C7FCADEC7F
80EB3FFFA31300147F143FB3B3AA123E127F39FF807F00A2147EA25C6C485A383C01F06C
485A3807FF80D801FEC7FC195785C21E> 106 D<EA01FC12FFA3120712031201B3A29238
1FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14
FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E82150782
6F7E8282486C491380B5D8F81F13F8A32D457DC433> I<EA01FC12FFA3120712031201B3
B3B3A5487EB512F8A315457DC41C> I<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F
03F801E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FD
C0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81F
B50003B512E0A34B2C7DAB52> I<EC7F80903803FFF090380FC0FC90383E001F496D7E49
6D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816
C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C
495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31> 111
D<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C
01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26> 114 D<1306A5130EA4131EA3133E
137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D
133890381F8030ECC070903807E0E0903801FFC09038007F001E3E7EBC26> 116
D<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212006D5B017E9038
077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013002F2D7DAB36
> I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D14
18A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA290
3801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FC
A21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFC
EA03F02E3F7EAA33> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr17 17.28 10
/Fk 10 113 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C748B24> 46
D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0FE049486D7E49
486D7E49C76C7E017E140049157E0001167F49810003178049151F000717C049150F000F
17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F17FCA56D1507
A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D153F00011700
6D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F806DB448B4C7
FC9039007FFFFC021F13F0020190C8FC37607BDD42> 48 D<ED03FF033F13E092B512F8
020314FE91390FFE00FFDA1FE0EB1F80DA7FC0EB07C04AC712034948EC01E04948140349
48EC1FF04948143F4948147F5C495A137F49C8FCA24848ED3FE0EF1FC0484892C7FCA248
5AA2120F5BA2121FA25B123FA3127F913801FFF0020713FCD9C01F13FF91393E003FC002
78EB0FE000FF01E0EB07F8D9C1C06D7ED9C3806D7E01C7C8FC177F01CE168001CCED3FC0
13DC01D8ED1FE001F816F049150F18F8A34916FC1707A318FE5BA3127FA67F123FA4001F
17FCA27F000F160F18F8A212076DED1FF012036D16E00001EE3FC07F0000EE7F806DEDFF
006D6C5C013F4A5AD91FE0495A6D6CEB0FF06D6C495A6DB4EBFFC0010090B5C7FC023F5B
020F13F00201138037607BDD42> 54 D<120E121E121F7F13F890B912C0A4481880A219
0060A2003ECA123C003C17380038177800785F60007016014D5A6017074DC7FC48161E17
1C173C5FCA127017F04C5A5F16034C5A94C8FC5E161E161C163C5EA25EA24B5A15035E15
075E150FA24BC9FCA25D153E157EA315FE5D1401A314035DA21407A3140FA4141F5DA414
3FA7147FAC6E5A6E5A6E5A3A637AE042> I<DD7FF81560040FB56C14E0047F14E00303B6
00FC1301030F9038E003FEDB3FFEC7383F8003DBFFF0EC07C04A01C0913803F007020790
C9EAF80FDA0FFC167C4A48EE1E1FDA7FE0160F4A48EE07BF4949EE03FF4990CAFC494883
4948834A187F495A013F193F4948181F5C01FF190F485BA24890CC1207A248481903A248
5A1B01121FA25B123F1B005BA2127F1C00A4485AB06C7EA5123F1CE07FA2121F7FA2000F
1A011CC06C7EA26C7E1B036C6D19801B076C7F017F1A006E606D6C181E131F6D6C606E18
386D6C18786D6C606D6D4C5A6D6D4C5A6E6C1607DA1FF84C5A6E6C4CC7FC6EB4167C0201
01C04A5A6E01F0EC07F0DB3FFEEC1FC092280FFFE001FFC8FC030390B512FCDB007F14F0
040F14809326007FF8C9FC53667AE360> 67 D<B712E0A4C60280CAFCD93FFCCBFC131F
5CB3B3B21A1CA61A3C1A38A61A78A41AF8A21AF01901A219031907A2190F191F193F197F
F001FF1807013F043F13E0D9FFFC0203B5FCBBFCA4466279E153> 76
D<933801FFE0043F13FF4BB612E003079038003FF8DB1FF0EB03FEDB7FC0903800FF804A
48C8EA3FE0DA03FCED0FF0DA0FF0ED03FC4A486F7E4A486F7E4A48707E4ACA6C7E494871
7E4948717E4948717E4948717E4948717E013F854A83017F864948727EA24890CC6C7EA2
4848737EA24848737EA2000F87491907001F87A34848737EA4007F1C80A24985A400FF1C
C0AF6C6C4F1380A5003F1C006D61A3001F63A26D190F000F63A26C6C4F5AA36C6C4F5AA2
6C6D4E5A6C636E18FF017F626D6C4D90C7FC6E5F011F616D6C4D5A6D6C4D5A0103616E17
1F6D6C4D5A6D6D4C5ADA3FC04CC8FCDA1FF0ED03FE6E6C4B5A6E6C4B5ADA01FFED3FE091
26007FC0ECFF80DB1FF0D903FEC9FCDB07FFEB3FF8030190B512E0DB003F91CAFC040113
E05A667AE367> 79 D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049
486D7ED93FC06D7E49C76C7E496E7E49140348488148481401000782491400000F828348
5A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F12
1FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D
6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F13F0020113803241
7CBF3A> 101 D<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE0
4B6D7E0001D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5C
A35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49> 110
D<D903C0EB7FC0D807FF903807FFFCB5011F13FFDB7F0013C003F8EB1FF0DAC3E0EB07F8
0001D9C7806D7E26007FCFC76C7E02DE6E7ED93FFC6F7E4A6F7E4A82181F4A82727E5C72
7EA2727EA3727EA41A8084AC4E1300A54E5AA2611807A24E5A6E5E181F6E4B5A6E5E187F
6E4B5A02DE4A90C7FC02CF4A5ADAC780495ADAC3C0EB0FF0DAC1F0EB3FE0913AC07E01FF
806FB448C8FC030F13F80300138093CAFCB3A3497E497EB612F0A4415B7DBE49> 112
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Fk 1549 432 a(Op) t(enCL) 43 b(0.7.6) p Fj 1266
672 a(Jac) m(k) 33 b(Llo) m(yd) g(\(llo) m(yd@acm.jh) m(u.edu\)) 1586
868 y(Octob) s(er) f(10,) g(2001) p Fi 0 1250 a(Con) l(ten) l(ts) p
Fh 0 1458 a(1) 77 b(In) m(tro) s(duction) 3201 b(2) 0
1665 y(2) 77 b(Building) 30 b(The) i(Library) 2835 b(3) p
Fg 125 1790 a(2.1) 83 b(Con\014guration) 27 b(P) n(arameters) 57
b(.) 42 b(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 134
b(4) p Fh 0 1998 a(3) 77 b(The) 32 b(Basic) f(In) m(terface) 2913
b(5) p Fg 125 2122 a(3.1) 83 b(Symmetrically) 28 b(Key) n(ed) e
(Algorithms) 47 b(.) 42 b(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f
(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f
(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 134
b(5) 125 2247 y(3.2) 83 b(Blo) r(c) n(k) 27 b(Ciphers) 35
b(.) 42 b(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) 134 b(5) 125 2371 y(3.3) 83 b(Stream) 28
b(Ciphers) 45 b(.) c(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) 134 b(5) 125 2496 y(3.4) 83 b(Hash) 28
b(F) -7 b(unctions) 47 b(.) 41 b(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) 134 b(6) 125 2620 y(3.5) 83
b(Message) 27 b(Authen) n(tication) h(Co) r(des) 72 b(.) 41
b(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) 134 b(6) 125 2745 y(3.6) 83
b(Random) 28 b(Num) n(b) r(er) g(Generators) 71 b(.) 42
b(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) 134 b(6) 315 2869 y(3.6.1) 94
b(Randp) r(o) r(ol) 56 b(.) 42 b(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) 134 b(6) 315 2994 y(3.6.2) 94
b(X917) 27 b(.) 41 b(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) 134 b(7) 315 3118 y(3.6.3) 94
b(En) n(trop) n(y) 26 b(Sources) 71 b(.) 41 b(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) 134 b(7) 125 3243 y(3.7) 83 b(Miscellaneous) 47
b(.) 42 b(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) 134 b(7) 315 3367 y(3.7.1) 94 b(S2K) 27
b(Algorithms) 82 b(.) 41 b(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) 134 b(7) 315 3492 y(3.7.2) 94 b(Chec) n(ksums) 70
b(.) 41 b(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) 134 b(8) 315 3616 y(3.7.3) 94 b(Exceptions) 76 b(.) 41
b(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 134
b(8) 315 3741 y(3.7.4) 94 b(Secure) 27 b(Memory) 38 b(.) k(.) f(.) h(.)
f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 134 b(8) 315 3866
y(3.7.5) 94 b(Timers) 24 b(.) 42 b(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 134 b(9) p
Fh 0 4073 a(4) 77 b(Filters) 3408 b(10) p Fg 125 4198
a(4.1) 83 b(Basic) 27 b(Filter) h(Usage) 72 b(.) 41 b(.) h(.) g(.) f(.)
h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 93 b(10) 125
4322 y(4.2) 83 b(F) -7 b(ork) 56 b(.) 42 b(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) 93 b(10) 125 4447 y(4.3) 83 b(Chain) 70 b(.) 41 b(.) h(.) g(.) f(.)
h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) 93 b(11) 125 4571 y(4.4) 83 b(A) 28 b(Filter) g(Example) 36
b(.) 42 b(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) 93 b(12) 125 4696 y(4.5) 83 b(Rolling) 28 b(Y) -7
b(our) 27 b(Own) 77 b(.) 41 b(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) 93 b(13) 125 4820 y(4.6) 83 b(The) 28
b(Filter) g(Directory) 58 b(.) 42 b(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) 93 b(14) 315 4945 y(4.6.1) h(Keys) 36
b(.) 41 b(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) 93 b(14) 315 5069 y(4.6.2) h(Basic) 27
b(W) -7 b(rapp) r(ers) 31 b(.) 42 b(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) 93 b(14) 315 5194 y(4.6.3) h(Cipher) 28
b(Mo) r(des) g(.) 42 b(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) 93 b(15) 315 5318 y(4.6.4) h(Enco) r(ders) 75
b(.) 42 b(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h
(.) f(.) 93 b(15) 1929 5649 y(1) p 90 rotate dyy eop
%%Page: 2 2
2 1 bop Fh 0 83 a(5) 77 b(W) -8 b(riting) 30 b(Mo) s(dules) 2971
b(16) 0 291 y(6) 77 b(More) 31 b(Information) 2930 b(17) p
Fg 125 415 a(6.1) 83 b(P) n(ortabilit) n(y) 23 b(.) 42
b(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) 93 b(17) 125 540 y(6.2) 83 b(Compatibilit) n(y) 42
b(.) g(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f
(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f
(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f
(.) h(.) f(.) 93 b(17) 125 664 y(6.3) 83 b(P) n(aten) n(ts) 76
b(.) 42 b(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h
(.) f(.) h(.) g(.) f(.) h(.) f(.) 93 b(17) 125 789 y(6.4) 83
b(F) -7 b(urther) 28 b(Reading) f(and) g(Information) 38
b(.) k(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f
(.) h(.) g(.) f(.) h(.) f(.) 93 b(18) 125 913 y(6.5) 83
b(Ac) n(kno) n(wledgmen) n(ts) 24 b(.) 42 b(.) f(.) h(.) g(.) f(.) h(.)
f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f
(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 93 b(18) 125 1038
y(6.6) 83 b(Con) n(tact) 27 b(Information) 57 b(.) 42
b(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h
(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) 93
b(19) 125 1162 y(6.7) 83 b(Dev) n(elop) r(ers) 21 b(.) 42
b(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) h(.) f(.) h(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) g
(.) f(.) h(.) f(.) 93 b(19) 1929 5649 y(2) p 90 rotate
dyy eop
%%Page: 3 3
3 2 bop Fi 0 83 a(1) 135 b(In) l(tro) t(duction) p Fg
0 306 a(Op) r(enCL) 37 b(is) f(a) h(C++) e(library) h(whic) n(h) g
(attempts) i(to) e(pro) n(vide) g(the) h(most) f(common) g
(cryptographic) f(algorithms) g(in) i(an) 0 406 y(easy) 28
b(to) g(use) h(and) f(p) r(ortable) g(pac) n(k) -5 b(age.) 39
b(Curren) n(tly) 27 b(it) j(runs) e(on) g(a) g(wide) h(v) -5
b(ariet) n(y) 28 b(of) h(systems,) f(using) g(n) n(umerous) g
(di\013eren) n(t) 0 506 y(compilers) f(and) g(on) g(man) n(y) g
(di\013eren) n(t) h(arc) n(hitectures.) 125 647 y(The) 36
b(base) g(library) f(is) h(written) g(in) h(ISO) f(C++,) i(so) d(it) i
(can) f(b) r(e) g(p) r(orted) h(to) f(a) g(wide) g(v) -5
b(ariet) n(y) 35 b(of) i(arc) n(hitectures) e(with) 0
746 y(minimal) j(fuss,) j(but) e(Op) r(enCL) f(also) f(supp) r(orts) g
(a) h(mo) r(dules) g(system,) j(whic) n(h) d(allo) n(ws) e(system) i
(dep) r(enden) n(t) h(co) r(de) f(to) g(b) r(e) 0 846
y(compiled) 28 b(in) n(to) f(the) h(library) -7 b(.) 125
987 y(While) 35 b(y) n(ou) g(are) f(reading) g(this,) j(y) n(ou) d(ma) n
(y) h(w) n(an) n(t) f(to) h(refer) f(to) h(the) h(\014les) p
Ff 35 w(opencl.h) p Fg 32 w(and) p Ff 35 w(filters.h) p
Fg(.) 55 b(These) 35 b(\014les) 0 1087 y(con) n(tain) 27
b(the) h(classes) e(that) i(form) f(the) h(basic) f(in) n(terface) g
(for) g(the) h(library) -7 b(.) 125 1228 y(All) 37 b(declarations) f
(in) i(the) g(library) e(are) h(con) n(tained) f(within) j(the) f
(namespace) p Ff 36 w(OpenCL) p Fg(.) d(Op) r(enCL) j(declares) e(sev) n
(eral) 0 1328 y(t) n(yp) r(edef) 6 b('ed) 27 b(t) n(yp) r(es) f(to) g
(help) h(bu\013er) f(it) g(against) f(c) n(hanges) g(in) h(mac) n(hine)
g(arc) n(hitecture.) 35 b(These) 26 b(t) n(yp) r(es) g(are) f(used) h
(extensiv) n(ely) 0 1427 y(in) 32 b(the) g(in) n(terface,) f(and) h(th)
n(us) f(it) h(w) n(ould) f(b) r(e) h(often) f(b) r(e) h(con) n(v) n
(enien) n(t) f(to) g(use) g(them) h(without) g(the) p
Ff 32 w(OpenCL::) p Fg 41 w(pre\014x.) 48 b(Y) -7 b(ou) 0
1527 y(can,) 29 b(b) n(y) p Ff 30 w(using) p Fg 28 w(the) g(namespace) p
Ff 29 w(OpenCL) p 1374 1527 27 4 v 28 w(types) p Fg 28
w(\(this) h(w) n(a) n(y) e(y) n(ou) g(can) h(use) g(the) h(t) n(yp) r
(e) f(names) g(without) g(the) h(namespace) 0 1626 y(pre\014x,) j(but) h
(the) e(remainder) g(of) g(the) h(library) e(sta) n(ys) h(out) g(of) h
(the) g(global) e(namespace\).) 51 b(The) 33 b(included) g(t) n(yp) r
(es) f(are) p Ff 32 w(byte) p Fg 0 1726 a(and) p Ff 27
w(u32bit) p Fg(,) 26 b(whic) n(h) h(are) g(unsigned) g(in) n(teger) g
(t) n(yp) r(es.) 1929 5649 y(3) p 90 rotate dyy eop
%%Page: 4 4
4 3 bop Fi 0 83 a(2) 135 b(Building) 45 b(The) f(Library) p
Fg 0 306 a(These) 27 b(are) g(the) h(basic) f(steps) g(for) g
(compiling) h(Op) r(enCL) f(on) h(a) f(Unix) h(or) e(Unix-lik) n(e) h
(system:) p Ff 131 531 a($) 43 b(./configure.pl) 38 b(CC-OS-CPU) 131
630 y($) 43 b(make) 131 730 y($) g(make) f(check) f(#) j(optional,) 39
b(but) k(recommended) 131 829 y(#) g(make) f(install) p
Fg 125 1054 a(The) p Ff 25 w(./configure.pl) p Fg 19
w(script) 25 b(is) g(written) h(in) f(P) n(erl;) g(y) n(ou'll) g(need) g
(at) g(least) g(v) n(ersion) f(5.005) f(to) i(run) g(the) h(script.) 35
b(T) -7 b(o) 25 b(get) 0 1153 y(the) j(list) g(of) f(v) -5
b(alues) 28 b(for) p Ff 27 w(CC) p Fg(,) p Ff 27 w(OS) p
Fg(,) e(and) p Ff 28 w(CPU) p Fg 26 w(that) p Ff 28 w(./configure.pl) p
Fg 22 w(supp) r(orts,) h(run) h(it) g(with) g(the) g(\\) p
Ff(--help) p Fg(") c(option.) 125 1294 y(The) p Ff 36
w(make) 41 b(install) p Fg 34 w(target) 35 b(has) g(a) g(default) i
(directory) e(in) h(whic) n(h) g(it) g(will) g(install) g(Op) r(enCL) g
(\(on) g(Unix,) i(it's) e(usu-) 0 1394 y(ally) p Ff 35
w(/usr/local) p Fg(\).) 55 b(Y) -7 b(ou) 35 b(can) g(o) n(v) n(erride) e
(this) i(b) n(y) g(c) n(hanging) e(the) j(v) -5 b(alue) 35
b(of) g(the) g(INST) -7 b(ALLR) n(OOT) 35 b(v) -5 b(ariable) 34
b(\(lik) n(e) h(so:) p Ff 0 1494 a(make) 42 b(INSTALLROOT=/som) o(e/) o
(pat) o(h) 37 b(install) p Fg(\).) 125 1635 y(On) d(Unix,) k(the) d
(mak) n(e\014le) g(has) f(to) h(decide) g(who) g(should) g(o) n(wn) f
(the) i(\014les) f(once) g(they) g(are) f(installed.) 59
b(By) 35 b(default,) j(it) 0 1734 y(uses) p Ff 28 w(root:root) p
Fg(,) 25 b(but) 30 b(on) e(man) n(y) g(systems) g(\(for) g(example,) h
(MacOS) f(X\),) h(there) f(is) h(no) p Ff 28 w(root) p
Fg 27 w(group.) 38 b(Also,) 29 b(if) g(y) n(ou) f(don't) 0
1834 y(ha) n(v) n(e) 35 b(ro) r(ot) g(access) f(on) i(the) g(system) f
(y) n(ou) g(will) h(w) n(an) n(t) f(them) h(to) g(b) r(e) g(installed) g
(o) n(wned) f(b) n(y) h(something) f(other) g(than) h(ro) r(ot) 0
1934 y(\(lik) n(e) 30 b(y) n(ourself) 6 b(\).) 43 b(Y) -7
b(ou) 30 b(can) g(o) n(v) n(erride) d(the) k(defaults) f(in) g(a) f
(simliar) h(manner) f(to) h(the) p Ff 30 w(INSTALLROOT) p
Fg(.) 25 b(Here's) 30 b(an) f(example:) p Ff 0 2033 a(make) 42
b(OWNER=lloyd) d(GROUP=users) g(INSTALLROOT=$HOM) o(E/b) o(in) o(ar) o
(ies) e(install) p Fg 125 2174 a(The) 24 b(script) g(tries) g(to) g
(guess) f(what) h(kind) h(of) f(mak) n(e\014le) g(to) g(generate,) f
(but) i(it) g(migh) n(t) f(guess) g(wrong,) f(so) h(y) n(ou) f(can) h
(o) n(v) n(erride) 0 2274 y(it) 32 b(with) p Ff 32 w(--make-style=some)
o(st) o(yle) p Fg -1 w(.) 43 b(Curren) n(tly) -7 b(,) 32
b(the) g(script) g(only) f(kno) n(ws) f(ho) n(w) h(to) h(mak) n(e) f
(Unix) h(st) n(yle) f(mak) n(e\014les,) h(so) 0 2374
y(this) c(option) f(is) h(useless) f(righ) n(t) f(no) n(w.) 125
2515 y(Y) -7 b(ou) 29 b(can) f(put) i(basically) d(an) n(ything) i
(reasonable) e(for) h(CPU:) h(the) g(script) g(kno) n(ws) f(ab) r(out) g
(a) h(large) e(n) n(um) n(b) r(er) i(of) g(di\013eren) n(t) 0
2614 y(arc) n(hitectures,) 24 b(their) h(submo) r(dels,) g(and) g
(common) f(aliases) g(for) g(them.) 37 b(The) 24 b(script) h(do) r(es) g
(not) f(displa) n(y) g(all) h(the) g(p) r(ossiblities) 0
2714 y(in) 38 b(it's) g(help) g(message) e(b) r(ecause) i(there) f(are)
g(simply) h(to) r(o) f(man) n(y) h(en) n(tries) f(\(if) h(y) n(ou're) f
(curious) g(ab) r(out) g(what) h(exactly) f(is) 0 2814
y(a) n(v) -5 b(ailable,) 24 b(y) n(ou) g(can) h(lo) r(ok) f(at) h(the) p
Ff 25 w(\045ARCH) p Fg(,) p Ff 23 w(\045ARCH_ALIAS) p
Fg(,) 20 b(and) p Ff 25 w(\045SUBMODEL_ALIAS) p Fg 19
w(hashes) k(at) g(the) i(start) e(of) h(the) g(script\).) 125
2955 y(Note) 19 b(that) h(y) n(ou) f(should) g(only) g(select) h(the) f
(64-bit) g(v) n(ersion) f(of) i(a) f(CPU) g(\(lik) n(e) h(\\sparc64") c
(or) j(\\mips64"\)) f(if) i(y) n(our) e(op) r(erating) 0
3054 y(system) j(kno) n(ws) f(ho) n(w) h(to) g(handle) h(64-bit) e(ob) 5
b(ject) 21 b(co) r(de) g({) g(a) g(32-bit) g(k) n(ernel) f(on) h(a) g
(64-bit) g(CPU) g(will) h(generally) e(not) h(lik) n(e) g(64-bit) 0
3154 y(co) r(de.) 36 b(F) -7 b(or) 25 b(example,) g
(gcc-solaris-sparc64-ultra2) 19 b(will) 26 b(not) f(w) n(ork) f(unless)
h(y) n(ou're) f(running) h(a) g(64-bit) g(Solaris) f(k) n(ernel) g
(\(for) 0 3254 y(32-bit) 29 b(Solaris,) f(y) n(ou) g(w) n(an) n(t) h
(gcc-solaris-sparc32-v9\).) 36 b(Y) -7 b(ou) 29 b(ma) n(y) g(or) f(ma) n
(y) h(not) g(ha) n(v) n(e) f(to) h(install) g(64-bit) g(v) n(ersions) e
(of) j(lib) r(c) 0 3353 y(and) d(related) g(system) h(libraries) e(as) h
(w) n(ell.) 125 3494 y(The) h(script) h(also) f(kno) n(ws) f(ab) r(out)
i(the) g(v) -5 b(arious) 28 b(extension) g(mo) r(dules) h(a) n(v) -5
b(ailable.) 39 b(Y) -7 b(ou) 29 b(can) g(enable) f(one) h(or) f(more) g
(with) 0 3594 y(the) h(option) f(\\) p Ff(--modules=MOD) p
Fg(",) 22 b(where) p Ff 28 w(MOD) p Fg 27 w(is) 29 b(some) e(name) i
(that) f(iden) n(ti\014es) h(the) g(extension) f(\(or) g(a) g(comma) f
(separated) 0 3694 y(list) h(of) g(them\).) 39 b(Mo) r(dules) 28
b(pro) n(vide) f(additional) h(capabilities) f(suc) n(h) h(as) f(a) p
Ff 28 w(/dev/urandom) c(EntropySource) p Fg 22 w(on) 28
b(Lin) n(ux) g(or) 0 3793 y(replace) h(the) h(implemen) n(tation) g(of)
p Fh 37 w(system) p 1422 3793 29 4 v 32 w(clo) s(c) m(k\(\)) p
Fg 31 w(with) p Fh 31 w(gettimeofda) m(y\(\)) p Fg 29
w(on) f(some) h(Unices.) 44 b(Y) -7 b(ou) 30 b(should) f(enable) 0
3893 y(an) n(y) e(extensions) g(whic) n(h) g(mak) n(es) g(sense) g(for)
g(y) n(our) f(system.) 125 4034 y(Note) 36 b(that) h(not) g(all) f
(OSes) g(or) g(CPUs) g(ha) n(v) n(e) f(sp) r(eci\014c) i(supp) r(ort.)
64 b(If) 37 b(y) n(our) e(CPU) i(arc) n(hitecture) e(isn't) i(supp) r
(orted) f(b) n(y) p Ff 0 4134 a(./configure.pl) p Fg(,) 25
b(use) 30 b('generic'.) 44 b(This) 30 b(simply) g(disables) f(mac) n
(hine-sp) r(eci\014c) h(optimization) f(\015ags.) 44
b(Similarly) -7 b(,) 30 b(setting) 0 4233 y(OS) d(to) h('generic') f
(disables) f(things) i(whic) n(h) g(dep) r(end) g(greatly) e(on) h(OS) h
(supp) r(ort) f(\(sp) r(eci\014cally) -7 b(,) 28 b(shared) e
(libraries\).) 125 4374 y(Ho) n(w) n(ev) n(er,) 20 b(it's) i(imp) r
(ossible) f(to) g(guess) f(whic) n(h) h(options) g(to) g(giv) n(e) f
(to) h(a) g(system) g(compiler.) 34 b(Th) n(us,) 22 b(if) g(y) n(ou) f
(w) n(an) n(t) f(to) h(compile) 0 4474 y(Op) r(enCL) 39
b(with) g(a) f(compiler) h(whic) n(h) p Ff 38 w(./configure.pl) p
Fg 33 w(do) r(es) g(not) g(supp) r(ort,) i(the) e(script) g(will) g(ha)
n(v) n(e) f(to) g(b) r(e) h(up) r(dated.) 0 4574 y(Preferably) -7
b(,) 32 b(mail) g(the) h(man) g(pages) e(\(or) h(simliar) f(do) r
(cumen) n(tation\)) i(for) f(the) g(C) h(and) f(C++) g(compilers) f
(and) i(the) f(system) 0 4673 y(link) n(er) 27 b(to) g(the) h(author.)
1929 5649 y(4) p 90 rotate dyy eop
%%Page: 5 5
5 4 bop Fe 0 83 a(2.1) 112 b(Con\014guration) 38 b(P) m(arameters) p
Fg 0 278 a(There) 29 b(are) g(some) h(con\014guration) e(parameters) h
(whic) n(h) g(y) n(ou) h(ma) n(y) f(w) n(an) n(t) g(to) h(t) n(w) n
(eak) f(b) r(efore) h(building) g(the) h(library) -7
b(.) 42 b(These) 0 377 y(can) 28 b(b) r(e) h(found) f(in) p
Ff 29 w(config.h) p Fg(.) 36 b(Keep) 28 b(in) g(mind) h(this) g(\014le)
f(is) g(o) n(v) n(erwritten) f(ev) n(ery) g(time) i(the) f(con\014gure)
g(script) g(is) g(run) g(\(and) 0 477 y(do) r(es) f(not) h(exist) f(un)
n(til) h(y) n(ou) f(run) h(the) g(script) f(the) h(\014rst) f(time\).)
125 618 y(Also) 35 b(included) h(in) p Ff 35 w(config.h) p
Fg 33 w(are) e(macros) g(whic) n(h) h(are) g(de\014ned) h(if) g(one) f
(or) f(more) h(extensions) g(are) f(a) n(v) -5 b(ailable.) 60
b(All) 0 718 y(of) 29 b(them) h(b) r(egin) f(with) p
Ff 30 w(OPENCL_EXT_) p Fg(.) 37 b(F) -7 b(or) 29 b(example,) g(if) p
Ff 30 w(OPENCL_EXT_BZIP2) p Fg 23 w(is) g(de\014ned,) h(then) g(an) f
(application) f(using) 0 817 y(Op) r(enCL) g(can) f(include) p
Ff 28 w(<opencl/bzip2.h>) p Fg 21 w(and) g(use) h(the) g(Bzip2) f
(\014lters.) p Ff 125 959 a(DEFAULT) p 438 959 27 4 v
28 w(BUFFERSIZE) p Fg(:) h(This) k(constan) n(t) g(is) g(used) g(as) g
(the) g(size) g(of) g(bu\013ers) g(throughout) g(Op) r(enCL.) g(A) h
(go) r(o) r(d) e(rule) h(of) 0 1058 y(th) n(um) n(b) f(w) n(ould) f(b) r
(e) i(to) e(use) h(the) g(page) f(size) g(of) h(y) n(our) e(mac) n
(hine) i(\(b) r(ew) n(are) f(that) h(a) f(lot) h(of) g(things) f(use) h
(this) g(size,) g(so) f(k) n(eep) h(it) 0 1158 y(small) c(if) h(y) n
(ou're) f(w) n(orried) f(ab) r(out) h(memory) g(use\).) 1929
5649 y(5) p 90 rotate dyy eop
%%Page: 6 6
6 5 bop Fi 0 83 a(3) 135 b(The) 44 b(Basic) h(In) l(terface) p
Fg 0 306 a(Op) r(enCL) 30 b(has) g(t) n(w) n(o) f(di\013eren) n(t) i
(in) n(terfaces.) 43 b(The) 31 b(one) e(do) r(cumen) n(ted) i(in) f
(this) h(section) f(is) g(mean) n(t) g(more) f(for) h(implemen) n(ting)
0 406 y(higher-lev) n(el) c(t) n(yp) r(es) i(\(see) f(the) h(section) f
(on) h(\014lters,) f(b) r(elo) n(w\)) g(than) h(for) f(use) h(b) n(y) f
(applications.) 125 547 y(Virtually) d(ev) n(ery) f(class) g(listed) i
(here) f(implemen) n(ts) h(the) g(function) p Ff 25 w(void) p
Fh 23 w(clear\(\)) p Fg(,) h(whic) n(h) e(destro) n(ys) f(an) n(y) h
(sensitiv) n(e) g(data) 0 647 y(con) n(tained) i(within) i(the) f(ob) 5
b(ject) 27 b(and) g(returns) f(it) i(to) e(it's) i(initial) f(state.) 36
b(This) 27 b(is) g(called) g(b) n(y) g(the) g(destructor) f(of) h(eac) n
(h) f(class,) 0 746 y(so) h(usually) g(y) n(ou) g(will) h(not) f(ha) n
(v) n(e) g(to) g(call) g(it,) h(but) h(o) r(ccasionally) c(it) j(ma) n
(y) f(b) r(e) h(useful.) p Fe 0 1020 a(3.1) 112 b(Symmetrically) 34
b(Key) m(ed) k(Algorithms) p Fg 0 1215 a(Blo) r(c) n(k) g(ciphers,) j
(stream) d(ciphers,) j(and) d(MA) n(Cs) h(all) f(handle) h(k) n(eys) f
(in) h(prett) n(y) f(m) n(uc) n(h) g(the) h(same) g(w) n(a) n(y) -7
b(.) 69 b(T) -7 b(o) 38 b(mak) n(e) g(this) 0 1315 y(similarit) n(y) 27
b(explicit,) h(all) f(algorithms) g(of) g(those) h(t) n(yp) r(es) f
(are) g(deriv) n(ed) g(from) g(the) p Ff 28 w(SymmetricAlgorith) o(m) p
Fg 22 w(base) g(class.) 36 b(This) 0 1414 y(t) n(yp) r(e) 28
b(has) f(only) g(t) n(w) n(o) g(functions:) p Ff 0 1638
a(void) p Fh 26 w(set) p 327 1638 29 4 v 34 w(k) m(ey) p
Fg 1 w(\() p Ff(const) 43 b(byte) p Fd 26 w(k) n(ey) p
Fg 7 w([],) p Ff 27 w(u32bit) p Fd 25 w(length) p Fg(\):) 125
1821 y(Most) 31 b(algorithms) f(only) g(accept) h(k) n(eys) g(of) g
(certain) g(lengths.) 48 b(If) 31 b(y) n(ou) g(attempt) h(to) f(call) p
Fh 31 w(set) p 3052 1821 V 34 w(k) m(ey) p Fg 34 w(with) g(a) g(k) n
(ey) g(length) 0 1921 y(that) d(is) f(not) h(supp) r(orted,) f(the) h
(exception) p Ff 28 w(InvalidKeyLength) p Fg 21 w(will) g(b) r(e) g
(thro) n(wn.) 125 2062 y(Ob) 5 b(jects) 22 b(of) h(this) g(t) n(yp) r
(e) g(ha) n(v) n(e) f(a) h(parameter) e(KEYLENGTH,) i(whic) n(h) g(giv)
n(es) f(one) g(v) -5 b(alue) 23 b(that) g(the) h(algorithm) d(supp) r
(orts.) 0 2162 y(This) 35 b(will) g(generally) f(b) r(e) h(the) h
(largest) e(k) n(ey) g(length) h(p) r(ossible) g(\(or) f(256) g(bits,) j
(whic) n(hev) n(er) d(is) h(less\).) 59 b(Unless) 35
b(y) n(ou) g(ha) n(v) n(e) e(a) 0 2261 y(reason) 26 b(to) h(do) h
(otherwise,) f(using) g(KEYLENGTH) g(as) g(the) h(length) f(of) h(the) g
(k) n(ey) f(is) g(recommended.) p Ff 0 2485 a(bool) p
Fh 26 w(v) -5 b(alid) p 406 2485 V 34 w(k) m(eylength) p
Fg(\() p Ff(u32bit) p Fd 26 w(length) p Fg(\)) 28 b(const:) 125
2668 y(This) f(function) h(returns) f(true) h(if) g(a) f(k) n(ey) g(of)
g(the) h(giv) n(en) f(length) h(will) g(b) r(e) g(accepted) f(b) n(y) g
(the) h(cipher.) p Fe 0 2942 a(3.2) 112 b(Blo) s(c) m(k) 36
b(Ciphers) p Fg 0 3137 a(Blo) r(c) n(k) 27 b(ciphers) g(implemen) n(t) h
(the) g(in) n(terface) p Ff 27 w(BlockCipher) p Fg(,) 23
b(found) 28 b(in) p Ff 28 w(opencl.h) p Fg(.) p Ff 0
3361 a(void) p Fh 26 w(encrypt) p Fg(\() p Ff(const) 43
b(byte) p Fd 26 w(in) p Fg([BLOCKSIZE],) p Ff 26 w(byte) p
Fd 26 w(out) p Fg 2 w([BLOCKSIZE]\)) 26 b(const) p Ff
0 3502 a(void) p Fh 26 w(encrypt) p Fg(\() p Ff(byte) p
Fd 27 w(blo) r(c) n(k) p Fg 5 w([BLOCKSIZE]\)) g(const) 125
3685 y(These) d(functions) g(apply) h(the) f(blo) r(c) n(k) g(cipher) g
(transformation) f(to) p Fd 23 w(in) p Fg 24 w(and) h(place) g(the) h
(result) f(in) p Fd 24 w(out) p Fg(,) h(or) f(encrypts) p
Fd 23 w(blo) r(c) n(k) p Fg 0 3784 a(in) 33 b(place) f(\() p
Fd(in) p Fg 33 w(ma) n(y) f(b) r(e) i(the) g(same) f(as) p
Fd 31 w(out) p Fg 2 w(\).) 52 b(BLOCKSIZE) 30 b(is) j(a) f(constan) n
(t) f(whic) n(h) i(sp) r(eci\014es) f(ho) n(w) g(m) n(uc) n(h) g(data) g
(a) g(blo) r(c) n(k) 0 3884 y(cipher) 27 b(can) h(pro) r(cess) e(at) h
(one) h(time.) p Ff 125 4025 a(BlockCipher) p Fg(s) g(ha) n(v) n(e) 33
b(similar) g(functions) p Fh 34 w(decrypt) p Fg(,) j(whic) n(h) e(p) r
(erform) f(the) h(in) n(v) n(erse) e(op) r(eration.) 54
b(All) 34 b(v) -5 b(ariations) 32 b(of) p Fh 0 4125 a(encrypt) p
Fg 29 w(and) p Fh 27 w(decrypt) p Fg 29 w(assume) 27
b(that) p Fh 28 w(set) p 1447 4125 V 34 w(k) m(ey) p
Fg 30 w(has) g(already) f(b) r(een) i(called.) 125 4266
y(Blo) r(c) n(k) e(ciphers) h(implemen) n(t) i(the) p
Ff 28 w(SymmetricAlgori) o(th) o(m) p Fg 22 w(in) n(terface.) p
Fe 0 4540 a(3.3) 112 b(Stream) 37 b(Ciphers) p Fg 0 4734
a(Stream) 31 b(ciphers) f(are) g(somewhat) h(di\013eren) n(t) g(from) g
(blo) r(c) n(k) f(ciphers,) i(in) f(that) h(encrypting) e(data) h
(results) g(in) g(c) n(hanging) f(the) 0 4834 y(in) n(ternal) d(state) g
(of) h(the) g(cipher.) 36 b(Also,) 28 b(y) n(ou) f(ma) n(y) f(encrypt) i
(an) n(y) f(length) g(of) h(data) f(in) h(one) f(go) g(\(in) h(b) n
(yte) f(amoun) n(ts\).) p Ff 0 5058 a(void) p Fh 26 w(encrypt) p
Fg(\() p Ff(const) 43 b(byte) p Fd 26 w(in) p Fg([],) p
Ff 28 w(byte) p Fd 26 w(out) p Fg 2 w([],) p Ff 28 w(u32bit) p
Fd 25 w(length) p Fg(\)) p Ff 0 5199 a(void) p Fh 26
w(encrypt) p Fg(\() p Ff(byte) p Fd 27 w(data) p Fg([],) p
Ff 28 w(u32bit) p Fd 25 w(length) p Fg(\):) 125 5382
y(These) 27 b(functions) i(encrypt) f(the) h(arbitrary) d(length) i
(\(w) n(ell,) g(less) g(than) h(4) e(gigab) n(yte) g(long\)) h(string) p
Fd 27 w(in) p Fg 29 w(and) g(place) g(it) g(in) n(to) 1929
5649 y(6) p 90 rotate dyy eop
%%Page: 7 7
7 6 bop Fd 0 83 a(out) p Fg(,) 28 b(or) e(encrypts) h(it) h(in) g
(place) f(in) p Fd 28 w(data) p Fg(.) 37 b(The) p Fh
27 w(decrypt) p Fg 29 w(functions) 28 b(lo) r(ok) f(just) h(lik) n(e) p
Fh 27 w(encrypt) p Fg(.) 125 224 y(Stream) f(ciphers) g(implemen) n(t) h
(the) p Ff 28 w(SymmetricAlgorit) o(hm) p Fg 21 w(in) n(terface.) 125
365 y(Some) 35 b(stream) f(ciphers) h(supp) r(ort) g(random) f(access) g
(to) i(an) n(y) e(p) r(oin) n(t) i(in) f(their) g(cipher) g(stream.) 60
b(These) 35 b(ciphers) f(ha) n(v) n(e) 0 465 y(the) 27
b(in) n(terface) p Ff 26 w(RandomAccessStr) o(eam) o(Ci) o(phe) o(r) p
Fg 20 w(\(whic) n(h) g(is) f(deriv) n(ed) g(from) p Ff
26 w(StreamCipher) p Fg(\).) 32 b(F) -7 b(or) 26 b(these) h(ciphers,) f
(calling) p Ff 0 565 a(void) p Fh 27 w(seek) p Fg(\() p
Ff(u32bit) p Fd 26 w(b) n(yte) p Fg 5 w(\)) i(will) h(c) n(hange) e
(the) i(ciphers) f(state) h(so) e(that) i(it) g(as) f(if) h(the) g
(cipher) f(and) h(b) r(een) g(k) n(ey) n(ed) e(as) h(normal,) 0
664 y(then) g(encrypted) p Fd 27 w(b) n(yte) p Fg 33
w({) f(1) g(b) n(ytes) g(of) h(data) f(\(so) g(the) h(next) g(b) n(yte)
f(in) h(the) g(cipher) g(stream) e(is) i(b) n(yte) f(n) n(um) n(b) r
(er) p Fd 28 w(b) n(yte) p Fg 5 w(\).) p Fe 0 938 a(3.4) 112
b(Hash) 38 b(F) -9 b(unctions) p Fg 0 1133 a(Hash) 27
b(functions) g(tak) n(e) f(their) h(input) g(without) h(pro) r(ducing) e
(an) n(y) g(output,) i(only) e(pro) r(ducing) g(an) n(ything) g(when) h
(all) g(input) h(has) 0 1232 y(already) e(tak) n(en) h(place.) p
Ff 0 1457 a(void) p Fh 26 w(up) s(date) p Fg(\() p Ff(const) 42
b(byte) p Fd 26 w(input) p Fg 2 w([],) p Ff 28 w(u32bit) p
Fd 25 w(length) p Fg(\):) 125 1639 y(Up) r(date) 28 b(the) g(hash) f
(function) h(with) p Fd 28 w(length) p Fg 28 w(more) f(b) n(ytes) g(in)
p Fd 28 w(input) p Fg(.) p Ff 0 1863 a(void) p Fh 26
w(\014nal) p Fg(\() p Ff(byte) p Fd 26 w(hash) p Fg([HASHLENGTH]\):) 125
2046 y(Complete) 32 b(the) g(hash) g(calculation) f(and) h(place) g
(the) h(result) f(in) n(to) p Fd 31 w(hash) p Fg(.) 51
b(HASHLENGTH) 33 b(is) f(a) g(public) g(constan) n(t) g(in) 0
2146 y(eac) n(h) d(class) g(that) g(giv) n(es) g(the) h(length) g(of) f
(the) h(hash) f(in) h(b) n(ytes.) 43 b(After) 30 b(y) n(ou) f(call) p
Fh 29 w(\014nal) p Fg(,) h(the) g(hash) g(function) g(is) f(reset) g
(to) h(it's) 0 2245 y(initial) e(state,) f(so) g(it) h(ma) n(y) f(b) r
(e) h(reused) f(immediately) -7 b(.) p Fe 0 2519 a(3.5) 112
b(Message) 39 b(Authen) m(tication) d(Co) s(des) p Fg
0 2714 a(A) e(MA) n(C) f(is) g(essen) n(tially) f(a) h(k) n(ey) n(ed) f
(hash) h(function,) j(so) c(classes) g(deriv) n(ed) h(from) p
Ff 33 w(MessageAuthCode) p Fg 27 w(ha) n(v) n(e) p Fh
32 w(up) s(date) p Fg 33 w(and) p Fh 0 2814 a(\014nal) p
Fg 36 w(classes) h(just) i(lik) n(e) f(a) p Ff 35 w(HashFunction) p
Fg 31 w(\(and) h(lik) n(e) f(a) p Ff 35 w(HashFunction) p
Fg(,) e(after) p Fh 35 w(\014nal) p Fg 36 w(is) i(called,) j(it) e(can)
f(b) r(e) h(used) f(to) 0 2913 y(mak) n(e) f(a) g(new) h(MA) n(C) g
(righ) n(t) f(a) n(w) n(a) n(y;) i(the) f(k) n(ey) f(is) h(k) n(ept) f
(around\).) 58 b(One) 34 b(minor) g(di\013erence) h(is) f(that) h(the) g
(constan) n(t) f(called) 0 3013 y(HASHLENGTH) 29 b(in) e(a) h(hash) f
(function) h(is) g(called) f(MA) n(CLENGTH) g(in) h(a) g(MA) n(C) f(ob)
5 b(ject.) 125 3154 y(Additionally) -7 b(,) 23 b(a) f(MA) n(C) g(has) f
(the) p Ff 23 w(SymmetricAlgorit) o(hm) p Fg 16 w(in) n(terface) g(\(a)
h(MA) n(C) g(should) g(b) r(e) h(k) n(ey) n(ed) e(b) r(efore) h(b) r
(eing) g(used\).) p Fe 0 3428 a(3.6) 112 b(Random) 38
b(Num) m(b) s(er) f(Generators) p Fg 0 3623 a(The) 25
b(random) f(n) n(um) n(b) r(er) h(generators) d(pro) n(vided) i(in) i
(Op) r(enCL) f(are) f(mean) n(t) g(for) h(creating) f(k) n(eys,) g
(IVs,) i(padding,) f(nonces,) g(and) 0 3722 y(an) n(ything) 31
b(else) h(whic) n(h) g(requires) f('random') g(data.) 50
b(It) 33 b(is) f(imp) r(ortan) n(t) f(to) h(remem) n(b) r(er) g(that) g
(the) h(output) f(of) g(these) g(classes) 0 3822 y(will) c(v) -5
b(ary) e(,) 26 b(ev) n(en) h(if) h(they) f(are) g(supplied) g(with) h
(exactly) f(the) h(same) e(seed) h(\(ie,) h(t) n(w) n(o) f(Randp) r(o) r
(ols) g(with) g(similar) g(initial) h(states) 0 3922
y(will) g(not) f(pro) r(duce) h(the) g(same) f(output\).) 125
4063 y(T) -7 b(o) 24 b(ensure) h(go) r(o) r(d) f(qualit) n(y) g
(output,) j(y) n(ou) d(need) h(to) g(seed) g(the) g(RNG) h(with) f
(truly) g('random') f(data,) h(suc) n(h) g(as) f(timing) i(data) 0
4162 y(from) h(hardw) n(are.) 35 b(Preferably) -7 b(,) 26
b(y) n(ou) h(should) g(use) h(an) p Ff 27 w(EntropySource) p
Fg 22 w(\(see) g(b) r(elo) n(w\).) 125 4303 y(T) -7 b(o) 31
b(add) i(en) n(trop) n(y) e(to) h(a) g(RNG,) h(y) n(ou) e(can) h(use) p
Ff 32 w(void) p Fh 31 w(add) p 1980 4303 29 4 v 35 w(en) m(trop) m(y) p
Fg 1 w(\() p Ff(const) 43 b(byte) p Fd 31 w(data) p Fg([],) p
Ff 33 w(u32bit) p Fd 30 w(length) p Fg(\)) 32 b(or) g(the) p
Ff 0 4403 a(EntropySource) p Fg 22 w(in) n(terface.) 125
4544 y(One) d(a) h(RNG) h(has) e(b) r(een) i(initialized,) g(y) n(ou) e
(can) h(get) g(a) g(single) g(b) n(yte) g(of) g(random) f(data) h(b) n
(y) f(calling) p Ff 31 w(byte) p Fh 29 w(random\(\)) p
Fg(,) 0 4644 y(or) f(get) h(a) g(large) e(blo) r(c) n(k) i(b) n(y) f
(calling) p Ff 30 w(void) p Fh 27 w(randomize) p Fg(\() p
Ff(byte) p Fd 27 w(data) p Fg([],) p Ff 29 w(u32bit) p
Fd 27 w(length) p Fg(\),) h(whic) n(h) g(will) h(put) f(random) f(b) n
(ytes) 0 4743 y(in) n(to) f(eac) n(h) g(mem) n(b) r(er) h(of) f(the) h
(arra) n(y) d(from) j(indexes) f(0) p Fc 27 w(:) 14 b(:) g(:) p
Fd 28 w(length) p Fg 27 w({) 28 b(1.) p Fh 0 5001 a(3.6.1) 94
b(Randp) s(o) s(ol) p Ff 0 5196 a(Randpool) p Fg 26 w(is) 29
b(based) g(around) f(a) h(large) e(p) r(o) r(ol) i(of) h(data) e(and) h
(a) g(hash) g(function) h(\(b) n(y) f(default,) h(MD5\).) p
Ff 42 w(Randpool) p Fg 26 w(is) f(slo) n(w) n(er) 0 5295
y(than) p Ff 28 w(X917) p Fg(,) d(but) i(can) f(easily) g(satisfy) g
(an) n(y) g(reasonable) e(demand) j(\(on) g(a) f(350) f(MHz) i(P) n(en)
n(tium) f(I) r(I) p Ff 28 w(Randpool) p Fg 24 w(can) g(pro) r(duce) 1929
5649 y(7) p 90 rotate dyy eop
%%Page: 8 8
8 7 bop Fg 0 83 a(o) n(v) n(er) 25 b(100K) g(of) i(data) g(p) r(er) g
(second\).) 36 b(Because) 26 b(the) i(in) n(ternal) e(state) h(of) p
Ff 33 w(Randpool) p Fg 24 w(is) g(m) n(uc) n(h) g(larger) e(than) p
Ff 27 w(X917) p Fg(,) h(it) h(is) g(more) 0 183 y(lik) n(ely) g(to) h
(b) r(e) g(secure,) e(and) i(it) g(is) f(recommended) g(that) p
Ff 28 w(Randpool) p Fg 25 w(b) r(e) h(used) f(o) n(v) n(er) p
Ff 26 w(X917) p Fg 26 w(in) h(most) f(cases.) p Fh 0
440 a(3.6.2) 94 b(X917) p Ff 0 635 a(X917) p Fg 30 w(is) 32
b(based) g(on) g(the) g(ANSI) h(X9.17) e(standard,) h(whic) n(h) g(mak)
n(es) f(use) h(of) g(a) g(blo) r(c) n(k) g(cipher.) p
Ff 50 w(X917) p Fg 30 w(is) g(quite) g(a) g(bit) h(faster) 0
734 y(than) p Ff 24 w(Randpool) p Fg 21 w(\(dep) r(ending) 24
b(on) g(the) g(blo) r(c) n(k) g(cipher) g(used\).) 36
b(Using) p Ff 24 w(Square) p Fg(,) 23 b(usually) g(one) h(of) g(the) g
(fastest) g(ciphers) f(in) i(the) 0 834 y(suite,) p Ff
28 w(X917) p Fg 26 w(is) i(ab) r(out) h(7) f(times) h(faster) f(than) p
Ff 28 w(Randpool) p Fg(.) 34 b(The) 27 b(v) n(ersion) f(used) i(is) g
(a) f(v) -5 b(arian) n(t) 26 b(of) i(the) g(normal) f(X9.17;) f(most) 0
934 y(imp) r(ortan) n(tly) -7 b(,) 31 b(only) f(1/2) f(of) h(the) h
(output) g(of) f(the) h(blo) r(c) n(k) f(cipher) g(is) g(actually) g
(giv) n(en) f(to) i(the) f(caller) g(\(then) h(a) f(new) g(blo) r(c) n
(k) g(is) 0 1033 y(computed\),) i(the) e(timestamp) h(is) f(encrypted) h
(in) f(CBC) g(mo) r(de) h(instead) f(of) h(ECB) e(mo) r(de,) j(and) e
(that) g(after) h(a) p Ff 29 w(X917) p Fg 29 w(ob) 5
b(ject) 0 1133 y(has) 32 b(generated) g(a) g(certain) g(n) n(um) n(b) r
(er) h(of) f(blo) r(c) n(ks) g(\(normally) g(set) h(to) g(32\),) g(it) g
(will) g(automatically) f(rek) n(ey) f(itself) i(using) g(it's) 0
1232 y(in) n(ternal) e(state.) 51 b(These) 31 b(alterations) g(mak) n
(e) g(an) n(y) h(attac) n(k) f(m) n(uc) n(h) h(harder) e(\(at) j(the) f
(cost) g(of) g(reducing) f(sp) r(eed\).) p Ff 51 w(X917) p
Fg 31 w(is) g(a) 0 1332 y(template) d(whic) n(h) f(tak) n(es) g(a) g
(blo) r(c) n(k) g(cipher) h(as) f(an) g(parameter.) p
Fh 0 1589 a(3.6.3) 94 b(En) m(trop) m(y) 33 b(Sources) p
Fg 0 1784 a(F) -7 b(or) 29 b(a) g(RNG) g(to) h(b) r(e) f(secure,) g(it)
h(has) f(to) g(b) r(e) g(seeded) g(with) h(some) f(amoun) n(t) g(of) g
(\\truly) g(random") e(data.) 42 b(Because) 28 b(Op) r(enCL) 0
1884 y(is) h(designed) h(to) f(b) r(e) h(platform) f(indep) r(enden) n
(t,) i(no) f(routines) f(for) g(this) h(are) e(pro) n(vided.) 42
b(Ho) n(w) n(ev) n(er,) 28 b(Op) r(enCL) i(do) r(es) f(ha) n(v) n(e) f
(an) p Ff 0 1983 a(EntropySource) p Fg 21 w(in) n(terface,) e(whic) n
(h) g(can) f(b) r(e) i(sub) r(classed) e(for) h(eac) n(h) f(individual)
h(platform.) 36 b(Some) 26 b(OSes) g(\(suc) n(h) g(as) f(Lin) n(ux,) 0
2083 y(F) -7 b(reeBSD,) 33 b(and) f(Windo) n(ws) g(NT\)) h(pro) n(vide)
f(easy) f(w) n(a) n(ys) g(to) i(get) f(random) g(data) g(from) g(the) h
(OS) f(itself,) j(while) d(others) g(\(lik) n(e) 0 2183
y(most) 25 b(commercial) e(Unices\)) j(will) f(require) f(v) n(ery) f
(sp) r(ecialized) i(co) r(de.) p Ff 36 w(EntropySource) p
Fg(s) 19 b(for) 24 b(some) h(systems) f(can) g(b) r(e) i(found) 0
2282 y(as) h(mo) r(dules) h(in) f(the) h(Op) r(enCL) g(distribution.) p
Ff 125 2423 a(EntropySource) p Fg 28 w(has) 33 b(a) g(pair) f(of) i
(functions) f(for) g(getting) g(en) n(trop) n(y) -7 b(,) p
Fh 34 w(fast) p 2496 2423 29 4 v 35 w(p) s(oll) p Fg
32 w(and) p Fh 33 w(slo) m(w) p 3067 2423 V 34 w(p) s(oll) p
Fg(.) 53 b(Y) -7 b(ou) 33 b(can) g(use) g(an) p Ff 0
2523 a(EntropySource) p Fg 28 w(to) h(seed) f(a) g(RNG) h(b) n(y) f
(calling) p Ff 34 w(void) p Fh 32 w(add) p 1948 2523
V 35 w(en) m(trop) m(y) p Fg 1 w(\() p Ff(EntropySource&) p
Fd 29 w(source) p Fg(,) p Ff 34 w(bool) p Fd 32 w(slo) n(w) p
Fg 7 w(\).) 54 b(This) 0 2623 y(tells) 28 b(the) g(RNG) g(to) f(ask) g
(the) p Ff 28 w(EntropySource) p Fg 22 w(for) g(some) h(amoun) n(t) f
(of) g(random) g(data.) 125 2764 y(If) p Fd 26 w(slo) n(w) p
Fg 31 w(is) p Ff 26 w(true) p Fg(,) e(the) h(RNG) g(will) g(ask) p
Fh 25 w(slo) m(w) p 1538 2764 V 33 w(p) s(oll) p Fg 25
w(to) f(gather) g(a) g(fairly) g(large) f(amoun) n(t) h(of) h(data;) g
(otherwise) p Fh 25 w(fast) p 3715 2764 V 35 w(p) s(oll) p
Fg 0 2863 a(will) f(b) r(e) f(called) g(in) h(order) e(to) h(get) h
(some) e(basic) h(information) g(quic) n(kly) -7 b(.) 35
b(Seeding) 25 b(the) f(RNG) h(with) g(a) f(slo) n(w) g(p) r(oll) g(at) h
(least) f(once) 0 2963 y(\(when) 30 b(y) n(our) e(application) g
(starts) h(up,) h(for) f(example\)) g(is) g(a) p Fb 29
w(highly) p Fg 39 w(recommended) f(idea,) i(b) r(ecause) f(it) g
(ensures) g(that) g(y) n(our) 0 3063 y(RNG) f(is) g(in) g(a) f(go) r(o)
r(d) g(\(ie,) h(highly) f(random) g(and) g(unpredictable\)) h(state.)
125 3204 y(The) p Ff 34 w(EntropySource) p Fg 29 w(shouldn't) 34
b(write) h(more) e(data) h(in) n(to) g(the) h(arra) n(y) d(than) i(w) n
(as) f(requested) h(\(otherwise) g(memory) 0 3303 y(not) 29
b(o) n(wned) g(b) n(y) g(the) g(pro) r(cess) f(will) i(probably) e(b) r
(e) h(written) h(to\),) f(ho) n(w) n(ev) n(er,) f(it) i(can) e(write) h
(less) g(\(for) g(instance,) g(if) h(it) g(cannot) 0
3403 y(collect) 22 b(enough) f(data,) i(or) e(collecting) g(that) h(m) n
(uc) n(h) g(w) n(ould) f(tak) n(e) h(to) r(o) f(long\).) 35
b(F) -7 b(or) 21 b(this) h(reason,) g(the) p Fh 22 w(get) p
3232 3403 V 34 w(en) m(trop) m(y) p Fg 25 w(function) 0
3503 y(returns) 31 b(ho) n(w) g(m) n(uc) n(h) g(data) h(it) g(actually)
f(wrote) g(\(whic) n(h) h(should) f(nev) n(er) g(b) r(e) h(more) f
(than) g(the) p Fd 33 w(length) p Fg 31 w(\014eld) h(passed) f(to) h
(the) 0 3602 y(function\).) 125 3743 y(Note) h(for) f(writers) g(of) p
Ff 39 w(EntropySource) p Fg(s:) 42 b(it) 34 b(isn't) f(necessary) e(to)
i(use) g(an) n(y) f(kind) h(of) g(cryptographic) e(hash) i(on) f(y) n
(our) 0 3843 y(output.) 37 b(The) 26 b(data) g(pro) r(duced) g(b) n(y) g
(an) g(En) n(trop) n(ySource) e(is) i(only) g(used) g(b) n(y) g(an) h
(application) e(after) h(it) h(has) f(b) r(een) g(hashed) g(b) n(y) 0
3943 y(the) p Ff 29 w(RandomNumberGener) o(ato) o(r) p
Fg 23 w(whic) n(h) j(ask) n(ed) f(for) g(the) i(en) n(trop) n(y) -7
b(,) 28 b(and) h(th) n(us) g(an) n(y) f(hashing) h(y) n(ou) f(do) h
(will) g(b) r(e) g(w) n(asteful) g(of) 0 4042 y(b) r(oth) f(CPU) f
(cycles) g(and) h(p) r(ossibly) f(en) n(trop) n(y) -7
b(.) p Fe 0 4316 a(3.7) 112 b(Miscellaneous) p Fg 0 4511
a(This) 28 b(section) f(has) g(do) r(cumen) n(tation) g(for) g(an) n
(ything) g(that) h(just) g(didn't) h(\014t) f(in) n(to) f(an) n(y) g
(of) g(the) h(ma) 5 b(jor) 27 b(categories.) p Fh 0 4768
a(3.7.1) 94 b(S2K) 31 b(Algorithms) p Fg 0 4963 a(There) g(are) g(v) -5
b(arious) 30 b(pro) r(cedures) h(\(usually) g(fairly) g(ad-ho) r(c\)) h
(for) f(turning) g(a) h(passphrase) d(in) n(to) j(an) f(arbitrary) f
(length) i(k) n(ey) 0 5063 y(for) f(a) g(symmetric) g(cipher.) 47
b(A) 32 b(general) e(in) n(terface) g(for) h(suc) n(h) g(algorithms) f
(is) h(presen) n(ted) g(in) p Ff 31 w(s2k.h) p Fg(.) 46
b(The) 31 b(main) h(function) 0 5162 y(is) p Fh 30 w(deriv) m(e) p
Fg(,) f(whic) n(h) f(tak) n(es) f(a) g(string) h(and) g(the) g(desired)
f(length) i(of) f(the) g(output) g(k) n(ey) -7 b(,) 31
b(and) e(returns) h(a) f(k) n(ey) h(of) g(that) g(length,) 0
5262 y(deterministically) d(pro) r(duced) h(from) f(the) h(passphrase.)
1929 5649 y(8) p 90 rotate dyy eop
%%Page: 9 9
9 8 bop Fg 125 83 a(Most) 25 b(suc) n(h) g(algorithms) f(allo) n(w) g
(the) h(use) h(of) f(a) g(\\salt",) f(whic) n(h) i(pro) n(vides) e
(some) g(extra) h(randomness) f(and) h(helps) g(against) 0
183 y(dictionary) 32 b(attac) n(ks) h(on) g(the) h(passphrase.) 52
b(Simply) 34 b(call) p Fh 33 w(c) m(hange) p 2161 183
29 4 v 35 w(salt) p Fg 33 w(\(there) g(are) e(v) -5 b(ariations) 32
b(of) h(it) h(for) f(most) g(of) h(the) 0 282 y(w) n(a) n(ys) 26
b(y) n(ou) h(migh) n(t) g(wish) h(to) f(sp) r(ecify) h(a) g(salt,) f(c)
n(hec) n(k) g(the) h(header) e(for) h(details\)) h(with) g(a) f(blo) r
(c) n(k) g(of) h(random) f(data.) 125 423 y(Additionally) 22
b(some) f(algorithms) g(allo) n(w) g(y) n(ou) g(to) h(set) g(some) f
(sort) g(of) h(iteration) g(coun) n(t,) g(whic) n(h) g(will) h(mak) n
(e) e(the) h(algorithm) 0 523 y(tak) n(e) 29 b(longer) g(to) h(compute)
g(the) h(\014nal) f(k) n(ey) f(\(h) n(urting) h(the) h(sp) r(eed) f(of)
g(brute-force) f(attac) n(ks) g(of) h(v) -5 b(arious) 29
b(kinds\).) 45 b(A) 30 b(note) g(of) 0 623 y(w) n(arning:) 46
b(the) 33 b(only) g(curren) n(tly) e(implemen) n(ted) j(S2K) e
(algorithm,) h(the) g(one) g(sp) r(eci\014ed) g(for) f(Op) r(enPGP) g
(\(in) p Ff 34 w(pgp) p 3602 623 27 4 v 30 w(s2k.h) p
Fg(\),) 0 722 y(uses) f(the) g(iteration) g(coun) n(t) g(in) g(a) g
(strange) f(manner;) i(instead) g(of) f(sp) r(ecifying) g(ho) n(w) f
(man) n(y) h(times) g(to) h(iterate) e(the) i(hash,) g(it) 0
822 y(tells) 25 b(ho) n(w) f(man) n(y) p Fb 24 w(bytes) p
Fg 31 w(should) g(b) r(e) h(hashed) g(in) f(total) h(\(including) g
(the) g(salt\).) 35 b(So) 25 b(the) g(exact) f(iteration) f(coun) n(t) i
(will) f(dep) r(end) 0 922 y(on) 32 b(the) g(size) g(of) g(the) h(salt)
e(\(whic) n(h) i(is) f(\014xed) g(at) g(8) f(b) n(ytes) h(for) g(Op) r
(enPGP) -7 b(,) 31 b(though) h(the) g(implemen) n(tation) h(will) f
(allo) n(w) f(an) n(y) 0 1021 y(salt) c(size\)) h(and) f(the) h(size) g
(of) f(the) h(passphrase.) 125 1162 y(T) -7 b(o) 28 b(get) h(what) g
(Op) r(enPGP) f(calls) h(\\Simple) g(S2K",) f(set) h(iterations) f(to) h
(0) g(\(the) g(default) h(for) e(Op) r(enPGP) h(S2K\),) f(and) h(do) 0
1262 y(not) 24 b(sp) r(ecify) h(a) f(salt.) 36 b(T) -7
b(o) 24 b(get) g(\\Salted) g(S2K",) f(again) g(lea) n(v) n(e) g(the) i
(iteration) f(coun) n(t) g(at) g(0,) h(but) g(giv) n(e) e(an) h(8-b) n
(yte) g(salt.) 35 b(\\Salted) 0 1362 y(and) c(Iterated) g(S2K") f
(requires) f(an) i(8-b) n(yte) f(salt) h(and) g(some) g(iteration) f
(coun) n(t) h(\(generally) -7 b(,) 31 b(this) h(should) e(b) r(e) i
(signi\014can) n(tly) 0 1461 y(larger) 23 b(than) i(the) h(size) f(of) g
(the) g(longest) g(passphrase) e(that) i(migh) n(t) g(reasonably) e(b) r
(e) j(used;) g(somewhere) e(from) g(1024) f(to) i(65536) 0
1561 y(w) n(ould) i(probably) g(b) r(e) h(ab) r(out) f(righ) n(t\).) 125
1702 y(While) e(Op) r(enPGP's) e(S2K) h(algorithm) f(supp) r(orts) h(b)
r(oth) h(salting) f(and) h(iterating,) f(not) h(all) f(S2K) g
(algorithms) f(will.) 36 b(Ho) n(w-) 0 1802 y(ev) n(er,) d(if) g(they) f
(do) h(not) f(supp) r(ort) g(suc) n(h) h(things,) g(they) g(will) g
(simply) f(ignore) f(the) i(n) n(um) n(b) r(er) g(of) f(iterations) g
(and/or) f(the) h(salt) 0 1901 y(\(ie,) e(y) n(ou) e(can) g(call) p
Fh 29 w(c) m(hange) p 899 1901 29 4 v 35 w(salt) p Fg
28 w(on) h(an) n(y) f(S2K) g(ob) 5 b(ject) 29 b(without) g(fear) g(of) f
(an) h(exception) g(b) r(ecause) f(that) h(particular) f(S2K) 0
2001 y(do) r(esn't) g(supp) r(ort) f(salting\).) p Fh
0 2251 a(3.7.2) 94 b(Chec) m(ksums) p Fg 0 2446 a(Chec) n(ksums) 35
b(are) h(v) n(ery) f(similar) g(to) h(hash) g(functions,) j(and) d(in) g
(fact) g(share) f(the) i(same) f(in) n(terface.) 62 b(Ho) n(w) n(ev) n
(er,) 36 b(there) g(are) 0 2546 y(some) c(signi\014can) n(t) g
(di\013erences,) h(the) g(ma) 5 b(jor) 32 b(ones) f(b) r(eing) i(that) g
(the) g(output) g(size) f(is) h(v) n(ery) e(small) h(\(usually) h(in) f
(the) h(range) 0 2645 y(of) d(2) g(to) h(4) f(b) n(ytes\),) h(and) f
(is) g(not) h(designed) f(to) g(b) r(e) h(cryptographically) d(secure.)
44 b(But) 31 b(for) f(their) g(in) n(tended) h(purp) r(ose) f(\(error) 0
2745 y(c) n(hec) n(king\),) h(they) g(p) r(erform) f(v) n(ery) g(w) n
(ell.) 46 b(Some) 31 b(examples) f(of) h(c) n(hec) n(ksums) f(included)
h(in) g(Op) r(enCL) g(are) f(the) h(Adler32) f(and) 0
2845 y(CR) n(C32) c(c) n(hec) n(ksums.) p Fh 0 3095 a(3.7.3) 94
b(Exceptions) p Fg 0 3290 a(So) r(oner) 30 b(or) g(later,) h(something)
f(is) g(going) g(to) h(go) e(wrong.) 45 b(Op) r(enCL's) 31
b(b) r(eha) n(vior) e(when) i(something) f(un) n(usual) h(o) r(ccurs,) f
(lik) n(e) 0 3390 y(most) 25 b(C++) f(soft) n(w) n(are,) f(is) i(to) g
(thro) n(w) f(an) h(exception.) 35 b(Exceptions) 24 b(in) h(Op) r(enCL)
g(are) f(deriv) n(ed) g(from) h(it's) p Ff 25 w(Exception) p
Fg 21 w(class.) 0 3489 y(Y) -7 b(ou) 29 b(can) g(see) f(most) h(of) g
(the) h(ma) 5 b(jor) 27 b(v) -5 b(arieties) 29 b(of) g(exceptions) f
(used) h(in) g(Op) r(enCL) g(b) n(y) g(lo) r(oking) f(at) p
Ff 29 w(exceptn.h) p Fg(.) 37 b(The) 29 b(only) 0 3589
y(function) c(y) n(ou) f(really) f(need) i(to) f(concern) g(y) n
(ourself) f(with) i(is) p Ff 24 w(const) 42 b(char*) p
Fh 22 w(what\(\)) p Fg(.) 37 b(This) 24 b(will) h(return) f(an) g
(error) f(message) 0 3688 y(relev) -5 b(an) n(t) 27 b(to) g(the) h
(error) e(that) i(o) r(ccurred.) 36 b(F) -7 b(or) 27
b(example:) p Ff 0 3873 a(try) 42 b({) 131 3973 y(//) h(various) d
(OpenCL) h(operations) 131 4073 y(}) 0 4172 y(catch\(OpenCL::Ex) o(cep)
o(ti) o(on) o(&) d(e\)) 131 4272 y({) 131 4371 y(cout) k(<<) g("OpenCL)
f(exception) f(caught:) h(") i(<<) g(e.what\(\)) d(<<) j(endl;) 131
4471 y(//) g(error) e(handling,) f(or) j(just) f(abort) 131
4571 y(}) p Fg 125 4755 a(Op) r(enCL's) 20 b(exceptions) g(are) g
(deriv) n(ed) g(from) p Ff 20 w(std::exception) p Fg(,) c(so) k(y) n
(ou) g(don't) h(need) g(to) f(explicitly) h(c) n(hec) n(k) f(for) g(Op)
r(enCL) 0 4855 y(exceptions) 27 b(if) h(y) n(ou're) e(already) h(catc) n
(hing) f(the) i(ISO) g(standard) e(ones.) p Fh 0 5106
a(3.7.4) 94 b(Secure) 32 b(Memory) p Fg 0 5300 a(A) d(ma) 5
b(jor) 28 b(concern) g(with) h(mixing) g(mo) r(dern) g(m) n(ultiuser) g
(OSes) f(and) h(cryptographic) e(co) r(de) h(is) h(that) h(at) e(an) n
(y) g(time) i(the) f(co) r(de) 0 5400 y(\(including) f(secret) e(k) n
(eys\)) h(could) g(b) r(e) g(sw) n(app) r(ed) g(to) g(disk,) g(where) g
(it) g(can) g(later) g(b) r(e) g(read) f(b) n(y) h(an) g(attac) n(k) n
(er.) 35 b(Op) r(enCL) 27 b(stores) 1929 5649 y(9) p
90 rotate dyy eop
%%Page: 10 10
10 9 bop Fg 0 83 a(almost) 32 b(ev) n(erything) g(\(and) h(esp) r
(ecially) f(an) n(ything) g(sensitiv) n(e\)) g(in) h(memory) f
(bu\013ers) h(whic) n(h) g(a\)) f(clear) g(out) h(their) g(con) n(ten) n
(ts) 0 183 y(when) f(their) g(destructors) f(are) g(called,) h(and) g
(b\)) g(ha) n(v) n(e) f(easy) g(plugins) h(for) f(v) -5
b(arious) 31 b(memory) g(lo) r(c) n(king) g(functions,) i(suc) n(h) f
(as) 0 282 y(the) p Fh 28 w(mlo) s(c) m(k) p Fg(\(2\)) 26
b(call) i(on) f(man) n(y) g(Unix) h(systems.) 125 423
y(These) f(classes) g(should) h(also) f(b) r(e) h(used) g(within) h(y) n
(our) e(o) n(wn) g(co) r(de) h(for) g(storing) e(sensitiv) n(e) i
(data.) 38 b(They) 28 b(are) f(only) g(mean) n(t) 0 523
y(for) 32 b(primitiv) n(e) g(data) g(t) n(yp) r(es) h(\(in) n(t,) h
(long,) f(etc\):) 47 b(if) 33 b(y) n(ou) f(w) n(an) n(t) g(a) g(con) n
(tainer) f(of) h(higher) g(lev) n(el) g(Op) r(enCL) g(ob) 5
b(jects,) 34 b(y) n(ou) d(can) 0 623 y(just) j(use) e(a) p
Ff 33 w(std::vector) p Fg(,) e(since) i(these) h(ob) 5
b(jects) 33 b(kno) n(w) f(ho) n(w) g(to) h(clear) f(themselv) n(es) g
(when) i(they) f(are) f(destro) n(y) n(ed.) 51 b(Y) -7
b(ou) 0 722 y(cannot,) 35 b(ho) n(w) n(ev) n(er,) e(ha) n(v) n(e) g(a) p
Ff 34 w(std::vector) p Fg 29 w(\(or) g(an) n(y) g(other) h(con) n
(tainer\)) f(of) p Ff 40 w(Pipe) p Fg(s) f(or) p Ff 33
w(Filter) p Fg(s,) h(b) r(ecause) g(these) h(t) n(yp) r(es) 0
822 y(ha) n(v) n(e) 23 b(p) r(oin) n(ters) g(to) h(other) p
Ff 23 w(Filter) p Fg(s,) e(and) i(implemen) n(ting) g(cop) n(y) f
(constructors) g(for) g(these) h(t) n(yp) r(es) g(w) n(ould) f(b) r(e) i
(b) r(oth) f(hard) f(and) 0 922 y(quite) 28 b(exp) r(ensiv) n(e.) 125
1063 y(These) g(t) n(yp) r(es) h(are) e(not) i(describ) r(ed) g(in) f
(an) n(y) g(great) g(detail:) 39 b(for) 28 b(more) g(information,) h
(consult) f(the) h(\014les) p Ff 29 w(secmem.h) p Fg
25 w(and) p Ff 0 1162 a(secalloc.h) p Fg(.) p Ff 125
1303 a(SecureBuffer) p Fg 16 w(is) 21 b(a) g(simple) g(arra) n(y) e(t) n
(yp) r(e,) j(whose) f(size) g(is) g(sp) r(eci\014ed) g(at) g(compile) g
(time.) 36 b(It) 21 b(will) g(automatically) g(con) n(v) n(ert) 0
1403 y(to) 26 b(an) g(arra) n(y) d(of) j(the) h(appropriate) d(t) n(yp)
r(e,) i(and) g(has) g(v) -5 b(arious) 24 b(useful) j(functions,) f
(including) p Fh 28 w(clear\(\)) p Fg(,) h(and) p Ff
26 w(u32bit) p Fh 23 w(size\(\)) p Fg(,) 0 1503 y(whic) n(h) 35
b(returns) g(the) h(length) g(of) f(the) h(arra) n(y) -7
b(.) 59 b(It) 36 b(is) f(a) g(template) h(that) g(tak) n(es) f(as) g
(parameters) e(a) i(t) n(yp) r(e,) j(and) e(a) f(constan) n(t) 0
1602 y(in) n(teger) 27 b(whic) n(h) g(is) h(ho) n(w) f(long) g(the) h
(arra) n(y) d(is) i(\(for) h(example:) p Ff 36 w(SecureBuffer<byt) o
(e,) 37 b(8>) 43 b(key;) p Fg(\).) p Ff 125 1743 a(SecureVector) p
Fg 25 w(is) 31 b(a) f(v) -5 b(ariable) 30 b(length) h(arra) n(y) -7
b(.) 44 b(It's) 31 b(size) f(can) g(b) r(e) h(increased) f(or) g
(decreased) f(as) h(need) h(b) r(e,) h(and) e(it) i(has) 0
1843 y(a) 27 b(wide) g(v) -5 b(ariet) n(y) 27 b(of) g(functions) h
(useful) g(for) f(cop) n(ying) f(data) h(in) n(to) g(it's) h(bu\013er.)
37 b(Lik) n(e) p Ff 26 w(SecureBuffer) p Fg(,) 23 b(it) 28
b(implemen) n(ts) p Fh 28 w(clear) p Fg 0 1943 a(and) p
Fh 27 w(size) p Fg(.) p Fh 0 2200 a(3.7.5) 94 b(Timers) p
Fg 0 2395 a(Op) r(enCL) 26 b(includes) h(a) f(pair) g(of) g(functions,)
p Fh 27 w(system) p 1657 2395 29 4 v 33 w(time) p Fg
25 w(and) p Fh 26 w(system) p 2352 2395 V 32 w(clo) s(c) m(k) p
Fg(,) i(whic) n(h) e(are) g(used) g(extensiv) n(ely) g(in) h(some) 0
2494 y(areas) h(of) h(the) h(co) r(de) g(\(esp) r(ecially) f(in) h(the)
g(random) f(n) n(um) n(b) r(er) g(generators\).) 41 b(These) 29
b(functions) h(b) n(y) g(default) g(use) p Fh 29 w(std::time) p
Fg 0 2594 a(and) p Fh 36 w(std::clo) s(c) m(k) p Fg(,) 38
b(but) f(often) f(y) n(ou) g(can) g(do) g(b) r(etter) g(with) h
(system-dep) r(enden) n(t) f(functions,) j(esp) r(ecially) d(for) g
(the) g(system) 0 2694 y(clo) r(c) n(k) c(\(for) g(example,) h
(returning) f(the) h(microseconds) e(v) -5 b(alue) 32
b(from) p Fh 32 w(gettimeofda) m(y) p Fg(,) h(or) e(the) i(nanoseconds)
e(v) -5 b(alue) 32 b(from) 0 2793 y(the) c(POSIX.1b) p
Fh 27 w(clo) s(c) m(k) p 756 2793 V 35 w(gettime) p Fg(,) d(is) i(far) h
(sup) r(erior\).) 36 b(Mo) r(dules) 27 b(for) g(this) h(exist) g(for) f
(sev) n(eral) f(systems.) 1908 5649 y(10) p 90 rotate
dyy eop
%%Page: 11 11
11 10 bop Fi 0 83 a(4) 135 b(Filters) p Fe 0 323 a(4.1) 112
b(Basic) 37 b(Filter) f(Usage) p Fg 0 518 a(Up) d(un) n(til) f(this) h
(p) r(oin) n(t,) g(using) f(Op) r(enCL) g(w) n(ould) g(b) r(e) g(v) n
(ery) f(tedious;) j(to) e(do) g(an) n(ything) g(y) n(ou) f(w) n(ould) h
(ha) n(v) n(e) f(to) h(b) r(other) g(with) 0 617 y(putting) 20
b(data) e(in) n(to) h(arra) n(ys,) f(doing) h(whatev) n(er) f(y) n(ou) g
(w) n(an) n(t) g(with) i(it,) h(and) e(then) h(sending) e(it) i
(someplace.) 33 b(The) 19 b(\014lter) g(metaphor) 0 717
y(\(de\014ning) 29 b(a) f(series) f(of) h(op) r(erations) f(whic) n(h) i
(tak) n(e) e(some) h(amoun) n(t) g(of) g(input,) i(pro) r(cess) d(it,) i
(then) g(send) f(it) h(along) e(to) h(the) h(next) 0
817 y(\014lter\)) i(w) n(orks) e(v) n(ery) h(w) n(ell) g(in) h(this) h
(situation.) 46 b(If) 31 b(y) n(ou'v) n(e) f(ev) n(er) f(used) i(a) f
(Unix) i(system,) f(the) g(usage) f(of) h(\014lters) f(in) h(Op) r
(enCL) 0 916 y(should) g(b) r(e) g(v) n(ery) f(in) n(tuitiv) n(e) h
(\(and) h(ev) n(en) e(if) i(y) n(ou) e(ha) n(v) n(en't,) h(don't) g(w) n
(orry) -7 b(,) 31 b(it's) g(prett) n(y) g(easy\).) 46
b(F) -7 b(or) 31 b(instance,) g(here) g(is) g(ho) n(w) 0
1016 y(y) n(ou) 24 b(encrypt) h(a) g(\014le) g(with) h(Blo) n(w\014sh) e
(in) h(CBC) g(mo) r(de) g(with) h(PK) n(CS#7) d(padding,) j(then) f
(enco) r(de) g(it) h(with) f(Base64) e(and) i(send) 0
1115 y(it) 33 b(to) g(standard) f(output) h(\(w) n(e) g(assume) f(y) n
(ou) g(ha) n(v) n(e) f(already) h(created) p Ff 32 w(key) p
Fg 31 w(and) p Ff 33 w(iv) p Fg(,) h(probably) f(using) g(one) h(of) f
(Op) r(enCL's) p Ff 0 1215 a(RandomNumberGene) o(rat) o(or) p
Fg 21 w(t) n(yp) r(es,) c(and) f(that) p Ff 28 w(file) p
Fg 26 w(is) g(an) h(op) r(en) p Ff 27 w(istream) p Fg(\):) p
Ff 0 1400 a(Pipe) 42 b(encryptor\(new) c(CBC_Encryption<Bl) o(ow) o(fi)
o(sh,) f(PKCSPadding>\(key) o(,) g(iv\),) 654 1499 y(new) 42
b(Base64Encoder\);) 0 1599 y(file) g(>>) h(encryptor;) 0
1698 y(encryptor.close\() o(\);) 37 b(//) 43 b(flush) e(buffers,) g
(complete) f(computations) 0 1798 y(cout) i(<<) h(encryptor;) 125
1983 y(Pipe) p Fg 23 w(w) n(orks) 24 b(in) h(conjunction) h(with) g
(the) p Ff 25 w(Filter) p Fg 23 w(class) f(\(for) g(example,) g(the) p
Ff 26 w(CBC) p 2688 1983 27 4 v 30 w(Encryption) p Fg
21 w(and) p Ff 25 w(Base64Encoder) p Fg 0 2082 a(t) n(yp) r(es) e(used)
f(ab) r(o) n(v) n(e) g(are) p Ff 22 w(Filter) p Fg(s\),) f(but) j(y) n
(ou) e(should) g(nev) n(er) g(ha) n(v) n(e) g(to) g(deal) h(with) g
(them) g(directly) g(\(in) g(fact,) h(it's) f(a) g(distinctly) 0
2182 y(bad) 31 b(idea,) h(as) p Ff 30 w(Pipe) p Fg 30
w(and) p Ff 31 w(Filter) p Fg 29 w(are) e(closely) g(tied) i(and) f
(rely) f(on) h(kno) n(wing) f(a) h(great) f(deal) g(ab) r(out) i(eac) n
(h) e(other) g(to) i(w) n(ork) 0 2281 y(correctly\).) 125
2423 y(Some) 38 b(useful) h(functions) h(in) p Ff 39
w(Pipe) p Fg 37 w(not) f(sho) n(wn) f(ab) r(o) n(v) n(e) f(are) p
Ff 38 w(u32bit) p Fh 37 w(remaining\(\)) p Fg(,) j(whic) n(h) e
(returns) g(ho) n(w) h(man) n(y) 0 2522 y(b) n(ytes) 28
b(are) f(a) n(v) -5 b(ailable) 27 b(for) g(immediate) i(reading,) e
(and) h(sev) n(eral) e(di\013eren) n(t) i(I/O) f(functions.) 39
b(Using) 28 b(the) p Ff 28 w(istream) p Fg(/) p Ff(ostream) p
Fg 0 2622 a(op) r(erators) j(ab) r(o) n(v) n(e,) i(all) f(data) h(a) n
(v) -5 b(ailable) 31 b(\(either) i(stored) f(in) h(the) h(pip) r(e) f
(or) f(un) n(til) h(EOF) g(from) f(an) h(istream\)) f(is) h(tak) n(en) f
(out.) 0 2721 y(Sometimes,) 25 b(y) n(ou) f(w) n(an) n(t) g(only) g(a) g
(small) g(amoun) n(t) g(at) g(a) h(time,) g(or) f(y) n(ou) g(are) f
(getting) h(y) n(our) g(input) h(in) g(small) f(c) n(h) n(unks,) g(in) h
(whic) n(h) 0 2821 y(case) j(y) n(ou) f(can) h(use) p
Ff 29 w(u32bit) p Fh 26 w(read) p Fg(\() p Ff(byte) p
Fd 28 w(output) p Fg 2 w([],) p Ff 29 w(u32bit) p Fd
26 w(len) p Fg(\),) h(whic) n(h) g(will) f(read) g(up) h(to) p
Fd 28 w(len) p Fg 29 w(b) n(ytes) f(in) n(to) p Fd 28
w(output) p Fg 31 w(and) 0 2921 y(return) 36 b(ho) n(w) f(man) n(y) g
(b) n(ytes) h(w) n(ere) f(actually) g(written) h(in) n(to) g(the) h
(arra) n(y) -7 b(,) 35 b(and) p Ff 36 w(void) p Fh 35
w(write) p Fg(\() p Ff(byte) p Fd 34 w(input) p Fg 2
w([],) p Ff 39 w(u32bit) p Fd 34 w(len) p Fg(\),) 0 3020
y(whic) n(h) d(writes) p Fd 31 w(len) p Fg 32 w(b) n(ytes) f(from) p
Fd 31 w(input) p Fg 35 w(in) n(to) g(the) h(pip) r(e.) 50
b(There) 31 b(are) g(also) g(v) n(ersions) e(of) p Fh
39 w(read) p Fg 32 w(and) p Fh 31 w(write) p Fg 32 w(whic) n(h) j(tak) n
(e) e(a) 0 3120 y(single) 35 b(b) n(yte) g(as) f(their) h(argumen) n
(t,) h(as) f(con) n(v) n(enience) f(functions.) 59 b(Additionally) -7
b(,) 38 b(y) n(ou) c(can) h(read) f(ev) n(erything) g(curren) n(tly) 0
3220 y(stored) 23 b(in) i(the) f(pip) r(e,) i(using) p
Ff 25 w(SecureVector<byt) o(e>) p Fh 18 w(read) p 1894
3220 29 4 v 35 w(all) p Fg(\(\)) e(and) p Ff 24 w(std::string) p
Fh 20 w(read) p 2961 3220 V 35 w(all) p 3096 3220 V 34
w(as) p 3214 3220 V 34 w(string) p Fg 1 w(\(\).) 36 b(Y) -7
b(ou) 24 b(can) 0 3319 y(see) j(the) h(complete) g(declaration) e(for) p
Ff 27 w(Pipe) p Fg 26 w(in) p Ff 28 w(filebase.h) p Fg
125 3460 a(Y) -7 b(ou) 26 b(can) h(reuse) f(a) p Ff 26
w(Pipe) p Fg 25 w(b) n(y) g(calling) g(it's) p Fh 27
w(reset) p Fg 27 w(function,) h(whic) n(h) g(restores) e(a) h(pip) r(e)
h(to) g(it's) g(initial) g(state) f(of) h(no) f(\014lters) 0
3560 y(\(writing) 33 b(in) n(to) h(the) p Ff 34 w(Pipe) p
Fg 31 w(and) g(then) g(reading) e(will) i(giv) n(e) e(y) n(ou) h(bac) n
(k) g(y) n(our) f(data) h(unc) n(hanged\).) 54 b(This) 34
b(usually) f(isn't) g(to) r(o) 0 3660 y(useful,) c(so) e(y) n(ou) h
(can) g(use) p Ff 28 w(void) p Fh 27 w(attac) m(h) p
Fg(\() p Ff(Filter) p Fg(*) p Fd 27 w(\014lter) p Fg
6 w(\)) h(to) f(attac) n(h) f(a) h(new) g(\014lter) h(on) n(to) e(the) i
(pip) r(e) g(again.) 37 b(Y) -7 b(ou) 29 b(can) e(call) p
Fh 0 3759 a(attac) m(h) p Fg 31 w(as) i(man) n(y) f(times) i(as) e(y) n
(ou) h(lik) n(e;) g(eac) n(h) g(\014lter) g(added) g(will) h(b) r(e) f
(attac) n(hed) g(to) g(the) g(end) h(of) f(the) h(curren) n(t) e(set) h
(of) g(\014lters) 0 3859 y(\(note) e(that) g(y) n(ou) f(can) h(use) p
Fh 26 w(attac) m(h) p Fg 29 w(ev) n(en) g(if) g(y) n(ou) f(ha) n(v) n
(en't) g(called) p Fh 27 w(reset) p Fg(\).) 36 b(Calling) p
Fh 28 w(reset) p Fg 26 w(will) 27 b(also) f(destro) n(y) f(an) n(y) i
(output) 0 3959 y(curren) n(tly) g(stored) f(in) i(the) g(pip) r(e.) 125
4100 y(One) f(last) g(p) r(oin) n(t:) 36 b(if) 28 b(y) n(ou) f(call) p
Fh 27 w(attac) m(h) p Fg(,) i(ev) n(erything) d(whic) n(h) i(has) e
(previously) h(b) r(een) g(pro) r(cessed) f(b) n(y) h(the) p
Ff 28 w(Pipe) p Fg 26 w(remains) 0 4199 y(as-is.) 35
b(T) -7 b(o) 25 b(prev) n(en) n(t) g(v) -5 b(arious) 24
b(problems,) h(if) h(y) n(ou) f(are) g(calling) p Fh
26 w(attac) m(h) p Fg 27 w(on) h(a) p Ff 25 w(Pipe) p
Fg 24 w(whic) n(h) f(already) f(has) h(had) h(input) g(written) 0
4299 y(in) n(to) 32 b(it) g(\(and) h(y) n(ou) e(ha) n(v) n(en't) g
(reset) h(the) p Ff 32 w(Pipe) p Fg(\),) g(y) n(ou) g(should) f(call) p
Fh 32 w(close) p Fg 31 w(\014rst) h(\(this) h(ma) n(y) e(not) h(b) r(e)
h(exactly) e(what) h(y) n(ou're) 0 4399 y(lo) r(oking) 27
b(for) g(either:) 36 b(di\013eren) n(t) 28 b(\014lters) f(ha) n(v) n(e)
g(di\013eren) n(t) h(seman) n(tics) e(when) i(they) g(are) f(closed\).)
p Fe 0 4666 a(4.2) 112 b(F) -9 b(ork) p Fg 0 4860 a(It's) 33
b(fairly) e(common) h(that) h(y) n(ou) e(migh) n(t) i(receiv) n(e) e
(some) h(data) f(and) i(w) n(an) n(t) e(to) h(p) r(erform) g(more) g
(than) g(one) g(op) r(eration) g(on) g(it) 0 4960 y(\(ie,) 26
b(encrypt) g(it) g(with) g(DES) g(and) f(calculate) g(the) h(MD5) g
(hash) f(of) g(the) h(plain) n(text) g(at) f(the) h(same) f(time\).) 37
b(That's) 26 b(where) p Ff 25 w(Fork) p Fg 0 5060 a(comes) i(in.) p
Ff 40 w(Fork) p Fg 27 w(is) g(a) g(\014lter) h(that) g(tak) n(es) e
(it's) i(input) g(and) g(passes) e(it) i(on) f(to) p
Fb 29 w(one) j(or) g(mor) l(e) p Ff 35 w(Filter) p Fg(s) 26
b(whic) n(h) i(are) g(attac) n(hed) 0 5159 y(to) f(it.) p
Ff 125 5300 a(Fork) p Fg 25 w(c) n(hanges) f(the) h(nature) g(of) g
(the) g(pip) r(e) h(system) f(completely) -7 b(.) 36
b(Instead) 27 b(of) g(b) r(eing) g(a) g(link) n(ed) g(list,) g(it) h(b)
r(ecomes) f(a) f(tree.) 0 5400 y(Eac) n(h) j(\\leaf) 6
b(") 30 b(of) g(this) h(tree) f(has) g(it's) g(o) n(wn) g(output) h
(bu\013er.) 45 b(When) 31 b(y) n(ou) e(read) h(data) g(from) g(the) g
(pip) r(e,) i(y) n(our) d(request) h(for) f(a) 1908 5649
y(11) p 90 rotate dyy eop
%%Page: 12 12
12 11 bop Fg 0 83 a(read) 30 b(passes) f(through) h(all) g(the) p
Ff 31 w(Filter) p Fg(s) e(in) j(the) g(pip) r(e) g(un) n(til) g(it) g
(reac) n(hes) e(the) i(end,) h(whereup) r(on) e(y) n(our) g(data) g(is)
g(retriev) n(ed) 0 183 y(from) i(an) g(output) h(bu\013er.) 51
b(Ob) n(viously) -7 b(,) 32 b(if) p Ff 39 w(Fork) p Fg
30 w(forw) n(arded) f(y) n(our) g(request) h(to) g(read) f(to) h(all) g
(it's) g(\\c) n(hildren",) h(confusion) 0 282 y(w) n(ould) d(result:) p
Ff 43 w(Filter) p Fg(s) e(w) n(ould) i(b) r(e) h(stepping) g(on) f(eac)
n(h) g(other) g(Filter's) h(to) r(es) f(\(and) h(output\),) h(as) e
(they) h(all) f(try) h(to) f(write) 0 382 y(in) n(to) d(y) n(our) g
(bu\013er.) 37 b(Also,) 27 b(what) h(v) -5 b(alue) 27
b(should) p Fh 27 w(remaining\(\)) p Fg 26 w(return?) 125
523 y(The) j(solution) h(to) g(this) g(dilemma) g(is) f(that) i(y) n
(ou) e(ha) n(v) n(e) f(to) i(inform) p Ff 31 w(Fork) p
Fg 29 w(what) g(y) n(ou) f(w) n(an) n(t) g(it) i(to) e(do.) 47
b(Y) -7 b(ou) 31 b(do) f(this) h(b) n(y) 0 623 y(calling) 20
b(the) h(function) p Ff 22 w(void) p Fh 19 w(set) p 1031
623 29 4 v 34 w(p) s(ort) p Fg(\() p Ff(u32bit) p Fd
18 w(p) r(ort) p Fg 2 w(\).) 35 b(The) p Fd 21 w(p) r(ort) p
Fg 22 w(sp) r(eci\014es) 21 b(whic) n(h) p Ff 21 w(Filter) p
Fg 18 w(it) g(is) g(that) p Ff 21 w(Fork) p Fg 19 w(should) g(pass) 0
722 y(read) i(requests) g(on) h(to.) 36 b(Y) -7 b(ou) 24
b(can) f(\014nd) i(out) f(ho) n(w) f(man) n(y) h(p) r(orts) f(there) h
(are) f(b) n(y) h(calling) p Ff 24 w(u32bit) p Fh 22
w(total) p 3172 722 V 34 w(p) s(orts\(\)) p Fg 24 w(\(v) -5
b(alid) 24 b(p) r(ort) 0 822 y(n) n(um) n(b) r(ers) e(range) e(from) i
(0) p Fc 14 w(:) 14 b(:) g(:) f(n) p Fa 7 w(\000) p Fg
7 w(1,) 23 b(where) p Fc 21 w(n) p Fg 22 w(is) f(the) g(return) g(v) -5
b(alue) 22 b(of) p Fh 28 w(total) p 2399 822 V 35 w(p) s(orts\(\)) p
Fg(\),) h(and) f(the) g(curren) n(tly) f(selected) h(p) r(ort) 0
922 y(from) p Ff 25 w(u32bit) p Fh 24 w(curren) m(t) p
792 922 V 35 w(p) s(ort\(\)) p Fg(.) 37 b(Generally) -7
b(,) 25 b(after) g(y) n(ou) g(ha) n(v) n(e) g(\014nished) h(en) n
(tering) f(input,) h(y) n(ou) f(will) h(iterate) f(through) g(all) 0
1021 y(p) r(orts) i(reading) g(the) h(output.) 125 1162
y(Since) h(y) n(ou) g(will) g(ha) n(v) n(e) f(to) i(call) p
Fh 29 w(set) p 1236 1162 V 34 w(p) s(ort) p Fg 29 w(when) f(using) p
Ff 31 w(Fork) p Fg(,) f(y) n(ou) g(need) i(to) f(k) n(eep) g(a) g(p) r
(oin) n(ter) g(to) g(the) p Ff 30 w(Fork) p Fg(s) e(y) n(ou) i(are) 0
1262 y(using,) f(rather) f(than) h(simply) g(calling) p
Ff 27 w(new) p Fg 27 w(in) g(the) g(call) g(to) g(the) g(constructor.)
36 b(See) 28 b(the) h(section) e(\\A) h(Filter) g(Example") f(for) 0
1362 y(an) g(example) g(of) h(using) p Ff 28 w(Fork) p
Fg(.) p Fe 0 1635 a(4.3) 112 b(Chain) p Ff 0 1830 a(Chain) p
Fg 25 w(is) 27 b(ab) r(out) g(as) f(simple) h(as) f(it) i(gets.) p
Ff 36 w(Chain) p Fg 25 w(creates) d(a) i(c) n(hain) f(of) p
Ff 34 w(Filter) p Fg(s) e(and) j(encapsulates) f(them) h(inside) g(a) g
(single) 0 1930 y(\014lter) e(\(itself) 6 b(\).) 37 b(This) 25
b(is) f(primarily) g(useful) h(for) f(passing) f(a) h(sequence) g(of) h
(\014lters) f(in) n(to) h(something) f(whic) n(h) g(is) h(exp) r
(ecting) f(only) 0 2029 y(a) h(single) p Ff 26 w(Filter) p
Fg 23 w(\(most) h(notably) -7 b(,) p Ff 25 w(Fork) p
Fg(\).) 35 b(Y) -7 b(ou) 26 b(can) g(call) p Ff 25 w(Chain) p
Fg('s) d(constructor) i(with) h(up) g(to) g(4) p Ff 25
w(Filter*) p Fg(s) d(\(they) j(will) g(b) r(e) 0 2129
y(added) k(in) g(order\),) f(or) g(with) i(an) e(arra) n(y) f(of) p
Ff 36 w(Filter*) p Fg(s) f(and) j(a) p Ff 29 w(u32bit) p
Fg 28 w(whic) n(h) f(tells) p Ff 31 w(Chain) p Fg 27
w(ho) n(w) h(man) n(y) p Ff 30 w(Filter*) p Fg(s) d(are) i(in) 0
2229 y(the) f(arra) n(y) d(\(again,) i(they) h(will) g(b) r(e) g(attac)
n(hed) f(in) g(order\).) 125 2370 y(See) g(the) h(next) g(section) f
(for) g(an) g(example) h(of) f(using) p Ff 29 w(Chain) p
Fg(.) 1908 5649 y(12) p 90 rotate dyy eop
%%Page: 13 13
13 12 bop Fe 0 83 a(4.4) 112 b(A) 37 b(Filter) f(Example) p
Fg 0 278 a(Here) 30 b(is) g(some) g(co) r(de) g(whic) n(h) g(tak) n(es)
g(one) g(or) f(more) h(\014lenames) g(as) g(it's) g(argumen) n(ts) f
(and) h(calculates) g(the) g(result) h(of) f(sev) n(eral) 0
377 y(hash) 22 b(functions) i(for) e(eac) n(h) g(\014le.) 35
b(The) 23 b(complete) g(program) e(can) h(b) r(e) i(found) f(as) p
Ff 22 w(hasher.cpp) p Fg 19 w(in) g(the) g(Op) r(enCL) g(distribution.)
0 477 y(F) -7 b(or) 27 b(brevit) n(y) -7 b(,) 27 b(most) g(error) f(c) n
(hec) n(king) g(has) i(b) r(een) g(remo) n(v) n(ed.) p
Ff 131 701 a(OpenCL::Filter*) 37 b(hash[3]) k(=) i({) 262
801 y(new) f(OpenCL::Chain\(ne) o(w) 37 b(OpenCL::HashFilte) o(r<O) o
(pe) o(nC) o(L::) o(MD) o(5>,) 1046 900 y(new) 42 b(OpenCL::HexEncode) o
(r\),) 262 1000 y(new) g(OpenCL::Chain\(ne) o(w) 37 b
(OpenCL::HashFilte) o(r<O) o(pe) o(nC) o(L::) o(SH) o(A1>) o(,) 1046
1100 y(new) 42 b(OpenCL::HexEncode) o(r\),) 262 1199
y(new) g(OpenCL::Chain\(ne) o(w) 37 b(OpenCL::HashFilte) o(r<O) o(pe) o
(nC) o(L::) o(RI) o(PEM) o(D1) o(60>) o(,) 1046 1299
y(new) 42 b(OpenCL::HexEncode) o(r\)) 37 b(};) 131 1399
y(string) k(name[3]) g(=) i({) g("MD5",) e("SHA-1",) f("RIPE-MD160") f
(};) 131 1598 y(OpenCL::Fork*) f(fork) k(=) h(new) f
(OpenCL::Fork\(hash) o(,) c(COUNT\);) 131 1697 y(OpenCL::Pipe) g
(pipe\(fork\);) 131 1897 y(for\(u32bit) h(j) k(=) h(1;) e(argv[j]) f
(!=) i(0;) g(j++\)) 262 1996 y({) 262 2096 y(ifstream) d
(file\(argv[j]\);) 262 2196 y(file) h(>>) i(pipe;) 262
2295 y(file.close\(\);) 262 2395 y(pipe.close\(\);) 262
2494 y(for\(u32bit) c(k) k(=) g(0;) g(k) g(!=) g(3;) g(k++\)) 392
2594 y({) 392 2694 y(fork->set_port\(k\)) o(;) 392 2793
y(cout) f(<<) h(name[k]) e(<<) h("\(") h(<<) g(argv[j]) d(<<) j("\)) g
(=) g(") g(<<) g(pipe) f(<<) h(endl;) 392 2893 y(}) 262
2993 y(}) p Fg 1908 5649 a(13) p 90 rotate dyy eop
%%Page: 14 14
14 13 bop Fe 0 83 a(4.5) 112 b(Rolling) 35 b(Y) -9 b(our) 37
b(Own) p Fg 0 278 a(W) -7 b(ell,) 36 b(no) n(w) e(that) h(y) n(ou) e
(kno) n(w) g(ho) n(w) h(\014lters) g(w) n(ork) f(in) h(Op) r(enCL,) h
(y) n(ou) e(probably) g(w) n(an) n(t) h(to) g(write) g(y) n(our) f(o) n
(wn.) 56 b(Luc) n(ky) 34 b(for) 0 377 y(y) n(ou,) c(all) h(of) f(the) h
(hard) f(w) n(ork) f(is) h(done) g(b) n(y) g(the) p Ff
31 w(Filter) p Fg 28 w(base) g(class,) g(lea) n(ving) f(y) n(ou) h(to) g
(handle) h(the) f(details) h(of) f(what) g(y) n(our) 0
477 y(\014lter) i(is) f(supp) r(osed) h(to) g(do.) 49
b(The) 32 b(\014rst) f(thing) h(is) g(to) f(mak) n(e) g(sure) h(to) f
(do) h(is) f(deriv) n(e) g(y) n(our) g(\014lter) h(from) f(Op) r
(enCL's) p Ff 31 w(Filter) p Fg 0 577 a(class.) 41 b(Remem) n(b) r(er)
29 b(that) h(if) f(y) n(ou) g(get) g(confused) g(ab) r(out) g(an) n(y) g
(of) g(this,) h(y) n(ou) e(can) h(alw) n(a) n(ys) e(lo) r(ok) i(at) g
(the) h(implemen) n(tation) f(of) 0 676 y(Op) r(enCL's) e(\014lters) h
(to) f(see) g(exactly) g(ho) n(w) g(ev) n(erything) g(w) n(orks.) 125
817 y(There) g(are) f(basically) h(only) g(three) g(functions) h(that) g
(a) f(\014lter) h(need) g(w) n(orry) d(ab) r(out:) p
Ff 0 1042 a(void) p Fh 26 w(write) p Fg(\() p Ff(byte) p
Fd 26 w(input) p Fg 2 w([],) p Ff 28 w(u32bit) p Fd 26
w(length) p Fg(\):) 125 1224 y(The) p Fh 21 w(write) p
Fg 21 w(function) d(is) f(what) h(is) f(called) g(when) g(a) g
(\014lter) h(receiv) n(es) d(input) k(for) d(it) i(to) f(pro) r(cess.)
34 b(The) 21 b(\014lter) h(is) p Fb 21 w(not) p Fg 29
w(required) 0 1324 y(to) 31 b(pro) r(cess) g(it) h(righ) n(t) f(a) n(w)
n(a) n(y;) g(man) n(y) g(\014lters) g(bu\013er) h(their) g(input) g(b) r
(efore) f(pro) r(ducing) g(an) n(y) g(output.) 49 b(A) 32
b(\014lter) g(will) g(usually) 0 1423 y(ha) n(v) n(e) p
Fh 26 w(write) p Fg 28 w(called) 27 b(man) n(y) g(times) h(during) f
(it's) h(lifetime.) p Ff 0 1648 a(void) p Fh 26 w(send) p
Fg(\() p Ff(byte) p Fd 26 w(output) p Fg 2 w([],) p Ff
28 w(u32bit) p Fd 25 w(length) p Fg(\):) 125 1830 y(Ev) n(en) n(tually)
-7 b(,) 28 b(a) g(\014lter) h(will) g(w) n(an) n(t) g(to) g(pro) r
(duce) f(some) h(output) g(to) g(send) g(along) f(to) h(the) g(next) g
(\014lter) g(in) h(the) f(pip) r(eline.) 42 b(It) 0 1930
y(do) r(es) 30 b(so) g(b) n(y) h(calling) p Fh 31 w(send) p
Fg 30 w(with) g(whatev) n(er) f(it) h(w) n(an) n(ts) e(to) i(send) g
(along) e(to) i(the) g(next) g(\014lter.) 46 b(There) 30
b(is) g(also) g(a) g(v) n(ersion) f(of) p Fh 0 2030 a(send) p
Fg 27 w(taking) e(a) g(single) g(b) n(yte) h(argumen) n(t,) f(as) f(a) i
(con) n(v) n(enience.) p Ff 0 2254 a(void) p Fh 26 w(\014nal\(\)) p
Fg(:) 125 2436 y(Implemen) n(ting) 33 b(the) p Fh 34
w(\014nal) p Fg 34 w(function) h(is) f(optional.) 54
b(It) 34 b(is) f(called) g(when) h(it) g(has) f(b) r(een) h(requested) f
(that) h(\014lters) f(\014nish) 0 2536 y(up) e(their) g(computations.)
46 b(Note) 30 b(that) h(they) g(should) p Fb 31 w(not) p
Fg 38 w(deallo) r(cate) f(their) h(resources;) f(this) h(should) g(b) r
(e) g(done) g(b) n(y) f(their) 0 2636 y(destructor.) 77
b(They) 42 b(should) f(simply) g(\014nish) h(up) g(with) g(whatev) n
(er) e(computation) h(they) g(ha) n(v) n(e) g(b) r(een) h(w) n(orking) d
(on) i(\(for) 0 2735 y(example,) 28 b(a) g(compressing) e(\014lter) i
(w) n(ould) g(\015ush) h(the) f(compressor) e(and) p
Fh 28 w(send) p Fg 28 w(the) i(\014nal) g(blo) r(c) n(k\),) h(and) f
(empt) n(y) g(an) n(y) f(bu\013ers) 0 2835 y(in) h(preparation) e(for) h
(pro) r(cessing) f(a) h(fresh) g(new) h(set) g(of) f(input.) 125
3059 y(Additionally) -7 b(,) 38 b(if) e(necessary) -7
b(,) 36 b(\014lters) f(should) h(de\014ne) g(a) f(constructor) g(that) h
(tak) n(es) e(an) n(y) h(needed) h(argumen) n(ts,) h(and) e(a) 0
3159 y(destructor) 27 b(to) g(deal) g(with) h(deallo) r(cating) f
(memory) -7 b(,) 27 b(closing) f(\014les,) i(etc.) 1908
5649 y(14) p 90 rotate dyy eop
%%Page: 15 15
15 14 bop Fe 0 83 a(4.6) 112 b(The) 38 b(Filter) e(Directory) p
Fg 0 278 a(This) 31 b(section) f(con) n(tains) g(descriptions) g(of) h
(ev) n(ery) p Ff 31 w(Filter) p Fg 29 w(included) g(in) g(Op) r(enCL.) g
(Note) g(that) g(mo) r(dules) g(whic) n(h) g(pro) n(vide) p
Ff 0 377 a(Filter) p Fg(s) 25 b(are) i(do) r(cumen) n(ted) g(elsewhere)
g({) g(these) p Ff 28 w(Filter) p Fg(s) e(are) h(a) n(v) -5
b(ailable) 27 b(on) g(an) n(y) g(installation) g(of) g(Op) r(enCL.) p
Fh 0 635 a(4.6.1) 94 b(Keys) p Fg 0 829 a(Key) 26 b(handling) f(is) i
(a) e(little) i(di\013eren) n(t) g(for) p Ff 25 w(Filter) p
Fg(s.) 34 b(Instead) 26 b(of) g(a) g(\(v) n(ery) f(lo) n(w) h(lev) n
(el\)) g(in) n(terface) f(of) h(an) g(arra) n(y) e(of) i(b) n(ytes) g
(and) 0 929 y(a) k(length) g(parameter,) g(they) h(use) f(a) g(\(sligh)
n(tly) g(higher) g(lev) n(el\)) p Ff 30 w(SymmetricKey) p
Fg(.) 40 b(The) 31 b(ma) 5 b(jor) 29 b(functions) h(of) h(this) f(t) n
(yp) r(e) h(are) 0 1029 y(it's) d(constructors:) p Fh
0 1211 a(SymmetricKey) p Fg 1 w(\() p Ff(RandomNumber) o(Gen) o(er) o
(at) o(or&) p Fd 21 w(rng) p Fg(,) p Ff 27 w(u32bit) p
Fd 25 w(length) p Fg(\):) 125 1353 y(This) f(constructor) f(tak) n(es) p
Fd 27 w(length) p Fg 28 w(b) n(ytes) h(of) g(output) h(from) p
Fd 28 w(rng) p Fg 34 w(and) f(uses) g(it) h(for) f(a) h(k) n(ey) -7
b(.) p Fh 0 1535 a(SymmetricKey) p Fg 1 w(\() p Ff(const) 40
b(byte) p Fd 26 w(input) p Fg 2 w([],) p Ff 28 w(u32bit) p
Fd 25 w(length) p Fg(\):) 125 1676 y(This) 27 b(constructor) f(simply) i
(copies) f(it's) h(input.) p Fh 0 1859 a(SymmetricKey) p
Fg 1 w(\() p Ff(const) 40 b(std::string) p Fd 23 w(str) p
Fg 6 w(\)) 125 2000 y(The) 27 b(argumen) n(t) p Fd 27
w(str) p Fg 33 w(is) g(assumed) g(to) h(b) r(e) g(a) f(hex) h(string;) f
(it) h(is) f(con) n(v) n(erted) f(to) i(binary) e(and) i(stored) f(as) g
(the) h(k) n(ey) -7 b(.) 125 2224 y(Synon) n(yms) 30
b(for) h(this) h(t) n(yp) r(e) g(include) p Ff 32 w(BlockCipherKey) p
Fg(,) p Ff 27 w(StreamCipherKey) p Fg(,) p Ff 26 w(MACKey) p
Fg(,) f(and) p Ff 31 w(BlockCipherModeI) o(V) p Fg 0
2324 a(\(they're) h(all) g(exactly) g(the) g(same) g(thing,) i(the) e
(di\013eren) n(t) g(names) g(just) h(mak) n(es) e(it) i(clear) e(what) h
(the) h(b) n(ytes) f(are) f(b) r(eing) h(used) 0 2423
y(for\).) p Fh 0 2681 a(4.6.2) 94 b(Basic) 31 b(W) -8
b(rapp) s(ers) p Fg 0 2876 a(Stream) 34 b(ciphers,) i(hash) e
(functions,) i(and) f(MA) n(Cs) f(don't) h(need) f(an) n(ything) g(sp) r
(ecial) g(when) h(it) g(comes) f(to) g(\014lters.) 57
b(Stream) 0 2975 y(ciphers) 28 b(tak) n(e) g(their) h(input,) h
(encrypt) e(it,) i(and) f(send) f(it) i(along) d(to) i(the) g(next) p
Ff 29 w(Filter) p Fg(.) 38 b(Hash) 28 b(functions) h(and) g(MA) n(Cs) g
(b) r(oth) 0 3075 y(tak) n(e) i(their) h(input) h(and) f(pro) r(duce) f
(no) h(output) h(un) n(til) p Fh 32 w(\014nal\(\)) p
Fg 32 w(is) f(called,) h(at) f(whic) n(h) g(time) g(they) g(complete) g
(the) h(hash) e(and) 0 3174 y(send) d(that) f(as) g(output.) p
Fh 0 3399 a(StreamCipherFilter) p Fg(\() p Ff(const) 40
b(StreamCipherKey&) p Fd 21 w(k) n(ey) p Fg 7 w(\)) 125
3581 y(The) 24 b(constructor) f(for) h(a) p Ff 24 w(StreamCipherFil) o
(ter) p Fg 18 w(tak) n(es) f(the) i(a) f(k) n(ey) -7
b(,) 24 b(whic) n(h) h(it) f(will) h(pass) f(prett) n(y) g(m) n(uc) n
(h) g(directly) g(on) g(to) 0 3681 y(the) p Ff 29 w(StreamCipher) p
Fg 24 w(b) r(eing) k(used,) h(so) f(if) h(the) g(k) n(ey) f(length) h
(is) f(inappropriate) f(for) h(the) h(cipher) g(used,) p
Ff 29 w(InvalidKeyLengt) o(h) p Fg 0 3780 a(will) f(b) r(e) g(thro) n
(wn.) p Fh 0 4005 a(HashFilter) p Fg(\() p Ff(u32bit) p
Fd 25 w(outlength) p Fg(\):) 125 4187 y(The) h(constructor) e(for) i(a)
p Ff 29 w(HashFilter) p Fg 25 w(tak) n(es) f(only) h(one) f(argumen) n
(t,) h(whic) n(h) g(is) g(a) g(n) n(um) n(b) r(er) g(sp) r(ecifying) g
(ho) n(w) f(m) n(uc) n(h) h(of) 0 4287 y(the) i(hash) g(should) g(b) r
(e) h(pro) r(duced) e(as) h(output.) 48 b(Sometimes,) 32
b(y) n(ou) e(will) h(only) g(w) n(an) n(t) f(to) h(use) g(\(sa) n(y\)) g
(half) g(of) g(the) h(hash,) f(and) 0 4387 y(this) g(mec) n(hanism) f
(lets) g(y) n(ou) g(do) g(this) h(easily) -7 b(.) 45
b(It) 31 b(defaults) f(to) h(the) g(full) g(size) f(of) g(the) h(hash.)
45 b(If) p Fd 31 w(outlength) p Fg 31 w(is) 30 b(greater) f(than) 0
4486 y(the) f(size) f(of) h(the) g(output,) g(the) g(full) g(hash) f
(is) h(used.) p Fh 0 4710 a(MA) m(CFilter) p Fg(\() p
Ff(const) 41 b(MACKey&) p Fd 25 w(k) n(ey) p Fg(,) p
Ff 27 w(u32bit) p Fd 25 w(outlength) p Fg(\):) 125 4893
y(The) 35 b(constructor) f(for) h(a) p Ff 35 w(MACFilter) p
Fg 32 w(tak) n(es) g(a) g(k) n(ey) -7 b(,) 37 b(used) e(in) h
(calculating) f(the) h(MA) n(C,) f(and) h(a) f(length) g(parameter,) 0
4993 y(whic) n(h) 28 b(has) f(seman) n(tics) f(exactly) h(the) h(same) f
(as) g(the) h(one) g(passed) e(to) p Ff 28 w(HashFilter) p
Fg(s) d(constructor.) 125 5217 y(All) 33 b(three) g(of) p
Ff 39 w(StreamCipherFilt) o(er) p Fg -1 w(,) p Ff 29
w(HashFilter) p Fg(,) d(and) p Ff 33 w(MACFilter) p Fg
29 w(are) i(templates,) i(whic) n(h) f(tak) n(e) f(the) i(desired) 0
5316 y(t) n(yp) r(e) 28 b(as) f(an) g(parameter.) 35
b(These) 28 b(\014lters) f(can) g(b) r(e) h(found) g(in) p
Ff 28 w(filters.h) p Fg(.) 1908 5649 y(15) p 90 rotate
dyy eop
%%Page: 16 16
16 15 bop Fh 0 83 a(4.6.3) 94 b(Cipher) 31 b(Mo) s(des) p
Fg 0 278 a(F) -7 b(or) 30 b(blo) r(c) n(k) f(ciphers,) h(the) h
(situation) f(is) g(more) f(complicated.) 44 b(Because) 29
b(ECB) h(mo) r(de) g(is) g(dangerous) f(\(a) h(message) e(ma) n(y) i(b)
r(e) 0 377 y(easily) k(altered) h(without) h(detection) f(and) h
(similar) e(plain) n(text) h(encrypts) g(to) g(similar) g
(ciphertext\),) i(blo) r(c) n(k) e(ciphers) g(m) n(ust) 0
477 y(b) r(e) e(used) g(in) g(a) g(di\013eren) n(t) g(mo) r(de.) 53
b(The) 33 b(mo) r(des) f(pro) n(vided) g(with) i(Op) r(enCL) f(are) e
(CBC,) i(CFB,) g(OFB,) g(and) g(Coun) n(ter.) 52 b(All) 0
577 y(are) 29 b(templates,) j(taking) e(a) p Ff 30 w(BlockCipher) p
Fg 26 w(as) g(a) g(parameter.) 44 b(They) 30 b(are) g(presen) n(ted) f
(in) p Ff 31 w(cbc.h) p Fg(,) p Ff 29 w(cfb.h) p Fg(,) h(and) p
Ff 30 w(ofb.h) p Fg 28 w(\(as) 0 676 y(coun) n(ter) d(mo) r(de) h(is) g
(a) f(t) n(yp) r(e) i(of) f(OFB) f(it) i(is) e(included) i(in) p
Ff 28 w(ofb.h) p Fg(,) d(and) i(deriv) n(e) f(from) p
Ff 28 w(CipherMode) p Fg(,) d(whic) n(h) j(is) h(a) g(sub) r(class) f
(of) p Ff 0 776 a(Filter) p Fg 29 w(\(this) 32 b(allo) n(ws) e(y) n(ou)
h(to) g(enforce) g(that) h(a) f(particular) f(\014lter) i(is,) g(in) g
(fact,) g(a) f(blo) r(c) n(k) g(cipher) h(mo) r(de,) g(without) g(ha) n
(ving) 0 876 y(sp) r(ecial) 27 b(cases) g(for) g(eac) n(h) g(mo) r
(de\).) 125 1017 y(Only) i(their) h(constructors) e(are) h(in) n
(teresting;) h(other) f(than) h(that) g(they) g(are) f(just) i(lik) n
(e) e(an) n(y) g(other) g(\014lter,) i(and) e(are) g(used) 0
1116 y(lik) n(e) e(an) n(y) g(other) g(discussed) g(in) h(this) g(do) r
(cumen) n(tation.) p Fh 0 1340 a(CBC) p 212 1340 29 4
v 34 w(Encryption) p Fg(\() p Ff(const) 42 b(BlockCipherKey&) p
Fd 22 w(k) n(ey) p Fg(,) p Ff 27 w(const) f(BlockCipherModeIV) o(&) p
Fd 22 w(iv) p Fg 7 w(\):) 125 1523 y(This) 27 b(is) g(quite) h(simple:)
37 b(a) 27 b(k) n(ey) -7 b(,) 27 b(of) g(a) g(length) h(suitable) f
(for) g(the) h(cipher,) f(and) g(an) h(IV,) f(whic) n(h) h(is) f(the) h
(size) f(of) h(the) f(cipher) 0 1623 y(blo) r(c) n(k) g(\(if) h(it) g
(is) g(not) g(an) f(exception) g(will) h(b) r(e) g(thro) n(wn\).) 36
b(The) 28 b(constructor) e(for) p Ff 27 w(CBC) p 2620
1623 27 4 v 30 w(Decryption) p Fg 24 w(is) h(exactly) g(the) h(same.)
125 1764 y(In) 33 b(addition) f(to) h(the) p Ff 33 w(BlockCipher) p
Fg 29 w(parameter,) f(CBC) h(mo) r(de) g(templates) g(tak) n(e) f(an) g
(additional) h(parameter) e(whic) n(h) 0 1863 y(sp) r(eci\014es) k(ho) n
(w) f(to) h(pad) g(the) h(input,) i(if) d(an) n(y) -7
b(.) 59 b(Un) n(til) 36 b(Op) r(enCL) f(0.7.5,) h(the) f(only) g(metho)
r(d) h(a) n(v) -5 b(ailable) 33 b(w) n(as) h(PK) n(CS7-st) n(yle) 0
1963 y(padding) 23 b(\(as) g(part) g(of) h(the) p Ff
23 w(CBC) p 986 1963 V 31 w(wPadding) p Fg 20 w(classes\).) 34
b(If) 24 b(y) n(ou) f(don't) g(w) n(an) n(t) g(to) h(use) f(padding,) h
(y) n(ou) f(can) g(use) g(the) p Ff 24 w(NoPadding) p
Fg 0 2063 a(padding) 30 b(metho) r(d.) 44 b(Ho) n(w) n(ev) n(er,) 29
b(in) h(that) g(case,) g(if) h(the) f(input) h(to) f(the) g(\014lter) g
(is) g(not) g(an) g(exact) f(m) n(ultiple) i(of) f(the) g(blo) r(c) n
(k) f(size) 0 2162 y(an) i(exception) f(will) i(b) r(e) f(thro) n(wn.)
46 b(Y) -7 b(ou) 32 b(can) e(see) h(whic) n(h) g(padding) f(metho) r
(ds) i(are) e(a) n(v) -5 b(ailable) 29 b(in) p Ff 32
w(padding.h) p Fg(.) 43 b(This) 31 b(\014le) g(is) 0
2262 y(included) f(automatically) e(when) i(y) n(ou) f(include) h(the) g
(header) e(for) h(CBC) g(mo) r(de) h(so) f(y) n(ou) g(don't) g(ha) n(v)
n(e) g(to) g(explicitly) h(include) 0 2362 y(it.) 125
2503 y(Some) 36 b(padding) g(metho) r(ds) h(can) f(only) h(w) n(ork) e
(with) i(blo) r(c) n(k) f(ciphers) g(that) h(ha) n(v) n(e) f(certain) g
(blo) r(c) n(k) g(sizes) g(\(for) g(example,) 0 2602
y(PK) n(CSP) n(adding\),) 24 b(while) h(others) f(\(suc) n(h) h(as) f
(OneAndZeros\)) g(will) i(w) n(ork) d(for) i(an) n(y) f(size) h(blo) r
(c) n(k) f(cihp) r(er.) 36 b(If) 26 b(the) f(c) n(hosen) g(blo) r(c) n
(k) 0 2702 y(cipher/padding) 32 b(metho) r(d) h(pair) f(cannot) h(w) n
(ork) e(together,) i(a) p Ff 33 w(InvalidBlocksize) p
Fg 26 w(exception) g(will) g(b) r(e) g(thro) n(wn) f(b) n(y) h(the) 0
2802 y(constructor.) 125 2943 y(Additionally) -7 b(,) 27
b(a) p Ff 28 w(DecodingError) p Fg 22 w(exception) g(can) g(b) r(e) h
(thro) n(wn) f(when) p Fh 28 w(close\(\)) p Fg 27 w(is) h(called) p
Fh 0 3167 a(CFB) p 203 3167 29 4 v 34 w(Encryption) p
Fg(\() p Ff(const) 43 b(BlockCipherKey&) p Fd 21 w(k) n(ey) p
Fg(,) p Ff 27 w(const) e(BlockCipherModeIV) o(&) p Fd
22 w(iv) p Fg(,) p Ff 27 w(u32bit) p Fd 25 w(feedbac) n(k) p
Fg 5 w(\):) 125 3350 y(This) 32 b(is) h(just) h(lik) n(e) e(CBC,) h
(but) h(it) f(tak) n(es) f(an) h(\(optional\)) g(additional) f(argumen)
n(t,) i(the) f(size) g(of) f(the) i(feedbac) n(k) e(\(it) i(will) 0
3449 y(default) e(to) g(the) h(full) g(blo) r(c) n(ksize) e(of) h(the) g
(cipher) g(b) r(eing) g(used\).) 50 b(This) 32 b(v) -5
b(alue) 32 b(is) g(giv) n(en) f(in) i(b) n(ytes,) g(and) e(can) h
(range) f(from) g(1) 0 3549 y(to) 26 b(BLOCKSIZE.) e(If) j(the) p
Fd 26 w(feedbac) n(k) p Fg 31 w(is) f(not) g(a) f(v) -5
b(alid) 27 b(amoun) n(t,) p Ff 26 w(InvalidArgument) p
Fg 19 w(will) g(b) r(e) f(thro) n(wn.) p Ff 36 w(CFB) p
3416 3549 27 4 v 30 w(Decryption) p Fg(,) 0 3648 y(the) i(in) n(v) n
(erse) e(op) r(eration,) h(tak) n(es) f(similar) h(argumen) n(ts.) p
Fh 0 3873 a(OFB) p Fg(\() p Ff(const) 42 b(BlockCipherKey&) p
Fd 21 w(k) n(ey) p Fg(,) p Ff 27 w(const) f(BlockCipherModeIV) o(&) p
Fd 22 w(iv) p Fg 7 w(\):) 125 4055 y(This) 27 b(is) h(the) g(usual) g
(OFB) f(mo) r(de.) 38 b(V) -7 b(ariable) 27 b(feedbac) n(k) g(sizes) g
(are) g(not) h(supp) r(orted,) g(as) f(it) h(has) f(b) r(een) i(sho) n
(wn) e(that) h(they) 0 4155 y(are) h(insecure.) p Ff
42 w(Counter) p Fg 26 w(is) h(a) f(v) -5 b(arian) n(t) 28
b(of) p Ff 36 w(OFB) p Fg(,) h(whose) f(constructor) h(tak) n(es) f
(the) i(same) f(argumen) n(ts.) 41 b(Remem) n(b) r(er) 30
b(that) f(a) 0 4255 y(blo) r(c) n(k) h(cipher) h(op) r(erating) f(in) h
(either) f(OFB) h(or) f(coun) n(ter) f(mo) r(des) i(is) g(lik) n(e) f
(a) h(stream) f(cipher,) h(and) g(th) n(us) f(y) n(ou) g(should) h(nev)
n(er) 0 4354 y(encrypt) c(t) n(w) n(o) g(messages) f(with) i(the) g
(same) f(k) n(ey) g(without) h(c) n(hanging) e(the) i(IV.) p
Fh 0 4611 a(4.6.4) 94 b(Enco) s(ders) p Fg 0 4806 a(Often) 33
b(y) n(ou) e(w) n(an) n(t) h(y) n(our) f(data) h(to) g(b) r(e) h(in) f
(some) g(form) g(of) g(text) h(\(for) f(sending) g(o) n(v) n(er) f(c) n
(hannels) g(whic) n(h) i(aren't) e(8-bit) h(clean,) 0
4906 y(prin) n(ting) 27 b(it,) g(etc\).) 37 b(The) 27
b(\014lters) p Ff 27 w(HexEncoder) p Fg 23 w(and) p Ff
27 w(Base64Encoder) p Fg 22 w(will) g(con) n(v) n(ert) e(arbitrary) g
(binary) i(data) f(in) n(to) h(Hex) g(or) 0 5005 y(Base64) g(formats.)
42 b(Not) 29 b(surprisingly) -7 b(,) 29 b(y) n(ou) f(can) h(use) p
Ff 30 w(HexDecoder) p Fg 25 w(and) p Ff 29 w(Base64Decoder) p
Fg 24 w(to) h(con) n(v) n(ert) d(it) j(bac) n(k) f(in) n(to) g(it's) 0
5105 y(original) d(form.) 37 b(Y) -7 b(ou) 27 b(can) g(\014nd) h(the) g
(declarations) e(for) h(these) h(t) n(yp) r(es) g(in) p
Ff 27 w(encoder.h) p Fg(.) 1908 5649 y(16) p 90 rotate
dyy eop
%%Page: 17 17
17 16 bop Fi 0 83 a(5) 135 b(W) -11 b(riting) 45 b(Mo) t(dules) p
Fg 0 306 a(It's) 24 b(a) g(lot) g(simpler) g(to) g(write) f(mo) r
(dules) i(for) e(Op) r(enCL) h(that) g(it) h(is) f(to) g(write) g(co) r
(de) g(in) g(the) g(core) f(library) -7 b(,) 24 b(for) g(sev) n(eral) e
(reasons.) 0 406 y(First,) 37 b(a) e(mo) r(dule) g(can) g(rely) g(on) f
(external) h(libraries) e(and) i(services) f(b) r(ey) n(ond) h(the) h
(base) e(ISO) h(C++) f(libraries,) i(and) f(also) 0 506
y(mac) n(hine) f(dep) r(enden) n(t) h(features) f(\(assem) n(bler,) g
(an) n(y) n(one?\).) 56 b(Also,) 36 b(the) f(co) r(de) f(can) g(b) r(e)
h(added) f(at) g(con\014guration) f(time) h(on) 0 605
y(the) f(user's) f(end) h(with) g(v) n(ery) e(little) i(e\013ort) g
(\(ie) g(the) g(co) r(de) f(can) g(b) r(e) h(distributed) g(sep) r
(erately) f(and) g(without) h(dep) r(ending) g(on) 0
705 y(patc) n(hing) 27 b(an) n(ything\).) 125 846 y(Creating) i(a) g
(mo) r(dule) i(is) f(quite) g(simple.) 45 b(First,) 31
b(there) f(m) n(ust) g(b) r(e) h(a) f(sub) r(directory) f(in) h(the) p
Ff 31 w(modules) p Fg 27 w(directory) f(for) h(it.) 0
946 y(The) g(name) f(of) g(the) h(mo) r(dule) g(is) f(the) h(same) f
(as) g(the) h(name) f(of) g(this) h(directory) -7 b(.) 42
b(Inside) 29 b(this) h(directory) -7 b(,) 29 b(there) g(needs) g(to) h
(b) r(e) 0 1045 y(a) c(\014le,) h(with) g(exactly) f(the) h(same) f
(name) h(as) f(the) h(directory) e(\(that's) i(so) f(the) h
(con\014guration) e(script) h(kno) n(ws) g(where) g(to) g(lo) r(ok\).) 0
1145 y(This) j(\014le) h(con) n(tains) e(v) -5 b(arious) 28
b(directiv) n(es) h(it) h(uses) f(to) g(sp) r(ecify) h(what) f(this) h
(mo) r(dule) f(do) r(es,) h(what) f(systems) g(it) h(runs) f(on,) g
(and) 0 1245 y(so) e(on.) 37 b(Commen) n(ts) 27 b(start) g(with) h(a) p
Ff 27 w(#) p Fg 27 w(c) n(haracter) e(and) h(con) n(tin) n(ue) g(to) h
(end) g(of) f(line.) 125 1386 y(Recognized) f(directiv) n(es) h
(include:) p Ff 0 1560 a(realname) 40 b(<name>) p Fg(:) 35
b(Sp) r(ecify) 28 b(that) g(the) g('real) f(w) n(orld') f(name) i(of) f
(this) h(mo) r(dule) g(is) p Ff 27 w(<name>) 0 1734 y(define) 41
b(<macro>) p Fg(:) 33 b(De\014ne) p Ff 27 w(OPENCL) p
1194 1734 27 4 v 29 w(EXT) p 1355 1734 V 30 w(<macro>) p
Fg 23 w(in) p Ff 26 w(config.h) p Fg(.) g(This) 26 b(should) g(only) f
(b) r(e) h(used) g(if) h(the) f(mo) r(dule) g(creates) 0
1834 y(user-visible) d(c) n(hanges.) 35 b(As) 24 b(a) h(con) n(v) n(en)
n(tion,) e(if) i(the) g(mo) r(dule) g(implemen) n(ts) g(an) p
Ff 24 w(EntropySource) p Fg(,) 20 b(the) 25 b(macro) f(should) g(b) r
(egin) 0 1934 y(with) p Ff 28 w(ENTROPY) p 502 1934 V
29 w(SRC) p 663 1934 V 0 2108 a(link) p 181 2108 V 30
w(to) 42 b(<lib>) p Fg(:) j(The) 32 b(mo) r(dule) h(should) f(link) g
(against) f(this) i(library) e(\(can) h(b) r(e) h(used) f(m) n(ultiple)
h(times\).) 51 b(The) 32 b(C,) h(C++,) 0 2208 y(and) 27
b(math) h(libraries) e(are) h(link) n(ed) g(b) n(y) h(default,) g(so) f
(y) n(ou) g(don't) g(need) h(to) g(sp) r(ecify) f(those) p
Ff 0 2382 a(needs) p 225 2382 V 29 w(std) 43 b(<std>) p
Fg(:) 54 b(Sp) r(ecify) 38 b(that) g(the) g(mo) r(dule) g(requires) e
(the) i(abilities) f(of) p Ff 44 w(<std>) p Fg(.) 65
b(V) -7 b(alues) 37 b(curren) n(tly) f(kno) n(wn) h(are) 0
2482 y(\\p) r(osix1",) 26 b(\\p) r(osix1b",) g(and) h(\\pthreads") p
Ff 0 2656 a(subsystem) 40 b(<sub>) p Fg(:) 50 b(Sp) r(ecify) 37
b(that) e(the) h(mo) r(dule) g(alters) e(the) i(b) r(eha) n(vior) e(of)
i(subsystem) p Ff 35 w(<sub>) p Fg 33 w(in) g(some) f(w) n(a) n(y) f
(\(whic) n(h) 0 2756 y(implies) k(that) g(another) f(mo) r(dule) h
(cannot) f(c) n(hange) g(the) h(same) f(subsystem\).) 67
b(If) 39 b(y) n(ou're) d(considering) g(c) n(ho) r(osing) h(a) g(new) 0
2855 y(subsystem) d(name) g(for) g(a) g(mo) r(dule,) i(please) e(email)
p Ff 34 w(lloyd@acm.jhu.edu) p Fg 28 w(to) g(help) g(co) r(ordinate) g
(consisten) n(t) f(subsystem) 0 2955 y(naming) p Ff 0
3129 a(add) p 137 3129 V 30 w(file) 42 b(<file>) p Fg(:) 33
b(T) -7 b(ell) 23 b(the) i(con\014guration) d(script) h(to) h(add) f
(the) i(\014le) e(giv) n(en) g(in) n(to) h(the) g(source) e(tree.) 36
b(This) 23 b(\014le) h(m) n(ust) g(exist) 0 3229 y(in) k(the) g(mo) r
(dule) g(directory) p Ff 0 3403 a(ignore) p 269 3403
V 29 w(file) 42 b(<file>) p Fg(:) 34 b(T) -7 b(ell) 28
b(the) g(con\014guration) e(script) h(to) h(ignore) e(the) i(\014le) g
(giv) n(en) f(in) g(the) h(main) g(source) e(tree) p
Ff 0 3577 a(replace) p 313 3577 V 28 w(file) 42 b(<file>) p
Fg(:) 49 b(T) -7 b(ell) 35 b(the) g(con\014guration) e(script) h(to) g
(ignore) g(the) h(\014le) g(giv) n(en) e(in) i(the) g(main) g(source) e
(tree,) j(and) 0 3677 y(instead) 27 b(use) h(the) g(one) f(in) h(the) g
(mo) r(dule's) g(directory) p Ff 0 3851 a(patch) p 225
3851 V 29 w(file) 42 b(<file>) f(<patch>) p Fg(:) 32
b(T) -7 b(ell) 24 b(the) g(con\014guration) d(script) i(to) h(patc) n
(h) f(the) g(\014le) h(named) f(\(in) h(the) g(main) f(source) f
(tree\)) 0 3951 y(with) 29 b(the) h(patc) n(h) e(giv) n(en.) 40
b(The) 29 b(patc) n(h) g(\014lename) p Fb 28 w(must) p
Fg 36 w(end) g(with) h(\\.dif) 6 b(".) 41 b(The) 28 b(patc) n(h) h
(\014le) g(is) g(recommended) f(to) h(b) r(e) g(\(but) 0
4051 y(is) e(not) h(required) f(to) g(b) r(e\)) h(a) g(con) n(text) f
(di\013) 0 4275 y(Additionally) -7 b(,) 28 b(the) g(mo) r(dule) g
(\014le) f(can) h(con) n(tain) f(blo) r(c) n(ks,) f(delimited) j(b) n
(y) e(the) h(follo) n(wing) f(pairs:) p Ff 125 4416 a(<os>) 41
b(/) j(</os>) p Fg(,) p Ff 25 w(<cpu>) e(/) h(</cpu>) p
Fg(,) p Ff 25 w(<cc>) f(/) h(</cc>) p Fg 0 4557 a(F) -7
b(or) 26 b(example,) h(putting) g(\\alpha") e(and) i(\\ia64") d(in) j
(a) p Ff 26 w(<cpu>) p Fg 25 w(blo) r(c) n(k) f(will) h(mak) n(e) f
(the) h(con\014guration) e(script) i(only) f(allo) n(w) g(the) 0
4657 y(mo) r(dule) i(to) f(b) r(e) h(compiled) g(on) f(those) g(arc) n
(hitectures.) 36 b(Not) 28 b(ha) n(ving) e(a) h(blo) r(c) n(k) g(means)
h(an) n(y) e(v) -5 b(alue) 28 b(is) f(acceptable.) 1908
5649 y(17) p 90 rotate dyy eop
%%Page: 18 18
18 17 bop Fi 0 83 a(6) 135 b(More) 45 b(Information) p
Fe 0 323 a(6.1) 112 b(P) m(ortabilit) m(y) p Fg 0 518
a(A) 27 b(fair) f(amoun) n(t) f(of) i(e\013ort) f(w) n(as) f(made) h
(in) n(to) g(making) g(this) h(library) e(p) r(ortable) h(to) g(a) g
(wide) g(v) -5 b(ariet) n(y) 26 b(of) g(platforms,) g(assuming) 0
617 y(an) 32 b(implemen) n(tation) h(of) f(the) h(C++) f(standard.) 50
b(Op) r(enCL) 33 b(has) f(b) r(een) h(successfully) f(compiled,) i
(tested,) g(and) e(used) h(with) 0 717 y(the) 28 b(follo) n(wing) f
(systems:) p 0 869 3630 4 v -2 969 4 100 v 50 939 a(OS) p
338 969 V 229 w(CPU) p 1687 969 V 1170 w(Compiler\(s\)) p
3628 969 V 0 972 3630 4 v -2 1072 4 100 v 50 1042 a(Lin) n(ux) p
338 1072 V 131 w(IA-32) p 1687 1072 V 1145 w(egcs) f(1.1.2,) h(gcc) g
(3.0,) g(KAI) g(C++) g(3.4g,) f(KAI) i(C++) e(4.0e) p
3628 1072 V -2 1171 V 50 1142 a(Lin) n(ux) p 338 1171
V 131 w(SP) -7 b(AR) n(C) p 1687 1171 V 1072 w(egcs) 26
b(1.1.2) p 3628 1171 V -2 1271 V 50 1241 a(Lin) n(ux) p
338 1271 V 131 w(Alpha) i(/) f(ARM) h(/) f(IA-64) g(/) g(P) n(o) n(w) n
(erPC) p 1687 1271 V 97 w(gcc) g(2.95.x) p 3628 1271
V -2 1371 V 50 1341 a(T) -7 b(ru64) p 338 1371 V 124
w(Alpha) p 1687 1371 V 1130 w(Compaq) 26 b(C++) h(6.1,) g(6.2,) g(6.3) p
3628 1371 V -2 1470 V 50 1440 a(Solaris) p 338 1470 V
98 w(SP) -7 b(AR) n(C) p 1687 1470 V 1072 w(gcc) 27 b(2.95.2) p
3628 1470 V -2 1570 V 50 1540 a(IRIX) p 338 1570 V 157
w(MIPS) p 1687 1570 V 1140 w(MIPSProC++) e(7.2.1.1m) p
3628 1570 V 0 1573 3630 4 v Fe 0 1808 a(6.2) 112 b(Compatibilit) m(y) p
Fg 0 2003 a(Generally) -7 b(,) 25 b(cryptographic) e(algorithms) h(are)
h(w) n(ell) g(standardized,) f(and) i(th) n(us) f(compatibilit) n(y) g
(b) r(et) n(w) n(een) g(implemen) n(tations) 0 2103 y(is) 35
b(relativ) n(ely) f(simple) h(\(of) h(course,) g(not) f(all) g
(algorithms) e(are) i(supp) r(orted) g(b) n(y) f(all) h(implemen) n
(tations\).) 60 b(Ho) n(w) n(ev) n(er,) 35 b(there) 0
2202 y(are) d(a) g(few) h(algorithms) e(whic) n(h) h(are) g(p) r(o) r
(orly) g(sp) r(eci\014ed,) i(and) e(these) h(should) f(b) r(e) h(a) n
(v) n(oided) e(if) i(y) n(ou) f(wish) h(y) n(our) e(data) h(to) h(b) r
(e) 0 2302 y(pro) r(cessed) 26 b(in) i(the) g(same) f(w) n(a) n(y) g(b)
n(y) g(another) g(implemen) n(tation) g(\(including) h(future) g(v) n
(ersion) e(of) i(Op) r(enCL\).) 125 2443 y(The) 34 b(blo) r(c) n(k) h
(cipher) f(GOST) h(has) g(a) f(particularly) f(p) r(o) r(or) i(sp) r
(eci\014cation:) 51 b(there) 35 b(are) e(no) i(standard) f(Sb) r(o) n
(xes,) i(and) f(the) 0 2543 y(sp) r(eci\014cation) 30
b(do) r(es) g(not) h(giv) n(e) e(test) i(v) n(ectors) e(ev) n(en) h
(for) g(sample) h(b) r(o) n(xes,) f(whic) n(h) g(leads) g(to) h(issues)
f(of) g(endian) h(con) n(v) n(en) n(tions,) 0 2643 y(etc.) 40
b(Other) 28 b(algorithms) f(including) i(in) g(Op) r(enCL) f
(su\013ering) g(from) h(these) f(problems) g(\(though) h(to) f(a) g
(less) h(serious) e(degree\)) 0 2742 y(include) h(HA) -9
b(V) g(AL,) 28 b(ISAA) n(C,) g(and) g(EMA) n(C.) 125
2883 y(If) e(y) n(ou) f(wish) h(maxim) n(um) f(p) r(ortabilit) n(y) h
(b) r(et) n(w) n(een) g(di\013eren) n(t) f(implemen) n(tations) h(of) g
(an) g(algorithm,) f(it's) h(b) r(est) g(to) g(stic) n(k) f(to) 0
2983 y(strongly) d(de\014ned) i(and) f(w) n(ell) g(standardized) f
(algorithms:) 33 b(T) -7 b(ripleDES,) 23 b(Blo) n(w\014sh,) h(CAST5,) g
(Rijndael,) g(Serp) r(en) n(t,) h(HMA) n(C,) 0 3083 y(MD5,) j(SHA-1,) f
(and) h(RIPE-MD160) d(all) j(b) r(eing) f(go) r(o) r(d) g(examples.) p
Fe 0 3356 a(6.3) 112 b(P) m(aten) m(ts) p Fg 0 3551 a(Some) 26
b(of) h(the) g(algorithms) e(implemen) n(ted) i(b) n(y) f(Op) r(enCL) h
(are) f(co) n(v) n(ered) e(b) n(y) j(paten) n(ts.) 36
b(Algorithms) 26 b(kno) n(wn) g(to) g(b) r(e) h(paten) n(ted) 0
3651 y(in) 34 b(the) f(United) i(States) e(or) f(other) h(coun) n
(tries) f(\(where) h(the) h(paten) n(t) g(holder) e(has) h(not) g(gran)
n(ted) f(ro) n(y) n(alt) n(y-free) f(use) i(for) g(an) n(y) 0
3750 y(purp) r(ose\)) 26 b(include:) 37 b(IDEA,) 27 b(MISTY1,) g(R) n
(C5,) f(R) n(C6,) h(and) f(SEAL.) h(Note) f(that) h(just) h(b) r
(ecause) e(an) g(algorithm) g(is) g(not) h(listed) 0
3850 y(here,) g(y) n(ou) g(should) g(not) h(assume) f(that) h(it) g(is)
f(not) h(encum) n(b) r(ered) f(b) n(y) h(paten) n(ts.) 1908
5649 y(18) p 90 rotate dyy eop
%%Page: 19 19
19 18 bop Fe 0 83 a(6.4) 112 b(F) -9 b(urther) 38 b(Reading) f(and) h
(Information) p Fg 0 278 a(It's) 28 b(probably) f(a) h(v) n(ery) f(go) r
(o) r(d) h(idea) f(if) i(y) n(ou) e(ha) n(v) n(e) g(some) h(kno) n
(wledge) f(of) h(cryptograph) n(y) e(prior) g(to) j(trying) e(to) h
(use) g(Op) r(enCL.) 0 377 y(It) 35 b(is) f(recommended) f(y) n(ou) h
(read) f(one) h(or) g(more) f(of) h(these) h(b) r(o) r(oks) e(b) r
(efore) h(seriously) f(using) h(the) h(library) e(\(note) h(that) h
(the) 0 477 y(Handb) r(o) r(ok) 27 b(of) h(Applied) g(Cryptograph) n(y)
d(is) j(a) n(v) -5 b(ailable) 26 b(online) i(in) f(it's) h(en) n(tiret)
n(y\):) p Fb 0 618 a(Handb) l(o) l(ok) 36 b(of) f(Applie) l(d) i
(Crypto) l(gr) l(aphy) p Fg(,) g(b) n(y) 32 b(Alfred) i(J.) e(Menezes,)
i(P) n(aul) e(C.) i(V) -7 b(an) 33 b(Oorsc) n(hot,) f(and) h(Scott) g
(A.) g(V) -7 b(anstone;) 0 718 y(CR) n(C) 27 b(Press) p
Fb 0 859 a(Crypto) l(gr) l(aphy:) 41 b(The) l(ory) 31
b(and) g(Pr) l(actic) l(e) p Fg(,) d(b) n(y) g(Douglas) e(R.) i
(Stinson;) g(CR) n(C) f(Press) p Fb 0 1000 a(Applie) l(d) k(Crypto) l
(gr) l(aphy,) i(2nd) d(Ed.) p Fg(,) f(b) n(y) e(Bruce) g(Sc) n(hneier;)
g(John) h(Wiley) f(&) h(Sons) p Fe 0 1232 a(6.5) 112
b(Ac) m(kno) m(wledgmen) m(ts) p Fg 0 1427 a(The) 32
b(implemen) n(tation) h(of) f(DES) g(is) g(based) g(o\013) h(a) e
(public) i(domain) f(implemen) n(tation) g(b) n(y) g(Phil) h(Karn) e
(from) h(1994) e(\(he,) k(in) 0 1527 y(turn,) 28 b(credits) f(Ric) n
(hard) g(Outerbridge) f(and) h(Jim) h(Gillogly\).) 0
1668 y(Matthew) 23 b(Sk) -5 b(ala's) 21 b(public) i(domain) p
Ff 22 w(twofish.c) p Fg 19 w(\(as) f(giv) n(en) g(in) h(Gn) n(uPG) f
(0.9.8\)) g(pro) n(vided) f(the) i(basis) f(for) f(Tw) n(o\014sh) h
(\(mostly) 0 1768 y(the) 28 b(k) n(ey) f(sc) n(hedule\).) 0
1909 y(Rijndael) d(and) g(Square) f(are) f(based) i(on) f(the) h
(reference) f(implemen) n(tations) h(written) g(b) n(y) f(the) h(in) n
(v) n(en) n(tors,) f(Joan) g(Daemon) g(and) 0 2008 y(Vincen) n(t) 28
b(Rijmen.) 0 2150 y(ThreeW) -7 b(a) n(y) 27 b(is) g(based) g(on) g
(reference) g(co) r(de) g(written) h(b) n(y) g(Joan) e(Daemon.) 0
2291 y(The) 38 b(Serp) r(en) n(t) g(S-Bo) n(xes) e(used) i(w) n(ere) e
(disco) n(v) n(ered) g(b) n(y) i(Dag) f(Arne) h(Osvik) e(and) i
(detailed) g(in) g(his) g(pap) r(er) f("Sp) r(eeding) h(Up) 0
2390 y(Serp) r(en) n(t".) 0 2531 y(Some) g(of) f(the) i(hash) e
(functions) h(\(MD5,) j(SHA-1,) f(etc\)) e(use) g(an) g(optimized) g
(implemen) n(tation) g(of) f(one) h(of) f(the) i(b) r(o) r(olean) 0
2631 y(functions,) 28 b(whic) n(h) g(is) f(from) g(an) h(implemen) n
(tation) f(b) n(y) h(Colin) f(Plum) n(b.) 0 2772 y(The) k(design) g(of)
h(Randp) r(o) r(ol) f(tak) n(es) f(some) h(of) h(it's) f(design) g
(principles) g(from) g(those) h(suggested) e(b) n(y) h(Eric) f(A.) i(Y)
-7 b(oung) 31 b(in) h(his) 0 2872 y(SSLea) n(y) 37 b(do) r(cumen) n
(tation) h(and) f(P) n(eter) g(Guttman's) h(pap) r(er) g("Soft) n(w) n
(are) e(Generation) h(of) g(Practically) f(Strong) h(Random) 0
2971 y(Num) n(b) r(ers".) 0 3113 y(X917's) h(design) h(w) n(as) g(c) n
(hanged) f(from) i(the) g(X9.17) e(standard) h(in) h(resp) r(onse) e
(to) h(the) h(attac) n(ks) f(presen) n(ted) g(in) h(the) g(pap) r(er) 0
3212 y("Cryptanalytic) 26 b(A) n(ttac) n(ks) h(on) g(Pseudorandom) f
(Num) n(b) r(er) i(Generators",) d(b) n(y) i(Kelsey) -7
b(,) 27 b(Sc) n(hneier,) g(W) -7 b(agner,) 27 b(and) g(Hall.) 1908
5649 y(19) p 90 rotate dyy eop
%%Page: 20 20
20 19 bop Fe 0 83 a(6.6) 112 b(Con) m(tact) 37 b(Information) p
Fg 0 236 a(A) 26 b(PGP) g(DSA) h(k) n(ey) e(with) i(a) e(\014ngerprin) n
(t) g(of) p Ff 26 w(33E3) 42 b(9768) g(1D13) g(E7B4) g(1A01) g(BBCE) g
(A63F) g(2CBD) g(FA02) g(FBCC) p Fg 24 w(is) 26 b(used) g(to) 0
336 y(sign) h(all) g(Op) r(enCL) g(releases.) 35 b(This) 27
b(k) n(ey) g(can) f(b) r(e) i(found) g(in) f(the) h(\014le) p
Ff 27 w(doc/pgpkeys.asc) p Fg(;) 21 b(PGP) 27 b(k) n(eys) f(for) h(the)
g(dev) n(elop) r(ers) 0 436 y(are) g(also) f(stored) h(there.) 0
577 y(Email:) p Ff 36 w(opencl@acm.jhu.ed) o(u) p Fg
0 718 a(Op) r(enCL) h(W) -7 b(eb) 28 b(Site:) p Ff 37
w(http://opencl.so) o(urc) o(ef) o(or) o(ge.) o(ne) o(t) p
Fg 0 859 a(Op) r(enCL) g(Do) n(wnload) e(Site) i(\(HTTP\):) p
Ff 28 w(http://prdownload) o(s.) o(sf) o(.ne) o(t/) o(ope) o(nc) o(l) p
Fg 0 1000 a(Op) r(enCL) g(Do) n(wnload) e(Site) i(\(FTP\):) p
Ff 28 w(ftp://acm.jhu.edu) o(/p) o(ub) o(/ll) o(oy) o(d/O) o(pe) o(nC) o
(L) p Fg 0 1141 a(Dev) n(elopmen) n(t) i(b) r(oth) h(of) g(and) f(with)
h(Op) r(enCL) g(is) f(discussed) h(on) f(the) h(op) r(encl-dev) n(el) f
(mailing) g(list;) i(see) f(the) g(w) n(eb) f(page) g(for) 0
1241 y(details.) p Fe 0 1473 a(6.7) 112 b(Dev) m(elop) s(ers) p
Fg 0 1626 a(The) 28 b(follo) n(wing) e(p) r(eople) i(ha) n(v) n(e) e
(con) n(tributed) i(to) f(the) h(dev) n(elopmen) n(t) f(of) h(Op) r
(enCL:) 125 1768 y(Name:) 36 b(Jac) n(k) 27 b(Llo) n(yd) 125
1867 y(Email:) p Ff 36 w(<lloyd@acm.jhu.e) o(du) o(>) p
Fg 125 1967 a(PGP) f(Key) h(Fingerprin) n(t:) p Ff 36
w(2DD2) 42 b(95F9) g(C7E3) g(A15E) g(AF29) g(80E1) g(D6A9) g(A5B9) g
(4DCD) g(F398) p Fg 125 2066 a(Credits:) 36 b(Initial) 28
b(design) f(and) g(co) r(ding) 125 2233 y(Name:) 36 b(P) n(eter) 27
b(J.) g(Jones) 125 2332 y(Email:) p Ff 36 w(<pjones@pmade.or) o(g>) p
Fg 125 2432 a(PGP) f(Key) h(Fingerprin) n(t:) p Ff 36
w(70D4) 42 b(3997) g(A57B) g(1A72) g(CDB5) g(0F3B) g(F955) g(61E3) g
(8082) g(EBE9) p Fg 125 2531 a(Credits:) 36 b(Bzip2) 27
b(Filter) h(and) f(parts) g(of) h(the) g(Zlib) f(\014lter) 1908
5649 y(20) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
