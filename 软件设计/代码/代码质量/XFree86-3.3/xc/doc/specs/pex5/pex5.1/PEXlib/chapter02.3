.NH 2
Output Primitive Attribute Functions
.XS
\*(SN Output Primitive Attribute Functions
.XE
.IN "output commands"
.IN "attributes"
.LP
This section describes all the output primitive attribute functions.
More detailed information on attributes is given in
\fIChapter 4: Pipeline Contexts\fP.
Attributes that have optional enumerated types have their valid
values listed under
.PN PEXGetEnumTypeInfo
in \fIChapter 1: Introduction to PEXlib\fP.
.NH 3
Common Data Structures
.XS
\*(SN Common Data Structures
.XE
.LP
Below are the
data structures used that are common to more than one function described in this
section.
.RS
.Co
/* coordinates */
.ID
typedef struct {
    float               x;
    float               y;
    float               z;
} PEXCoord;
.sp
typedef struct {
    float               x;
    float               y;
} PEXCoord2D;
.DE
/* vectors */
.ID
typedef struct {
    float               x;
    float               y;
    float               z;
} PEXVector;
.sp
typedef struct {
    float               x;
    float               y;
} PEXVector2D;
.DE
/* colors */
.ID
typedef union {
    PEXColorIndexed     indexed;
    PEXColorRGB         rgb;
    PEXColorHSV         hsv;
    PEXColorHLS         hls;
    PEXColorCIE         cie;
    PEXColorRGB8        rgb8;
    PEXColorRGB16       rgb16;
} PEXColor;
.sp
typedef struct {
    PEXTableIndex       index;
    unsigned short      reserved;
} PEXColorIndexed;
.sp
typedef struct {
    float               red;
    float               green;
    float               blue;
} PEXColorRGB;
.sp
typedef struct {
    float               hue;
    float               saturation;
    float               value;
} PEXColorHSV;
.sp
typedef struct {
    float               hue;
    float               lightness;
    float               saturation;
} PEXColorHLS;
.sp
typedef struct {
    float               x;
    float               y;
    float               z;
} PEXColorCIE;
.sp
typedef struct {
    unsigned char       red;
    unsigned char       green;
    unsigned char       blue;
    unsigned char       reserved;
} PEXColorRGB8;
.sp
typedef struct {
    unsigned short      red;
    unsigned short      green;
    unsigned short      blue;
    unsigned short      reserved;
} PEXColorRGB16;
.sp
typedef struct {
    PEXColorType        type;	/* PEXColorTypeIndexed, PEXColorTypeRGB, */
						/* PEXColorTypeCIE, PEXColorTypeHSV, */
						/* PEXColorTypeHLS, PEXColorTypeRGB8, */
						/* PEXColorTypeRGB16 */
    unsigned short      reserved;
    PEXColor            value;
} PEXColorSpecifier;
.DE
/* matrices */
.ID
typedef float           PEXMatrix[4][4];
typedef float           PEXMatrix3x3[3][3];
.DE
/* similar to XErrorEvent - use to access additional info in OC error */
.ID
typedef struct {
    int             type;
    Display         *display;      /* Display the event was read from */
    XID             resourceid;    /* resource id of renderer or structure */
    unsigned long   serial;        /* serial number of failed request */
    unsigned char   error_code;    /* error code of failed request */
    unsigned char   request_code;  /* Major op-code of failed request */
    unsigned char   minor_code;    /* Minor op-code of failed request */
    unsigned short  op_code;       /* op-code of failed output command */
    unsigned short  count;         /* number of output commands successfully */
                                   /* executed before error */
} PEXOCErrorEvent;
.DE
.ft P
.RE
.bp
.XS
Function Descriptions
.XE
.SH
PEXAddToNameSet - Add Names to Name Set
.XS
	PEXAddToNameSet
.XE
.IN "PEXAddToNameSet" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXAddToNameSet\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned long \fIcount\fP\^, PEXName *\fInames\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcount\fP 1i
The number of names.
.IP \fInames\fP 1i
An array of names to be added to the current name set.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
adds the specified list of names to the current name set.
If any name is outside the supported range that name is ignored.
.IN "filters"
.IN "invisibility filter"
.IN "highlight filter"
.IN "pick filter"
.RE
.SH
Data Structures
.ID
.Co
typedef unsigned long   PEXName;
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXCreateNameSet ,
.PN PEXRemoveFromNameSet ,
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXRemoveFromNameSet - Remove Names from Name Set
.XS
	PEXRemoveFromNameSet
.XE
.IN "PEXRemoveFromNameSet" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXRemoveFromNameSet\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned long \fIcount\fP\^, PEXName *\fInames\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcount\fP 1i
The number of names.
.IP \fInames\fP 1i
An array of names to be removed from the current name set.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
removes the specified list of names from the current name set.
If any name is outside the supported range that name is ignored.
.IN "filters"
.IN "invisibility filter"
.IN "highlight filter"
.IN "pick filter"
.RE
.SH
Data Structures
.ID
.Co
typedef unsigned long   PEXName;
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXCreateNameSet ,
.PN PEXAddToNameSet ,
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXRestoreModelClipVolume - Restore Model Clip Volume
.XS
	PEXRestoreModelClipVolume
.XE
.IN "PEXRestoreModelClipVolume" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXRestoreModelClipVolume\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
restores the last-saved modeling clipping volume.
If there is no last-saved clipping volume
that can be restored, the modeling clipping volume is restored
to its default state.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetModelClipFlag ,
.PN PEXSetModelClipVolume ,
.br
.PN PEXSetModelClipVolume
.RE
.bp
.SH
PEXSetATextAlignment - Set Annotation Text Alignment
.XS
	PEXSetATextAlignment
.XE
.IN "PEXSetATextAlignment" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetATextAlignment\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIhalignment\fP\^, int \fIvalignment\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIhalignment\fP 1i
The horizontal annotation text alignment
.Pn ( PEXHAlignNormal ,
.PN PEXHAlignLeft ,
.PN PEXHAlignCenter ,
.PN PEXHAlignRight ).
.IP \fIvalignment\fP 1i
The vertical annotation text alignment
.Pn ( PEXVAlignNormal ,
.PN PEXVAlignTop ,
.PN PEXVAlignCap ,
.PN PEXVAlignHalf ,
.PN PEXVAlignBase ,
.PN PEXVAlignBottom ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the horizontal and vertical annotation text alignment attributes.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetATextHeight - Set Annotation Text Height
.XS
	PEXSetATextHeight
.XE
.IN "PEXSetATextHeight" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetATextHeight\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIheight\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIheight\fP 1i
The annotation text character height.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the annotation text height attribute.
If the specified height or the
computed width is not supported, the height or width is mapped to the nearest
supported annotation character height or width.
These values depend on the
font files that are in the font groups in the selected font table entry, which
in turn depend on which X or PEX font files have been opened.
If all scalable and rotatable stroke fonts are open, then a continuous range of
character sizes are supported.
The height is expressed in normalized projection coordinates.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetATextPath - Set Annotation Text Path
.XS
	PEXSetATextPath
.XE
.IN "PEXSetATextPath" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetATextPath\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIpath\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIpath\fP 1i
The text (drawing) path
.Pn ( PEXPathRight ,
.PN PEXPathLeft ,
.PN PEXPathUp ,
.PN PEXPathDown ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the annotation text path attribute.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetATextStyle - Set Annotation Text Style
.XS
	PEXSetATextStyle
.XE
.IN "PEXSetATextStyle" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetATextStyle\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIstyle\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIstyle\fP 1i
The annotation text style
.Pn ( PEXATextNotConnected
or
.PN PEXATextConnected ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the annotation text style attribute.
If the specified style is not supported, 
.PN PEXATextNotConnected
is used.
Supported values for annotation text style are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo
.RE
.bp
.SH
PEXSetATextUpVector - Set Annotation Text Up Vector
.XS
	PEXSetATextUpVector
.XE
.IN "PEXSetATextUpVector" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetATextUpVector\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXVector2D *\fIvector\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIvector\fP 1i
The annotation text character up vector.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the annotation text up vector attribute.
The vector is specified in the text local coordinate system defined by the
direction vectors associated with the annotation text primitive.
Only the direction of the vector is used, not the magnitude.
However, if the annotation text up vector is degenerate (it has a length of
zero), a value <0,1> is used.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetBFInteriorStyle - Set Back-Face Surface Interior Style
.XS
	PEXSetBFInteriorStyle
.XE
.IN "PEXSetBFInteriorStyle" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFInteriorStyle\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIstyle\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIstyle\fP 1i
The back-facing surface interior style
.Pn ( PEXInteriorStyleHollow ,
.PN PEXInteriorStyleSolid ,
.PN PEXInteriorStylePattern ,
.PN PEXInteriorStyleHatch ,
.PN PEXInteriorStyleEmpty ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing surface interior style attribute.
If the specified style is not supported,
.PN PEXInteriorStyleHollow
is used.
Supported values for back-facing surface interior style are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetBFInteriorStyleIndex - Set Back-Face Surface Interior Style Index
.XS
	PEXSetBFInteriorStyleIndex
.XE
.IN "PEXSetBFInteriorStyleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFInteriorStyleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The back-facing surface interior style index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing interior style index attribute.
If the current back-facing interior style is
.PN PEXInteriorStylePattern
or
.PN PEXInteriorStyleHatch ,
the specified index is used to further define the rendering style of back-facing
surface primitives.  For
.PN PEXInteriorStylePattern ,
if the specified pattern table index is not defined, table index one is used.
For
.PN PEXInteriorStyleHatch ,
the index determines the hatch style.  If the specified hatch style is not
supported, style one is used.  If style one is not supported, the result is
implementation-dependent.
Supported values for hatch style are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetBFReflectionAttributes - Set Back-Face Surface Reflection Attributes
.XS
	PEXSetBFReflectionAttributes
.XE
.IN "PEXSetBFReflectionAttributes" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFReflectionAttributes\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXReflectionAttributes *\fIattributes\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIattributes\fP 1i
The back-facing surface reflection attributes.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing surface reflection attributes.
Surface reflection attributes consist of
the ambient, diffuse and specular coefficients,
the specular concentration and color,
and the transmission coefficient.
.RE
.SH
Data Structures
.ID
.Co
typedef struct {
    float               ambient;
    float               diffuse;
    float               specular;
    float               specular_conc;
    float               transmission;
    PEXColorSpecifier   specular_color;
} PEXReflectionAttributes;
.sp
See also the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXSetBFReflectionModel - Set Back-Face Surface Reflection Model
.XS
	PEXSetBFReflectionModel
.XE
.IN "PEXSetBFReflectionModel" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFReflectionModel\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImodel\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImodel\fP 1i
The back-facing surface reflection model
.Pn ( PEXReflectionNone ,
.PN PEXReflectionAmbient ,
.PN PEXReflectionDiffuse ,
.PN PEXReflectionSpecular ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing surface reflection model attribute.
If the specified reflection model is not supported,
.PN PEXReflectionNone
is used.
Supported values for back-facing surface reflection model are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetBFSurfaceColor - Set Back-Face Surface Color
.XS
	PEXSetBFSurfaceColor
.XE
.IN "PEXSetBFSurfaceColor" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFSurfaceColor\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcolor_type\fP\^, PEXColor *\fIcolor\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcolor_type\fP 1i
The type of color
.Pn ( PEXColorTypeIndexed ,
.PN PEXColorTypeRGB ,
.PN PEXColorTypeCIE ,
.PN PEXColorTypeHSV ,
.PN PEXColorTypeHLS ,
.PN PEXColorTypeRGB8 ,
.PN PEXColorTypeRGB16 ).
.IP \fIcolor\fP 1i
A pointer to the back-facing surface color.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing surface color attribute.
The attribute is set to either an
indexed color or a direct color value,
depending on the color type.
If the color type is
.PN PEXColorTypeIndexed
and the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value, e.g. the color type is
.PN PEXColorTypeIndexed ,
and the color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetBFSurfaceColorIndex - Set Back-Face Surface Color Index
.XS
	PEXSetBFSurfaceColorIndex
.XE
.IN "PEXSetBFSurfaceColorIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFSurfaceColorIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color table index for back-facing surfaces.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing surface color attribute
to an indexed color with the value indicated by index.
If the color index is not defined, color index one is used.  If color index
one is not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetBFSurfaceInterpMethod - Set Back-Face Surface Interpolation Method
.XS
	PEXSetBFSurfaceInterpMethod
.XE
.IN "PEXSetBFSurfaceInterpMethod" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetBFSurfaceInterpMethod\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImethod\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImethod\fP 1i
The back-facing surface interpolation method
.Pn ( PEXSurfaceInterpNone ,
.PN PEXSurfaceInterpColor ,
.PN PEXSurfaceInterpDotProduct ,
.PN PEXSurfaceInterpNormal ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the back-facing surface interpolation method attribute.
If the specified interpolation method is not supported,
.PN PEXSurfaceInterpNone
is used.
Supported values for back-facing surface interpolation method are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetCharExpansion - Set Character Expansion Factor
.XS
	PEXSetCharExpansion
.XE
.IN "PEXSetCharExpansion" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetCharExpansion\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIexpansion\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIexpansion\fP 1i
The character expansion factor.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the character expansion factor attribute.
Only the magnitude of the specified expansion is considered.
The specified character expansion factor is compared to the minimum and
maximum character
expansion factors.  These values depend on the font files that are in the
font groups in the selected font table entry, which in turn depend on the font
files opened.
For example, if all scalable and rotatable stroke fonts are open, then a
continuous number of expansions are supported.
If the expansion is smaller than the minimum character expansion factor, the
minimum value is used.
If the expansion is larger than the maximum character expansion factor, the
maximum value is used.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetCharHeight - Set Character Height
.XS
	PEXSetCharHeight
.XE
.IN "PEXSetCharHeight" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetCharHeight\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIheight\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIheight\fP 1i
The text character height.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the character height value attribute.
If the specified height or the computed width is not supported, the height
or width is mapped to the nearest supported character height or width.
These values depend on the font files that are in the font groups in the
selected font table entry, which in turn depend on which X or PEX fonts are
open.  For example, if the client opens all scalable and rotatable stroke
fonts, a continuous number of character sizes are supported.
The height is specified in the text local coordinate system.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetCharSpacing - Set Character Spacing
.XS
	PEXSetCharSpacing
.XE
.IN "PEXSetCharSpacing" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetCharSpacing\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIspacing\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIspacing\fP 1i
The text character spacing factor.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the character spacing attribute.
The character spacing attribute is expressed as a fraction of the
font's nominal character height.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetCharUpVector - Set Character Up Vector
.XS
	PEXSetCharUpVector
.XE
.IN "PEXSetCharUpVector" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetCharUpVector\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXVector2D *\fIvector\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIvector\fP 1i
The text character up vector.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text up vector attribute.
The vector is specified in the text local coordinate system defined by the
direction vectors associated with the annotation text primitive.
If the annotation text up vector is degenerate (it has a length of zero),
a value <0,1> is used.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetColorApproxIndex - Set Color Approximation Index
.XS
	PEXSetColorApproxIndex
.XE
.IN "PEXSetColorApproxIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetColorApproxIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color approximation table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the color approximation index attribute.
If the specified index is not defined, index zero is used.  If index zero is
not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color approximation index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXCreateLookupTable ,
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXSetCurveApprox - Set Curve Approximation Method
.XS
	PEXSetCurveApprox
.XE
.IN "PEXSetCurveApprox" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetCurveApprox\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImethod\fP\^, double \fItolerance\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImethod\fP 1i
The curve approximation method
.Pn ( PEXApproxImpDep ,
.PN PEXApproxConstantBetweenKnots ,
.PN PEXApproxWCChordalSize ,
.PN PEXApproxNPCChordalSize ,
.PN PEXApproxDCChordalSize ,
.PN PEXCurveApproxWCChordalDev ,
.PN PEXCurveApproxNPCChordalDev ,
.PN PEXCurveApproxDCChordalDev ,
.PN PEXApproxWCRelative ,
.PN PEXApproxNPCRelative ,
.PN PEXApproxDCRelative ).
.IP \fItolerance\fP 1i
The curve approximation tolerance (specific to each method).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the curve approximation attribute.
If the specified method is not supported, an implementation-dependent method
(method 1) is used.
Supported values for curve approximation are inquirable via
.PN PEXGetEnumTypeInfo .
The tolerance value is
provided to indicate the desired accuracy of the approximation, and is
used in different ways for the different methods.  See
\fIChapter 4: Pipeline Contexts\fP
for more information about tolerance values.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXGetEnumTypeInfo
.RE
.bp
.SH
PEXSetDepthCueIndex - Set Depth Cue Index
.XS
	PEXSetDepthCueIndex
.XE
.IN "PEXSetDepthCueIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetDepthCueIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The depth cue table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the depth-cue index attribute.
If the specified index is not defined, index zero is used.  If index zero
is not defined, depth cueing is turned off.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The depth cue index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetEdgeBundleIndex - Set Edge Bundle Index
.XS
	PEXSetEdgeBundleIndex
.XE
.IN "PEXSetEdgeBundleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetEdgeBundleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The edge bundle table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the edge bundle index attribute.
If an undefined index is specified, default bundle index one is used.
If index one is not defined, the edge bundle attributes are set as
follows:  surface edges are turned off, the edge type is solid, the edge
width is 1.0 and the color is indexed color one.
.LP
An edge bundle table index of 0 will produce a
.PN BadPEXOutputCommand
error.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetFacetCullingMode - Set Facet Culling Mode
.XS
	PEXSetFacetCullingMode
.XE
.IN "PEXSetFacetCullingMode" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetFacetCullingMode\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImode\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImode\fP 1i
The facet culling mode
.Pn ( PEXNone ,
.PN PEXBackFaces ,
.PN PEXFrontFaces ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the facet culling mode attribute.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetFacetDistinguishFlag - Set Facet Distinguish Flag
.XS
	PEXSetFacetDistinguishFlag
.XE
.IN "PEXSetFacetDistinguishFlag" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetFacetDistinguishFlag\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIflag\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIflag\fP 1i
The facet distinguish flag
.Pn ( True
or
.PN False ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the facet distinguish flag attribute.
Values for the facet distinguish flag are
.PN True
(use back-face attributes to renderer surfaces)
or
.PN False
(use front-face attributes to renderer surfaces).
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetGlobalTransform - Set Global Transformation 3D
.XS
	PEXSetGlobalTransform
.XE
.IN "PEXSetGlobalTransform" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetGlobalTransform\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXMatrix \fItransform\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fItransform\fP 1i
The new global transformation matrix.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
replaces the current global transformation matrix with the specified matrix.
The matrix is stored in row-major order.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetGlobalTransform2D
.RE
.bp
.SH
PEXSetGlobalTransform2D - Set Global Transformation 2D
.XS
	PEXSetGlobalTransform2D
.XE
.IN "PEXSetGlobalTransform2D" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetGlobalTransform2D\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXMatrix3x3 \fItransform\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fItransform\fP 1i
The new global transformation matrix.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
replaces the current global transformation matrix with the specified matrix.
This output command is similar to
.PN PEXSetGlobalTransform
except that the global transformation matrix is specified as a 3 \(mu 3 matrix.
Before replacement of the global transformation matrix,
the 3 \(mu 3 matrix represented by
.IP
.EQ
left [
    {
    ~~~ pile { a above d above g }
    ~~~ pile { b above e above h }
    ~~~ pile { c above f above j }
    }
    ~~~ right ]
.EN
.sp
is expanded to a 4 \(mu 4 matrix as follows:
.IP
.EQ
left [
    {
    ~~~ pile { a above d above g }
    ~~~ pile { b above e above h }
    ~~~ pile { c above f above j }
    }
    ~~~ right ] ->
left [
    {
    ~~~ pile { a above d above 0 above g }
    ~~~ pile { b above e above 0 above h }
    ~~~ pile { 0 above 0 above 1 above 0 }
    ~~~ pile { c above f above 0 above j }
    }
    ~~~ right ]
.EN
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetGlobalTransform
.RE
.bp
.SH
PEXSetHLHSRID - Set Hidden-Line Hidden-Surface Removal Identifier
.XS
	PEXSetHLHSRID
.XE
.IN "PEXSetHLHSRID" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetHLHSRID\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned long \fIhlhsr_id\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIhlhsr_id\fP 1i
The HLHSR identifier
.Pn ( PEXHLHSRIDDisable
or
.PN PEXHLHSRIDEnable ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the HLHSR identifier attribute.
This output command is a no-op for all
standard HLHSR modes except
.PN PEXHLHSRZBufferID .
If the renderer's HLHSR mode is set to
.PN PEXHLHSRZBufferID ,
then a HLHSR identifier of
.PN PEXHLHSRIDDisable
will disable z-buffering and a
HLHSR identifier of
.PN PEXHLHSRIDEnable
will enable z-buffering.
For non-standard HLHSR modes,
the effect of this output command is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetIndividualASF - Set Individual Aspect Source Flags
.XS
	PEXSetIndividualASF
.XE
.IN "PEXSetIndividualASF" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetIndividualASF\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned long \fIattribute\fP\^, int \fIasf\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIattribute\fP 1i
The ASF attribute name (see the Description).
.IP \fIasf\fP 1i
The attribute source flag value
.Pn ( PEXIndividual
or
.PN PEXBundled ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the aspect source flag for a single, individual attribute.
For the individual ASF attribute name, valid values are:
.ID
.PN PEXASFBFInteriorStyle
.PN PEXASFBFInteriorStyleIndex
.PN PEXASFBFReflectionAttr
.PN PEXASFBFReflectionModel
.PN PEXASFBFSurfaceColor
.PN PEXASFBFSurfaceInterp
.PN PEXASFCharExpansion
.PN PEXASFCharSpacing
.PN PEXASFCurveApprox
.PN PEXASFInteriorStyle
.PN PEXASFInteriorStyleIndex
.PN PEXASFLineColor
.PN PEXASFLineType
.PN PEXASFLineWidth
.PN PEXASFMarkerColor
.PN PEXASFMarkerScale
.PN PEXASFMarkerType
.PN PEXASFPolylineInterp
.PN PEXASFReflectionAttr
.PN PEXASFReflectionModel
.PN PEXASFSurfaceApprox
.PN PEXASFSurfaceColor
.PN PEXASFSurfaceEdgeColor
.PN PEXASFSurfaceEdgeType
.PN PEXASFSurfaceEdgeWidth
.PN PEXASFSurfaceEdges
.PN PEXASFSurfaceInterp
.PN PEXASFTextColor
.PN PEXASFTextFontIndex
.PN PEXASFTextPrec
.DE
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetInteriorBundleIndex - Set Interior Bundle Index
.XS
	PEXSetInteriorBundleIndex
.XE
.IN "PEXSetInteriorBundleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetInteriorBundleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The interior bundle table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the interior bundle index attribute.
If the specified index is not defined, the default index one is used.  If
index one is not defined, the following bundle values are used:  interior style is
.PN PEXInteriorStyleHollow ;
interior style index is one; surface color is indexed color one; reflection
attributes are ambient, diffuse and specular coefficient of 1.0, specular
concentration and transmission coefficient of 0.0 and specular color of indexed
color one; reflection model is
.PN PEXReflectionNone ;
surface interpolation is
.PN PEXSurfaceInterpNone ;
and surface approximation is method 1
.Pn ( PEXApproxImpDep )
with u and v tolerances of 1.0.
The back-facing attributes are set to identical values as the front-facing
attributes.
.LP
An interior bundle table index of 0 will produce a
.PN BadPEXOutputCommand
error.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetInteriorStyle - Set Surface Interior Style
.XS
	PEXSetInteriorStyle
.XE
.IN "PEXSetInteriorStyle" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetInteriorStyle\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIstyle\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIstyle\fP 1i
The interior style
.Pn ( PEXInteriorStyleHollow ,
.PN PEXInteriorStyleSolid ,
.PN PEXInteriorStylePattern ,
.PN PEXInteriorStyleHatch ,
.PN PEXInteriorStyleEmpty ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface interior style attribute.
If the specified style is not supported,
.PN PEXInteriorStyleHollow
is used.
Supported values for surface interior style are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetInteriorStyleIndex - Set Surface Interior Style Index
.XS
	PEXSetInteriorStyleIndex
.XE
.IN "PEXSetInteriorStyleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetInteriorStyleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The interior style index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the interior style index attribute.
If the current interior style is
.PN PEXInteriorStylePattern
or
.PN PEXInteriorStyleHatch ,
the specified index is used to further define the rendering style of
front-facing surface primitives.  For
.PN PEXInteriorStylePattern ,
if the specified pattern table index is not defined, table index one is used.
For
.PN PEXInteriorStyleHatch ,
the index determines the hatch style.  If the specified hatch style is not
supported, style one is used.  If style one is not supported, the result is
implementation-dependent.
Supported values for hatch style are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable ,
.PN PEXGetEnumTypeInfo
.RE
.bp
.SH
PEXSetLightSourceState - Set Light Source State
.XS
	PEXSetLightSourceState
.XE
.IN "PEXSetLightSourceState" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLightSourceState\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIenable_count\fP\^, PEXTableIndex *\fIenable\fP\^, unsigned int \fIdisable_count\fP\^, PEXTableIndex *\fIdisable\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIenable_count\fP 1i
The number of lights to enable.
.IP \fIenable\fP 1i
An array of lights to enable.
.IP \fIdisable_count\fP 1i
The number of lights to disable.
.IP \fIdisable\fP 1i
An array of lights to disable.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the light source state attribute.
Each element in the enable list activates the light represented by
the corresponding light table entry and each element in the disable
list deactivates the light represented by the corresponding light
table entry.
.LP
A light listed in both the enable list and the disable list, or a
light index of 0 will produce a
.PN BadPEXOutputCommand
error.
Otherwise, if any light in the enable or disable list references an undefined
light table entry, the light is ignored.
.RE
.SH
Data Structures
.ID
.Co
typedef unsigned short  PEXTableIndex;
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetLineBundleIndex - Set Line Bundle Index
.XS
	PEXSetLineBundleIndex
.XE
.IN "PEXSetLineBundleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLineBundleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The line bundle table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the line bundle index attribute.
If an undefined line bundle index is specified, the default bundle index one
is used.  If index one is not defined, the following values are used: line type is
.PN PEXLineTypeSolid ;
polyline interpolation is
.PN PEXPolylineInterpNone ;
curve approximation is method 1
.Pn ( PEXApproxImpDep )
with a tolerance of 1.0; line width is 1.0 and line color is index color one.
.LP
A line bundle table index of 0 will produce a
.PN BadPEXOutputCommand
error.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetLineColor - Set Line Color
.XS
	PEXSetLineColor
.XE
.IN "PEXSetLineColor" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLineColor\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcolor_type\fP\^, PEXColor *\fIcolor\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcolor_type\fP 1i
The type of color
.Pn ( PEXColorTypeIndexed ,
.PN PEXColorTypeRGB ,
.PN PEXColorTypeCIE ,
.PN PEXColorTypeHSV ,
.PN PEXColorTypeHLS ,
.PN PEXColorTypeRGB8 ,
.PN PEXColorTypeRGB16 ).
.IP \fIcolor\fP 1i
A pointer to the line color.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the line color attribute.
The attribute is set to either an
indexed color or a direct color value,
depending on the color type.
If the color type is
.PN PEXColorTypeIndexed
and the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value, e.g. the color type is
.PN PEXColorTypeIndexed ,
and the color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetLineColorIndex - Set Line Color Index
.XS
	PEXSetLineColorIndex
.XE
.IN "PEXSetLineColorIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLineColorIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color table index for lines.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the line color attribute
to an indexed color with the value indicated by index.
If the color index is not defined, color index one is used.  If color index
one is not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetLineType - Set Line Type
.XS
	PEXSetLineType
.XE
.IN "PEXSetLineType" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLineType\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIline_type\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIline_type\fP 1i
The line type
.Pn ( PEXLineTypeSolid ,
.PN PEXLineTypeDashed ,
.PN PEXLineTypeDotted ,
.PN PEXLineTypeDashDot ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the line type attribute.
If the specified line type is not supported,
.PN PEXLineTypeSolid
is used.
Supported values for line type are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetLineWidth - Set Line Width
.XS
	PEXSetLineWidth
.XE
.IN "PEXSetLineWidth" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLineWidth\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIwidth\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIwidth\fP 1i
The line width scale factor.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the line width attribute.
The specified width is used as a scale factor.
This scale factor is used to increase or decrease the width (in pixels)
from the nominal line width for the display device.  The result is
mapped to the nearest supported line width.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetImpDepConstants ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetLocalTransform - Set Local Transformation 3D
.XS
	PEXSetLocalTransform
.XE
.IN "PEXSetLocalTransform" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLocalTransform\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcomposition\fP\^, PEXMatrix \fItransform\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcomposition\fP 1i
The composition rule for combining the new matrix with the current local transform
.Pn ( PEXPreConcatenate ,
.PN PEXPostConcatenate ,
.PN PEXReplace ).
.IP \fItransform\fP 1i
The new local transformation matrix.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
modifies the local transformation matrix.
If the composition type is
.PN PEXPreConcatenate ,
the specified matrix is
pre-concatenated to the current local transformation matrix
( L' = L \(mu T ).
If the composition type is
.PN PEXPostConcatenate ,
the specified
matrix is post-concatenated to the current local
transformation matrix ( L' = T \(mu L ).  If the composition type is
.PN PEXReplace ,
the specified matrix replaces the current local
transformation matrix ( L' = T ).
.LP
The composite matrix is then recomputed using the current global transformation
and the new local transformation matrix ( C = G \(mu L' ).
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetLocalTransform2D
.RE
.bp
.SH
PEXSetLocalTransform2D - Set Local Transformation 2D
.XS
	PEXSetLocalTransform2D
.XE
.IN "PEXSetLocalTransform2D" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetLocalTransform2D\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcomposition\fP\^, PEXMatrix3x3 \fItransform\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcomposition\fP 1i
The composition rule for combining the new matrix with the current local transform
.Pn ( PEXPreConcatenate ,
.PN PEXPostConcatenate ,
.PN PEXReplace ).
.IP \fItransform\fP 1i
The new local transformation matrix.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
modifies the local transformation matrix.
This output command is similar to
.PN PEXSetLocalTransform
except
that the local transformation matrix is specified as a 3 \(mu 3 matrix.
Before modification of the local transformation matrix,
the 3 \(mu 3 matrix represented by
.IP
.EQ
left [
    {
    ~~~ pile { a above d above g }
    ~~~ pile { b above e above h }
    ~~~ pile { c above f above j }
    }
    ~~~ right ]
.EN
.sp
is expanded to a 4 \(mu 4 matrix as follows:
.IP
.EQ
left [
    {
    ~~~ pile { a above d above g }
    ~~~ pile { b above e above h }
    ~~~ pile { c above f above j }
    }
    ~~~ right ] ->
left [
    {
    ~~~ pile { a above d above 0 above g }
    ~~~ pile { b above e above 0 above h }
    ~~~ pile { 0 above 0 above 1 above 0 }
    ~~~ pile { c above f above 0 above j }
    }
    ~~~ right ]
.EN
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetLocalTransform
.RE
.bp
.SH
PEXSetMarkerBundleIndex - Set Marker Bundle Index
.XS
	PEXSetMarkerBundleIndex
.XE
.IN "PEXSetMarkerBundleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetMarkerBundleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The marker bundle table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the marker bundle index attribute.
If an undefined index is specified, the default bundle index one is used.
If index one is undefined, the default values are used:  marker type is
.PN PEXMarkerAsterisk ;
marker scale is 1.0 and marker color is indexed color one.
.LP
A marker bundle table index of 0 will produce a
.PN BadPEXOutputCommand
error.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetMarkerColor - Set Marker Color
.XS
	PEXSetMarkerColor
.XE
.IN "PEXSetMarkerColor" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetMarkerColor\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcolor_type\fP\^, PEXColor *\fIcolor\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcolor_type\fP 1i
The type of color
.Pn ( PEXColorTypeIndexed ,
.PN PEXColorTypeRGB ,
.PN PEXColorTypeCIE ,
.PN PEXColorTypeHSV ,
.PN PEXColorTypeHLS ,
.PN PEXColorTypeRGB8 ,
.PN PEXColorTypeRGB16 ).
.IP \fIcolor\fP 1i
A pointer to the marker color.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the marker color attribute.
The attribute is set to either an
indexed color or a direct color value,
depending on the color type.
If the color type is
.PN PEXColorTypeIndexed
and the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value, e.g. the color type is
.PN PEXColorTypeIndexed ,
and the color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetMarkerColorIndex - Set Marker Color Index
.XS
	PEXSetMarkerColorIndex
.XE
.IN "PEXSetMarkerColorIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetMarkerColorIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color table index for markers.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the marker color attribute
to an indexed color with the value indicated by index.
If the color index is not defined, color index one is used.  If color index
one is not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetMarkerScale - Set Marker Scale
.XS
	PEXSetMarkerScale
.XE
.IN "PEXSetMarkerScale" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetMarkerScale\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIscale\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIscale\fP 1i
The marker scale factor.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the marker scale attribute.
Scale is multiplied by the nominal marker size for the display
device to produce a marker size
mapped to the nearest supported marker size.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetImpDepConstants ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetMarkerType - Set Marker Type
.XS
	PEXSetMarkerType
.XE
.IN "PEXSetMarkerType" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetMarkerType\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImarker_type\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImarker_type\fP 1i
The marker type
.Pn ( PEXMarkerDot ,
.PN PEXMarkerCross ,
.PN PEXMarkerAsterisk ,
.PN PEXMarkerCircle ,
.PN PEXMarkerX ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the marker type attribute.
If the specified marker type is not supported,
.PN PEXMarkerAsterisk
is used.
Supported values for marker type are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetModelClipFlag - Set Model Clipping Flag
.XS
	PEXSetModelClipFlag
.XE
.IN "PEXSetModelClipFlag" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetModelClipFlag\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIflag\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIflag\fP 1i
The model clipping flag
.Pn ( PEXClip
or
.PN PEXNoClip ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the model clip attribute.
Values for the model clip flag are
.PN PEXClip
(enable modeling clipping) and
.PN PEXNoClip
(disable modeling clipping).
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetModelClipVolume ,
.PN PEXSetModelClipVolume2D ,
.PN PEXRestoreModelClipVolume
.RE
.bp
.SH
PEXSetModelClipVolume - Set Model Clip Volume 3D
.XS
	PEXSetModelClipVolume
.XE
.IN "PEXSetModelClipVolume" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetModelClipVolume\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIop\fP\^, unsigned int \fIcount\fP\^, PEXHalfSpace *\fIhalf_spaces\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIop\fP 1i
The model clipping volume operator
.Pn ( PEXModelClipReplace
or
.PN PEXModelClipIntersection ).
.IP \fIcount\fP 1i
The number of halfspaces.
.IP \fIhalf_spaces\fP 1i
An array of points and normal vectors defining the model clipping volume.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the model clip volume attribute.
The operator will be used to combine the specified list of half-spaces with
the current model clipping volume to form a new model clipping volume.
Values for the operator are
.PN PEXModelClipReplace
(replace current volume)
and
.PN PEXModelClipIntersection
(intersect specified volume with current volume).
Each half-space is defined by a point and a normal in model coordinates.
The normal points in the direction of the half-space, and the point
is considered to be on the plane.
See
.PN PEXGetImpDepConstants
for the maximum allowable number of model clip planes.
.LP
Each half-space is transformed by the current composite modeling transformation
and combined with the current model clipping volume.  The resulting model
clipping volume is not affected by subsequent changes to the composite modeling
transformation.
.RE
.SH
Data Structures
.ID
.Co
typedef struct {
    PEXCoord            point;
    PEXVector           vector;
} PEXHalfSpace;
.sp
See also the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetModelClipFlag ,
.PN PEXSetModelClipVolume2D ,
.PN PEXRestoreModelClipVolume ,
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXSetModelClipVolume2D - Set Model Clip Volume 2D
.XS
	PEXSetModelClipVolume2D
.XE
.IN "PEXSetModelClipVolume2D" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetModelClipVolume2D\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIop\fP\^, unsigned int \fIcount\fP\^, PEXHalfSpace2D *\fIhalf_spaces\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIop\fP 1i
The model clipping volume operator
.Pn ( PEXModelClipReplace
or
.PN PEXModelClipIntersection ).
.IP \fIcount\fP 1i
The number of halfspaces.
.IP \fIhalf_spaces\fP 1i
An array of points and normal vectors defining the model clipping volume.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the model clip volume attribute.
This output command is similar to
.PN PEXSetModelClipVolume
except
that the half-spaces are specified in 2D coordinates where the z-component
of each point and normal vector assumed to be zero.
.RE
.SH
Data Structures
.ID
.Co
typedef struct {
    PEXCoord2D          point;
    PEXVector2D         vector;
} PEXHalfSpace2D;
.sp
See also the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetModelClipFlag ,
.PN PEXSetModelClipVolume ,
.PN PEXRestoreModelClipVolume ,
.br
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXSetPatternAttributes - Set Pattern Interior Style Attributes
.XS
	PEXSetPatternAttributes
.XE
.IN "PEXSetPatternAttributes" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetPatternAttributes\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXCoord *\fIref_point\fP\^, PEXVector *\fIvector1\fP\^, PEXVector *\fIvector2\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIref_point\fP 1i
The pattern reference point.
.IP \fIvector1\fP 1i
The first pattern reference vector.
.IP \fIvector2\fP 1i
The second pattern reference vector.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the pattern reference point and both pattern
reference vectors attributes, in modeling coordinates.
If the surface interior style is
.PN PEXInteriorStylePattern ,
the pattern reference point and the pattern reference
vectors are used to to position and scale the pattern on the surface.
If either of the pattern reference vectors are zero length or if the
vectors are parallel, the output command is ignored.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetPatternAttributes2D - Set Pattern Interior Style Reference Point
.XS
	PEXSetPatternAttributes2D
.XE
.IN "PEXSetPatternAttributes2D" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetPatternAttributes2D\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXCoord2D *\fIref_point\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIref_point\fP 1i
The pattern reference point.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the pattern reference point and both pattern reference vector attributes,
in 2D modeling coordinates.
The pattern reference
point is set to <x,y,0> and the two pattern reference vectors are set
to <1,0,0> and <0,1,0>.
If the surface interior style is
.PN PEXInteriorStylePattern ,
the pattern reference point and the reference
vectors are used to position and scale the pattern on the surface.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetPatternSize - Set Pattern Interior Style Size
.XS
	PEXSetPatternSize
.XE
.IN "PEXSetPatternSize" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetPatternSize\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIwidth\fP\^, double \fIheight\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIwidth\fP 1i
The pattern width.
.IP \fIheight\fP 1i
The pattern height.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the pattern size attribute.
Only the magnitude of the specified width and height is used.
The value (width,0) is
used as the pattern width vector, and the value (0,height) specifies
the pattern height vector.  If the interior style is
.PN PEXInteriorStylePattern ,
these values plus the pattern
reference point and the pattern reference vector are used to position,
scale, and rotate the pattern on the surface.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetParaSurfCharacteristics - Set Parametric Surface Characteristics
.XS
	PEXSetParaSurfCharacteristics
.XE
.IN "PEXSetParaSurfCharacteristics" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetParaSurfCharacteristics\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIpsc_type\fP\^, PEXPSCData *\fIcharacteristics\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIpsc_type\fP 1i
The parametric surface characteristic type
.Pn ( PEXPSCNone ,
.PN PEXPSCImpDep ,
.PN PEXPSCIsoCurves ,
.PN PEXPSCMCLevelCurves ,
.PN PEXPSCWCLevelCurves ).
.IP \fIcharacteristics\fP 1i
A pointer to data defining the parametric surface characteristics.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the parametric surface characteristics.
If the specified parametric surface characteristics type is not supported,
.PN PEXPSCNone
is used.
Supported values for parameteric surface characteristic types are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Data Structures
.ID
.Co
typedef union {
    PEXPSCIsoparametricCurves iso_curves;
    PEXPSCLevelCurves       level_curves;
    PEXPSCImpDepData        imp_dep;
} PEXPSCData;
.sp
typedef struct {
    unsigned short      placement_type;
    unsigned short      reserved;
    unsigned short      u_count;
    unsigned short      v_count;
} PEXPSCIsoparametricCurves;
.sp
typedef struct {
    PEXCoord            origin;
    PEXVector           direction;
    unsigned short      count;                  /* number of parameters */
    unsigned short      reserved;
    float               *parameters;
} PEXPSCLevelCurves;
.sp
typedef struct {
    unsigned short      length;
    char                *data;
} PEXPSCImpDepData;
.sp
See also the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetPickID - Set Pick Identifier
.XS
	PEXSetPickID
.XE
.IN "PEXSetPickID" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetPickID\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned long \fIpick_id\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIpick_id\fP 1i
The pick identifier.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the current pick identifier attribute.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetPolylineInterpMethod - Set Polyline Interpolation Method
.XS
	PEXSetPolylineInterpMethod
.XE
.IN "PEXSetPolylineInterpMethod" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetPolylineInterpMethod\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImethod\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImethod\fP 1i
The polyline interpolation method
.Pn ( PEXPolylineInterpNone
or
.PN PEXPolylineInterpColor ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the polyline interpolation method attribute.
If the specified interpolation method is not supported,
.PN PEXPolylineInterpNone
is used.
Supported values for polyline interpolation method are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetReflectionAttributes - Set Surface Reflection Attributes
.XS
	PEXSetReflectionAttributes
.XE
.IN "PEXSetReflectionAttributes" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetReflectionAttributes\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, PEXReflectionAttributes *\fIattributes\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIattributes\fP 1i
The surface reflection attributes.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface reflection attributes.
Surface reflection attributes consist of
the ambient, diffuse and specular coefficients,
the specular concentration and color,
and the transmission coefficient.
.RE
.SH
Data Structures
.ID
.Co
typedef struct {
    float               ambient;
    float               diffuse;
    float               specular;
    float               specular_conc;
    float               transmission;
    PEXColorSpecifier   specular_color;
} PEXReflectionAttributes;
.sp
See also the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXGetImpDepConstants
.RE
.bp
.SH
PEXSetReflectionModel - Set Surface Reflection Model
.XS
	PEXSetReflectionModel
.XE
.IN "PEXSetReflectionModel" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetReflectionModel\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImodel\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImodel\fP 1i
The surface reflection model
.Pn ( PEXReflectionNone ,
.PN PEXReflectionAmbient ,
.PN PEXReflectionDiffuse ,
.PN PEXReflectionSpecular ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface reflection model attribute.
If the specified reflection model is not supported,
.PN PEXReflectionNone
is used.
Supported values for surface reflection model are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetRenderingColorModel - Set Rendering Color Model
.XS
	PEXSetRenderingColorModel
.XE
.IN "PEXSetRenderingColorModel" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetRenderingColorModel\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImodel\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImodel\fP 1i
The rendering color model
.Pn ( PEXRenderingColorModelImpDep ,
.PN PEXRenderingColorModelRGB ,
.PN PEXRenderingColorModelCIE ,
.PN PEXRenderingColorModelHSV ,
.PN PEXRenderingColorModelHLS ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the rendering color model attribute.
If the specified color model is not supported, an implementation-dependent
model (model 0) is used.
Supported values for rendering color model are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo
.RE
.bp
.SH
PEXSetSurfaceApprox - Set Surface Approximation Method
.XS
	PEXSetSurfaceApprox
.XE
.IN "PEXSetSurfaceApprox" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceApprox\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImethod\fP\^, double \fIutolerance\fP\^, double \fIvtolerance\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImethod\fP 1i
The surface approximation method
.Pn ( PEXApproxImpDep ,
.PN PEXApproxConstantBetweenKnots ,
.PN PEXApproxWCChordalSize ,
.PN PEXApproxNPCChordalSize ,
.PN PEXApproxDCChordalSize ,
.PN PEXSurfaceApproxWCPlanarDev ,
.PN PEXSurfaceApproxNPCPlanarDev ,
.PN PEXSurfaceApproxDCPlanarDev ,
.PN PEXApproxWCRelative ,
.PN PEXApproxNPCRelative ,
.PN PEXApproxDCRelative ).
.IP \fIutolerance\fP 1i
The surface approximation tolerance in the u direction.
.IP \fIvtolerance\fP 1i
The surface approximation tolerance in the v direction.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface approximation method attribute.
If the specified method is not supported,
.PN PEXApproxImpDep
is used.
Supported values for surface approximation are inquirable via
.PN PEXGetEnumTypeInfo .
The u and v tolerance values
are provided to indicate the desired accuracy of the approximation,
and are used in different ways for the different methods.  See
\fIChapter 4: Pipeline Contexts\fP
for more information about tolerance values.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXGetEnumTypeInfo
.RE
.bp
.SH
PEXSetSurfaceColor - Set Surface Color
.XS
	PEXSetSurfaceColor
.XE
.IN "PEXSetSurfaceColor" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceColor\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcolor_type\fP\^, PEXColor *\fIcolor\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcolor_type\fP 1i
The type of color
.Pn ( PEXColorTypeIndexed ,
.PN PEXColorTypeRGB ,
.PN PEXColorTypeCIE ,
.PN PEXColorTypeHSV ,
.PN PEXColorTypeHLS ,
.PN PEXColorTypeRGB8 ,
.PN PEXColorTypeRGB16 ).
.IP \fIcolor\fP 1i
A pointer to the surface color.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface color attribute.
The attribute is set to either an
indexed color or a direct color value,
depending on the color type.
If the color type is
.PN PEXColorTypeIndexed
and the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value, e.g. the color type is
.PN PEXColorTypeIndexed ,
and the color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetSurfaceColorIndex - Set Surface Color Index
.XS
	PEXSetSurfaceColorIndex
.XE
.IN "PEXSetSurfaceColorIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceColorIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color table index surfaces.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface color attribute to an indexed color
with the value indicated by index.
If the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetSurfaceEdgeColor - Set Surface Edge Color
.XS
	PEXSetSurfaceEdgeColor
.XE
.IN "PEXSetSurfaceEdgeColor" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceEdgeColor\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcolor_type\fP\^, PEXColor *\fIcolor\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcolor_type\fP 1i
The type of color
.Pn ( PEXColorTypeIndexed ,
.PN PEXColorTypeRGB ,
.PN PEXColorTypeCIE ,
.PN PEXColorTypeHSV ,
.PN PEXColorTypeHLS ,
.PN PEXColorTypeRGB8 ,
.PN PEXColorTypeRGB16 ).
.IP \fIcolor\fP 1i
A pointer to the surface edge color.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface edge color attribute.
The attribute is set to either an
indexed color or a direct color value,
depending on the color type.
If the color type is
.PN PEXColorTypeIndexed
and the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value, e.g. the color type is
.PN PEXColorTypeIndexed ,
and the color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetSurfaceEdgeColorIndex - Set Surface Edge Color Index
.XS
	PEXSetSurfaceEdgeColorIndex
.XE
.IN "PEXSetSurfaceEdgeColorIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceEdgeColorIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color table index for surface edges.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface edge color attribute
to an indexed color with the value indicated by
index.
If the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetSurfaceEdgeFlag - Set Surface Edge Flag
.XS
	PEXSetSurfaceEdgeFlag
.XE
.IN "PEXSetSurfaceEdgeFlag" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceEdgeFlag\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIflag\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIflag\fP 1i
A flag indicating whether surface edge drawing is enabled or disabled
.Pn ( PEXOn
or
.PN PEXOff ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface edge flag attribute.
Values for the surface edge flag are
.PN PEXOn
(enable surface edges)
and
.PN PEXOff
(disable surface edges).
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetSurfaceEdgeType - Set Surface Edge Type
.XS
	PEXSetSurfaceEdgeType
.XE
.IN "PEXSetSurfaceEdgeType" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceEdgeType\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIedge_type\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIedge_type\fP 1i
The surface edge type
.Pn ( PEXSurfaceEdgeSolid ,
.PN PEXSurfaceEdgeDashed ,
.PN PEXSurfaceEdgeDotted ,
.PN PEXSurfaceEdgeDashDot ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface edge type attribute.
If the specified edge type is not supported,
.PN PEXSurfaceEdgeSolid
is used.
Supported values for surface edge type are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetSurfaceEdgeWidth - Set Surface Edge Width
.XS
	PEXSetSurfaceEdgeWidth
.XE
.IN "PEXSetSurfaceEdgeWidth" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceEdgeWidth\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, double \fIwidth\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIwidth\fP 1i
The surface edge width scale factor.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface edge width attribute.
The specified width is used as a scale factor.
This scale factor is used to increase or decrease the width (in pixels)
from the nominal edge width for the display device.  The result is
mapped to the nearest supported line width.
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetImpDepConstants ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetSurfaceInterpMethod - Set Surface Interpolation Method
.XS
	PEXSetSurfaceInterpMethod
.XE
.IN "PEXSetSurfaceInterpMethod" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetSurfaceInterpMethod\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fImethod\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fImethod\fP 1i
The surface interpolation method
.Pn ( PEXSurfaceInterpNone ,
.PN PEXSurfaceInterpColor ,
.PN PEXSurfaceInterpDotProduct ,
.PN PEXSurfaceInterpNormal ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the surface interpolation method attribute.
If the specified interpolation method is not supported,
.PN PEXSurfaceInterpNone
is used.
Supported values for surface interpolation are inquirable via
.PN PEXGetEnumTypeInfo .
.RE
.SH
Errors
.RS
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXGetEnumTypeInfo ,
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetTextAlignment - Set Text Alignment
.XS
	PEXSetTextAlignment
.XE
.IN "PEXSetTextAlignment" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextAlignment\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIhalignment\fP\^, int \fIvalignment\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIhalignment\fP 1i
The horizontal text alignment
.Pn ( PEXHAlignNormal ,
.PN PEXHAlignLeft ,
.PN PEXHAlignCenter ,
.PN PEXHAlignRight ).
.IP \fIvalignment\fP 1i
The vertical text alignment
.Pn ( PEXVAlignNormal ,
.PN PEXVAlignTop ,
.PN PEXVAlignCap ,
.PN PEXVAlignHalf ,
.PN PEXVAlignBase ,
.PN PEXVAlignBottom ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the horizontal and vertical text alignment attributes.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetTextBundleIndex - Set Text Bundle Index
.XS
	PEXSetTextBundleIndex
.XE
.IN "PEXSetTextBundleIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextBundleIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The text bundle table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text bundle index attribute.
If an undefined index is specified, the default bundle index one is used.
If index one is undefined, the defaults are used: text font index is one; text
precision is
.PN PEXStringPrecision ;
character expansion is 1.0; character spacing is 0.0 and text color is indexed
color one.
.LP
A text bundle table index of 0 will produce a
.PN BadPEXOutputCommand
error.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetTextColor - Set Text Color
.XS
	PEXSetTextColor
.XE
.IN "PEXSetTextColor" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextColor\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIcolor_type\fP\^, PEXColor *\fIcolor\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIcolor_type\fP 1i
The type of color
.Pn ( PEXColorTypeIndexed ,
.PN PEXColorTypeRGB ,
.PN PEXColorTypeCIE ,
.PN PEXColorTypeHSV ,
.PN PEXColorTypeHLS ,
.PN PEXColorTypeRGB8 ,
.PN PEXColorTypeRGB16 ).
.IP \fIcolor\fP 1i
A pointer to the text color.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text color attribute.
The attribute is set to either an
indexed color or a direct color value,
depending on the color type.
If the color type is
.PN PEXColorTypeIndexed
and the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Data Structures
.ID
.Co
See the \fICommon Data Structures\f section.
.ft P
.DE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value, e.g. the color type is
.PN PEXColorTypeIndexed ,
and the color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetTextColorIndex - Set Text Color Index
.XS
	PEXSetTextColorIndex
.XE
.IN "PEXSetTextColorIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextColorIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The color table index for text.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text color attribute to an
indexed color with the value indicated by index.
If the specified color index is not defined, color index one is used.  If
color index one is not defined, the result is implementation-dependent.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The color index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetTextFontIndex - Set Text Font Index
.XS
	PEXSetTextFontIndex
.XE
.IN "PEXSetTextFontIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextFontIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The text font table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text font index attribute.
Index specifies the entry in the current
text font lookup table used to render text primitives.
If index is undefined, the default index one is used.  If index one is
undefined, the result is implementation-dependent.
.LP
A text font table index less than 1 will produce a
.PN BadPEXOutputCommand
error.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF ,
.PN PEXCreateLookupTable
.RE
.bp
.SH
PEXSetTextPath - Set Text Path
.XS
	PEXSetTextPath
.XE
.IN "PEXSetTextPath" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextPath\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIpath\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIpath\fP 1i
The text (drawing) path
.Pn ( PEXPathRight ,
.PN PEXPathLeft ,
.PN PEXPathUp ,
.PN PEXPathDown ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text path attribute.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.RE
.bp
.SH
PEXSetTextPrecision - Set Text Precision
.XS
	PEXSetTextPrecision
.XE
.IN "PEXSetTextPrecision" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetTextPrecision\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, int \fIprecision\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIprecision\fP 1i
The text precision
.Pn ( PEXStringPrecision ,
.PN PEXCharPrecision ,
.PN PEXStrokePrecision ).
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the text precision attribute.
.LP
When text or annotation text is interpreted, the fragments in the text
string are rendered in the same text precision.  If the font group selected
by the current text font index consists of both X and PEX fonts, and if some
of the string fragments in the string are rendered in X fonts, the text
precision of the entire string must be dropped to at least
.PN PEXCharPrecision .
.LP
If a character set value is not available in the current font group, then the
entire string is rendered using the default font group.  If a character set
value is not available in the default font group, then that portion of the
string is rendered in an implementation-dependent manner.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The output command contains an invalid value.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXSetIndividualASF
.RE
.bp
.SH
PEXSetViewIndex - Set View Index
.XS
	PEXSetViewIndex
.XE
.IN "PEXSetViewIndex" "" "@DEF@"
.SH
Synopsis
.RS
.FD 0
void PEXSetViewIndex\^(\^Display *\fIdisplay\fP\^, XID \fIresource_id\fP\^, PEXOCRequestType \fIreq_type\fP\^, unsigned int \fIindex\fP\^)
.FN
.RE
.SH
Arguments
.RS
.IP \fIdisplay\fP 1i
A pointer to a display structure returned by a successful \fBXOpenDisplay\fP call.
.IP \fIresource_id\fP 1i
The resource identifier of the renderer or structure.
.IP \fIreq_type\fP 1i
The request type for the output command
.Pn ( PEXOCRender ,
.PN PEXOCStore ,
.PN PEXOCRenderSingle
or
.PN PEXOCStoreSingle ).
.IP \fIindex\fP 1i
The view table index.
.RE
.SH
Returns
.RS
.LP
None
.RE
.SH
Description
.RS
.LP
This function creates an output primitive attribute which
sets the view index attribute.
If the specified view index is not defined, the default index zero is used.
If view index zero is undefined, the default values are used:  all clip flags
are on; the clip limits are set to <0,0,0> , <1,1,1>; orientation and mapping
are the identity matrices.
.RE
.SH
Errors
.RS
.IP \fIBadPEXOutputCommand\fP 1i
The view index value exceeds 65534.
.IP \fIBadPEXRenderer\fP 1i
The specified renderer resource identifier is invalid.
.IP \fIBadPEXStructure\fP 1i
The specified structure resource identifier is invalid.
.RE
.SH
See Also
.RS
.LP
.PN PEXCreateLookupTable
.RE
.bp
