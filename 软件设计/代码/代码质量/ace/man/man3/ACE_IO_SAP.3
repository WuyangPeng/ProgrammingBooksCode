.TH ACE_IO_SAP 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_IO_SAP \- Defines the methods for the base class of the  abstraction, which includes  and . 
.SH SYNOPSIS
.br
.PP
\fC#include <IO_SAP.h>\fR
.PP
Inherited by \fBACE_DEV\fR, and \fBACE_FILE\fR.
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "enum { \fBINVALID_HANDLE\fR = -1 }"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fB~ACE_IO_SAP\fR (void)"
.br
.RI "\fIDefault dtor.\fR"
.ti -1c
.RI "int \fBcontrol\fR (int cmd, void *) const"
.br
.RI "\fIInterface for ioctl.\fR"
.ti -1c
.RI "int \fBenable\fR (int value) const"
.br
.ti -1c
.RI "int \fBdisable\fR (int value) const"
.br
.ti -1c
.RI "ACE_HANDLE \fBget_handle\fR (void) const"
.br
.RI "\fIGet the underlying handle.\fR"
.ti -1c
.RI "void \fBset_handle\fR (ACE_HANDLE handle)"
.br
.RI "\fISet the underlying handle.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_IO_SAP\fR (void)"
.br
.RI "\fIEnsure that ACE_IO_SAP is an abstract base class.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "ACE_HANDLE \fBhandle_\fR"
.br
.RI "\fIUnderlying I/O handle.\fR"
.in -1c
.SS Static Private Attributes

.in +1c
.ti -1c
.RI "\fBpid_t\fR \fBpid_\fR"
.br
.RI "\fICache the process ID.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines the methods for the base class of the  abstraction, which includes  and .
.PP
.SH MEMBER ENUMERATION DOCUMENTATION
.PP 
.SS anonymous enum
.PP
\fBEnumeration values:\fR
.in +1c
.TP
\fB\fIINVALID_HANDLE\fR \fRBe consistent with Winsock.
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_IO_SAP::~ACE_IO_SAP (void)
.PP
Default dtor.
.PP
.SS ACE_IO_SAP::ACE_IO_SAP (void)\fC [protected]\fR
.PP
Ensure that ACE_IO_SAP is an abstract base class.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_IO_SAP::control (int cmd, void *) const
.PP
Interface for ioctl.
.PP
.SS int ACE_IO_SAP::disable (int signum) const
.PP
Disable asynchronous I/O (ACE_SIGIO), urgent data (ACE_SIGURG), non-blocking I/O (ACE_NONBLOCK), or close-on-exec (ACE_CLOEXEC), which is passed as the <value>. 
.PP
Reimplemented in \fBACE_DEV\fR, and \fBACE_FILE\fR.
.SS void ACE_IO_SAP::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented in \fBACE_DEV\fR, \fBACE_DEV_IO\fR, \fBACE_FILE\fR, and \fBACE_FILE_IO\fR.
.SS int ACE_IO_SAP::enable (int value) const
.PP
Enable asynchronous I/O (ACE_SIGIO), urgent data (ACE_SIGURG), non-blocking I/O (ACE_NONBLOCK), or close-on-exec (ACE_CLOEXEC), which is passed as the <value>. 
.SS ACE_HANDLE ACE_IO_SAP::get_handle (void) const
.PP
Get the underlying handle.
.PP
.SS void ACE_IO_SAP::set_handle (ACE_HANDLE handle)
.PP
Set the underlying handle.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_IO_SAP::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented in \fBACE_DEV\fR, \fBACE_DEV_IO\fR, \fBACE_FILE\fR, and \fBACE_FILE_IO\fR.
.SS ACE_HANDLE ACE_IO_SAP::handle_\fC [private]\fR
.PP
Underlying I/O handle.
.PP
.SS \fBpid_t\fR ACE_IO_SAP::pid_\fC [static, private]\fR
.PP
Cache the process ID.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.