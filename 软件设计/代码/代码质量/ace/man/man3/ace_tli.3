.TH ACE_TLI 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_TLI \- Defines the member functions for the base class of the ACE_TLI abstraction. 
.SH SYNOPSIS
.br
.PP
\fC#include <TLI.h>\fR
.PP
Inherits \fBACE_IPC_SAP\fR.
.PP
Inherited by \fBACE_TLI_Acceptor\fR, and \fBACE_TLI_Stream\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "ACE_HANDLE \fBopen\fR (const char device[], int oflag = O_RDWR, struct t_info *info = 0)"
.br
.RI "\fIInitialize a TLI endpoint.\fR"
.ti -1c
.RI "int \fBclose\fR (void)"
.br
.RI "\fIClose a TLI endpoint and release resources.\fR"
.ti -1c
.RI "int \fBset_option\fR (int level, int option, void *optval, int optlen)"
.br
.RI "\fISet underlying protocol options.\fR"
.ti -1c
.RI "int \fBget_option\fR (int level, int option, void *optval, int &optlen)"
.br
.RI "\fIGet underlying protocol options.\fR"
.ti -1c
.RI "int \fBlook\fR (void) const"
.br
.ti -1c
.RI "int \fBrcvdis\fR (struct t_discon * = 0) const"
.br
.ti -1c
.RI "int \fBsnddis\fR (struct t_call * = 0) const"
.br
.ti -1c
.RI "int \fBsndrel\fR (void) const"
.br
.ti -1c
.RI "int \fBrcvrel\fR (void) const"
.br
.ti -1c
.RI "int \fBget_local_addr\fR (\fBACE_Addr\fR &) const"
.br
.RI "\fIReturn our local endpoint address.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBACE_TLI\fR (void)"
.br
.RI "\fIDefault constructor. Destructor.\fR"
.ti -1c
.RI "\fB~ACE_TLI\fR (void)"
.br
.ti -1c
.RI "\fBACE_TLI\fR (const char device[], int oflag = O_RDWR, struct t_info *info = 0)"
.br
.RI "\fIInitialize a TLI endpoint.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines the member functions for the base class of the ACE_TLI abstraction.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_TLI::ACE_TLI (void)\fC [protected]\fR
.PP
Default constructor. Destructor.
.PP
.SS ACE_TLI::~ACE_TLI (void)\fC [protected]\fR
.PP
.SS ACE_TLI::ACE_TLI (const char device[], int oflag = O_RDWR, struct t_info * info = 0)\fC [protected]\fR
.PP
Initialize a TLI endpoint.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_TLI::close (void)
.PP
Close a TLI endpoint and release resources.
.PP
Reimplemented in \fBACE_TLI_Acceptor\fR, and \fBACE_TLI_Stream\fR.
.SS void ACE_TLI::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_IPC_SAP\fR.
.PP
Reimplemented in \fBACE_TLI_Acceptor\fR, and \fBACE_TLI_Stream\fR.
.SS int ACE_TLI::get_local_addr (\fBACE_Addr\fR &) const
.PP
Return our local endpoint address.
.PP
.SS int ACE_TLI::get_option (int level, int option, void * optval, int & optlen)
.PP
Get underlying protocol options.
.PP
.SS int ACE_TLI::look (void) const
.PP
.SS ACE_HANDLE ACE_TLI::open (const char device[], int oflag = O_RDWR, struct t_info * info = 0)
.PP
Initialize a TLI endpoint.
.PP
.SS int ACE_TLI::rcvdis (struct t_discon * = 0) const
.PP
.SS int ACE_TLI::rcvrel (void) const
.PP
.SS int ACE_TLI::set_option (int level, int option, void * optval, int optlen)
.PP
Set underlying protocol options.
.PP
.SS int ACE_TLI::snddis (struct t_call * = 0) const
.PP
.SS int ACE_TLI::sndrel (void) const
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_TLI::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_IPC_SAP\fR.
.PP
Reimplemented in \fBACE_TLI_Acceptor\fR, and \fBACE_TLI_Stream\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.