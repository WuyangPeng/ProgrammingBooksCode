.TH ACE_Configuration_Value_IntId 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Configuration_Value_IntId \- The section hash table internal value class. 
.SH SYNOPSIS
.br
.PP
\fC#include <Configuration.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Configuration_Value_IntId\fR (void)"
.br
.RI "\fIdefault constructor.\fR"
.ti -1c
.RI "ACE_EXPLICIT \fBACE_Configuration_Value_IntId\fR (\fBACE_TCHAR\fR* string)"
.br
.RI "\fIstring constructor, takes ownership of string.\fR"
.ti -1c
.RI "ACE_EXPLICIT \fBACE_Configuration_Value_IntId\fR (u_int integer)"
.br
.RI "\fIinteger constructor.\fR"
.ti -1c
.RI "\fBACE_Configuration_Value_IntId\fR (void* data, u_int length)"
.br
.RI "\fIbinary constructor, takes ownership of data.\fR"
.ti -1c
.RI "\fBACE_Configuration_Value_IntId\fR (const ACE_Configuration_Value_IntId& rhs)"
.br
.RI "\fIcopy ctor.\fR"
.ti -1c
.RI "\fB~ACE_Configuration_Value_IntId\fR (void)"
.br
.RI "\fIdestructor.\fR"
.ti -1c
.RI "ACE_Configuration_Value_IntId& \fBoperator=\fR ( const ACE_Configuration_Value_IntId& rhs)"
.br
.RI "\fIAssignment operator.\fR"
.ti -1c
.RI "void \fBfree\fR (\fBACE_Allocator\fR *alloc)"
.br
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_Configuration::VALUETYPE\fR \fBtype_\fR"
.br
.ti -1c
.RI "void* \fBdata_\fR"
.br
.ti -1c
.RI "u_int \fBlength_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
The section hash table internal value class.
.PP
.PP
 This class is present as the internal portion of a section's value hash table It may store string, integer or binary data. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Configuration_Value_IntId::ACE_Configuration_Value_IntId (void)
.PP
default constructor.
.PP
.SS ACE_EXPLICIT ACE_Configuration_Value_IntId::ACE_Configuration_Value_IntId (\fBACE_TCHAR\fR * string)
.PP
string constructor, takes ownership of string.
.PP
.SS ACE_EXPLICIT ACE_Configuration_Value_IntId::ACE_Configuration_Value_IntId (u_int integer)
.PP
integer constructor.
.PP
.SS ACE_Configuration_Value_IntId::ACE_Configuration_Value_IntId (void * data, u_int length)
.PP
binary constructor, takes ownership of data.
.PP
.SS ACE_Configuration_Value_IntId::ACE_Configuration_Value_IntId (const ACE_Configuration_Value_IntId & rhs)
.PP
copy ctor.
.PP
.SS ACE_Configuration_Value_IntId::~ACE_Configuration_Value_IntId (void)
.PP
destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Configuration_Value_IntId::free (\fBACE_Allocator\fR * alloc)
.PP
.SS ACE_Configuration_Value_IntId & ACE_Configuration_Value_IntId::operator= (const ACE_Configuration_Value_IntId & rhs)
.PP
Assignment operator.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS void * ACE_Configuration_Value_IntId::data_
.PP
.SS u_int ACE_Configuration_Value_IntId::length_
.PP
.SS \fBACE_Configuration::VALUETYPE\fR ACE_Configuration_Value_IntId::type_
.PP
points to the string value or binary data or IS the integer (XXX need to change this since sizeof (u_int) is not the same accross different platforms) Length is only used when type_ == BINARY 

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.