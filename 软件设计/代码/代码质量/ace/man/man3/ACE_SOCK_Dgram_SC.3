.TH ACE_SOCK_Dgram_SC 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_SOCK_Dgram_SC \- "Dgram_SC" is short for "Datagram Self-Contained.". 
.SH SYNOPSIS
.br
.PP
\fC#include <IOStream_T.h>\fR
.PP
Inherits \fBSTREAM\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_SOCK_Dgram_SC\fR (void)"
.br
.ti -1c
.RI "\fBACE_SOCK_Dgram_SC\fR (\fBSTREAM\fR &source, \fBACE_INET_Addr\fR &dest)"
.br
.ti -1c
.RI "\fBssize_t\fR \fBsend_n\fR (char *buf, \fBssize_t\fR len)"
.br
.ti -1c
.RI "\fBssize_t\fR \fBrecv\fR (char *buf, \fBssize_t\fR len, \fBACE_Time_Value\fR *tv = NULL)"
.br
.ti -1c
.RI "\fBssize_t\fR \fBrecv\fR (char *buf, \fBssize_t\fR len, int flags, \fBACE_Time_Value\fR *tv = NULL)"
.br
.ti -1c
.RI "\fBssize_t\fR \fBrecv_n\fR (char *buf, \fBssize_t\fR len, int flags = 0, \fBACE_Time_Value\fR *tv = NULL)"
.br
.ti -1c
.RI "int \fBget_remote_addr\fR (\fBACE_INET_Addr\fR &addr) const"
.br
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "\fBACE_INET_Addr\fR \fBpeer_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class STREAM>  template class ACE_SOCK_Dgram_SC
"Dgram_SC" is short for "Datagram Self-Contained.".
.PP
.PP
 Datagrams don't have the notion of a "peer". Each send and receive on a datagram can go to a different peer if you want. If you're using datagrams for stream activity, you probably want 'em all to go to (and come from) the same place. That's what this class is for. Here, we keep an address object so that we can remember who last sent us data. When we write back, we're then able to write back to that same address. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classSTREAM> ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::ACE_SOCK_Dgram_SC<\fBSTREAM\fR> (void)
.PP
.SS template<classSTREAM> ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::ACE_SOCK_Dgram_SC<\fBSTREAM\fR> (\fBSTREAM\fR & source, \fBACE_INET_Addr\fR & dest)
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classSTREAM> int ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::get_remote_addr (\fBACE_INET_Addr\fR & addr) const
.PP
.SS template<classSTREAM> \fBssize_t\fR ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::recv (char * buf, \fBssize_t\fR len, int flags, \fBACE_Time_Value\fR * tv = NULL)
.PP
.SS template<classSTREAM> \fBssize_t\fR ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::recv (char * buf, \fBssize_t\fR len, \fBACE_Time_Value\fR * tv = NULL)
.PP
.SS template<classSTREAM> \fBssize_t\fR ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::recv_n (char * buf, \fBssize_t\fR len, int flags = 0, \fBACE_Time_Value\fR * tv = NULL)
.PP
.SS template<classSTREAM> \fBssize_t\fR ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::send_n (char * buf, \fBssize_t\fR len)
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classSTREAM> \fBACE_INET_Addr\fR ACE_SOCK_Dgram_SC<\fBSTREAM\fR>::peer_\fC [protected]\fR
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.