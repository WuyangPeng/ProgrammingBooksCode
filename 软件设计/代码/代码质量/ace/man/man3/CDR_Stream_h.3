.TH CDR_Stream_h 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CDR_Stream_h \- 
.SH SYNOPSIS
.br
.PP
\fC#include "ace/pre.h"\fR
.br
\fC#include "ace/CDR_Base.h"\fR
.br
\fC#include "ace/Message_Block.h"\fR
.br
\fC#include "ace/post.h"\fR
.br

.SS Compounds

.in +1c
.ti -1c
.RI "class \fBACE_Char_Codeset_Translator\fR"
.br
.ti -1c
.RI "class \fBACE_InputCDR\fR"
.br
.ti -1c
.RI "class \fBACE_OutputCDR\fR"
.br
.ti -1c
.RI "class \fBACE_WChar_Codeset_Translator\fR"
.br
.ti -1c
.RI "struct \fBACE_OutputCDR::from_boolean\fR"
.br
.ti -1c
.RI "struct \fBACE_OutputCDR::from_char\fR"
.br
.ti -1c
.RI "struct \fBACE_OutputCDR::from_octet\fR"
.br
.ti -1c
.RI "struct \fBACE_OutputCDR::from_string\fR"
.br
.ti -1c
.RI "struct \fBACE_OutputCDR::from_wchar\fR"
.br
.ti -1c
.RI "struct \fBACE_OutputCDR::from_wstring\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::to_boolean\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::to_char\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::to_octet\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::to_string\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::to_wchar\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::to_wstring\fR"
.br
.ti -1c
.RI "struct \fBACE_InputCDR::Transfer_Contents\fR"
.br
.in -1c
.SS Functions

.in +1c
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, const \fBACE_CString\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CString\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::Char\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::Short\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::UShort\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::Long\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::ULong\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::Float\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_CDR::Double\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_OutputCDR::from_boolean\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_OutputCDR::from_char\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_OutputCDR::from_wchar\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_OutputCDR::from_octet\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_OutputCDR::from_string\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, \fBACE_OutputCDR::from_wstring\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, const \fBACE_CDR::Char\fR* x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator<<\fR (\fBACE_OutputCDR\fR &os, const \fBACE_CDR::WChar\fR* x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::Char\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::Short\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::UShort\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::Long\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::ULong\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::LongLong\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::ULongLong\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::LongDouble\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::Float\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::Double\fR &x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_InputCDR::to_boolean\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_InputCDR::to_char\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_InputCDR::to_wchar\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_InputCDR::to_octet\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_InputCDR::to_string\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_InputCDR::to_wstring\fR x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::Char\fR*& x)"
.br
.ti -1c
.RI "ACE_Export \fBACE_CDR::Boolean\fR \fBoperator>>\fR (\fBACE_InputCDR\fR &is, \fBACE_CDR::WChar\fR*& x)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
.PP
\fBCDR_Stream.h\fR,v 1.60 2001/08/17 22:20:03 parsons Exp
.PP
\fBACE\fR Common Data Representation (CDR) marshaling and demarshaling classes.
.PP
This implementation was inspired in the CDR class in SunSoft's IIOP engine, but has a completely different implementation and a different interface too.
.PP
The current implementation assumes that the host has 1-byte, 2-byte and 4-byte integral types, and that it has single precision and double precision IEEE floats. Those assumptions are pretty good these days, with Crays beign the only known exception.
.PP
\fBAuthor(s): \fR
.in +1c
 TAO version by ,  Aniruddha Gokhale <gokhale@cs.wustl.edu> ,  Carlos O'Ryan<coryan@cs.wustl.edu> ,  \fBACE\fR version by ,  Jeff Parsons <parsons@cs.wustl.edu> ,  Istvan Buki <istvan.buki@euronet.be> ,  Codeset translation by ,  Jim Rogers <jrogers@viasoft.com>
.PP
.SH FUNCTION DOCUMENTATION
.PP 
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, const \fBACE_CDR::WChar\fR * x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, const \fBACE_CDR::Char\fR * x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_OutputCDR::from_wstring\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_OutputCDR::from_string\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_OutputCDR::from_octet\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_OutputCDR::from_wchar\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_OutputCDR::from_char\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_OutputCDR::from_boolean\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::Double\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::Float\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::ULong\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::Long\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::UShort\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::Short\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, \fBACE_CDR::Char\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator<< (\fBACE_OutputCDR\fR & os, const \fBACE_CString\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::WChar\fR *& x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::Char\fR *& x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_InputCDR::to_wstring\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_InputCDR::to_string\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_InputCDR::to_octet\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_InputCDR::to_wchar\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_InputCDR::to_char\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_InputCDR::to_boolean\fR x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::Double\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::Float\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::LongDouble\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::ULongLong\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::LongLong\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::ULong\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::Long\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::UShort\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::Short\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CDR::Char\fR & x)
.PP
.SS ACE_Export \fBACE_CDR::Boolean\fR operator>> (\fBACE_InputCDR\fR & is, \fBACE_CString\fR & x)
.PP
.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.