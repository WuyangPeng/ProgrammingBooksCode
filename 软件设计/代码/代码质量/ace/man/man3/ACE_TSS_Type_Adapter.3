.TH ACE_TSS_Type_Adapter 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_TSS_Type_Adapter \- Adapter that allows built-in types to be used with \fBACE_TSS\fR. 
.SH SYNOPSIS
.br
.PP
\fC#include <Synch_T.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_TSS_Type_Adapter\fR (const TYPE value = 0)"
.br
.RI "\fIConstructor. Inlined here so that it should _always_ be inlined.\fR"
.ti -1c
.RI "\fBoperator TYPE\fR () const"
.br
.RI "\fITYPE conversion. Inlined here so that it should _always_ be inlined.\fR"
.ti -1c
.RI "\fBoperator TYPE &\fR ()"
.br
.RI "\fITYPE & conversion. Inlined here so that it should _always_ be inlined.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "TYPE \fBvalue_\fR"
.br
.RI "\fIThe wrapped value.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class TYPE>  template class ACE_TSS_Type_Adapter
Adapter that allows built-in types to be used with \fBACE_TSS\fR.
.PP
.PP
 Wraps a value of a built-in type, providing conversions to and from the type. Example use with \fBACE_TSS\fR: \fBACE_TSS\fR > i; *i = 37; \fBACE_OS::fprintf\fR (stderr, "d
.br
", *i); Unfortunately, though, some compilers have trouble with the implicit type conversions. This seems to work better: \fBACE_TSS\fR > i; i->operator int &() = 37; \fBACE_OS::fprintf\fR (stderr, "d
.br
", i->operator int()); 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classTYPE> ACE_TSS_Type_Adapter<TYPE>::ACE_TSS_Type_Adapter<TYPE> (const TYPE value = 0)\fC [inline]\fR
.PP
Constructor. Inlined here so that it should _always_ be inlined.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classTYPE> ACE_TSS_Type_Adapter<TYPE>::operator TYPE () const\fC [inline]\fR
.PP
TYPE conversion. Inlined here so that it should _always_ be inlined.
.PP
.SS template<classTYPE> ACE_TSS_Type_Adapter<TYPE>::operator TYPE & ()\fC [inline]\fR
.PP
TYPE & conversion. Inlined here so that it should _always_ be inlined.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classTYPE> TYPE ACE_TSS_Type_Adapter<TYPE>::value_\fC [private]\fR
.PP
The wrapped value.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.