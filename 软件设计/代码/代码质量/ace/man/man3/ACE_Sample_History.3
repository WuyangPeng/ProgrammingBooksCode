.TH ACE_Sample_History 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Sample_History \- Save multiple samples in an array. 
.SH SYNOPSIS
.br
.PP
\fC#include <Sample_History.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Sample_History\fR (size_t max_samples)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "\fB~ACE_Sample_History\fR (void)"
.br
.RI "\fIDestructor.\fR"
.ti -1c
.RI "int \fBsample\fR (\fBACE_UINT64\fR value)"
.br
.RI "\fIRecord one sample.\fR"
.ti -1c
.RI "size_t \fBmax_samples\fR (void) const"
.br
.RI "\fIReturns the maximum number of samples.\fR"
.ti -1c
.RI "size_t \fBsample_count\fR (void) const"
.br
.RI "\fIReturns the current number of samples.\fR"
.ti -1c
.RI "void \fBdump_samples\fR (const \fBACE_TCHAR\fR *msg, ACE_UINT32 scale_factor) const"
.br
.RI "\fIDump all the samples.\fR"
.ti -1c
.RI "void \fBcollect_basic_stats\fR (\fBACE_Basic_Stats\fR &) const"
.br
.RI "\fICollect the summary for all the samples.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "size_t \fBmax_samples_\fR"
.br
.RI "\fIThe maximum number of samples.\fR"
.ti -1c
.RI "size_t \fBsample_count_\fR"
.br
.RI "\fIThe current number of samples.\fR"
.ti -1c
.RI "\fBACE_UINT64\fR* \fBsamples_\fR"
.br
.RI "\fIThe samples.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Save multiple samples in an array.
.PP
Save multiple samples (usually latency numbers), into an array, and later print them in several formats. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Sample_History::ACE_Sample_History (size_t max_samples)
.PP
Constructor.
.PP
The number of samples is pre-allocated, and cannot changes once the class is initialized. 
.SS ACE_Sample_History::~ACE_Sample_History (void)
.PP
Destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Sample_History::collect_basic_stats (\fBACE_Basic_Stats\fR &) const
.PP
Collect the summary for all the samples.
.PP
.SS void ACE_Sample_History::dump_samples (const \fBACE_TCHAR\fR * msg, ACE_UINT32 scale_factor) const
.PP
Dump all the samples.
.PP
Prints out all the samples, using 
.PP
\fBParameters: \fR
.in +1c
.TP
\fB\fImsg\fR\fR as a prefix for each message. 
.SS size_t ACE_Sample_History::max_samples (void) const
.PP
Returns the maximum number of samples.
.PP
.SS int ACE_Sample_History::sample (\fBACE_UINT64\fR value)
.PP
Record one sample.
.PP
Return 0 on success, -1 if the sample could not be stored 
.SS size_t ACE_Sample_History::sample_count (void) const
.PP
Returns the current number of samples.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS size_t ACE_Sample_History::max_samples_\fC [private]\fR
.PP
The maximum number of samples.
.PP
.SS size_t ACE_Sample_History::sample_count_\fC [private]\fR
.PP
The current number of samples.
.PP
.SS \fBACE_UINT64\fR * ACE_Sample_History::samples_\fC [private]\fR
.PP
The samples.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.