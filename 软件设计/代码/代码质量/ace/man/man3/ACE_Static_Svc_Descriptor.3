.TH ACE_Static_Svc_Descriptor 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Static_Svc_Descriptor \- Holds the information necessary to describe a statically linked Svc. 
.SH SYNOPSIS
.br
.PP
\fC#include <Service_Config.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.ti -1c
.RI "int \fBoperator==\fR (ACE_Static_Svc_Descriptor &) const"
.br
.RI "\fICompare two service descriptors for equality.\fR"
.ti -1c
.RI "int \fBoperator!=\fR (ACE_Static_Svc_Descriptor &) const"
.br
.RI "\fICompare two service descriptors for inequality.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBname_\fR"
.br
.RI "\fIName of the service.\fR"
.ti -1c
.RI "int \fBtype_\fR"
.br
.RI "\fIType of service.\fR"
.ti -1c
.RI "\fBACE_SERVICE_ALLOCATOR\fR \fBalloc_\fR"
.br
.RI "\fIFactory function that allocates the service.\fR"
.ti -1c
.RI "u_int \fBflags_\fR"
.br
.RI "\fIBitmask flags indicating how the framework should delete memory.\fR"
.ti -1c
.RI "int \fBactive_\fR"
.br
.RI "\fIFlag indicating whether the service starts out active.\fR"
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Holds the information necessary to describe a statically linked Svc.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Static_Svc_Descriptor::dump (void) const
.PP
Dump the state of an object.
.PP
.SS int ACE_Static_Svc_Descriptor::operator!= (ACE_Static_Svc_Descriptor &) const
.PP
Compare two service descriptors for inequality.
.PP
.SS int ACE_Static_Svc_Descriptor::operator== (ACE_Static_Svc_Descriptor &) const
.PP
Compare two service descriptors for equality.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Static_Svc_Descriptor::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
.SS int ACE_Static_Svc_Descriptor::active_
.PP
Flag indicating whether the service starts out active.
.PP
.SS \fBACE_SERVICE_ALLOCATOR\fR ACE_Static_Svc_Descriptor::alloc_
.PP
Factory function that allocates the service.
.PP
.SS u_int ACE_Static_Svc_Descriptor::flags_
.PP
Bitmask flags indicating how the framework should delete memory.
.PP
.SS const \fBACE_TCHAR\fR * ACE_Static_Svc_Descriptor::name_
.PP
Name of the service.
.PP
.SS int ACE_Static_Svc_Descriptor::type_
.PP
Type of service.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.