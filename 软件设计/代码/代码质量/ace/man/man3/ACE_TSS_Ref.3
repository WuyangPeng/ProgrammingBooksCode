.TH ACE_TSS_Ref 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_TSS_Ref \- "Reference count" for thread-specific storage keys. 
.SH SYNOPSIS
.br
.PP
\fC#include <OS.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_TSS_Ref\fR (\fBACE_thread_t\fR id)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "\fBACE_TSS_Ref\fR (void)"
.br
.RI "\fIDefault constructor.\fR"
.ti -1c
.RI "int \fBoperator==\fR (const ACE_TSS_Ref &) const"
.br
.RI "\fICheck for equality.\fR"
.ti -1c
.RI "int \fBoperator!=\fR (const ACE_TSS_Ref &) const"
.br
.RI "\fICheck for inequality.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_thread_t\fR \fBtid_\fR"
.br
.RI "\fIID of thread using a specific key.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
"Reference count" for thread-specific storage keys.
.PP
.PP
 Since the  doesn't allow duplicates, the "reference count" is the identify of the thread_id. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_TSS_Ref::ACE_TSS_Ref (\fBACE_thread_t\fR id)
.PP
Constructor.
.PP
.SS ACE_TSS_Ref::ACE_TSS_Ref (void)
.PP
Default constructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_TSS_Ref::operator!= (const ACE_TSS_Ref &) const
.PP
Check for inequality.
.PP
.SS int ACE_TSS_Ref::operator== (const ACE_TSS_Ref &) const
.PP
Check for equality.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS \fBACE_thread_t\fR ACE_TSS_Ref::tid_
.PP
ID of thread using a specific key.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.