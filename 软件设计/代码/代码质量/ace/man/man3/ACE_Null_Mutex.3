.TH ACE_Null_Mutex 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Null_Mutex \- Implement a do nothing , i.e., all the methods are no ops. 
.SH SYNOPSIS
.br
.PP
\fC#include <Synch.h>\fR
.PP
Inherited by \fBACE_Noop_Token\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Null_Mutex\fR (const \fBACE_TCHAR\fR * = 0)"
.br
.ti -1c
.RI "\fB~ACE_Null_Mutex\fR (void)"
.br
.ti -1c
.RI "int \fBremove\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBacquire\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBacquire\fR (\fBACE_Time_Value\fR &timeout)"
.br
.RI "\fIReturn -1 with <errno> == <ETIME>.\fR"
.ti -1c
.RI "int \fBacquire\fR (\fBACE_Time_Value\fR *timeout)"
.br
.RI "\fIReturn -1 with <errno> == <ETIME>.\fR"
.ti -1c
.RI "int \fBtryacquire\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBrelease\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBacquire_write\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBtryacquire_write\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBtryacquire_write_upgrade\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBacquire_read\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "int \fBtryacquire_read\fR (void)"
.br
.RI "\fIReturn 0.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Implement a do nothing , i.e., all the methods are no ops.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Null_Mutex::ACE_Null_Mutex (const \fBACE_TCHAR\fR * = 0)
.PP
.SS ACE_Null_Mutex::~ACE_Null_Mutex (void)
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_Null_Mutex::acquire (\fBACE_Time_Value\fR * timeout)
.PP
Return -1 with <errno> == <ETIME>.
.PP
.SS int ACE_Null_Mutex::acquire (\fBACE_Time_Value\fR & timeout)
.PP
Return -1 with <errno> == <ETIME>.
.PP
.SS int ACE_Null_Mutex::acquire (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::acquire_read (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::acquire_write (void)
.PP
Return 0.
.PP
.SS void ACE_Null_Mutex::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented in \fBACE_Noop_Token\fR.
.SS int ACE_Null_Mutex::release (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::remove (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::tryacquire (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::tryacquire_read (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::tryacquire_write (void)
.PP
Return 0.
.PP
.SS int ACE_Null_Mutex::tryacquire_write_upgrade (void)
.PP
Return 0.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Null_Mutex::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented in \fBACE_Noop_Token\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.