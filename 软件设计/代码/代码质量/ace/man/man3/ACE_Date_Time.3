.TH ACE_Date_Time 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Date_Time \- System independent representation of date and time. 
.SH SYNOPSIS
.br
.PP
\fC#include <Date_Time.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Date_Time\fR (void)"
.br
.RI "\fIConstructor initializes current time/date info.\fR"
.ti -1c
.RI "\fBACE_Date_Time\fR (long day, long month = 0, long year = 0, long hour = 0, long minute = 0, long second = 0, long microsec = 0)"
.br
.RI "\fIConstructor with init values, no check for validy Set/get portions of ACE_Date_Time, no check for validity.\fR"
.ti -1c
.RI "void \fBupdate\fR (void)"
.br
.RI "\fIUpdate to the current time/date.\fR"
.ti -1c
.RI "long \fBday\fR (void) const"
.br
.RI "\fIGet day.\fR"
.ti -1c
.RI "void \fBday\fR (long day)"
.br
.RI "\fISet day.\fR"
.ti -1c
.RI "long \fBmonth\fR (void) const"
.br
.RI "\fIGet month.\fR"
.ti -1c
.RI "void \fBmonth\fR (long month)"
.br
.RI "\fISet month.\fR"
.ti -1c
.RI "long \fByear\fR (void) const"
.br
.RI "\fIGet year.\fR"
.ti -1c
.RI "void \fByear\fR (long year)"
.br
.RI "\fISet year.\fR"
.ti -1c
.RI "long \fBhour\fR (void) const"
.br
.RI "\fIGet hour.\fR"
.ti -1c
.RI "void \fBhour\fR (long hour)"
.br
.RI "\fISet hour.\fR"
.ti -1c
.RI "long \fBminute\fR (void) const"
.br
.RI "\fIGet minute.\fR"
.ti -1c
.RI "void \fBminute\fR (long minute)"
.br
.RI "\fISet minute.\fR"
.ti -1c
.RI "long \fBsecond\fR (void) const"
.br
.RI "\fIGet second.\fR"
.ti -1c
.RI "void \fBsecond\fR (long second)"
.br
.RI "\fISet second.\fR"
.ti -1c
.RI "long \fBmicrosec\fR (void) const"
.br
.RI "\fIGet microsec.\fR"
.ti -1c
.RI "void \fBmicrosec\fR (long microsec)"
.br
.RI "\fISet microsec.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "long \fBday_\fR"
.br
.ti -1c
.RI "long \fBmonth_\fR"
.br
.ti -1c
.RI "long \fByear_\fR"
.br
.ti -1c
.RI "long \fBhour_\fR"
.br
.ti -1c
.RI "long \fBminute_\fR"
.br
.ti -1c
.RI "long \fBsecond_\fR"
.br
.ti -1c
.RI "long \fBmicrosec_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
System independent representation of date and time.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Date_Time::ACE_Date_Time (void)
.PP
Constructor initializes current time/date info.
.PP
.SS ACE_Date_Time::ACE_Date_Time (long day, long month = 0, long year = 0, long hour = 0, long minute = 0, long second = 0, long microsec = 0)
.PP
Constructor with init values, no check for validy Set/get portions of ACE_Date_Time, no check for validity.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Date_Time::day (long day)
.PP
Set day.
.PP
.SS long ACE_Date_Time::day (void) const
.PP
Get day.
.PP
.SS void ACE_Date_Time::hour (long hour)
.PP
Set hour.
.PP
.SS long ACE_Date_Time::hour (void) const
.PP
Get hour.
.PP
.SS void ACE_Date_Time::microsec (long microsec)
.PP
Set microsec.
.PP
.SS long ACE_Date_Time::microsec (void) const
.PP
Get microsec.
.PP
.SS void ACE_Date_Time::minute (long minute)
.PP
Set minute.
.PP
.SS long ACE_Date_Time::minute (void) const
.PP
Get minute.
.PP
.SS void ACE_Date_Time::month (long month)
.PP
Set month.
.PP
.SS long ACE_Date_Time::month (void) const
.PP
Get month.
.PP
.SS void ACE_Date_Time::second (long second)
.PP
Set second.
.PP
.SS long ACE_Date_Time::second (void) const
.PP
Get second.
.PP
.SS void ACE_Date_Time::update (void)
.PP
Update to the current time/date.
.PP
.SS void ACE_Date_Time::year (long year)
.PP
Set year.
.PP
.SS long ACE_Date_Time::year (void) const
.PP
Get year.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS long ACE_Date_Time::day_\fC [private]\fR
.PP
.SS long ACE_Date_Time::hour_\fC [private]\fR
.PP
.SS long ACE_Date_Time::microsec_\fC [private]\fR
.PP
.SS long ACE_Date_Time::minute_\fC [private]\fR
.PP
.SS long ACE_Date_Time::month_\fC [private]\fR
.PP
.SS long ACE_Date_Time::second_\fC [private]\fR
.PP
.SS long ACE_Date_Time::year_\fC [private]\fR
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.