.TH ACE_Registry_ImpExp 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Registry_ImpExp \- Configuration object that imports/exports data to a file formatted using the Win32 Registry file export format. This format looks like [Section] "key"="String Data" "key"=dword: numeric data "key"=hex: binary data. 
.SH SYNOPSIS
.br
.PP
\fC#include <Configuration_Import_Export.h>\fR
.PP
Inherits \fBACE_Config_ImpExp_Base\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Registry_ImpExp\fR (\fBACE_Configuration\fR&)"
.br
.RI "\fIConstruction.\fR"
.ti -1c
.RI "virtual \fB~ACE_Registry_ImpExp\fR (void)"
.br
.RI "\fIDestruction.\fR"
.ti -1c
.RI "virtual int \fBimport_config\fR (const \fBACE_TCHAR\fR* filename)"
.br
.ti -1c
.RI "virtual int \fBexport_config\fR (const \fBACE_TCHAR\fR* filename)"
.br
.in -1c
.SS Private Methods

.in +1c
.ti -1c
.RI "int \fBexport_section\fR (const \fBACE_Configuration_Section_Key\fR& section, const ACE_TString& path, FILE* out)"
.br
.ti -1c
.RI "int \fBprocess_previous_line_format\fR (\fBACE_TCHAR\fR* buffer, \fBACE_Configuration_Section_Key\fR& section)"
.br
.ti -1c
.RI "\fBACE_Registry_ImpExp\fR ( const ACE_Registry_ImpExp&)"
.br
.ti -1c
.RI "ACE_Registry_ImpExp& \fBoperator=\fR ( const ACE_Registry_ImpExp&)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Configuration object that imports/exports data to a file formatted using the Win32 Registry file export format. This format looks like [Section] "key"="String Data" "key"=dword: numeric data "key"=hex: binary data.
.PP
.PP
 * - 
.PP
\fB\fBTodo: \fR\fR
.in +1c
Add dynamic buffer when importing. currently it will not allow importing of values greater than a fixed ammount (4096 bytes) 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Registry_ImpExp::ACE_Registry_ImpExp (\fBACE_Configuration\fR &)
.PP
Construction.
.PP
.SS ACE_Registry_ImpExp::~ACE_Registry_ImpExp (void)\fC [virtual]\fR
.PP
Destruction.
.PP
.SS ACE_Registry_ImpExp::ACE_Registry_ImpExp (const ACE_Registry_ImpExp &)\fC [private]\fR
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_Registry_ImpExp::export_config (const \fBACE_TCHAR\fR * filename)\fC [virtual]\fR
.PP
This method exports the entire configuration database to <filename>. Once the file is opened this method calls 'export_section' passing  the root section. 
.PP
Reimplemented from \fBACE_Config_ImpExp_Base\fR.
.SS int ACE_Registry_ImpExp::export_section (const \fBACE_Configuration_Section_Key\fR & section, const ACE_TString & path, FILE * out)\fC [private]\fR
.PP
.SS int ACE_Registry_ImpExp::import_config (const \fBACE_TCHAR\fR * filename)\fC [virtual]\fR
.PP
Imports the configuration database from filename.  No existing data is removed. 
.PP
Reimplemented from \fBACE_Config_ImpExp_Base\fR.
.SS ACE_Registry_ImpExp& ACE_Registry_ImpExp::operator= (const ACE_Registry_ImpExp &)\fC [private]\fR
.PP
.SS int ACE_Registry_ImpExp::process_previous_line_format (\fBACE_TCHAR\fR * buffer, \fBACE_Configuration_Section_Key\fR & section)\fC [private]\fR
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.