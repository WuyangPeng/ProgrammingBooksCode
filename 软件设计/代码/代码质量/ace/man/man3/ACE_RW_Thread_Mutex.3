.TH ACE_RW_Thread_Mutex 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_RW_Thread_Mutex \- Wrapper for readers/writer locks that exist within a process. 
.SH SYNOPSIS
.br
.PP
\fC#include <Synch.h>\fR
.PP
Inherits \fBACE_RW_Mutex\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_RW_Thread_Mutex\fR (const \fBACE_TCHAR\fR *name = 0, void *arg = 0)"
.br
.ti -1c
.RI "\fB~ACE_RW_Thread_Mutex\fR (void)"
.br
.RI "\fIDefault dtor.\fR"
.ti -1c
.RI "int \fBtryacquire_write_upgrade\fR (void)"
.br
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Wrapper for readers/writer locks that exist within a process.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_RW_Thread_Mutex::ACE_RW_Thread_Mutex (const \fBACE_TCHAR\fR * name = 0, void * arg = 0)
.PP
.SS ACE_RW_Thread_Mutex::~ACE_RW_Thread_Mutex (void)
.PP
Default dtor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_RW_Thread_Mutex::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_RW_Mutex\fR.
.SS int ACE_RW_Thread_Mutex::tryacquire_write_upgrade (void)
.PP
Conditionally upgrade a read lock to a write lock. This only works if there are no other readers present, in which case the method returns 0. Otherwise, the method returns -1 and sets <errno> to <EBUSY>. Note that the caller of this method *must* already possess this lock as a read lock (but this condition is not checked by the current implementation). 
.PP
Reimplemented from \fBACE_RW_Mutex\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_RW_Thread_Mutex::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_RW_Mutex\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.