.TH ACE_Profile_Timer 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Profile_Timer \- This class provides both a timing mechanism and a mechanism for reporting the resource usage of a process. 
.SH SYNOPSIS
.br
.PP
\fC#include <Profile_Timer.h>\fR
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef \fBACE_Rusage\fR \fBRusage\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Profile_Timer\fR (void)"
.br
.RI "\fIDefault constructor.\fR"
.ti -1c
.RI "\fB~ACE_Profile_Timer\fR (void)"
.br
.RI "\fIShutdown the timer.\fR"
.ti -1c
.RI "int \fBstart\fR (void)"
.br
.RI "\fIActivate the timer.\fR"
.ti -1c
.RI "int \fBstop\fR (void)"
.br
.RI "\fIStop the timer.\fR"
.ti -1c
.RI "int \fBelapsed_time\fR (\fBACE_Elapsed_Time\fR &et)"
.br
.RI "\fICompute the time elapsed since <start>.\fR"
.ti -1c
.RI "void \fBelapsed_rusage\fR (\fBACE_Profile_Timer::Rusage\fR &\fBrusage\fR)"
.br
.RI "\fICompute the amount of resource utilization since the start time.\fR"
.ti -1c
.RI "void \fBget_rusage\fR (\fBACE_Profile_Timer::Rusage\fR &\fBrusage\fR)"
.br
.RI "\fIReturn the resource utilization (don't recompute it).\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Private Methods

.in +1c
.ti -1c
.RI "void \fBcompute_times\fR (\fBACE_Elapsed_Time\fR &et)"
.br
.RI "\fICompute how much time has elapsed.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "\fBACE_Profile_Timer::Rusage\fR \fBbegin_usage_\fR"
.br
.RI "\fIKeep track of the starting resource utilization.\fR"
.ti -1c
.RI "\fBACE_Profile_Timer::Rusage\fR \fBend_usage_\fR"
.br
.RI "\fIKeep track of the ending resource utilization.\fR"
.ti -1c
.RI "\fBACE_Profile_Timer::Rusage\fR \fBlast_usage_\fR"
.br
.RI "\fIKeep track of the last \fBrusage\fR for incremental timing.\fR"
.ti -1c
.RI "\fBACE_High_Res_Timer\fR \fBtimer_\fR"
.br
.RI "\fIThe high resolution timer.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
This class provides both a timing mechanism and a mechanism for reporting the resource usage of a process.
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS typedef \fBACE_Rusage\fR ACE_Profile_Timer::Rusage
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Profile_Timer::ACE_Profile_Timer (void)
.PP
Default constructor.
.PP
.SS ACE_Profile_Timer::~ACE_Profile_Timer (void)
.PP
Shutdown the timer.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Profile_Timer::compute_times (\fBACE_Elapsed_Time\fR & et)\fC [private]\fR
.PP
Compute how much time has elapsed.
.PP
.SS void ACE_Profile_Timer::dump (void) const
.PP
Dump the state of an object.
.PP
.SS void ACE_Profile_Timer::elapsed_rusage (\fBACE_Profile_Timer::Rusage\fR & rusage)
.PP
Compute the amount of resource utilization since the start time.
.PP
.SS int ACE_Profile_Timer::elapsed_time (\fBACE_Elapsed_Time\fR & et)
.PP
Compute the time elapsed since <start>.
.PP
.SS void ACE_Profile_Timer::get_rusage (\fBACE_Profile_Timer::Rusage\fR & rusage)
.PP
Return the resource utilization (don't recompute it).
.PP
.SS int ACE_Profile_Timer::start (void)
.PP
Activate the timer.
.PP
.SS int ACE_Profile_Timer::stop (void)
.PP
Stop the timer.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Profile_Timer::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
.SS \fBACE_Profile_Timer::Rusage\fR ACE_Profile_Timer::begin_usage_\fC [private]\fR
.PP
Keep track of the starting resource utilization.
.PP
.SS \fBACE_Profile_Timer::Rusage\fR ACE_Profile_Timer::end_usage_\fC [private]\fR
.PP
Keep track of the ending resource utilization.
.PP
.SS \fBACE_Profile_Timer::Rusage\fR ACE_Profile_Timer::last_usage_\fC [private]\fR
.PP
Keep track of the last \fBrusage\fR for incremental timing.
.PP
.SS \fBACE_High_Res_Timer\fR ACE_Profile_Timer::timer_\fC [private]\fR
.PP
The high resolution timer.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.