.TH ACE_MEM_Stream 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_MEM_Stream \- Defines the methods in the  abstraction. 
.SH SYNOPSIS
.br
.PP
\fC#include <MEM_Stream.h>\fR
.PP
Inherits \fBACE_MEM_IO\fR.
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef \fBACE_Addr\fR \fBPEER_ADDR\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_MEM_Stream\fR (void)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "\fBACE_MEM_Stream\fR (ACE_HANDLE h)"
.br
.RI "\fIConstructor (sets the underlying  with <h>).\fR"
.ti -1c
.RI "\fB~ACE_MEM_Stream\fR (void)"
.br
.RI "\fIDestructor.\fR"
.ti -1c
.RI "\fBssize_t\fR \fBsend_n\fR (const void *buf, int n)"
.br
.RI "\fISend n bytes, keep trying until n are sent. Recv n bytes, keep trying until n are received.\fR"
.ti -1c
.RI "\fBssize_t\fR \fBrecv_n\fR (void *buf, int n)"
.br
.ti -1c
.RI "\fBssize_t\fR \fBsend_n\fR (const void *buf, int n, int flags)"
.br
.RI "\fISend n bytes, keep trying until n are sent. Recv n bytes, keep trying until n are received.\fR"
.ti -1c
.RI "\fBssize_t\fR \fBrecv_n\fR (void *buf, int n, int flags)"
.br
.ti -1c
.RI "int \fBclose_reader\fR (void)"
.br
.RI "\fIClose down the reader.\fR"
.ti -1c
.RI "int \fBclose_writer\fR (void)"
.br
.RI "\fIClose down the writer.\fR"
.ti -1c
.RI "int \fBclose\fR (void)"
.br
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Friends

.in +1c
.ti -1c
.RI "class \fBACE_MEM_Acceptor\fR"
.br
.ti -1c
.RI "class \fBACE_MEM_Connector\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Defines the methods in the  abstraction.
.PP
.PP
 This adds additional wrapper methods atop the  class. 
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS typedef \fBACE_Addr\fR ACE_MEM_Stream::PEER_ADDR
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_MEM_Stream::ACE_MEM_Stream (void)
.PP
Constructor.
.PP
.SS ACE_MEM_Stream::ACE_MEM_Stream (ACE_HANDLE h)
.PP
Constructor (sets the underlying  with <h>).
.PP
.SS ACE_MEM_Stream::~ACE_MEM_Stream (void)
.PP
Destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_MEM_Stream::close (void)
.PP
Close down the socket (we need this to make things work correctly on Win32, which requires use to do a <close_writer> before doing the close to avoid losing data). 
.PP
Reimplemented from \fBACE_SOCK\fR.
.SS int ACE_MEM_Stream::close_reader (void)
.PP
Close down the reader.
.PP
.SS int ACE_MEM_Stream::close_writer (void)
.PP
Close down the writer.
.PP
.SS void ACE_MEM_Stream::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_MEM_IO\fR.
.SS \fBssize_t\fR ACE_MEM_Stream::recv_n (void * buf, int n, int flags)
.PP
.SS \fBssize_t\fR ACE_MEM_Stream::recv_n (void * buf, int n)
.PP
.SS \fBssize_t\fR ACE_MEM_Stream::send_n (const void * buf, int n, int flags)
.PP
Send n bytes, keep trying until n are sent. Recv n bytes, keep trying until n are received.
.PP
.SS \fBssize_t\fR ACE_MEM_Stream::send_n (const void * buf, int n)
.PP
Send n bytes, keep trying until n are sent. Recv n bytes, keep trying until n are received.
.PP
.SH FRIENDS AND RELATED FUNCTION DOCUMENTATION
.PP 
.SS class ACE_MEM_Acceptor\fC [friend]\fR
.PP
.SS class ACE_MEM_Connector\fC [friend]\fR
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_MEM_Stream::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_MEM_IO\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.