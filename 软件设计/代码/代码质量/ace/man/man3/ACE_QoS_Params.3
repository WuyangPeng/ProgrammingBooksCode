.TH ACE_QoS_Params 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_QoS_Params \- Wrapper class that simplifies the information passed to the QoS enabled  and  methods. 
.SH SYNOPSIS
.br
.PP
\fC#include <OS.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_QoS_Params\fR (\fBiovec\fR *caller_data = 0, \fBiovec\fR *callee_data = 0, \fBACE_QoS\fR *socket_qos = 0, \fBACE_QoS\fR *group_socket_qos = 0, u_long flags = 0)"
.br
.ti -1c
.RI "\fBiovec\fR* \fBcaller_data\fR (void) const"
.br
.ti -1c
.RI "void \fBcaller_data\fR (\fBiovec\fR *)"
.br
.ti -1c
.RI "\fBiovec\fR* \fBcallee_data\fR (void) const"
.br
.ti -1c
.RI "void \fBcallee_data\fR (\fBiovec\fR *)"
.br
.ti -1c
.RI "\fBACE_QoS\fR* \fBsocket_qos\fR (void) const"
.br
.ti -1c
.RI "void \fBsocket_qos\fR (\fBACE_QoS\fR *)"
.br
.ti -1c
.RI "\fBACE_QoS\fR* \fBgroup_socket_qos\fR (void) const"
.br
.ti -1c
.RI "void \fBgroup_socket_qos\fR (\fBACE_QoS\fR *)"
.br
.ti -1c
.RI "u_long \fBflags\fR (void) const"
.br
.ti -1c
.RI "void \fBflags\fR (u_long)"
.br
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "\fBiovec\fR* \fBcaller_data_\fR"
.br
.RI "\fIA pointer to the user data that is to be transferred to the peer during connection establishment.\fR"
.ti -1c
.RI "\fBiovec\fR* \fBcallee_data_\fR"
.br
.RI "\fIA pointer to the user data that is to be transferred back from the peer during connection establishment.\fR"
.ti -1c
.RI "\fBACE_QoS\fR* \fBsocket_qos_\fR"
.br
.RI "\fIA pointer to the flow speicfications for the socket, one for each direction.\fR"
.ti -1c
.RI "\fBACE_QoS\fR* \fBgroup_socket_qos_\fR"
.br
.RI "\fIA pointer to the flow speicfications for the socket group, if applicable.\fR"
.ti -1c
.RI "u_long \fBflags_\fR"
.br
.RI "\fIFlags that indicate if we're a sender, receiver, or both.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Wrapper class that simplifies the information passed to the QoS enabled  and  methods.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_QoS_Params::ACE_QoS_Params (\fBiovec\fR * caller_data = 0, \fBiovec\fR * callee_data = 0, \fBACE_QoS\fR * socket_qos = 0, \fBACE_QoS\fR * group_socket_qos = 0, u_long flags = 0)
.PP
Initialize the data members. The <caller_data> is a pointer to the user data that is to be transferred to the peer during connection establishment. The <callee_data> is a pointer to the user data that is to be transferred back from the peer during connection establishment. The_<socket_qos> is a pointer to the flow specifications for the socket, one for each direction. The <group_socket_qos> is a pointer to the flow speicfications for the socket group, if applicable. The_<flags> indicate if we're a sender, receiver, or both. 
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_QoS_Params::callee_data (\fBiovec\fR *)
.PP
.SS \fBiovec\fR* ACE_QoS_Params::callee_data (void) const
.PP
.SS void ACE_QoS_Params::caller_data (\fBiovec\fR *)
.PP
.SS \fBiovec\fR* ACE_QoS_Params::caller_data (void) const
.PP
.SS void ACE_QoS_Params::flags (u_long)
.PP
.SS u_long ACE_QoS_Params::flags (void) const
.PP
.SS void ACE_QoS_Params::group_socket_qos (\fBACE_QoS\fR *)
.PP
.SS \fBACE_QoS\fR* ACE_QoS_Params::group_socket_qos (void) const
.PP
.SS void ACE_QoS_Params::socket_qos (\fBACE_QoS\fR *)
.PP
.SS \fBACE_QoS\fR* ACE_QoS_Params::socket_qos (void) const
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS \fBiovec\fR * ACE_QoS_Params::callee_data_\fC [private]\fR
.PP
A pointer to the user data that is to be transferred back from the peer during connection establishment.
.PP
.SS \fBiovec\fR * ACE_QoS_Params::caller_data_\fC [private]\fR
.PP
A pointer to the user data that is to be transferred to the peer during connection establishment.
.PP
.SS u_long ACE_QoS_Params::flags_\fC [private]\fR
.PP
Flags that indicate if we're a sender, receiver, or both.
.PP
.SS \fBACE_QoS\fR * ACE_QoS_Params::group_socket_qos_\fC [private]\fR
.PP
A pointer to the flow speicfications for the socket group, if applicable.
.PP
.SS \fBACE_QoS\fR * ACE_QoS_Params::socket_qos_\fC [private]\fR
.PP
A pointer to the flow speicfications for the socket, one for each direction.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.