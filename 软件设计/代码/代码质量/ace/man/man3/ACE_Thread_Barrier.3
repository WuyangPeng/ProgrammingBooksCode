.TH ACE_Thread_Barrier 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Thread_Barrier \- Implements "barrier synchronization" using ACE_Thread_Mutexes! 
.SH SYNOPSIS
.br
.PP
\fC#include <Synch.h>\fR
.PP
Inherits \fBACE_Barrier\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Thread_Barrier\fR (u_int count, const \fBACE_TCHAR\fR *name = 0)"
.br
.RI "\fICreate a Thread_Barrier, passing in the optional <name>.\fR"
.ti -1c
.RI "\fB~ACE_Thread_Barrier\fR (void)"
.br
.RI "\fIDefault dtor.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Implements "barrier synchronization" using ACE_Thread_Mutexes!
.PP
.PP
 This class is just a simple wrapper for \fBACE_Barrier\fR that selects the USYNC_THREAD variant for the locks. 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Thread_Barrier::ACE_Thread_Barrier (u_int count, const \fBACE_TCHAR\fR * name = 0)
.PP
Create a Thread_Barrier, passing in the optional <name>.
.PP
.SS ACE_Thread_Barrier::~ACE_Thread_Barrier (void)
.PP
Default dtor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Thread_Barrier::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_Barrier\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_Thread_Barrier::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_Barrier\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.