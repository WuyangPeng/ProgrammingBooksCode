.TH ACE_Sock_Connect 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Sock_Connect \- 
.SH SYNOPSIS
.br
.PP
\fC#include <Sock_Connect.h>\fR
.PP
Inherited by \fBACE\fR.
.PP
.SS Static Public Methods

.in +1c
.ti -1c
.RI "int \fBbind_port\fR (ACE_HANDLE handle, ACE_UINT32 ip_addr = INADDR_ANY)"
.br
.RI "\fIBind a new unused port to <handle>.\fR"
.ti -1c
.RI "int \fBget_bcast_addr\fR (ACE_UINT32 &bcast_addr, const \fBACE_TCHAR\fR *hostname = 0, ACE_UINT32 host_addr = 0, ACE_HANDLE handle = ACE_INVALID_HANDLE)"
.br
.ti -1c
.RI "int \fBget_ip_interfaces\fR (size_t &count, \fBACE_INET_Addr\fR *&addr_array)"
.br
.ti -1c
.RI "int \fBcount_interfaces\fR (ACE_HANDLE handle, size_t &how_many)"
.br
.ti -1c
.RI "ACE_HANDLE \fBget_handle\fR (void)"
.br
.RI "\fIRoutine to return a handle from which <ioctl> requests can be made. Caller must <close> the handle.\fR"
.in -1c
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_Sock_Connect::bind_port (ACE_HANDLE handle, ACE_UINT32 ip_addr = INADDR_ANY)\fC [static]\fR
.PP
Bind a new unused port to <handle>.
.PP
.SS int ACE_Sock_Connect::count_interfaces (ACE_HANDLE handle, size_t & how_many)\fC [static]\fR
.PP
Helper routine for get_ip_interfaces, differs by UNIX platform so put into own subroutine. perform some ioctls to retrieve ifconf list of ifreq structs. 
.SS int ACE_Sock_Connect::get_bcast_addr (ACE_UINT32 & bcast_addr, const \fBACE_TCHAR\fR * hostname = 0, ACE_UINT32 host_addr = 0, ACE_HANDLE handle = ACE_INVALID_HANDLE)\fC [static]\fR
.PP
Get our broadcast address based on our <host_addr>. If <hostname> is non-0 we'll use it to determine our IP address. If <handle> is not  then we'll use this to determine our broadcast address, otherwise we'll have to create a socket internally (and free it). Returns -1 on failure and 0 on success. 
.SS ACE_HANDLE ACE_Sock_Connect::get_handle (void)\fC [static]\fR
.PP
Routine to return a handle from which <ioctl> requests can be made. Caller must <close> the handle.
.PP
.SS int ACE_Sock_Connect::get_ip_interfaces (size_t & count, \fBACE_INET_Addr\fR *& addr_array)\fC [static]\fR
.PP
Return count and array of all configured IP interfaces on this host, rc = 0 on success (count == number of interfaces else -1). Caller is responsible for calling delete [] on . 

.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.