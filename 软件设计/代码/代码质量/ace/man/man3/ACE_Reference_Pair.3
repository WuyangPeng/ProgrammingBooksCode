.TH ACE_Reference_Pair 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Reference_Pair \- Defines a pair that only hold references. 
.SH SYNOPSIS
.br
.PP
\fC#include <Pair_T.h>\fR
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef T1 \fBfirst_type\fR"
.br
.ti -1c
.RI "typedef T2 \fBsecond_type\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Reference_Pair\fR (T1 &t1, T2 &t2)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "T1& \fBfirst\fR (void) const"
.br
.RI "\fIAccess first.\fR"
.ti -1c
.RI "T2& \fBsecond\fR (void) const"
.br
.RI "\fIAccess second.\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "T1& \fBfirst_\fR"
.br
.ti -1c
.RI "T2& \fBsecond_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class T1, class T2>  template class ACE_Reference_Pair
Defines a pair that only hold references.
.PP
.PP
 Similar to the STL pair (but restricted to holding references and not copies). 
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS template<classT1, classT2> typedef T1 ACE_Reference_Pair<T1, T2>::first_type
.PP
.SS template<classT1, classT2> typedef T2 ACE_Reference_Pair<T1, T2>::second_type
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classT1, classT2> ACE_Reference_Pair<T1, T2>::ACE_Reference_Pair<T1, T2> (T1 & t1, T2 & t2)
.PP
Constructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classT1, classT2> T1 & ACE_Reference_Pair<T1, T2>::first (void) const
.PP
Access first.
.PP
.SS template<classT1, classT2> T2 & ACE_Reference_Pair<T1, T2>::second (void) const
.PP
Access second.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classT1, classT2> T1 & ACE_Reference_Pair<T1, T2>::first_\fC [protected]\fR
.PP
.SS template<classT1, classT2> T2 & ACE_Reference_Pair<T1, T2>::second_\fC [protected]\fR
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.