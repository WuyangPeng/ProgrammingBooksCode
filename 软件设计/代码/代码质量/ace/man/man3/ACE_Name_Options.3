.TH ACE_Name_Options 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Name_Options \- Manages the options for the \fBACE\fR Name_Server. 
.SH SYNOPSIS
.br
.PP
\fC#include <Naming_Context.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Name_Options\fR (void)"
.br
.ti -1c
.RI "\fB~ACE_Name_Options\fR (void)"
.br
.ti -1c
.RI "void \fBparse_args\fR (int argc, \fBACE_TCHAR\fR *argv[])"
.br
.RI "\fIParse arguments.\fR"
.ti -1c
.RI "void \fBnameserver_port\fR (int port)"
.br
.ti -1c
.RI "int \fBnameserver_port\fR (void)"
.br
.ti -1c
.RI "\fBACE_Naming_Context::Context_Scope_Type\fR \fBcontext\fR (void)"
.br
.ti -1c
.RI "void \fBcontext\fR (\fBACE_Naming_Context::Context_Scope_Type\fR)"
.br
.ti -1c
.RI "void \fBnameserver_host\fR (const \fBACE_TCHAR\fR *host)"
.br
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBnameserver_host\fR (void)"
.br
.ti -1c
.RI "void \fBnamespace_dir\fR (const \fBACE_TCHAR\fR *dir)"
.br
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBnamespace_dir\fR (void)"
.br
.ti -1c
.RI "void \fBprocess_name\fR (const \fBACE_TCHAR\fR *dir)"
.br
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBprocess_name\fR (void)"
.br
.ti -1c
.RI "void \fBdatabase\fR (const \fBACE_TCHAR\fR *)"
.br
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBdatabase\fR (void)"
.br
.ti -1c
.RI "void \fBbase_address\fR (char *address)"
.br
.ti -1c
.RI "char* \fBbase_address\fR (void)"
.br
.ti -1c
.RI "int \fBuse_registry\fR (void)"
.br
.ti -1c
.RI "void \fBuse_registry\fR (int)"
.br
.ti -1c
.RI "int \fBdebug\fR (void)"
.br
.RI "\fIReturn debug status.\fR"
.ti -1c
.RI "int \fBverbose\fR (void)"
.br
.RI "\fIReturn verbose status.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "int \fBdebugging_\fR"
.br
.RI "\fIExtra debugging info.\fR"
.ti -1c
.RI "int \fBverbosity_\fR"
.br
.RI "\fIExtra verbose messages.\fR"
.ti -1c
.RI "int \fBuse_registry_\fR"
.br
.RI "\fIUse Win32 Registry.\fR"
.ti -1c
.RI "int \fBnameserver_port_\fR"
.br
.RI "\fIPort to connect to nameserver process.\fR"
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBnameserver_host_\fR"
.br
.RI "\fIHostname of nameserver.\fR"
.ti -1c
.RI "\fBACE_TCHAR\fR* \fBnamespace_dir_\fR"
.br
.RI "\fIDirectory to hold name_bindings.\fR"
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBprocess_name_\fR"
.br
.RI "\fIName of this process.\fR"
.ti -1c
.RI "const \fBACE_TCHAR\fR* \fBdatabase_\fR"
.br
.RI "\fIName of the database that stores the name/value/type bindings.\fR"
.ti -1c
.RI "char* \fBbase_address_\fR"
.br
.RI "\fIBase address of the underlying allocator.\fR"
.ti -1c
.RI "\fBACE_Naming_Context::Context_Scope_Type\fR \fBcontext_\fR"
.br
.RI "\fIThe context in which the naming database will be created.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Manages the options for the \fBACE\fR Name_Server.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_Name_Options::ACE_Name_Options (void)
.PP
.SS ACE_Name_Options::~ACE_Name_Options (void)
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS char* ACE_Name_Options::base_address (void)
.PP
.SS void ACE_Name_Options::base_address (char * address)
.PP
.SS void ACE_Name_Options::context (\fBACE_Naming_Context::Context_Scope_Type\fR)
.PP
.SS \fBACE_Naming_Context::Context_Scope_Type\fR ACE_Name_Options::context (void)
.PP
.SS const \fBACE_TCHAR\fR* ACE_Name_Options::database (void)
.PP
.SS void ACE_Name_Options::database (const \fBACE_TCHAR\fR *)
.PP
.SS int ACE_Name_Options::debug (void)
.PP
Return debug status.
.PP
.SS const \fBACE_TCHAR\fR* ACE_Name_Options::nameserver_host (void)
.PP
.SS void ACE_Name_Options::nameserver_host (const \fBACE_TCHAR\fR * host)
.PP
.SS int ACE_Name_Options::nameserver_port (void)
.PP
.SS void ACE_Name_Options::nameserver_port (int port)
.PP
.SS const \fBACE_TCHAR\fR* ACE_Name_Options::namespace_dir (void)
.PP
.SS void ACE_Name_Options::namespace_dir (const \fBACE_TCHAR\fR * dir)
.PP
.SS void ACE_Name_Options::parse_args (int argc, \fBACE_TCHAR\fR * argv[])
.PP
Parse arguments.
.PP
.SS const \fBACE_TCHAR\fR* ACE_Name_Options::process_name (void)
.PP
.SS void ACE_Name_Options::process_name (const \fBACE_TCHAR\fR * dir)
.PP
.SS void ACE_Name_Options::use_registry (int)
.PP
.SS int ACE_Name_Options::use_registry (void)
.PP
.SS int ACE_Name_Options::verbose (void)
.PP
Return verbose status.
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS char * ACE_Name_Options::base_address_\fC [private]\fR
.PP
Base address of the underlying allocator.
.PP
.SS \fBACE_Naming_Context::Context_Scope_Type\fR ACE_Name_Options::context_\fC [private]\fR
.PP
The context in which the naming database will be created.
.PP
.SS const \fBACE_TCHAR\fR * ACE_Name_Options::database_\fC [private]\fR
.PP
Name of the database that stores the name/value/type bindings.
.PP
.SS int ACE_Name_Options::debugging_\fC [private]\fR
.PP
Extra debugging info.
.PP
.SS const \fBACE_TCHAR\fR * ACE_Name_Options::nameserver_host_\fC [private]\fR
.PP
Hostname of nameserver.
.PP
.SS int ACE_Name_Options::nameserver_port_\fC [private]\fR
.PP
Port to connect to nameserver process.
.PP
.SS \fBACE_TCHAR\fR * ACE_Name_Options::namespace_dir_\fC [private]\fR
.PP
Directory to hold name_bindings.
.PP
.SS const \fBACE_TCHAR\fR * ACE_Name_Options::process_name_\fC [private]\fR
.PP
Name of this process.
.PP
.SS int ACE_Name_Options::use_registry_\fC [private]\fR
.PP
Use Win32 Registry.
.PP
.SS int ACE_Name_Options::verbosity_\fC [private]\fR
.PP
Extra verbose messages.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.