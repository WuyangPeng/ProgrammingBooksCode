.TH ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter \- Defines a reverse iterator implementation for the Hash_Map_Manager_Adapter. 
.SH SYNOPSIS
.br
.PP
\fC#include <Map_T.h>\fR
.PP
Inherits \fBACE_Reverse_Iterator_Impl< T >\fR.
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef ACE_TYPENAME \fBACE_Hash_Map_Manager_Ex\fR<KEY, VALUE, HASH_KEY, COMPARE_KEYS, \fBACE_Null_Mutex\fR>::reverse_iterator \fBimplementation\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter\fR (const \fBACE_Hash_Map_Reverse_Iterator_Ex\fR<KEY, VALUE, HASH_KEY, COMPARE_KEYS, \fBACE_Null_Mutex\fR> &impl)"
.br
.RI "\fIConstructor.\fR"
.ti -1c
.RI "virtual \fB~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter\fR (void)"
.br
.RI "\fIDestructor.\fR"
.ti -1c
.RI "virtual \fBACE_Reverse_Iterator_Impl\fR<T>* \fBclone\fR (void) const"
.br
.RI "\fIClone.\fR"
.ti -1c
.RI "virtual int \fBcompare\fR (const \fBACE_Reverse_Iterator_Impl\fR<T> &rhs) const"
.br
.RI "\fIComparison.\fR"
.ti -1c
.RI "virtual T \fBdereference\fR (void) const"
.br
.RI "\fIDereference.\fR"
.ti -1c
.RI "virtual void \fBplus_plus\fR (void)"
.br
.RI "\fIAdvance.\fR"
.ti -1c
.RI "virtual void \fBminus_minus\fR (void)"
.br
.RI "\fIReverse.\fR"
.ti -1c
.RI "\fBACE_Hash_Map_Reverse_Iterator_Ex\fR<KEY, VALUE, HASH_KEY, COMPARE_KEYS, \fBACE_Null_Mutex\fR>& \fBimpl\fR (void)"
.br
.RI "\fIAccessor to implementation object.\fR"
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "\fBACE_Hash_Map_Reverse_Iterator_Ex\fR<KEY, VALUE, HASH_KEY, COMPARE_KEYS, \fBACE_Null_Mutex\fR> \fBimplementation_\fR"
.br
.RI "\fIAll implementation details are forwarded to this class.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS>  template class ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter
Defines a reverse iterator implementation for the Hash_Map_Manager_Adapter.
.PP
.PP
 Implementation to be provided by \fBACE_Hash_Map_Manager_Ex::reverse_iterator\fR. 
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> typedef ACE_TYPENAME \fBACE_Hash_Map_Manager_Ex\fR<KEY, VALUE, HASH_KEY, COMPARE_KEYS, \fBACE_Null_Mutex\fR>::reverse_iterator ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::implementation
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS> (const \fBACE_Hash_Map_Reverse_Iterator_Ex\fR< KEY,VALUE,HASH_KEY,COMPARE_KEYS,\fBACE_Null_Mutex\fR >& impl)
.PP
Constructor.
.PP
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS> (void)\fC [virtual]\fR
.PP
Destructor.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> \fBACE_Reverse_Iterator_Impl\fR< T >* ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::clone (void) const\fC [virtual]\fR
.PP
Clone.
.PP
Reimplemented from \fBACE_Reverse_Iterator_Impl\fR.
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const \fBACE_Reverse_Iterator_Impl\fR< T >& rhs) const\fC [virtual]\fR
.PP
Comparison.
.PP
Reimplemented from \fBACE_Reverse_Iterator_Impl\fR.
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> T ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::dereference (void) const\fC [virtual]\fR
.PP
Dereference.
.PP
Reimplemented from \fBACE_Reverse_Iterator_Impl\fR.
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> \fBACE_Hash_Map_Reverse_Iterator_Ex\fR< KEY,VALUE,HASH_KEY,COMPARE_KEYS,\fBACE_Null_Mutex\fR >& ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::impl (void)
.PP
Accessor to implementation object.
.PP
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::minus_minus (void)\fC [virtual]\fR
.PP
Reverse.
.PP
Reimplemented from \fBACE_Reverse_Iterator_Impl\fR.
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void)\fC [virtual]\fR
.PP
Advance.
.PP
Reimplemented from \fBACE_Reverse_Iterator_Impl\fR.
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classT, classKEY, classVALUE, classHASH_KEY, classCOMPARE_KEYS> \fBACE_Hash_Map_Reverse_Iterator_Ex\fR< KEY,VALUE,HASH_KEY,COMPARE_KEYS,\fBACE_Null_Mutex\fR > ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::implementation_\fC [protected]\fR
.PP
All implementation details are forwarded to this class.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.