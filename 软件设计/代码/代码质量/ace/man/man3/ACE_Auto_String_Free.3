.TH ACE_Auto_String_Free 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Auto_String_Free \- Simple class to automatically de-allocate strings. 
.SH SYNOPSIS
.br
.PP
\fC#include <SString.h>\fR
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "ACE_EXPLICIT \fBACE_Auto_String_Free\fR (char* p = 0)"
.br
.ti -1c
.RI "\fBACE_Auto_String_Free\fR (ACE_Auto_String_Free &rhs)"
.br
.ti -1c
.RI "ACE_Auto_String_Free& \fBoperator=\fR (ACE_Auto_String_Free &rhs)"
.br
.ti -1c
.RI "\fB~ACE_Auto_String_Free\fR (void)"
.br
.ti -1c
.RI "char* \fBoperator *\fR () const"
.br
.ti -1c
.RI "char \fBoperator[]\fR (int i) const"
.br
.ti -1c
.RI "char* \fBget\fR (void) const"
.br
.ti -1c
.RI "char* \fBrelease\fR (void)"
.br
.ti -1c
.RI "void \fBreset\fR (char* p = 0)"
.br
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "char* \fBp_\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Simple class to automatically de-allocate strings.
.PP
.PP
 Keeps a pointer to a string and deallocates it (using ) on its destructor. If you need to delete using "delete[]" the \fBACE_Auto_Array_Ptr\fR<char*> is your choice. The class plays the same role as \fBauto_ptr\fR<> 
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_EXPLICIT ACE_Auto_String_Free::ACE_Auto_String_Free (char * p = 0)
.PP
.SS ACE_Auto_String_Free::ACE_Auto_String_Free (ACE_Auto_String_Free & rhs)
.PP
.SS ACE_Auto_String_Free::~ACE_Auto_String_Free (void)
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS char* ACE_Auto_String_Free::get (void) const
.PP
.SS char* ACE_Auto_String_Free::operator * () const
.PP
.SS ACE_Auto_String_Free& ACE_Auto_String_Free::operator= (ACE_Auto_String_Free & rhs)
.PP
.SS char ACE_Auto_String_Free::operator[] (int i) const
.PP
.SS char* ACE_Auto_String_Free::release (void)
.PP
.SS void ACE_Auto_String_Free::reset (char * p = 0)
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS char * ACE_Auto_String_Free::p_\fC [private]\fR
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.