.TH ACE_LRU_Caching_Strategy 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_LRU_Caching_Strategy \- Defines a Least Recently Used strategy which will decide on the item to be removed from the cache. 
.SH SYNOPSIS
.br
.PP
\fC#include <Caching_Strategies_T.h>\fR
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef ATTRIBUTES \fBCACHING_ATTRIBUTES\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_LRU_Caching_Strategy\fR (void)"
.br
.ti -1c
.RI "ATTRIBUTES \fBattributes\fR (void)"
.br
.RI "\fIAccessor method for the timer attributes.\fR"
.ti -1c
.RI "double \fBpurge_percent\fR (void)"
.br
.ti -1c
.RI "void \fBpurge_percent\fR (double percentage)"
.br
.ti -1c
.RI "int \fBnotify_bind\fR (int result, const ATTRIBUTES &attr)"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs bind method call.\fR"
.ti -1c
.RI "int \fBnotify_find\fR (int result, ATTRIBUTES &attr)"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs find method call.\fR"
.ti -1c
.RI "int \fBnotify_unbind\fR (int result, const ATTRIBUTES &attr)"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs unbind method call.\fR"
.ti -1c
.RI "int \fBnotify_trybind\fR (int result, ATTRIBUTES &attr)"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs trybind method call.\fR"
.ti -1c
.RI "int \fBnotify_rebind\fR (int result, const ATTRIBUTES &attr)"
.br
.RI "\fIThis method acts as a notification about the CONTAINERs rebind method call.\fR"
.ti -1c
.RI "CACHING_UTILITY& \fBcaching_utility\fR (void)"
.br
.RI "\fIPurge the cache.\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDumps the state of the object.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "ATTRIBUTES \fBtimer_\fR"
.br
.RI "\fIThis element is the one which is the deciding factor for purging of an ITEM.\fR"
.ti -1c
.RI "double \fBpurge_percent_\fR"
.br
.RI "\fIThe level about which the purging will happen automagically.\fR"
.ti -1c
.RI "CACHING_UTILITY \fBcaching_utility_\fR"
.br
.RI "\fIThis is the helper class which will decide and expunge entries from the cache.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class ATTRIBUTES, class CACHING_UTILITY>  template class ACE_LRU_Caching_Strategy
Defines a Least Recently Used strategy which will decide on the item to be removed from the cache.
.PP
.PP
 This is a strategy which makes use of a virtual timer which is updated whenever an item is inserted or looked up in the container. When the need of purging entries arises, the items with the lowest timer values are removed. Explanation of the template parameter list: CONTAINER is any map with entries of type <KEY, VALUE>. The ATTRIBUTES are the deciding factor for purging of entries and should logically be included with the VALUE. Some ways of doing this are: As being a member of the VALUE or VALUE being \fBACE_Pair\fR<x, ATTRIBUTES>. The CACHING_UTILITY is the class which can be plugged in and which decides the entries to purge. 
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS template<classATTRIBUTES, classCACHING_UTILITY> typedef ATTRIBUTES ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::CACHING_ATTRIBUTES
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classATTRIBUTES, classCACHING_UTILITY> ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY> (void)
.PP
The <container> is the map in which the entries reside. The timer attribute is initialed to zero in this constructor. And the <purge_percent> field denotes the percentage of the entries in the cache which can be purged automagically and by default is set to 10%. 
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classATTRIBUTES, classCACHING_UTILITY> ATTRIBUTES ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::attributes (void)
.PP
Accessor method for the timer attributes.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> CACHING_UTILITY & ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::caching_utility (void)
.PP
Purge the cache.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> void ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::dump (void) const
.PP
Dumps the state of the object.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_bind (int result, const ATTRIBUTES & attr)
.PP
This method acts as a notification about the CONTAINERs bind method call.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_find (int result, ATTRIBUTES & attr)
.PP
This method acts as a notification about the CONTAINERs find method call.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_rebind (int result, const ATTRIBUTES & attr)
.PP
This method acts as a notification about the CONTAINERs rebind method call.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_trybind (int result, ATTRIBUTES & attr)
.PP
This method acts as a notification about the CONTAINERs trybind method call.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> int ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::notify_unbind (int result, const ATTRIBUTES & attr)
.PP
This method acts as a notification about the CONTAINERs unbind method call.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> void ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::purge_percent (double percentage)
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> double ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::purge_percent (void)
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS template<classATTRIBUTES, classCACHING_UTILITY> CACHING_UTILITY ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::caching_utility_\fC [private]\fR
.PP
This is the helper class which will decide and expunge entries from the cache.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> double ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::purge_percent_\fC [private]\fR
.PP
The level about which the purging will happen automagically.
.PP
.SS template<classATTRIBUTES, classCACHING_UTILITY> ATTRIBUTES ACE_LRU_Caching_Strategy<ATTRIBUTES, CACHING_UTILITY>::timer_\fC [private]\fR
.PP
This element is the one which is the deciding factor for purging of an ITEM.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.