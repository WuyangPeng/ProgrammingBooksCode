.TH ACE_Static_Object_Lock 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_Static_Object_Lock \- Provide an interface to access a global lock. 
.SH SYNOPSIS
.br
.PP
\fC#include <Object_Manager.h>\fR
.PP
.SS Static Public Methods

.in +1c
.ti -1c
.RI "\fBACE_Recursive_Thread_Mutex\fR* \fBinstance\fR (void)"
.br
.RI "\fIStatic lock access point.\fR"
.ti -1c
.RI "void \fBcleanup_lock\fR (void)"
.br
.RI "\fIFor use only by \fBACE_Object_Manager\fR to clean up lock if it what dynamically allocated.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Provide an interface to access a global lock.
.PP
.PP
 This class is used to serialize the creation of static singleton objects. It really isn't needed any more, because anyone can access ACE_STATIC_OBJECT_LOCK directly. But, it is retained for backward compatibility. 
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void ACE_Static_Object_Lock::cleanup_lock (void)\fC [static]\fR
.PP
For use only by \fBACE_Object_Manager\fR to clean up lock if it what dynamically allocated.
.PP
.SS \fBACE_Recursive_Thread_Mutex\fR * ACE_Static_Object_Lock::instance (void)\fC [static]\fR
.PP
Static lock access point.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.