.TH ACE_FIFO_Recv 3 "5 Oct 2001" "ACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACE_FIFO_Recv \- Receiver side of the bytestream C++ wrapper for UNIX FIFOs. 
.SH SYNOPSIS
.br
.PP
\fC#include <FIFO_Recv.h>\fR
.PP
Inherits \fBACE_FIFO\fR.
.PP
Inherited by \fBACE_FIFO_Recv_Msg\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBACE_FIFO_Recv\fR (void)"
.br
.RI "\fIDefault constructor.\fR"
.ti -1c
.RI "\fBACE_FIFO_Recv\fR (const \fBACE_TCHAR\fR *rendezvous, int flags = O_CREAT | O_RDONLY, int perms = ACE_DEFAULT_FILE_PERMS, int persistent = 1, LPSECURITY_ATTRIBUTES sa = 0)"
.br
.RI "\fIOpen up a bytestream named pipe for reading.\fR"
.ti -1c
.RI "int \fBopen\fR (const \fBACE_TCHAR\fR *rendezvous, int flags = O_CREAT | O_RDONLY, int perms = ACE_DEFAULT_FILE_PERMS, int persistent = 1, LPSECURITY_ATTRIBUTES sa = 0)"
.br
.RI "\fIOpen up a bytestream named pipe for reading.\fR"
.ti -1c
.RI "int \fBclose\fR (void)"
.br
.RI "\fIClose down the named pipe.\fR"
.ti -1c
.RI "\fBssize_t\fR \fBrecv\fR (void *buf, size_t len)"
.br
.RI "\fIRecv <buf> of up to <len> bytes.\fR"
.ti -1c
.RI "\fBssize_t\fR \fBrecv_n\fR (void *buf, size_t len)"
.br
.RI "\fIRecv <buf> of exactly <len> bytes (block until done).\fR"
.ti -1c
.RI "void \fBdump\fR (void) const"
.br
.RI "\fIDump the state of an object.\fR"
.in -1c
.SS Public Attributes

.in +1c
.ti -1c
.RI "\fBACE_ALLOC_HOOK_DECLARE\fR"
.br
.RI "\fIDeclare the dynamic allocation hooks.\fR"
.in -1c
.SS Private Attributes

.in +1c
.ti -1c
.RI "ACE_HANDLE \fBaux_handle_\fR"
.br
.RI "\fIAuxiliary handle that is used to implement persistent FIFOs.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Receiver side of the bytestream C++ wrapper for UNIX FIFOs.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS ACE_FIFO_Recv::ACE_FIFO_Recv (void)
.PP
Default constructor.
.PP
.SS ACE_FIFO_Recv::ACE_FIFO_Recv (const \fBACE_TCHAR\fR * rendezvous, int flags = O_CREAT | O_RDONLY, int perms = ACE_DEFAULT_FILE_PERMS, int persistent = 1, LPSECURITY_ATTRIBUTES sa = 0)
.PP
Open up a bytestream named pipe for reading.
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS int ACE_FIFO_Recv::close (void)
.PP
Close down the named pipe.
.PP
Reimplemented from \fBACE_FIFO\fR.
.SS void ACE_FIFO_Recv::dump (void) const
.PP
Dump the state of an object.
.PP
Reimplemented from \fBACE_FIFO\fR.
.PP
Reimplemented in \fBACE_FIFO_Recv_Msg\fR.
.SS int ACE_FIFO_Recv::open (const \fBACE_TCHAR\fR * rendezvous, int flags = O_CREAT | O_RDONLY, int perms = ACE_DEFAULT_FILE_PERMS, int persistent = 1, LPSECURITY_ATTRIBUTES sa = 0)
.PP
Open up a bytestream named pipe for reading.
.PP
Reimplemented in \fBACE_FIFO_Recv_Msg\fR.
.SS \fBssize_t\fR ACE_FIFO_Recv::recv (void * buf, size_t len)
.PP
Recv <buf> of up to <len> bytes.
.PP
Reimplemented in \fBACE_FIFO_Recv_Msg\fR.
.SS \fBssize_t\fR ACE_FIFO_Recv::recv_n (void * buf, size_t len)
.PP
Recv <buf> of exactly <len> bytes (block until done).
.PP
.SH MEMBER DATA DOCUMENTATION
.PP 
.SS ACE_FIFO_Recv::ACE_ALLOC_HOOK_DECLARE
.PP
Declare the dynamic allocation hooks.
.PP
Reimplemented from \fBACE_FIFO\fR.
.PP
Reimplemented in \fBACE_FIFO_Recv_Msg\fR.
.SS ACE_HANDLE ACE_FIFO_Recv::aux_handle_\fC [private]\fR
.PP
Auxiliary handle that is used to implement persistent FIFOs.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for ACE from the source code.