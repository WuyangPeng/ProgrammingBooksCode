<html>
<head>
	<link rel="stylesheet" type="text/css" href="demogldocsv13.css">
<title>DemoGL SDK:Reference:Functions:DEMOGL_ConsoleLogLineV</title>
</head>
<body>
<table WIDTH="100%" BORDER="0" cellpadding="0" cellspacing="0">
<tr>
	<td bgColor="#e8e8e8">
	DemoGL::Reference::Functions::<b>DEMOGL_ConsoleLogLineV</b>
	</td>
</tr>
</table>
<br CLEAR="ALL">
<dl>
<dt><h4>DEMOGL_ConsoleLogLineV</h4>
<dd>DEMOGL_ConsoleLogLine logs a given string on the DemoGL system console. It uses a format string and a variable list
	of parameters, similar to printf.
	<p>
	<pre>
<b>void</b>
DEMOGL_ConsoleLogLineV(
	<b>const bool</b> <i>bScroll</i>,
	<b>const char</b> *<i>pszFormat</i>,
	<b>...</b>
);
	</pre>
<dt><b>Parameters.</b>
<dd><dl>
	<dt><i>bScroll</i>
	<dd>Specifies if the console contents should scroll one line up when the line to be logged is placed on the system
		console. When <i>bScroll</i> is <i>true</i>, scrolling takes place, otherwise no scrolling will take place and the line will
		be overwritten by the next line that is logged.
	<dt><i>pszFormat</i>
	<dd>Pointer to a zero-terminated string that will be used as a format string, similar to printf's format string. It has the same
		syntax as the format string of printf.
	<dt><i>...</i>
	<dd>The three dots in the declaration header specify that you can use one or more parameters with this function, similar
		to printf. All types accepted by printf are accepted by <b>DEMOGL_ConsoleLogLineV</b>.
	</dl>
<p>
<dt><b>Return values.</b>
<dd><p>
<dt><b>Remarks.</b>
<dd>The zero-terminated string pointed by pszFormat is used as a format string and combined with the values of the parameters
	will it result in a zero-terminated string that is placed on the lowest line visible in the system console, just above the
	input lines. <i>bScroll</i> controlls if the contents of the console should scroll up or not after this line is
	logged. This function will not have any effect when <a HREF="ref_functions_DEMOGL_AppRun.htm">DEMOGL_AppRun</a> is not called, so
	use <b>DEMOGL_ConsoleLogLineV</b> only in code placed in registered effectclasses. Logged lines are always wrapped. When <i>bScroll</i>
	is <i>false</i>, the wrapped part is lost.
	<p>
<dt><b>Example.</b>
<dd><pre>
int     iFoo;
float   fBar;

// Give our example variables some values
iFoo=10;
fBar=1.0f;

// Log a string constructed at runtime on the console, 
// scroll the contents after the log has completed.
DEMOGL_ConsoleLogLineV(true,
	&quot;This is an integer: %d, and this is a float: %f&quot;, iFoo, fBar);
	</pre>
	<p>
<dt><b>Requirements.</b>
<dd>DemoGL v1.3 (build 0112 or higher)
	<p>
<dt><b>See also.</b>
<dd><a HREF="ref_functions_DEMOGL_ConsoleLogLine.htm">DEMOGL_ConsoleLogLine</a>,
	<a HREF="ref_functions_DEMOGL_AppRun.htm">DEMOGL_AppRun</a>
</dl>
<!-- footer -->
<center>
<hr>
<p class="SmallFontREF">
	Last changed on 19-jan-2001<br><br>
	©1999-2001 <a href="http://www.sd.nl" target="_blank">Solutions Design</a>
</center>
<br><br>
</body>
</html>
