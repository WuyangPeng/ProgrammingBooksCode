<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>面向对象设计的原则</title>
<link rel="stylesheet" type="text/css" href="../../../news.css">
<meta name="Microsoft Theme" content="nature 011">
<style type="text/css">
.style1 {
	font-family: FZKai-Z03;
	font-weight: bold;
}
.style6 {
	font-family: FZKai-Z03;
	font-weight: bold;
	color: #0000FF;
}
.style7 {
	font-size: large;
}
.style8 {
	font-family: FZKai-Z03;
	font-weight: bold;
	color: #0000FF;
	font-size: large;
}
.style10 {
	color: rgb(128, 0, 128);
	font-family: FZKai-Z03;
	font-size: large;
}
.style11 {
	text-align: center;
	font-family: FZKai-Z03;
}
.style12 {
	font-family: FZKai-Z03;
}
</style>
</head>

<body background="../../../nabkgnd.jpg" bgcolor="#FFFFFF" text="#000000" link="#993333" vlink="#333399" alink="#006633">

<p align="center" class="style1"><font size="7" color="#0000FF">敏捷软件开发：原则、模式与实践</font></p>
<p align="center" class="style8">Agile 
Software Development</p>
<p align="center" class="style6">&nbsp;<span class="style7">Principles, Patterns, and 
Practices</span></p>
<p align="center" class="style6">
<img src="../../../anabull1.gif" border="0" width="15" height="15"><span class="style10"><strong>面向对象设计的原则</strong></span><img src="../../../anabull1.gif" border="0" width="15" height="15"></p>

<p align="center"><img border="0" src="../../../anarule.gif" width="600" height="10"></p>
<p class="style11"><strong>SRP 单一职责原则</strong></p>
<p class="style11">就一个类而言，应该仅有一个引起它变化的原因。</p>
<p class="style11"><strong>OCP 开放――封闭原则</strong></p>
<p class="style11">软件实体（类、模块、函数等）应该是可以扩展的，但是不可修改。</p>
<p class="style11"><strong>LSP Liskov替换原则</strong></p>
<p class="style11">子类型必须能够替换掉它们的基类型。</p>
<p class="style11"><strong>DIP 依赖倒置原则</strong></p>
<p align="center" class="style12">抽象不应该依赖于细节。细节应该依赖于抽象。</p>
<p align="center" class="style12"><strong>ISP 接口隔离原则</strong></p>
<p align="center" class="style12">不应该强迫客户依赖于它们不用的方法。接口属于客户，不属于它所在的类层次结构。</p>
<p align="center" class="style12"><strong>REP 重用发布等价原则</strong></p>
<p align="center" class="style12">重用的粒度就是发布的粒度。 </p>
<p align="center" class="style12"><strong>CCP 共同封闭原则</strong></p>
<p align="center" class="style12">包中的所有类对于同一类性质的变化应该是共同封闭的。</p>
<p align="center" class="style12">一个变化若对一个包产生影响，则将对该包中的所有类产生影响，而对于其他的包不造成任何影响。</p>
<p align="center" class="style12"><strong>CRP 共同重用原则</strong></p>
<p align="center" class="style12">一个包中的所有类应该是共同重用的。如果重用了包中的一个类，那么就要重用包中的所有类。</p>
<p align="center" class="style12"><strong>ADP 无环依赖原则</strong></p>
<p align="center" class="style12">在包的依赖关系图中不允许存在环。</p>
<p align="center" class="style12"><strong>SDP 稳定依赖原则</strong></p>
<p align="center" class="style12">朝着稳定的方向进行依赖</p>
<p align="center" class="style12"><strong>SAP 稳定抽象原则</strong></p>
<p align="center" class="style12">包的抽象程度应该和其稳定程度一致。</p>
<p align="center"><img border="0" src="../../../anarule.gif" width="600" height="10"></p>

<p align="center"><b><font size="6" face="隶书"><img border="0" src="../../../anabull1.gif" width="15" height="15"></font></b><font color="#800080" face="华文彩云" size="5"><b><a href="敏捷软件开发：原则、模式与实践.htm"><font color="#ff00ff">返回</font></a></b></font><b><font size="6" face="隶书"><img border="0" src="../../../anabull1.gif" width="15" height="15"></font></b></p>

</body>

</html>
